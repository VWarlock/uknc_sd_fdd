ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.mem_cpy,"ax",%progbits
  18              		.align	1
  19              		.code	16
  20              		.thumb_func
  21              		.type	mem_cpy, %function
  22              	mem_cpy:
  23              	.LFB0:
  24              		.file 1 ".\\sd\\ff.c"
   1:.\sd/ff.c     **** /*----------------------------------------------------------------------------/
   2:.\sd/ff.c     **** /  FatFs - FAT file system module  R0.09                  (C)ChaN, 2011
   3:.\sd/ff.c     **** /-----------------------------------------------------------------------------/
   4:.\sd/ff.c     **** / FatFs module is a generic FAT file system module for small embedded systems.
   5:.\sd/ff.c     **** / This is a free software that opened for education, research and commercial
   6:.\sd/ff.c     **** / developments under license policy of following terms.
   7:.\sd/ff.c     **** /
   8:.\sd/ff.c     **** /  Copyright (C) 2011, ChaN, all right reserved.
   9:.\sd/ff.c     **** /
  10:.\sd/ff.c     **** / * The FatFs module is a free software and there is NO WARRANTY.
  11:.\sd/ff.c     **** / * No restriction on use. You can use, modify and redistribute it for
  12:.\sd/ff.c     **** /   personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
  13:.\sd/ff.c     **** / * Redistributions of source code must retain the above copyright notice.
  14:.\sd/ff.c     **** /
  15:.\sd/ff.c     **** /-----------------------------------------------------------------------------/
  16:.\sd/ff.c     **** / Feb 26,'06 R0.00  Prototype.
  17:.\sd/ff.c     **** /
  18:.\sd/ff.c     **** / Apr 29,'06 R0.01  First stable version.
  19:.\sd/ff.c     **** /
  20:.\sd/ff.c     **** / Jun 01,'06 R0.02  Added FAT12 support.
  21:.\sd/ff.c     **** /                   Removed unbuffered mode.
  22:.\sd/ff.c     **** /                   Fixed a problem on small (<32M) partition.
  23:.\sd/ff.c     **** / Jun 10,'06 R0.02a Added a configuration option (_FS_MINIMUM).
  24:.\sd/ff.c     **** /
  25:.\sd/ff.c     **** / Sep 22,'06 R0.03  Added f_rename().
  26:.\sd/ff.c     **** /                   Changed option _FS_MINIMUM to _FS_MINIMIZE.
  27:.\sd/ff.c     **** / Dec 11,'06 R0.03a Improved cluster scan algorithm to write files fast.
  28:.\sd/ff.c     **** /                   Fixed f_mkdir() creates incorrect directory on FAT32.
  29:.\sd/ff.c     **** /
  30:.\sd/ff.c     **** / Feb 04,'07 R0.04  Supported multiple drive system.
  31:.\sd/ff.c     **** /                   Changed some interfaces for multiple drive system.
  32:.\sd/ff.c     **** /                   Changed f_mountdrv() to f_mount().
  33:.\sd/ff.c     **** /                   Added f_mkfs().
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 2


  34:.\sd/ff.c     **** / Apr 01,'07 R0.04a Supported multiple partitions on a physical drive.
  35:.\sd/ff.c     **** /                   Added a capability of extending file size to f_lseek().
  36:.\sd/ff.c     **** /                   Added minimization level 3.
  37:.\sd/ff.c     **** /                   Fixed an endian sensitive code in f_mkfs().
  38:.\sd/ff.c     **** / May 05,'07 R0.04b Added a configuration option _USE_NTFLAG.
  39:.\sd/ff.c     **** /                   Added FSInfo support.
  40:.\sd/ff.c     **** /                   Fixed DBCS name can result FR_INVALID_NAME.
  41:.\sd/ff.c     **** /                   Fixed short seek (<= csize) collapses the file object.
  42:.\sd/ff.c     **** /
  43:.\sd/ff.c     **** / Aug 25,'07 R0.05  Changed arguments of f_read(), f_write() and f_mkfs().
  44:.\sd/ff.c     **** /                   Fixed f_mkfs() on FAT32 creates incorrect FSInfo.
  45:.\sd/ff.c     **** /                   Fixed f_mkdir() on FAT32 creates incorrect directory.
  46:.\sd/ff.c     **** / Feb 03,'08 R0.05a Added f_truncate() and f_utime().
  47:.\sd/ff.c     **** /                   Fixed off by one error at FAT sub-type determination.
  48:.\sd/ff.c     **** /                   Fixed btr in f_read() can be mistruncated.
  49:.\sd/ff.c     **** /                   Fixed cached sector is not flushed when create and close without write.
  50:.\sd/ff.c     **** /
  51:.\sd/ff.c     **** / Apr 01,'08 R0.06  Added fputc(), fputs(), fprintf() and fgets().
  52:.\sd/ff.c     **** /                   Improved performance of f_lseek() on moving to the same or following cluster.
  53:.\sd/ff.c     **** /
  54:.\sd/ff.c     **** / Apr 01,'09 R0.07  Merged Tiny-FatFs as a configuration option. (_FS_TINY)
  55:.\sd/ff.c     **** /                   Added LONG_ file name feature.
  56:.\sd/ff.c     **** /                   Added multiple code page feature.
  57:.\sd/ff.c     **** /                   Added re-entrancy for multitask operation.
  58:.\sd/ff.c     **** /                   Added auto cluster size selection to f_mkfs().
  59:.\sd/ff.c     **** /                   Added rewind option to f_readdir().
  60:.\sd/ff.c     **** /                   Changed result code of critical errors.
  61:.\sd/ff.c     **** /                   Renamed string functions to avoid name collision.
  62:.\sd/ff.c     **** / Apr 14,'09 R0.07a Separated out OS dependent code on reentrant cfg.
  63:.\sd/ff.c     **** /                   Added multiple sector size feature.
  64:.\sd/ff.c     **** / Jun 21,'09 R0.07c Fixed f_unlink() can return FR_OK on error.
  65:.\sd/ff.c     **** /                   Fixed wrong cache control in f_lseek().
  66:.\sd/ff.c     **** /                   Added relative path feature.
  67:.\sd/ff.c     **** /                   Added f_chdir() and f_chdrive().
  68:.\sd/ff.c     **** /                   Added proper case conversion to extended char.
  69:.\sd/ff.c     **** / Nov 03,'09 R0.07e Separated out configuration options from ff.h to ffconf.h.
  70:.\sd/ff.c     **** /                   Fixed f_unlink() fails to remove a sub-dir on _FS_RPATH.
  71:.\sd/ff.c     **** /                   Fixed name matching error on the 13 char boundary.
  72:.\sd/ff.c     **** /                   Added a configuration option, _LFN_UNICODE.
  73:.\sd/ff.c     **** /                   Changed f_readdir() to return the SFN with always upper case on non-LFN cfg.
  74:.\sd/ff.c     **** /
  75:.\sd/ff.c     **** / May 15,'10 R0.08  Added a memory configuration option. (_USE_LFN = 3)
  76:.\sd/ff.c     **** /                   Added file lock feature. (_FS_SHARE)
  77:.\sd/ff.c     **** /                   Added fast seek feature. (_USE_FASTSEEK)
  78:.\sd/ff.c     **** /                   Changed some types on the API, XCHAR->TCHAR.
  79:.\sd/ff.c     **** /                   Changed fname member in the FILINFO structure on Unicode cfg.
  80:.\sd/ff.c     **** /                   String functions support UTF-8 encoding files on Unicode cfg.
  81:.\sd/ff.c     **** / Aug 16,'10 R0.08a Added f_getcwd(). (_FS_RPATH = 2)
  82:.\sd/ff.c     **** /                   Added sector erase feature. (_USE_ERASE)
  83:.\sd/ff.c     **** /                   Moved file lock semaphore table from fs object to the bss.
  84:.\sd/ff.c     **** /                   Fixed a wrong directory entry is created on non-LFN cfg when the given name con
  85:.\sd/ff.c     **** /                   Fixed f_mkfs() creates wrong FAT32 volume.
  86:.\sd/ff.c     **** / Jan 15,'11 R0.08b Fast seek feature is also applied to f_read() and f_write().
  87:.\sd/ff.c     **** /                   f_lseek() reports required table size on creating CLMP.
  88:.\sd/ff.c     **** /                   Extended format syntax of f_printf function.
  89:.\sd/ff.c     **** /                   Ignores duplicated directory separators in given path names.
  90:.\sd/ff.c     **** /
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 3


  91:.\sd/ff.c     **** / Sep 06,'11 R0.09  f_mkfs() supports multiple partition to finish the multiple partition feature.
  92:.\sd/ff.c     **** /                   Added f_fdisk(). (_MULTI_PARTITION = 2)
  93:.\sd/ff.c     **** /---------------------------------------------------------------------------*/
  94:.\sd/ff.c     **** 
  95:.\sd/ff.c     **** #include "sd/ff.h"			/* FatFs configurations and declarations */
  96:.\sd/ff.c     **** #include "sd/diskio.h"		/* Declarations of low level disk I/O functions */
  97:.\sd/ff.c     **** 
  98:.\sd/ff.c     **** 
  99:.\sd/ff.c     **** /*--------------------------------------------------------------------------
 100:.\sd/ff.c     **** 
 101:.\sd/ff.c     ****    Module Private Definitions
 102:.\sd/ff.c     **** 
 103:.\sd/ff.c     **** ---------------------------------------------------------------------------*/
 104:.\sd/ff.c     **** 
 105:.\sd/ff.c     **** #if _FATFS != 6502	/* Revision ID */
 106:.\sd/ff.c     **** #error Wrong include file (ff.h).
 107:.\sd/ff.c     **** #endif
 108:.\sd/ff.c     **** 
 109:.\sd/ff.c     **** 
 110:.\sd/ff.c     **** /* Definitions on sector size */
 111:.\sd/ff.c     **** #if _MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 112:.\sd/ff.c     **** #error Wrong sector size.
 113:.\sd/ff.c     **** #endif
 114:.\sd/ff.c     **** #if _MAX_SS != 512
 115:.\sd/ff.c     **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 116:.\sd/ff.c     **** #else
 117:.\sd/ff.c     **** #define	SS(fs)	512U			/* Fixed sector size */
 118:.\sd/ff.c     **** #endif
 119:.\sd/ff.c     **** 
 120:.\sd/ff.c     **** 
 121:.\sd/ff.c     **** /* Reentrancy related */
 122:.\sd/ff.c     **** #if _FS_REENTRANT
 123:.\sd/ff.c     **** #if _USE_LFN == 1
 124:.\sd/ff.c     **** #error Static LFN work area must not be used in re-entrant configuration.
 125:.\sd/ff.c     **** #endif
 126:.\sd/ff.c     **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 127:.\sd/ff.c     **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 128:.\sd/ff.c     **** #else
 129:.\sd/ff.c     **** #define	ENTER_FF(fs)
 130:.\sd/ff.c     **** #define LEAVE_FF(fs, res)	return res
 131:.\sd/ff.c     **** #endif
 132:.\sd/ff.c     **** 
 133:.\sd/ff.c     **** #define	ABORT(fs, res)		{ fp->flag |= FA__ERROR; LEAVE_FF(fs, res); }
 134:.\sd/ff.c     **** 
 135:.\sd/ff.c     **** 
 136:.\sd/ff.c     **** /* File shareing feature */
 137:.\sd/ff.c     **** #if _FS_SHARE
 138:.\sd/ff.c     **** #if _FS_READONLY
 139:.\sd/ff.c     **** #error _FS_SHARE must be 0 on read-only cfg.
 140:.\sd/ff.c     **** #endif
 141:.\sd/ff.c     **** typedef struct {
 142:.\sd/ff.c     **** 	FATFS *fs;				/* File ID 1, volume (NULL:blank entry) */
 143:.\sd/ff.c     **** 	DWORD clu;				/* File ID 2, directory */
 144:.\sd/ff.c     **** 	WORD idx;				/* File ID 3, directory index */
 145:.\sd/ff.c     **** 	WORD ctr;				/* File open counter, 0:none, 0x01..0xFF:read open count, 0x100:write mode */
 146:.\sd/ff.c     **** } FILESEM;
 147:.\sd/ff.c     **** #endif
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 4


 148:.\sd/ff.c     **** 
 149:.\sd/ff.c     **** 
 150:.\sd/ff.c     **** /* Misc definitions */
 151:.\sd/ff.c     **** #define LD_CLUST(dir)	(((DWORD)LD_WORD(dir+DIR_FstClusHI)<<16) | LD_WORD(dir+DIR_FstClusLO))
 152:.\sd/ff.c     **** #define ST_CLUST(dir,cl) {ST_WORD(dir+DIR_FstClusLO, cl); ST_WORD(dir+DIR_FstClusHI, (DWORD)cl>>16)
 153:.\sd/ff.c     **** 
 154:.\sd/ff.c     **** 
 155:.\sd/ff.c     **** /* DBCS code ranges and SBCS extend char conversion table */
 156:.\sd/ff.c     **** 
 157:.\sd/ff.c     **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
 158:.\sd/ff.c     **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
 159:.\sd/ff.c     **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
 160:.\sd/ff.c     **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
 161:.\sd/ff.c     **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
 162:.\sd/ff.c     **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
 163:.\sd/ff.c     **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
 164:.\sd/ff.c     **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
 165:.\sd/ff.c     **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
 166:.\sd/ff.c     **** 
 167:.\sd/ff.c     **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
 168:.\sd/ff.c     **** #define _DF1S	0x81
 169:.\sd/ff.c     **** #define _DF1E	0xFE
 170:.\sd/ff.c     **** #define _DS1S	0x40
 171:.\sd/ff.c     **** #define _DS1E	0x7E
 172:.\sd/ff.c     **** #define _DS2S	0x80
 173:.\sd/ff.c     **** #define _DS2E	0xFE
 174:.\sd/ff.c     **** 
 175:.\sd/ff.c     **** #elif _CODE_PAGE == 949	/* Korean */
 176:.\sd/ff.c     **** #define _DF1S	0x81
 177:.\sd/ff.c     **** #define _DF1E	0xFE
 178:.\sd/ff.c     **** #define _DS1S	0x41
 179:.\sd/ff.c     **** #define _DS1E	0x5A
 180:.\sd/ff.c     **** #define _DS2S	0x61
 181:.\sd/ff.c     **** #define _DS2E	0x7A
 182:.\sd/ff.c     **** #define _DS3S	0x81
 183:.\sd/ff.c     **** #define _DS3E	0xFE
 184:.\sd/ff.c     **** 
 185:.\sd/ff.c     **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
 186:.\sd/ff.c     **** #define _DF1S	0x81
 187:.\sd/ff.c     **** #define _DF1E	0xFE
 188:.\sd/ff.c     **** #define _DS1S	0x40
 189:.\sd/ff.c     **** #define _DS1E	0x7E
 190:.\sd/ff.c     **** #define _DS2S	0xA1
 191:.\sd/ff.c     **** #define _DS2E	0xFE
 192:.\sd/ff.c     **** 
 193:.\sd/ff.c     **** #elif _CODE_PAGE == 437	/* U.S. (OEM) */
 194:.\sd/ff.c     **** #define _DF1S	0
 195:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x9
 196:.\sd/ff.c     **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 197:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 198:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 199:.\sd/ff.c     **** 
 200:.\sd/ff.c     **** #elif _CODE_PAGE == 720	/* Arabic (OEM) */
 201:.\sd/ff.c     **** #define _DF1S	0
 202:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x9
 203:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 204:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 5


 205:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 206:.\sd/ff.c     **** 
 207:.\sd/ff.c     **** #elif _CODE_PAGE == 737	/* Greek (OEM) */
 208:.\sd/ff.c     **** #define _DF1S	0
 209:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 210:.\sd/ff.c     **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96,0xB0,0xB1,0xB2,
 211:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 212:.\sd/ff.c     **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 213:.\sd/ff.c     **** 
 214:.\sd/ff.c     **** #elif _CODE_PAGE == 775	/* Baltic (OEM) */
 215:.\sd/ff.c     **** #define _DF1S	0
 216:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x9
 217:.\sd/ff.c     **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 218:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xB5,0xB6,0xB7,
 219:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 220:.\sd/ff.c     **** 
 221:.\sd/ff.c     **** #elif _CODE_PAGE == 850	/* Multilingual Latin 1 (OEM) */
 222:.\sd/ff.c     **** #define _DF1S	0
 223:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 224:.\sd/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 225:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 226:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 227:.\sd/ff.c     **** 
 228:.\sd/ff.c     **** #elif _CODE_PAGE == 852	/* Latin 2 (OEM) */
 229:.\sd/ff.c     **** #define _DF1S	0
 230:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x9
 231:.\sd/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF,0xB0,0xB1,0xB2,
 232:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 233:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,
 234:.\sd/ff.c     **** 
 235:.\sd/ff.c     **** #elif _CODE_PAGE == 855	/* Cyrillic (OEM) */
 236:.\sd/ff.c     **** #define _DF1S	0
 237:.\sd/ff.c     **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x9
 238:.\sd/ff.c     **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 239:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD3,
 240:.\sd/ff.c     **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,
 241:.\sd/ff.c     **** 
 242:.\sd/ff.c     **** #elif _CODE_PAGE == 857	/* Turkish (OEM) */
 243:.\sd/ff.c     **** #define _DF1S	0
 244:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x9
 245:.\sd/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 246:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 247:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,
 248:.\sd/ff.c     **** 
 249:.\sd/ff.c     **** #elif _CODE_PAGE == 858	/* Multilingual Latin 1 + Euro (OEM) */
 250:.\sd/ff.c     **** #define _DF1S	0
 251:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 252:.\sd/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 253:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 254:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 255:.\sd/ff.c     **** 
 256:.\sd/ff.c     **** #elif _CODE_PAGE == 862	/* Hebrew (OEM) */
 257:.\sd/ff.c     **** #define _DF1S	0
 258:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 259:.\sd/ff.c     **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 260:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 261:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 6


 262:.\sd/ff.c     **** 
 263:.\sd/ff.c     **** #elif _CODE_PAGE == 866	/* Russian (OEM) */
 264:.\sd/ff.c     **** #define _DF1S	0
 265:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 266:.\sd/ff.c     **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0xB0,0xB1,0xB2,
 267:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 268:.\sd/ff.c     **** 				0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,
 269:.\sd/ff.c     **** 
 270:.\sd/ff.c     **** #elif _CODE_PAGE == 874	/* Thai (OEM, Windows) */
 271:.\sd/ff.c     **** #define _DF1S	0
 272:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 273:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 274:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 275:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 276:.\sd/ff.c     **** 
 277:.\sd/ff.c     **** #elif _CODE_PAGE == 1250 /* Central Europe (Windows) */
 278:.\sd/ff.c     **** #define _DF1S	0
 279:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 280:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 281:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 282:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 283:.\sd/ff.c     **** 
 284:.\sd/ff.c     **** #elif _CODE_PAGE == 1251 /* Cyrillic (Windows) */
 285:.\sd/ff.c     **** #define _DF1S	0
 286:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x8
 287:.\sd/ff.c     **** 				0xA0,0xA2,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 288:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 289:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 290:.\sd/ff.c     **** 
 291:.\sd/ff.c     **** #elif _CODE_PAGE == 1252 /* Latin 1 (Windows) */
 292:.\sd/ff.c     **** #define _DF1S	0
 293:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 294:.\sd/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 295:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 296:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 297:.\sd/ff.c     **** 
 298:.\sd/ff.c     **** #elif _CODE_PAGE == 1253 /* Greek (Windows) */
 299:.\sd/ff.c     **** #define _DF1S	0
 300:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 301:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 302:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 303:.\sd/ff.c     **** 				0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 304:.\sd/ff.c     **** 
 305:.\sd/ff.c     **** #elif _CODE_PAGE == 1254 /* Turkish (Windows) */
 306:.\sd/ff.c     **** #define _DF1S	0
 307:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 308:.\sd/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 309:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 310:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 311:.\sd/ff.c     **** 
 312:.\sd/ff.c     **** #elif _CODE_PAGE == 1255 /* Hebrew (Windows) */
 313:.\sd/ff.c     **** #define _DF1S	0
 314:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 315:.\sd/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 316:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 317:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 318:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 7


 319:.\sd/ff.c     **** #elif _CODE_PAGE == 1256 /* Arabic (Windows) */
 320:.\sd/ff.c     **** #define _DF1S	0
 321:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 322:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 323:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 324:.\sd/ff.c     **** 				0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,
 325:.\sd/ff.c     **** 
 326:.\sd/ff.c     **** #elif _CODE_PAGE == 1257 /* Baltic (Windows) */
 327:.\sd/ff.c     **** #define _DF1S	0
 328:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 329:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 330:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 331:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 332:.\sd/ff.c     **** 
 333:.\sd/ff.c     **** #elif _CODE_PAGE == 1258 /* Vietnam (OEM, Windows) */
 334:.\sd/ff.c     **** #define _DF1S	0
 335:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 336:.\sd/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 337:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 338:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 339:.\sd/ff.c     **** 
 340:.\sd/ff.c     **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 341:.\sd/ff.c     **** #if _USE_LFN
 342:.\sd/ff.c     **** #error Cannot use LFN feature without valid code page.
 343:.\sd/ff.c     **** #endif
 344:.\sd/ff.c     **** #define _DF1S	0
 345:.\sd/ff.c     **** 
 346:.\sd/ff.c     **** #else
 347:.\sd/ff.c     **** #error Unknown code page
 348:.\sd/ff.c     **** 
 349:.\sd/ff.c     **** #endif
 350:.\sd/ff.c     **** 
 351:.\sd/ff.c     **** 
 352:.\sd/ff.c     **** /* Character code support macros */
 353:.\sd/ff.c     **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 354:.\sd/ff.c     **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 355:.\sd/ff.c     **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 356:.\sd/ff.c     **** 
 357:.\sd/ff.c     **** #if _DF1S		/* Code page is DBCS */
 358:.\sd/ff.c     **** 
 359:.\sd/ff.c     **** #ifdef _DF2S	/* Two 1st byte areas */
 360:.\sd/ff.c     **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 361:.\sd/ff.c     **** #else			/* One 1st byte area */
 362:.\sd/ff.c     **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 363:.\sd/ff.c     **** #endif
 364:.\sd/ff.c     **** 
 365:.\sd/ff.c     **** #ifdef _DS3S	/* Three 2nd byte areas */
 366:.\sd/ff.c     **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 367:.\sd/ff.c     **** #else			/* Two 2nd byte areas */
 368:.\sd/ff.c     **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 369:.\sd/ff.c     **** #endif
 370:.\sd/ff.c     **** 
 371:.\sd/ff.c     **** #else			/* Code page is SBCS */
 372:.\sd/ff.c     **** 
 373:.\sd/ff.c     **** #define IsDBCS1(c)	0
 374:.\sd/ff.c     **** #define IsDBCS2(c)	0
 375:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 8


 376:.\sd/ff.c     **** #endif /* _DF1S */
 377:.\sd/ff.c     **** 
 378:.\sd/ff.c     **** 
 379:.\sd/ff.c     **** /* Name status flags */
 380:.\sd/ff.c     **** #define NS			11		/* Index of name status byte in fn[] */
 381:.\sd/ff.c     **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 382:.\sd/ff.c     **** #define NS_LFN		0x02	/* Force to create LFN entry */
 383:.\sd/ff.c     **** #define NS_LAST		0x04	/* Last segment */
 384:.\sd/ff.c     **** #define NS_BODY		0x08	/* Lower case flag (body) */
 385:.\sd/ff.c     **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 386:.\sd/ff.c     **** #define NS_DOT		0x20	/* Dot entry */
 387:.\sd/ff.c     **** 
 388:.\sd/ff.c     **** 
 389:.\sd/ff.c     **** /* FAT sub-type boundaries */
 390:.\sd/ff.c     **** /* Note that the FAT spec by Microsoft says 4085 but Windows works with 4087! */
 391:.\sd/ff.c     **** #define MIN_FAT16	4086	/* Minimum number of clusters for FAT16 */
 392:.\sd/ff.c     **** #define	MIN_FAT32	65526	/* Minimum number of clusters for FAT32 */
 393:.\sd/ff.c     **** 
 394:.\sd/ff.c     **** 
 395:.\sd/ff.c     **** /* FatFs refers the members in the FAT structures as byte array instead of
 396:.\sd/ff.c     **** / structure member because the structure is not binary compatible between
 397:.\sd/ff.c     **** / different platforms */
 398:.\sd/ff.c     **** 
 399:.\sd/ff.c     **** #define BS_jmpBoot			0	/* Jump instruction (3) */
 400:.\sd/ff.c     **** #define BS_OEMName			3	/* OEM name (8) */
 401:.\sd/ff.c     **** #define BPB_BytsPerSec		11	/* Sector size [byte] (2) */
 402:.\sd/ff.c     **** #define BPB_SecPerClus		13	/* Cluster size [sector] (1) */
 403:.\sd/ff.c     **** #define BPB_RsvdSecCnt		14	/* Size of reserved area [sector] (2) */
 404:.\sd/ff.c     **** #define BPB_NumFATs			16	/* Number of FAT copies (1) */
 405:.\sd/ff.c     **** #define BPB_RootEntCnt		17	/* Number of root dir entries for FAT12/16 (2) */
 406:.\sd/ff.c     **** #define BPB_TotSec16		19	/* Volume size [sector] (2) */
 407:.\sd/ff.c     **** #define BPB_Media			21	/* Media descriptor (1) */
 408:.\sd/ff.c     **** #define BPB_FATSz16			22	/* FAT size [sector] (2) */
 409:.\sd/ff.c     **** #define BPB_SecPerTrk		24	/* Track size [sector] (2) */
 410:.\sd/ff.c     **** #define BPB_NumHeads		26	/* Number of heads (2) */
 411:.\sd/ff.c     **** #define BPB_HiddSec			28	/* Number of special hidden sectors (4) */
 412:.\sd/ff.c     **** #define BPB_TotSec32		32	/* Volume size [sector] (4) */
 413:.\sd/ff.c     **** #define BS_DrvNum			36	/* Physical drive number (2) */
 414:.\sd/ff.c     **** #define BS_BootSig			38	/* Extended boot signature (1) */
 415:.\sd/ff.c     **** #define BS_VolID			39	/* Volume serial number (4) */
 416:.\sd/ff.c     **** #define BS_VolLab			43	/* Volume label (8) */
 417:.\sd/ff.c     **** #define BS_FilSysType		54	/* File system type (1) */
 418:.\sd/ff.c     **** #define BPB_FATSz32			36	/* FAT size [sector] (4) */
 419:.\sd/ff.c     **** #define BPB_ExtFlags		40	/* Extended flags (2) */
 420:.\sd/ff.c     **** #define BPB_FSVer			42	/* File system version (2) */
 421:.\sd/ff.c     **** #define BPB_RootClus		44	/* Root dir first cluster (4) */
 422:.\sd/ff.c     **** #define BPB_FSInfo			48	/* Offset of FSInfo sector (2) */
 423:.\sd/ff.c     **** #define BPB_BkBootSec		50	/* Offset of backup boot sectot (2) */
 424:.\sd/ff.c     **** #define BS_DrvNum32			64	/* Physical drive number (2) */
 425:.\sd/ff.c     **** #define BS_BootSig32		66	/* Extended boot signature (1) */
 426:.\sd/ff.c     **** #define BS_VolID32			67	/* Volume serial number (4) */
 427:.\sd/ff.c     **** #define BS_VolLab32			71	/* Volume label (8) */
 428:.\sd/ff.c     **** #define BS_FilSysType32		82	/* File system type (1) */
 429:.\sd/ff.c     **** #define	FSI_LeadSig			0	/* FSI: Leading signature (4) */
 430:.\sd/ff.c     **** #define	FSI_StrucSig		484	/* FSI: Structure signature (4) */
 431:.\sd/ff.c     **** #define	FSI_Free_Count		488	/* FSI: Number of free clusters (4) */
 432:.\sd/ff.c     **** #define	FSI_Nxt_Free		492	/* FSI: Last allocated cluster (4) */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 9


 433:.\sd/ff.c     **** #define MBR_Table			446	/* MBR: Partition table offset (2) */
 434:.\sd/ff.c     **** #define	SZ_PTE				16	/* MBR: Size of a partition table entry */
 435:.\sd/ff.c     **** #define BS_55AA				510	/* Boot sector signature (2) */
 436:.\sd/ff.c     **** 
 437:.\sd/ff.c     **** #define	DIR_Name			0	/* Short file name (11) */
 438:.\sd/ff.c     **** #define	DIR_Attr			11	/* Attribute (1) */
 439:.\sd/ff.c     **** #define	DIR_NTres			12	/* NT flag (1) */
 440:.\sd/ff.c     **** #define	DIR_CrtTime			14	/* Created time (2) */
 441:.\sd/ff.c     **** #define	DIR_CrtDate			16	/* Created date (2) */
 442:.\sd/ff.c     **** #define	DIR_FstClusHI		20	/* Higher 16-bit of first cluster (2) */
 443:.\sd/ff.c     **** #define	DIR_WrtTime			22	/* Modified time (2) */
 444:.\sd/ff.c     **** #define	DIR_WrtDate			24	/* Modified date (2) */
 445:.\sd/ff.c     **** #define	DIR_FstClusLO		26	/* Lower 16-bit of first cluster (2) */
 446:.\sd/ff.c     **** #define	DIR_FileSize		28	/* File size (4) */
 447:.\sd/ff.c     **** #define	LDIR_Ord			0	/* LFN entry order and LLE flag (1) */
 448:.\sd/ff.c     **** #define	LDIR_Attr			11	/* LFN attribute (1) */
 449:.\sd/ff.c     **** #define	LDIR_Type			12	/* LFN type (1) */
 450:.\sd/ff.c     **** #define	LDIR_Chksum			13	/* Sum of corresponding SFN entry */
 451:.\sd/ff.c     **** #define	LDIR_FstClusLO		26	/* Filled by zero (0) */
 452:.\sd/ff.c     **** #define	SZ_DIR				32		/* Size of a directory entry */
 453:.\sd/ff.c     **** #define	LLE					0x40	/* Last LONG_ entry flag in LDIR_Ord */
 454:.\sd/ff.c     **** #define	DDE					0xE5	/* Deleted directory enrty mark in DIR_Name[0] */
 455:.\sd/ff.c     **** #define	NDDE				0x05	/* Replacement of a character collides with DDE */
 456:.\sd/ff.c     **** 
 457:.\sd/ff.c     **** 
 458:.\sd/ff.c     **** /*------------------------------------------------------------*/
 459:.\sd/ff.c     **** /* Module private work area                                   */
 460:.\sd/ff.c     **** /*------------------------------------------------------------*/
 461:.\sd/ff.c     **** /* Note that uninitialized variables with static duration are
 462:.\sd/ff.c     **** /  zeroed/nulled at start-up. If not, the compiler or start-up
 463:.\sd/ff.c     **** /  routine is out of ANSI-C standard.
 464:.\sd/ff.c     **** */
 465:.\sd/ff.c     **** 
 466:.\sd/ff.c     **** #if _VOLUMES
 467:.\sd/ff.c     **** static
 468:.\sd/ff.c     **** FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 469:.\sd/ff.c     **** #else
 470:.\sd/ff.c     **** #error Number of volumes must not be 0.
 471:.\sd/ff.c     **** #endif
 472:.\sd/ff.c     **** 
 473:.\sd/ff.c     **** static
 474:.\sd/ff.c     **** WORD Fsid;				/* File system mount ID */
 475:.\sd/ff.c     **** 
 476:.\sd/ff.c     **** #if _FS_RPATH
 477:.\sd/ff.c     **** static
 478:.\sd/ff.c     **** BYTE CurrVol;			/* Current drive */
 479:.\sd/ff.c     **** #endif
 480:.\sd/ff.c     **** 
 481:.\sd/ff.c     **** #if _FS_SHARE
 482:.\sd/ff.c     **** static
 483:.\sd/ff.c     **** FILESEM	Files[_FS_SHARE];	/* File lock semaphores */
 484:.\sd/ff.c     **** #endif
 485:.\sd/ff.c     **** 
 486:.\sd/ff.c     **** #if _USE_LFN == 0			/* No LFN feature */
 487:.\sd/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]
 488:.\sd/ff.c     **** #define INIT_BUF(dobj)		(dobj).fn = sfn
 489:.\sd/ff.c     **** #define	FREE_BUF()
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 10


 490:.\sd/ff.c     **** 
 491:.\sd/ff.c     **** #elif _USE_LFN == 1			/* LFN feature with static working buffer */
 492:.\sd/ff.c     **** static WCHAR LfnBuf[_MAX_LFN+1];
 493:.\sd/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]
 494:.\sd/ff.c     **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = LfnBuf; }
 495:.\sd/ff.c     **** #define	FREE_BUF()
 496:.\sd/ff.c     **** 
 497:.\sd/ff.c     **** #elif _USE_LFN == 2 		/* LFN feature with dynamic working buffer on the stack */
 498:.\sd/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]; WCHAR lbuf[_MAX_LFN+1]
 499:.\sd/ff.c     **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = lbuf; }
 500:.\sd/ff.c     **** #define	FREE_BUF()
 501:.\sd/ff.c     **** 
 502:.\sd/ff.c     **** #elif _USE_LFN == 3 		/* LFN feature with dynamic working buffer on the heap */
 503:.\sd/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]; WCHAR *lfn
 504:.\sd/ff.c     **** #define INIT_BUF(dobj)		{ lfn = ff_memalloc((_MAX_LFN + 1) * 2); \
 505:.\sd/ff.c     **** 							  if (!lfn) LEAVE_FF((dobj).fs, FR_NOT_ENOUGH_CORE); \
 506:.\sd/ff.c     **** 							  (dobj).lfn = lfn;	(dobj).fn = sfn; }
 507:.\sd/ff.c     **** #define	FREE_BUF()			ff_memfree(lfn)
 508:.\sd/ff.c     **** 
 509:.\sd/ff.c     **** #else
 510:.\sd/ff.c     **** #error Wrong LFN configuration.
 511:.\sd/ff.c     **** #endif
 512:.\sd/ff.c     **** 
 513:.\sd/ff.c     **** 
 514:.\sd/ff.c     **** 
 515:.\sd/ff.c     **** 
 516:.\sd/ff.c     **** /*--------------------------------------------------------------------------
 517:.\sd/ff.c     **** 
 518:.\sd/ff.c     ****    Module Private Functions
 519:.\sd/ff.c     **** 
 520:.\sd/ff.c     **** ---------------------------------------------------------------------------*/
 521:.\sd/ff.c     **** 
 522:.\sd/ff.c     **** 
 523:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 524:.\sd/ff.c     **** /* String functions                                                      */
 525:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 526:.\sd/ff.c     **** 
 527:.\sd/ff.c     **** /* Copy memory to memory */
 528:.\sd/ff.c     **** static
 529:.\sd/ff.c     **** void mem_cpy (void* dst, const void* src, UINT cnt) {
  25              		.loc 1 529 0
  26              		.cfi_startproc
  27              	.LVL0:
 530:.\sd/ff.c     **** 	BYTE *d = (BYTE*)dst;
 531:.\sd/ff.c     **** 	const BYTE *s = (const BYTE*)src;
 532:.\sd/ff.c     **** 
 533:.\sd/ff.c     **** #if _WORD_ACCESS == 1
 534:.\sd/ff.c     **** 	while (cnt >= sizeof(int)) {
 535:.\sd/ff.c     **** 		*(int*)d = *(int*)s;
 536:.\sd/ff.c     **** 		d += sizeof(int); s += sizeof(int);
 537:.\sd/ff.c     **** 		cnt -= sizeof(int);
 538:.\sd/ff.c     **** 	}
 539:.\sd/ff.c     **** #endif
 540:.\sd/ff.c     **** 	while (cnt--)
  28              		.loc 1 540 0
  29 0000 0023     		mov	r3, #0
 529:.\sd/ff.c     **** 	BYTE *d = (BYTE*)dst;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 11


  30              		.loc 1 529 0
  31 0002 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35              	.LVL1:
  36              	.L2:
  37              		.loc 1 540 0
  38 0004 9342     		cmp	r3, r2
  39 0006 03D0     		beq	.L5
  40              	.LVL2:
 541:.\sd/ff.c     **** 		*d++ = *s++;
  41              		.loc 1 541 0
  42 0008 CC5C     		ldrb	r4, [r1, r3]
  43 000a C454     		strb	r4, [r0, r3]
  44 000c 0133     		add	r3, r3, #1
  45              	.LVL3:
  46 000e F9E7     		b	.L2
  47              	.LVL4:
  48              	.L5:
 542:.\sd/ff.c     **** }
  49              		.loc 1 542 0
  50              		@ sp needed
  51 0010 10BD     		pop	{r4, pc}
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	mem_cpy, .-mem_cpy
  55              		.section	.text.chk_lock,"ax",%progbits
  56              		.align	1
  57              		.code	16
  58              		.thumb_func
  59              		.type	chk_lock, %function
  60              	chk_lock:
  61              	.LFB4:
 543:.\sd/ff.c     **** 
 544:.\sd/ff.c     **** /* Fill memory */
 545:.\sd/ff.c     **** static
 546:.\sd/ff.c     **** void mem_set (void* dst, int val, UINT cnt) {
 547:.\sd/ff.c     **** 	BYTE *d = (BYTE*)dst;
 548:.\sd/ff.c     **** 
 549:.\sd/ff.c     **** 	while (cnt--)
 550:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 551:.\sd/ff.c     **** }
 552:.\sd/ff.c     **** 
 553:.\sd/ff.c     **** /* Compare memory to memory */
 554:.\sd/ff.c     **** static
 555:.\sd/ff.c     **** int mem_cmp (const void* dst, const void* src, UINT cnt) {
 556:.\sd/ff.c     **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 557:.\sd/ff.c     **** 	int r = 0;
 558:.\sd/ff.c     **** 
 559:.\sd/ff.c     **** 	while (cnt-- && (r = *d++ - *s++) == 0) ;
 560:.\sd/ff.c     **** 	return r;
 561:.\sd/ff.c     **** }
 562:.\sd/ff.c     **** 
 563:.\sd/ff.c     **** /* Check if chr is contained in the string */
 564:.\sd/ff.c     **** static
 565:.\sd/ff.c     **** int chk_chr (const char* str, int chr) {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 12


 566:.\sd/ff.c     **** 	while (*str && *str != chr) str++;
 567:.\sd/ff.c     **** 	return *str;
 568:.\sd/ff.c     **** }
 569:.\sd/ff.c     **** 
 570:.\sd/ff.c     **** 
 571:.\sd/ff.c     **** 
 572:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 573:.\sd/ff.c     **** /* Request/Release grant to access the volume                            */
 574:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 575:.\sd/ff.c     **** #if _FS_REENTRANT
 576:.\sd/ff.c     **** 
 577:.\sd/ff.c     **** static
 578:.\sd/ff.c     **** int lock_fs (
 579:.\sd/ff.c     **** 	FATFS *fs		/* File system object */
 580:.\sd/ff.c     **** )
 581:.\sd/ff.c     **** {
 582:.\sd/ff.c     **** 	return ff_req_grant(fs->sobj);
 583:.\sd/ff.c     **** }
 584:.\sd/ff.c     **** 
 585:.\sd/ff.c     **** 
 586:.\sd/ff.c     **** static
 587:.\sd/ff.c     **** void unlock_fs (
 588:.\sd/ff.c     **** 	FATFS *fs,		/* File system object */
 589:.\sd/ff.c     **** 	FRESULT res		/* Result code to be returned */
 590:.\sd/ff.c     **** )
 591:.\sd/ff.c     **** {
 592:.\sd/ff.c     **** 	if (res != FR_NOT_ENABLED &&
 593:.\sd/ff.c     **** 		res != FR_INVALID_DRIVE &&
 594:.\sd/ff.c     **** 		res != FR_INVALID_OBJECT &&
 595:.\sd/ff.c     **** 		res != FR_TIMEOUT) {
 596:.\sd/ff.c     **** 		ff_rel_grant(fs->sobj);
 597:.\sd/ff.c     **** 	}
 598:.\sd/ff.c     **** }
 599:.\sd/ff.c     **** #endif
 600:.\sd/ff.c     **** 
 601:.\sd/ff.c     **** 
 602:.\sd/ff.c     **** 
 603:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 604:.\sd/ff.c     **** /* File shareing control functions                                       */
 605:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 606:.\sd/ff.c     **** #if _FS_SHARE
 607:.\sd/ff.c     **** 
 608:.\sd/ff.c     **** static
 609:.\sd/ff.c     **** FRESULT chk_lock (	/* Check if the file can be accessed */
 610:.\sd/ff.c     **** 	DIR* dj,		/* Directory object pointing the file to be checked */
 611:.\sd/ff.c     **** 	int acc			/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 612:.\sd/ff.c     **** )
 613:.\sd/ff.c     **** {
  62              		.loc 1 613 0
  63              		.cfi_startproc
  64              	.LVL5:
  65 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  66              		.cfi_def_cfa_offset 20
  67              		.cfi_offset 4, -20
  68              		.cfi_offset 5, -16
  69              		.cfi_offset 6, -12
  70              		.cfi_offset 7, -8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 13


  71              		.cfi_offset 14, -4
 614:.\sd/ff.c     **** 	UINT i, be;
 615:.\sd/ff.c     **** 
 616:.\sd/ff.c     **** 	/* Search file semaphore table */
 617:.\sd/ff.c     **** 	for (i = be = 0; i < _FS_SHARE; i++) {
  72              		.loc 1 617 0
  73 0002 0024     		mov	r4, #0
  74 0004 231C     		mov	r3, r4
  75 0006 164D     		ldr	r5, .L25
  76 0008 2A1D     		add	r2, r5, #4
  77              	.LVL6:
  78              	.L10:
  79 000a 161F     		sub	r6, r2, #4
 618:.\sd/ff.c     **** 		if (Files[i].fs) {	/* Existing entry */
  80              		.loc 1 618 0
  81 000c 3668     		ldr	r6, [r6]
  82 000e 002E     		cmp	r6, #0
  83 0010 0BD0     		beq	.L7
 619:.\sd/ff.c     **** 			if (Files[i].fs == dj->fs &&	 	/* Check if the file matched with an open file */
  84              		.loc 1 619 0
  85 0012 0768     		ldr	r7, [r0]
  86 0014 BE42     		cmp	r6, r7
  87 0016 09D1     		bne	.L8
  88              		.loc 1 619 0 is_stmt 0 discriminator 1
  89 0018 1668     		ldr	r6, [r2]
  90 001a 8768     		ldr	r7, [r0, #8]
  91 001c BE42     		cmp	r6, r7
  92 001e 05D1     		bne	.L8
 620:.\sd/ff.c     **** 				Files[i].clu == dj->sclust &&
  93              		.loc 1 620 0 is_stmt 1
  94 0020 9788     		ldrh	r7, [r2, #4]
  95 0022 C688     		ldrh	r6, [r0, #6]
  96 0024 B742     		cmp	r7, r6
  97 0026 01D1     		bne	.L8
  98 0028 05E0     		b	.L23
  99              	.L7:
 621:.\sd/ff.c     **** 				Files[i].idx == dj->index) break;
 622:.\sd/ff.c     **** 		} else {			/* Blank entry */
 623:.\sd/ff.c     **** 			be++;
 100              		.loc 1 623 0
 101 002a 0134     		add	r4, r4, #1
 102              	.LVL7:
 103              	.L8:
 617:.\sd/ff.c     **** 		if (Files[i].fs) {	/* Existing entry */
 104              		.loc 1 617 0 discriminator 2
 105 002c 0133     		add	r3, r3, #1
 106              	.LVL8:
 107 002e 0C32     		add	r2, r2, #12
 108 0030 032B     		cmp	r3, #3
 109 0032 EAD1     		bne	.L10
 110 0034 0CE0     		b	.L24
 111              	.L23:
 624:.\sd/ff.c     **** 		}
 625:.\sd/ff.c     **** 	}
 626:.\sd/ff.c     **** 	if (i == _FS_SHARE)	/* The file is not opened */
 627:.\sd/ff.c     **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new file?
 628:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 14


 629:.\sd/ff.c     **** 	/* The file has been opened. Reject any open against writing file and all write mode open */
 630:.\sd/ff.c     **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 112              		.loc 1 630 0
 113 0036 1020     		mov	r0, #16
 114              	.LVL9:
 115 0038 0029     		cmp	r1, #0
 116 003a 0FD1     		bne	.L19
 117              		.loc 1 630 0 is_stmt 0 discriminator 2
 118 003c 0C22     		mov	r2, #12
 119 003e 5343     		mul	r3, r2
 120              	.LVL10:
 121 0040 EB18     		add	r3, r5, r3
 122 0042 5889     		ldrh	r0, [r3, #10]
 123 0044 0138     		sub	r0, r0, #1
 124 0046 FF38     		sub	r0, r0, #255
 125 0048 4242     		neg	r2, r0
 126 004a 4241     		adc	r2, r2, r0
 127 004c 1001     		lsl	r0, r2, #4
 128 004e 05E0     		b	.L19
 129              	.LVL11:
 130              	.L24:
 627:.\sd/ff.c     **** 
 131              		.loc 1 627 0 is_stmt 1
 132 0050 0020     		mov	r0, #0
 133              	.LVL12:
 134 0052 8442     		cmp	r4, r0
 135 0054 02D1     		bne	.L19
 627:.\sd/ff.c     **** 
 136              		.loc 1 627 0 is_stmt 0 discriminator 2
 137 0056 0229     		cmp	r1, #2
 138 0058 00D0     		beq	.L19
 627:.\sd/ff.c     **** 
 139              		.loc 1 627 0
 140 005a 1220     		mov	r0, #18
 141              	.LVL13:
 142              	.L19:
 631:.\sd/ff.c     **** }
 143              		.loc 1 631 0 is_stmt 1
 144              		@ sp needed
 145              	.LVL14:
 146 005c F0BD     		pop	{r4, r5, r6, r7, pc}
 147              	.L26:
 148 005e C046     		.align	2
 149              	.L25:
 150 0060 00000000 		.word	.LANCHOR0
 151              		.cfi_endproc
 152              	.LFE4:
 153              		.size	chk_lock, .-chk_lock
 154              		.section	.text.get_fileinfo,"ax",%progbits
 155              		.align	1
 156              		.code	16
 157              		.thumb_func
 158              		.type	get_fileinfo, %function
 159              	get_fileinfo:
 160              	.LFB23:
 632:.\sd/ff.c     **** 
 633:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 15


 634:.\sd/ff.c     **** static
 635:.\sd/ff.c     **** int enq_lock (void)	/* Check if an entry is available for a new file */
 636:.\sd/ff.c     **** {
 637:.\sd/ff.c     **** 	UINT i;
 638:.\sd/ff.c     **** 
 639:.\sd/ff.c     **** 	for (i = 0; i < _FS_SHARE && Files[i].fs; i++) ;
 640:.\sd/ff.c     **** 	return (i == _FS_SHARE) ? 0 : 1;
 641:.\sd/ff.c     **** }
 642:.\sd/ff.c     **** 
 643:.\sd/ff.c     **** 
 644:.\sd/ff.c     **** static
 645:.\sd/ff.c     **** UINT inc_lock (	/* Increment file open counter and returns its index (0:int error) */
 646:.\sd/ff.c     **** 	DIR* dj,	/* Directory object pointing the file to register or increment */
 647:.\sd/ff.c     **** 	int acc		/* Desired access mode (0:Read, !0:Write) */
 648:.\sd/ff.c     **** )
 649:.\sd/ff.c     **** {
 650:.\sd/ff.c     **** 	UINT i;
 651:.\sd/ff.c     **** 
 652:.\sd/ff.c     **** 
 653:.\sd/ff.c     **** 	for (i = 0; i < _FS_SHARE; i++) {	/* Find the file */
 654:.\sd/ff.c     **** 		if (Files[i].fs == dj->fs &&
 655:.\sd/ff.c     **** 			Files[i].clu == dj->sclust &&
 656:.\sd/ff.c     **** 			Files[i].idx == dj->index) break;
 657:.\sd/ff.c     **** 	}
 658:.\sd/ff.c     **** 
 659:.\sd/ff.c     **** 	if (i == _FS_SHARE) {				/* Not opened. Register it as new. */
 660:.\sd/ff.c     **** 		for (i = 0; i < _FS_SHARE && Files[i].fs; i++) ;
 661:.\sd/ff.c     **** 		if (i == _FS_SHARE) return 0;	/* No space to register (int err) */
 662:.\sd/ff.c     **** 		Files[i].fs = dj->fs;
 663:.\sd/ff.c     **** 		Files[i].clu = dj->sclust;
 664:.\sd/ff.c     **** 		Files[i].idx = dj->index;
 665:.\sd/ff.c     **** 		Files[i].ctr = 0;
 666:.\sd/ff.c     **** 	}
 667:.\sd/ff.c     **** 
 668:.\sd/ff.c     **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 669:.\sd/ff.c     **** 
 670:.\sd/ff.c     **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 671:.\sd/ff.c     **** 
 672:.\sd/ff.c     **** 	return i + 1;
 673:.\sd/ff.c     **** }
 674:.\sd/ff.c     **** 
 675:.\sd/ff.c     **** 
 676:.\sd/ff.c     **** static
 677:.\sd/ff.c     **** FRESULT dec_lock (	/* Decrement file open counter */
 678:.\sd/ff.c     **** 	UINT i			/* Semaphore index */
 679:.\sd/ff.c     **** )
 680:.\sd/ff.c     **** {
 681:.\sd/ff.c     **** 	WORD n;
 682:.\sd/ff.c     **** 	FRESULT res;
 683:.\sd/ff.c     **** 
 684:.\sd/ff.c     **** 
 685:.\sd/ff.c     **** 	if (--i < _FS_SHARE) {
 686:.\sd/ff.c     **** 		n = Files[i].ctr;
 687:.\sd/ff.c     **** 		if (n == 0x100) n = 0;
 688:.\sd/ff.c     **** 		if (n) n--;
 689:.\sd/ff.c     **** 		Files[i].ctr = n;
 690:.\sd/ff.c     **** 		if (!n) Files[i].fs = 0;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 16


 691:.\sd/ff.c     **** 		res = FR_OK;
 692:.\sd/ff.c     **** 	} else {
 693:.\sd/ff.c     **** 		res = FR_INT_ERR;
 694:.\sd/ff.c     **** 	}
 695:.\sd/ff.c     **** 	return res;
 696:.\sd/ff.c     **** }
 697:.\sd/ff.c     **** 
 698:.\sd/ff.c     **** 
 699:.\sd/ff.c     **** static
 700:.\sd/ff.c     **** void clear_lock (	/* Clear lock entries of the volume */
 701:.\sd/ff.c     **** 	FATFS *fs
 702:.\sd/ff.c     **** )
 703:.\sd/ff.c     **** {
 704:.\sd/ff.c     **** 	UINT i;
 705:.\sd/ff.c     **** 
 706:.\sd/ff.c     **** 	for (i = 0; i < _FS_SHARE; i++) {
 707:.\sd/ff.c     **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 708:.\sd/ff.c     **** 	}
 709:.\sd/ff.c     **** }
 710:.\sd/ff.c     **** #endif
 711:.\sd/ff.c     **** 
 712:.\sd/ff.c     **** 
 713:.\sd/ff.c     **** 
 714:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 715:.\sd/ff.c     **** /* Change window offset                                                  */
 716:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 717:.\sd/ff.c     **** 
 718:.\sd/ff.c     **** static
 719:.\sd/ff.c     **** FRESULT move_window (
 720:.\sd/ff.c     **** 	FATFS *fs,		/* File system object */
 721:.\sd/ff.c     **** 	DWORD sector	/* Sector number to make appearance in the fs->win[] */
 722:.\sd/ff.c     **** )					/* Move to zero only writes back dirty window */
 723:.\sd/ff.c     **** {
 724:.\sd/ff.c     **** 	DWORD wsect;
 725:.\sd/ff.c     **** 
 726:.\sd/ff.c     **** 
 727:.\sd/ff.c     **** 	wsect = fs->winsect;
 728:.\sd/ff.c     **** 	if (wsect != sector) {	/* Changed current window */
 729:.\sd/ff.c     **** #if !_FS_READONLY
 730:.\sd/ff.c     **** 		if (fs->wflag) {	/* Write back dirty window if needed */
 731:.\sd/ff.c     **** 			if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK)
 732:.\sd/ff.c     **** 				return FR_DISK_ERR;
 733:.\sd/ff.c     **** 			fs->wflag = 0;
 734:.\sd/ff.c     **** 			if (wsect < (fs->fatbase + fs->fsize)) {	/* In FAT area */
 735:.\sd/ff.c     **** 				BYTE nf;
 736:.\sd/ff.c     **** 				for (nf = fs->n_fats; nf > 1; nf--) {	/* Reflect the change to all FAT copies */
 737:.\sd/ff.c     **** 					wsect += fs->fsize;
 738:.\sd/ff.c     **** 					disk_write(fs->drv, fs->win, wsect, 1);
 739:.\sd/ff.c     **** 				}
 740:.\sd/ff.c     **** 			}
 741:.\sd/ff.c     **** 		}
 742:.\sd/ff.c     **** #endif
 743:.\sd/ff.c     **** 		if (sector) {
 744:.\sd/ff.c     **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK)
 745:.\sd/ff.c     **** 				return FR_DISK_ERR;
 746:.\sd/ff.c     **** 			fs->winsect = sector;
 747:.\sd/ff.c     **** 		}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 17


 748:.\sd/ff.c     **** 	}
 749:.\sd/ff.c     **** 
 750:.\sd/ff.c     **** 	return FR_OK;
 751:.\sd/ff.c     **** }
 752:.\sd/ff.c     **** 
 753:.\sd/ff.c     **** 
 754:.\sd/ff.c     **** 
 755:.\sd/ff.c     **** 
 756:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 757:.\sd/ff.c     **** /* Clean-up cached data                                                  */
 758:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 759:.\sd/ff.c     **** #if !_FS_READONLY
 760:.\sd/ff.c     **** static
 761:.\sd/ff.c     **** FRESULT sync (	/* FR_OK: successful, FR_DISK_ERR: failed */
 762:.\sd/ff.c     **** 	FATFS *fs	/* File system object */
 763:.\sd/ff.c     **** )
 764:.\sd/ff.c     **** {
 765:.\sd/ff.c     **** 	FRESULT res;
 766:.\sd/ff.c     **** 
 767:.\sd/ff.c     **** 
 768:.\sd/ff.c     **** 	res = move_window(fs, 0);
 769:.\sd/ff.c     **** 	if (res == FR_OK) {
 770:.\sd/ff.c     **** 		/* Update FSInfo sector if needed */
 771:.\sd/ff.c     **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag) {
 772:.\sd/ff.c     **** 			fs->winsect = 0;
 773:.\sd/ff.c     **** 			/* Create FSInfo structure */
 774:.\sd/ff.c     **** 			mem_set(fs->win, 0, 512);
 775:.\sd/ff.c     **** 			ST_WORD(fs->win+BS_55AA, 0xAA55);
 776:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_LeadSig, 0x41615252);
 777:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_StrucSig, 0x61417272);
 778:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Free_Count, fs->free_clust);
 779:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Nxt_Free, fs->last_clust);
 780:.\sd/ff.c     **** 			/* Write it into the FSInfo sector */
 781:.\sd/ff.c     **** 			disk_write(fs->drv, fs->win, fs->fsi_sector, 1);
 782:.\sd/ff.c     **** 			fs->fsi_flag = 0;
 783:.\sd/ff.c     **** 		}
 784:.\sd/ff.c     **** 		/* Make sure that no pending write process in the physical drive */
 785:.\sd/ff.c     **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
 786:.\sd/ff.c     **** 			res = FR_DISK_ERR;
 787:.\sd/ff.c     **** 	}
 788:.\sd/ff.c     **** 
 789:.\sd/ff.c     **** 	return res;
 790:.\sd/ff.c     **** }
 791:.\sd/ff.c     **** #endif
 792:.\sd/ff.c     **** 
 793:.\sd/ff.c     **** 
 794:.\sd/ff.c     **** 
 795:.\sd/ff.c     **** 
 796:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 797:.\sd/ff.c     **** /* Get sector# from cluster#                                             */
 798:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 799:.\sd/ff.c     **** 
 800:.\sd/ff.c     **** 
 801:.\sd/ff.c     **** DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
 802:.\sd/ff.c     **** 	FATFS *fs,		/* File system object */
 803:.\sd/ff.c     **** 	DWORD clst		/* Cluster# to be converted */
 804:.\sd/ff.c     **** )
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 18


 805:.\sd/ff.c     **** {
 806:.\sd/ff.c     **** 	clst -= 2;
 807:.\sd/ff.c     **** 	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
 808:.\sd/ff.c     **** 	return clst * fs->csize + fs->database;
 809:.\sd/ff.c     **** }
 810:.\sd/ff.c     **** 
 811:.\sd/ff.c     **** 
 812:.\sd/ff.c     **** 
 813:.\sd/ff.c     **** 
 814:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 815:.\sd/ff.c     **** /* FAT access - Read value of a FAT entry                                */
 816:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 817:.\sd/ff.c     **** 
 818:.\sd/ff.c     **** 
 819:.\sd/ff.c     **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, Else:Cluster status */
 820:.\sd/ff.c     **** 	FATFS *fs,	/* File system object */
 821:.\sd/ff.c     **** 	DWORD clst	/* Cluster# to get the link information */
 822:.\sd/ff.c     **** )
 823:.\sd/ff.c     **** {
 824:.\sd/ff.c     **** 	UINT wc, bc;
 825:.\sd/ff.c     **** 	BYTE *p;
 826:.\sd/ff.c     **** 
 827:.\sd/ff.c     **** 
 828:.\sd/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent)	/* Chack range */
 829:.\sd/ff.c     **** 		return 1;
 830:.\sd/ff.c     **** 
 831:.\sd/ff.c     **** 	switch (fs->fs_type) {
 832:.\sd/ff.c     **** 	case FS_FAT12 :
 833:.\sd/ff.c     **** 		bc = (UINT)clst; bc += bc / 2;
 834:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 835:.\sd/ff.c     **** 		wc = fs->win[bc % SS(fs)]; bc++;
 836:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 837:.\sd/ff.c     **** 		wc |= fs->win[bc % SS(fs)] << 8;
 838:.\sd/ff.c     **** 		return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 839:.\sd/ff.c     **** 
 840:.\sd/ff.c     **** 	case FS_FAT16 :
 841:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
 842:.\sd/ff.c     **** 		p = &fs->win[clst * 2 % SS(fs)];
 843:.\sd/ff.c     **** 		return LD_WORD(p);
 844:.\sd/ff.c     **** 
 845:.\sd/ff.c     **** 	case FS_FAT32 :
 846:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
 847:.\sd/ff.c     **** 		p = &fs->win[clst * 4 % SS(fs)];
 848:.\sd/ff.c     **** 		return LD_DWORD(p) & 0x0FFFFFFF;
 849:.\sd/ff.c     **** 	}
 850:.\sd/ff.c     **** 
 851:.\sd/ff.c     **** 	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
 852:.\sd/ff.c     **** }
 853:.\sd/ff.c     **** 
 854:.\sd/ff.c     **** 
 855:.\sd/ff.c     **** 
 856:.\sd/ff.c     **** 
 857:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 858:.\sd/ff.c     **** /* FAT access - Change value of a FAT entry                              */
 859:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 860:.\sd/ff.c     **** #if !_FS_READONLY
 861:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 19


 862:.\sd/ff.c     **** FRESULT put_fat (
 863:.\sd/ff.c     **** 	FATFS *fs,	/* File system object */
 864:.\sd/ff.c     **** 	DWORD clst,	/* Cluster# to be changed in range of 2 to fs->n_fatent - 1 */
 865:.\sd/ff.c     **** 	DWORD val	/* New value to mark the cluster */
 866:.\sd/ff.c     **** )
 867:.\sd/ff.c     **** {
 868:.\sd/ff.c     **** 	UINT bc;
 869:.\sd/ff.c     **** 	BYTE *p;
 870:.\sd/ff.c     **** 	FRESULT res;
 871:.\sd/ff.c     **** 
 872:.\sd/ff.c     **** 
 873:.\sd/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 874:.\sd/ff.c     **** 		res = FR_INT_ERR;
 875:.\sd/ff.c     **** 
 876:.\sd/ff.c     **** 	} else {
 877:.\sd/ff.c     **** 		switch (fs->fs_type) {
 878:.\sd/ff.c     **** 		case FS_FAT12 :
 879:.\sd/ff.c     **** 			bc = clst; bc += bc / 2;
 880:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 881:.\sd/ff.c     **** 			if (res != FR_OK) break;
 882:.\sd/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 883:.\sd/ff.c     **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 884:.\sd/ff.c     **** 			bc++;
 885:.\sd/ff.c     **** 			fs->wflag = 1;
 886:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 887:.\sd/ff.c     **** 			if (res != FR_OK) break;
 888:.\sd/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 889:.\sd/ff.c     **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 890:.\sd/ff.c     **** 			break;
 891:.\sd/ff.c     **** 
 892:.\sd/ff.c     **** 		case FS_FAT16 :
 893:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 894:.\sd/ff.c     **** 			if (res != FR_OK) break;
 895:.\sd/ff.c     **** 			p = &fs->win[clst * 2 % SS(fs)];
 896:.\sd/ff.c     **** 			ST_WORD(p, (WORD)val);
 897:.\sd/ff.c     **** 			break;
 898:.\sd/ff.c     **** 
 899:.\sd/ff.c     **** 		case FS_FAT32 :
 900:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 901:.\sd/ff.c     **** 			if (res != FR_OK) break;
 902:.\sd/ff.c     **** 			p = &fs->win[clst * 4 % SS(fs)];
 903:.\sd/ff.c     **** 			val |= LD_DWORD(p) & 0xF0000000;
 904:.\sd/ff.c     **** 			ST_DWORD(p, val);
 905:.\sd/ff.c     **** 			break;
 906:.\sd/ff.c     **** 
 907:.\sd/ff.c     **** 		default :
 908:.\sd/ff.c     **** 			res = FR_INT_ERR;
 909:.\sd/ff.c     **** 		}
 910:.\sd/ff.c     **** 		fs->wflag = 1;
 911:.\sd/ff.c     **** 	}
 912:.\sd/ff.c     **** 
 913:.\sd/ff.c     **** 	return res;
 914:.\sd/ff.c     **** }
 915:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 916:.\sd/ff.c     **** 
 917:.\sd/ff.c     **** 
 918:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 20


 919:.\sd/ff.c     **** 
 920:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 921:.\sd/ff.c     **** /* FAT handling - Remove a cluster chain                                 */
 922:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 923:.\sd/ff.c     **** #if !_FS_READONLY
 924:.\sd/ff.c     **** static
 925:.\sd/ff.c     **** FRESULT remove_chain (
 926:.\sd/ff.c     **** 	FATFS *fs,			/* File system object */
 927:.\sd/ff.c     **** 	DWORD clst			/* Cluster# to remove a chain from */
 928:.\sd/ff.c     **** )
 929:.\sd/ff.c     **** {
 930:.\sd/ff.c     **** 	FRESULT res;
 931:.\sd/ff.c     **** 	DWORD nxt;
 932:.\sd/ff.c     **** #if _USE_ERASE
 933:.\sd/ff.c     **** 	DWORD scl = clst, ecl = clst, resion[2];
 934:.\sd/ff.c     **** #endif
 935:.\sd/ff.c     **** 
 936:.\sd/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 937:.\sd/ff.c     **** 		res = FR_INT_ERR;
 938:.\sd/ff.c     **** 
 939:.\sd/ff.c     **** 	} else {
 940:.\sd/ff.c     **** 		res = FR_OK;
 941:.\sd/ff.c     **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
 942:.\sd/ff.c     **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 943:.\sd/ff.c     **** 			if (nxt == 0) break;				/* Empty cluster? */
 944:.\sd/ff.c     **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 945:.\sd/ff.c     **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 946:.\sd/ff.c     **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 947:.\sd/ff.c     **** 			if (res != FR_OK) break;
 948:.\sd/ff.c     **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSInfo */
 949:.\sd/ff.c     **** 				fs->free_clust++;
 950:.\sd/ff.c     **** 				fs->fsi_flag = 1;
 951:.\sd/ff.c     **** 			}
 952:.\sd/ff.c     **** #if _USE_ERASE
 953:.\sd/ff.c     **** 			if (ecl + 1 == nxt) {	/* Next cluster is contiguous */
 954:.\sd/ff.c     **** 				ecl = nxt;
 955:.\sd/ff.c     **** 			} else {				/* End of contiguous clusters */ 
 956:.\sd/ff.c     **** 				resion[0] = clust2sect(fs, scl);					/* Start sector */
 957:.\sd/ff.c     **** 				resion[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
 958:.\sd/ff.c     **** 				disk_ioctl(fs->drv, CTRL_ERASE_SECTOR, resion);		/* Erase the block */
 959:.\sd/ff.c     **** 				scl = ecl = nxt;
 960:.\sd/ff.c     **** 			}
 961:.\sd/ff.c     **** #endif
 962:.\sd/ff.c     **** 			clst = nxt;	/* Next cluster */
 963:.\sd/ff.c     **** 		}
 964:.\sd/ff.c     **** 	}
 965:.\sd/ff.c     **** 
 966:.\sd/ff.c     **** 	return res;
 967:.\sd/ff.c     **** }
 968:.\sd/ff.c     **** #endif
 969:.\sd/ff.c     **** 
 970:.\sd/ff.c     **** 
 971:.\sd/ff.c     **** 
 972:.\sd/ff.c     **** 
 973:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 974:.\sd/ff.c     **** /* FAT handling - Stretch or Create a cluster chain                      */
 975:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 21


 976:.\sd/ff.c     **** #if !_FS_READONLY
 977:.\sd/ff.c     **** static
 978:.\sd/ff.c     **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
 979:.\sd/ff.c     **** 	FATFS *fs,			/* File system object */
 980:.\sd/ff.c     **** 	DWORD clst			/* Cluster# to stretch. 0 means create a new chain. */
 981:.\sd/ff.c     **** )
 982:.\sd/ff.c     **** {
 983:.\sd/ff.c     **** 	DWORD cs, ncl, scl;
 984:.\sd/ff.c     **** 	FRESULT res;
 985:.\sd/ff.c     **** 
 986:.\sd/ff.c     **** 
 987:.\sd/ff.c     **** 	if (clst == 0) {		/* Create a new chain */
 988:.\sd/ff.c     **** 		scl = fs->last_clust;			/* Get suggested start point */
 989:.\sd/ff.c     **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 990:.\sd/ff.c     **** 	}
 991:.\sd/ff.c     **** 	else {					/* Stretch the current chain */
 992:.\sd/ff.c     **** 		cs = get_fat(fs, clst);			/* Check the cluster status */
 993:.\sd/ff.c     **** 		if (cs < 2) return 1;			/* It is an invalid cluster */
 994:.\sd/ff.c     **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 995:.\sd/ff.c     **** 		scl = clst;
 996:.\sd/ff.c     **** 	}
 997:.\sd/ff.c     **** 
 998:.\sd/ff.c     **** 	ncl = scl;				/* Start cluster */
 999:.\sd/ff.c     **** 	for (;;) {
1000:.\sd/ff.c     **** 		ncl++;							/* Next cluster */
1001:.\sd/ff.c     **** 		if (ncl >= fs->n_fatent) {		/* Wrap around */
1002:.\sd/ff.c     **** 			ncl = 2;
1003:.\sd/ff.c     **** 			if (ncl > scl) return 0;	/* No free cluster */
1004:.\sd/ff.c     **** 		}
1005:.\sd/ff.c     **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
1006:.\sd/ff.c     **** 		if (cs == 0) break;				/* Found a free cluster */
1007:.\sd/ff.c     **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
1008:.\sd/ff.c     **** 			return cs;
1009:.\sd/ff.c     **** 		if (ncl == scl) return 0;		/* No free cluster */
1010:.\sd/ff.c     **** 	}
1011:.\sd/ff.c     **** 
1012:.\sd/ff.c     **** 	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
1013:.\sd/ff.c     **** 	if (res == FR_OK && clst != 0) {
1014:.\sd/ff.c     **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
1015:.\sd/ff.c     **** 	}
1016:.\sd/ff.c     **** 	if (res == FR_OK) {
1017:.\sd/ff.c     **** 		fs->last_clust = ncl;			/* Update FSINFO */
1018:.\sd/ff.c     **** 		if (fs->free_clust != 0xFFFFFFFF) {
1019:.\sd/ff.c     **** 			fs->free_clust--;
1020:.\sd/ff.c     **** 			fs->fsi_flag = 1;
1021:.\sd/ff.c     **** 		}
1022:.\sd/ff.c     **** 	} else {
1023:.\sd/ff.c     **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
1024:.\sd/ff.c     **** 	}
1025:.\sd/ff.c     **** 
1026:.\sd/ff.c     **** 	return ncl;		/* Return new cluster number or error code */
1027:.\sd/ff.c     **** }
1028:.\sd/ff.c     **** #endif /* !_FS_READONLY */
1029:.\sd/ff.c     **** 
1030:.\sd/ff.c     **** 
1031:.\sd/ff.c     **** 
1032:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 22


1033:.\sd/ff.c     **** /* FAT handling - Convert offset into cluster with link map table        */
1034:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1035:.\sd/ff.c     **** 
1036:.\sd/ff.c     **** #if _USE_FASTSEEK
1037:.\sd/ff.c     **** static
1038:.\sd/ff.c     **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1039:.\sd/ff.c     **** 	FIL* fp,		/* Pointer to the file object */
1040:.\sd/ff.c     **** 	DWORD ofs		/* File offset to be converted to cluster# */
1041:.\sd/ff.c     **** )
1042:.\sd/ff.c     **** {
1043:.\sd/ff.c     **** 	DWORD cl, ncl, *tbl;
1044:.\sd/ff.c     **** 
1045:.\sd/ff.c     **** 
1046:.\sd/ff.c     **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
1047:.\sd/ff.c     **** 	cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
1048:.\sd/ff.c     **** 	for (;;) {
1049:.\sd/ff.c     **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
1050:.\sd/ff.c     **** 		if (!ncl) return 0;		/* End of table? (error) */
1051:.\sd/ff.c     **** 		if (cl < ncl) break;	/* In this fragment? */
1052:.\sd/ff.c     **** 		cl -= ncl; tbl++;		/* Next fragment */
1053:.\sd/ff.c     **** 	}
1054:.\sd/ff.c     **** 	return cl + *tbl;	/* Return the cluster number */
1055:.\sd/ff.c     **** }
1056:.\sd/ff.c     **** #endif	/* _USE_FASTSEEK */
1057:.\sd/ff.c     **** 
1058:.\sd/ff.c     **** 
1059:.\sd/ff.c     **** 
1060:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1061:.\sd/ff.c     **** /* Directory handling - Set directory index                              */
1062:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1063:.\sd/ff.c     **** 
1064:.\sd/ff.c     **** static
1065:.\sd/ff.c     **** FRESULT dir_sdi (
1066:.\sd/ff.c     **** 	DIR *dj,		/* Pointer to directory object */
1067:.\sd/ff.c     **** 	WORD idx		/* Directory index number */
1068:.\sd/ff.c     **** )
1069:.\sd/ff.c     **** {
1070:.\sd/ff.c     **** 	DWORD clst;
1071:.\sd/ff.c     **** 	WORD ic;
1072:.\sd/ff.c     **** 
1073:.\sd/ff.c     **** 
1074:.\sd/ff.c     **** 	dj->index = idx;
1075:.\sd/ff.c     **** 	clst = dj->sclust;
1076:.\sd/ff.c     **** 	if (clst == 1 || clst >= dj->fs->n_fatent)	/* Check start cluster range */
1077:.\sd/ff.c     **** 		return FR_INT_ERR;
1078:.\sd/ff.c     **** 	if (!clst && dj->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
1079:.\sd/ff.c     **** 		clst = dj->fs->dirbase;
1080:.\sd/ff.c     **** 
1081:.\sd/ff.c     **** 	if (clst == 0) {	/* Static table (root-dir in FAT12/16) */
1082:.\sd/ff.c     **** 		dj->clust = clst;
1083:.\sd/ff.c     **** 		if (idx >= dj->fs->n_rootdir)		/* Index is out of range */
1084:.\sd/ff.c     **** 			return FR_INT_ERR;
1085:.\sd/ff.c     **** 		dj->sect = dj->fs->dirbase + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
1086:.\sd/ff.c     **** 	}
1087:.\sd/ff.c     **** 	else {				/* Dynamic table (sub-dirs or root-dir in FAT32) */
1088:.\sd/ff.c     **** 		ic = SS(dj->fs) / SZ_DIR * dj->fs->csize;	/* Entries per cluster */
1089:.\sd/ff.c     **** 		while (idx >= ic) {	/* Follow cluster chain */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 23


1090:.\sd/ff.c     **** 			clst = get_fat(dj->fs, clst);				/* Get next cluster */
1091:.\sd/ff.c     **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1092:.\sd/ff.c     **** 			if (clst < 2 || clst >= dj->fs->n_fatent)	/* Reached to end of table or int error */
1093:.\sd/ff.c     **** 				return FR_INT_ERR;
1094:.\sd/ff.c     **** 			idx -= ic;
1095:.\sd/ff.c     **** 		}
1096:.\sd/ff.c     **** 		dj->clust = clst;
1097:.\sd/ff.c     **** 		dj->sect = clust2sect(dj->fs, clst) + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
1098:.\sd/ff.c     **** 	}
1099:.\sd/ff.c     **** 
1100:.\sd/ff.c     **** 	dj->dir = dj->fs->win + (idx % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector 
1101:.\sd/ff.c     **** 
1102:.\sd/ff.c     **** 	return FR_OK;	/* Seek succeeded */
1103:.\sd/ff.c     **** }
1104:.\sd/ff.c     **** 
1105:.\sd/ff.c     **** 
1106:.\sd/ff.c     **** 
1107:.\sd/ff.c     **** 
1108:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1109:.\sd/ff.c     **** /* Directory handling - Move directory index next                        */
1110:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1111:.\sd/ff.c     **** 
1112:.\sd/ff.c     **** static
1113:.\sd/ff.c     **** FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:EOT and could not stretch
1114:.\sd/ff.c     **** 	DIR *dj,		/* Pointer to directory object */
1115:.\sd/ff.c     **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1116:.\sd/ff.c     **** )
1117:.\sd/ff.c     **** {
1118:.\sd/ff.c     **** 	DWORD clst;
1119:.\sd/ff.c     **** 	WORD i;
1120:.\sd/ff.c     **** 
1121:.\sd/ff.c     **** 
1122:.\sd/ff.c     **** 	stretch = stretch;		/* To suppress warning on read-only cfg. */
1123:.\sd/ff.c     **** 	i = dj->index + 1;
1124:.\sd/ff.c     **** 	if (!i || !dj->sect)	/* Report EOT when index has reached 65535 */
1125:.\sd/ff.c     **** 		return FR_NO_FILE;
1126:.\sd/ff.c     **** 
1127:.\sd/ff.c     **** 	if (!(i % (SS(dj->fs) / SZ_DIR))) {	/* Sector changed? */
1128:.\sd/ff.c     **** 		dj->sect++;					/* Next sector */
1129:.\sd/ff.c     **** 
1130:.\sd/ff.c     **** 		if (dj->clust == 0) {	/* Static table */
1131:.\sd/ff.c     **** 			if (i >= dj->fs->n_rootdir)	/* Report EOT when end of table */
1132:.\sd/ff.c     **** 				return FR_NO_FILE;
1133:.\sd/ff.c     **** 		}
1134:.\sd/ff.c     **** 		else {					/* Dynamic table */
1135:.\sd/ff.c     **** 			if (((i / (SS(dj->fs) / SZ_DIR)) & (dj->fs->csize - 1)) == 0) {	/* Cluster changed? */
1136:.\sd/ff.c     **** 				clst = get_fat(dj->fs, dj->clust);				/* Get next cluster */
1137:.\sd/ff.c     **** 				if (clst <= 1) return FR_INT_ERR;
1138:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1139:.\sd/ff.c     **** 				if (clst >= dj->fs->n_fatent) {					/* When it reached end of dynamic table */
1140:.\sd/ff.c     **** #if !_FS_READONLY
1141:.\sd/ff.c     **** 					BYTE c;
1142:.\sd/ff.c     **** 					if (!stretch) return FR_NO_FILE;			/* When do not stretch, report EOT */
1143:.\sd/ff.c     **** 					clst = create_chain(dj->fs, dj->clust);		/* Stretch cluster chain */
1144:.\sd/ff.c     **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1145:.\sd/ff.c     **** 					if (clst == 1) return FR_INT_ERR;
1146:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 24


1147:.\sd/ff.c     **** 					/* Clean-up stretched table */
1148:.\sd/ff.c     **** 					if (move_window(dj->fs, 0)) return FR_DISK_ERR;	/* Flush active window */
1149:.\sd/ff.c     **** 					mem_set(dj->fs->win, 0, SS(dj->fs));			/* Clear window buffer */
1150:.\sd/ff.c     **** 					dj->fs->winsect = clust2sect(dj->fs, clst);	/* Cluster start sector */
1151:.\sd/ff.c     **** 					for (c = 0; c < dj->fs->csize; c++) {		/* Fill the new cluster with 0 */
1152:.\sd/ff.c     **** 						dj->fs->wflag = 1;
1153:.\sd/ff.c     **** 						if (move_window(dj->fs, 0)) return FR_DISK_ERR;
1154:.\sd/ff.c     **** 						dj->fs->winsect++;
1155:.\sd/ff.c     **** 					}
1156:.\sd/ff.c     **** 					dj->fs->winsect -= c;						/* Rewind window address */
1157:.\sd/ff.c     **** #else
1158:.\sd/ff.c     **** 					return FR_NO_FILE;			/* Report EOT */
1159:.\sd/ff.c     **** #endif
1160:.\sd/ff.c     **** 				}
1161:.\sd/ff.c     **** 				dj->clust = clst;				/* Initialize data for new cluster */
1162:.\sd/ff.c     **** 				dj->sect = clust2sect(dj->fs, clst);
1163:.\sd/ff.c     **** 			}
1164:.\sd/ff.c     **** 		}
1165:.\sd/ff.c     **** 	}
1166:.\sd/ff.c     **** 
1167:.\sd/ff.c     **** 	dj->index = i;
1168:.\sd/ff.c     **** 	dj->dir = dj->fs->win + (i % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;
1169:.\sd/ff.c     **** 
1170:.\sd/ff.c     **** 	return FR_OK;
1171:.\sd/ff.c     **** }
1172:.\sd/ff.c     **** 
1173:.\sd/ff.c     **** 
1174:.\sd/ff.c     **** 
1175:.\sd/ff.c     **** 
1176:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1177:.\sd/ff.c     **** /* LFN handling - Test/Pick/Fit an LFN segment from/to directory entry   */
1178:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1179:.\sd/ff.c     **** #if _USE_LFN
1180:.\sd/ff.c     **** static
1181:.\sd/ff.c     **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN chars in the directory 
1182:.\sd/ff.c     **** 
1183:.\sd/ff.c     **** 
1184:.\sd/ff.c     **** static
1185:.\sd/ff.c     **** int cmp_lfn (			/* 1:Matched, 0:Not matched */
1186:.\sd/ff.c     **** 	WCHAR *lfnbuf,		/* Pointer to the LFN to be compared */
1187:.\sd/ff.c     **** 	BYTE *dir			/* Pointer to the directory entry containing a part of LFN */
1188:.\sd/ff.c     **** )
1189:.\sd/ff.c     **** {
1190:.\sd/ff.c     **** 	UINT i, s;
1191:.\sd/ff.c     **** 	WCHAR wc, uc;
1192:.\sd/ff.c     **** 
1193:.\sd/ff.c     **** 
1194:.\sd/ff.c     **** 	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
1195:.\sd/ff.c     **** 	s = 0; wc = 1;
1196:.\sd/ff.c     **** 	do {
1197:.\sd/ff.c     **** 		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
1198:.\sd/ff.c     **** 		if (wc) {	/* Last char has not been processed */
1199:.\sd/ff.c     **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
1200:.\sd/ff.c     **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
1201:.\sd/ff.c     **** 				return 0;				/* Not matched */
1202:.\sd/ff.c     **** 		} else {
1203:.\sd/ff.c     **** 			if (uc != 0xFFFF) return 0;	/* Check filler */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 25


1204:.\sd/ff.c     **** 		}
1205:.\sd/ff.c     **** 	} while (++s < 13);				/* Repeat until all chars in the entry are checked */
1206:.\sd/ff.c     **** 
1207:.\sd/ff.c     **** 	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
1208:.\sd/ff.c     **** 		return 0;
1209:.\sd/ff.c     **** 
1210:.\sd/ff.c     **** 	return 1;						/* The part of LFN matched */
1211:.\sd/ff.c     **** }
1212:.\sd/ff.c     **** 
1213:.\sd/ff.c     **** 
1214:.\sd/ff.c     **** 
1215:.\sd/ff.c     **** static
1216:.\sd/ff.c     **** int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
1217:.\sd/ff.c     **** 	WCHAR *lfnbuf,		/* Pointer to the Unicode-LFN buffer */
1218:.\sd/ff.c     **** 	BYTE *dir			/* Pointer to the directory entry */
1219:.\sd/ff.c     **** )
1220:.\sd/ff.c     **** {
1221:.\sd/ff.c     **** 	UINT i, s;
1222:.\sd/ff.c     **** 	WCHAR wc, uc;
1223:.\sd/ff.c     **** 
1224:.\sd/ff.c     **** 
1225:.\sd/ff.c     **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1226:.\sd/ff.c     **** 
1227:.\sd/ff.c     **** 	s = 0; wc = 1;
1228:.\sd/ff.c     **** 	do {
1229:.\sd/ff.c     **** 		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
1230:.\sd/ff.c     **** 		if (wc) {	/* Last char has not been processed */
1231:.\sd/ff.c     **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1232:.\sd/ff.c     **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1233:.\sd/ff.c     **** 		} else {
1234:.\sd/ff.c     **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1235:.\sd/ff.c     **** 		}
1236:.\sd/ff.c     **** 	} while (++s < 13);						/* Read all character in the entry */
1237:.\sd/ff.c     **** 
1238:.\sd/ff.c     **** 	if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
1239:.\sd/ff.c     **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1240:.\sd/ff.c     **** 		lfnbuf[i] = 0;
1241:.\sd/ff.c     **** 	}
1242:.\sd/ff.c     **** 
1243:.\sd/ff.c     **** 	return 1;
1244:.\sd/ff.c     **** }
1245:.\sd/ff.c     **** 
1246:.\sd/ff.c     **** 
1247:.\sd/ff.c     **** #if !_FS_READONLY
1248:.\sd/ff.c     **** static
1249:.\sd/ff.c     **** void fit_lfn (
1250:.\sd/ff.c     **** 	const WCHAR *lfnbuf,	/* Pointer to the LFN buffer */
1251:.\sd/ff.c     **** 	BYTE *dir,				/* Pointer to the directory entry */
1252:.\sd/ff.c     **** 	BYTE ord,				/* LFN order (1-20) */
1253:.\sd/ff.c     **** 	BYTE sum				/* SFN sum */
1254:.\sd/ff.c     **** )
1255:.\sd/ff.c     **** {
1256:.\sd/ff.c     **** 	UINT i, s;
1257:.\sd/ff.c     **** 	WCHAR wc;
1258:.\sd/ff.c     **** 
1259:.\sd/ff.c     **** 
1260:.\sd/ff.c     **** 	dir[LDIR_Chksum] = sum;			/* Set check sum */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 26


1261:.\sd/ff.c     **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1262:.\sd/ff.c     **** 	dir[LDIR_Type] = 0;
1263:.\sd/ff.c     **** 	ST_WORD(dir+LDIR_FstClusLO, 0);
1264:.\sd/ff.c     **** 
1265:.\sd/ff.c     **** 	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
1266:.\sd/ff.c     **** 	s = wc = 0;
1267:.\sd/ff.c     **** 	do {
1268:.\sd/ff.c     **** 		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective char */
1269:.\sd/ff.c     **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
1270:.\sd/ff.c     **** 		if (!wc) wc = 0xFFFF;		/* Padding chars following last char */
1271:.\sd/ff.c     **** 	} while (++s < 13);
1272:.\sd/ff.c     **** 	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
1273:.\sd/ff.c     **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1274:.\sd/ff.c     **** }
1275:.\sd/ff.c     **** 
1276:.\sd/ff.c     **** #endif
1277:.\sd/ff.c     **** #endif
1278:.\sd/ff.c     **** 
1279:.\sd/ff.c     **** 
1280:.\sd/ff.c     **** 
1281:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1282:.\sd/ff.c     **** /* Create numbered name                                                  */
1283:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1284:.\sd/ff.c     **** #if _USE_LFN
1285:.\sd/ff.c     **** void gen_numname (
1286:.\sd/ff.c     **** 	BYTE *dst,			/* Pointer to generated SFN */
1287:.\sd/ff.c     **** 	const BYTE *src,	/* Pointer to source SFN to be modified */
1288:.\sd/ff.c     **** 	const WCHAR *lfn,	/* Pointer to LFN */
1289:.\sd/ff.c     **** 	WORD seq			/* Sequence number */
1290:.\sd/ff.c     **** )
1291:.\sd/ff.c     **** {
1292:.\sd/ff.c     **** 	BYTE ns[8], c;
1293:.\sd/ff.c     **** 	UINT i, j;
1294:.\sd/ff.c     **** 
1295:.\sd/ff.c     **** 
1296:.\sd/ff.c     **** 	mem_cpy(dst, src, 11);
1297:.\sd/ff.c     **** 
1298:.\sd/ff.c     **** 	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
1299:.\sd/ff.c     **** 		do seq = (seq >> 1) + (seq << 15) + (WORD)*lfn++; while (*lfn);
1300:.\sd/ff.c     **** 	}
1301:.\sd/ff.c     **** 
1302:.\sd/ff.c     **** 	/* itoa (hexdecimal) */
1303:.\sd/ff.c     **** 	i = 7;
1304:.\sd/ff.c     **** 	do {
1305:.\sd/ff.c     **** 		c = (seq % 16) + '0';
1306:.\sd/ff.c     **** 		if (c > '9') c += 7;
1307:.\sd/ff.c     **** 		ns[i--] = c;
1308:.\sd/ff.c     **** 		seq /= 16;
1309:.\sd/ff.c     **** 	} while (seq);
1310:.\sd/ff.c     **** 	ns[i] = '~';
1311:.\sd/ff.c     **** 
1312:.\sd/ff.c     **** 	/* Append the number */
1313:.\sd/ff.c     **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1314:.\sd/ff.c     **** 		if (IsDBCS1(dst[j])) {
1315:.\sd/ff.c     **** 			if (j == i - 1) break;
1316:.\sd/ff.c     **** 			j++;
1317:.\sd/ff.c     **** 		}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 27


1318:.\sd/ff.c     **** 	}
1319:.\sd/ff.c     **** 	do {
1320:.\sd/ff.c     **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1321:.\sd/ff.c     **** 	} while (j < 8);
1322:.\sd/ff.c     **** }
1323:.\sd/ff.c     **** #endif
1324:.\sd/ff.c     **** 
1325:.\sd/ff.c     **** 
1326:.\sd/ff.c     **** 
1327:.\sd/ff.c     **** 
1328:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1329:.\sd/ff.c     **** /* Calculate sum of an SFN                                               */
1330:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1331:.\sd/ff.c     **** #if _USE_LFN
1332:.\sd/ff.c     **** static
1333:.\sd/ff.c     **** BYTE sum_sfn (
1334:.\sd/ff.c     **** 	const BYTE *dir		/* Ptr to directory entry */
1335:.\sd/ff.c     **** )
1336:.\sd/ff.c     **** {
1337:.\sd/ff.c     **** 	BYTE sum = 0;
1338:.\sd/ff.c     **** 	UINT n = 11;
1339:.\sd/ff.c     **** 
1340:.\sd/ff.c     **** 	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
1341:.\sd/ff.c     **** 	return sum;
1342:.\sd/ff.c     **** }
1343:.\sd/ff.c     **** #endif
1344:.\sd/ff.c     **** 
1345:.\sd/ff.c     **** 
1346:.\sd/ff.c     **** 
1347:.\sd/ff.c     **** 
1348:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1349:.\sd/ff.c     **** /* Directory handling - Find an object in the directory                  */
1350:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1351:.\sd/ff.c     **** 
1352:.\sd/ff.c     **** static
1353:.\sd/ff.c     **** FRESULT dir_find (
1354:.\sd/ff.c     **** 	DIR *dj			/* Pointer to the directory object linked to the file name */
1355:.\sd/ff.c     **** )
1356:.\sd/ff.c     **** {
1357:.\sd/ff.c     **** 	FRESULT res;
1358:.\sd/ff.c     **** 	BYTE c, *dir;
1359:.\sd/ff.c     **** #if _USE_LFN
1360:.\sd/ff.c     **** 	BYTE a, ord, sum;
1361:.\sd/ff.c     **** #endif
1362:.\sd/ff.c     **** 
1363:.\sd/ff.c     **** 	res = dir_sdi(dj, 0);			/* Rewind directory object */
1364:.\sd/ff.c     **** 	if (res != FR_OK) return res;
1365:.\sd/ff.c     **** 
1366:.\sd/ff.c     **** #if _USE_LFN
1367:.\sd/ff.c     **** 	ord = sum = 0xFF;
1368:.\sd/ff.c     **** #endif
1369:.\sd/ff.c     **** 	do {
1370:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1371:.\sd/ff.c     **** 		if (res != FR_OK) break;
1372:.\sd/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
1373:.\sd/ff.c     **** 		c = dir[DIR_Name];
1374:.\sd/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 28


1375:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1376:.\sd/ff.c     **** 		a = dir[DIR_Attr] & AM_MASK;
1377:.\sd/ff.c     **** 		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
1378:.\sd/ff.c     **** 			ord = 0xFF;
1379:.\sd/ff.c     **** 		} else {
1380:.\sd/ff.c     **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1381:.\sd/ff.c     **** 				if (dj->lfn) {
1382:.\sd/ff.c     **** 					if (c & LLE) {		/* Is it start of LFN sequence? */
1383:.\sd/ff.c     **** 						sum = dir[LDIR_Chksum];
1384:.\sd/ff.c     **** 						c &= ~LLE; ord = c;	/* LFN start order */
1385:.\sd/ff.c     **** 						dj->lfn_idx = dj->index;
1386:.\sd/ff.c     **** 					}
1387:.\sd/ff.c     **** 					/* Check validity of the LFN entry and compare it with given name */
1388:.\sd/ff.c     **** 					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dj->lfn, dir)) ? ord - 1 : 0xFF;
1389:.\sd/ff.c     **** 				}
1390:.\sd/ff.c     **** 			} else {					/* An SFN entry is found */
1391:.\sd/ff.c     **** 				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
1392:.\sd/ff.c     **** 				ord = 0xFF; dj->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1393:.\sd/ff.c     **** 				if (!(dj->fn[NS] & NS_LOSS) && !mem_cmp(dir, dj->fn, 11)) break;	/* SFN matched? */
1394:.\sd/ff.c     **** 			}
1395:.\sd/ff.c     **** 		}
1396:.\sd/ff.c     **** #else		/* Non LFN configuration */
1397:.\sd/ff.c     **** 		if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dj->fn, 11)) /* Is it a valid entry? */
1398:.\sd/ff.c     **** 			break;
1399:.\sd/ff.c     **** #endif
1400:.\sd/ff.c     **** 		res = dir_next(dj, 0);		/* Next entry */
1401:.\sd/ff.c     **** 	} while (res == FR_OK);
1402:.\sd/ff.c     **** 
1403:.\sd/ff.c     **** 	return res;
1404:.\sd/ff.c     **** }
1405:.\sd/ff.c     **** 
1406:.\sd/ff.c     **** 
1407:.\sd/ff.c     **** 
1408:.\sd/ff.c     **** 
1409:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1410:.\sd/ff.c     **** /* Read an object from the directory                                     */
1411:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1412:.\sd/ff.c     **** #if _FS_MINIMIZE <= 1
1413:.\sd/ff.c     **** static
1414:.\sd/ff.c     **** FRESULT dir_read (
1415:.\sd/ff.c     **** 	DIR *dj			/* Pointer to the directory object that pointing the entry to be read */
1416:.\sd/ff.c     **** )
1417:.\sd/ff.c     **** {
1418:.\sd/ff.c     **** 	FRESULT res;
1419:.\sd/ff.c     **** 	BYTE c, *dir;
1420:.\sd/ff.c     **** #if _USE_LFN
1421:.\sd/ff.c     **** 	BYTE a, ord = 0xFF, sum = 0xFF;
1422:.\sd/ff.c     **** #endif
1423:.\sd/ff.c     **** 
1424:.\sd/ff.c     **** 	res = FR_NO_FILE;
1425:.\sd/ff.c     **** 	while (dj->sect) {
1426:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1427:.\sd/ff.c     **** 		if (res != FR_OK) break;
1428:.\sd/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
1429:.\sd/ff.c     **** 		c = dir[DIR_Name];
1430:.\sd/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1431:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 29


1432:.\sd/ff.c     **** 		a = dir[DIR_Attr] & AM_MASK;
1433:.\sd/ff.c     **** 		if (c == DDE || (!_FS_RPATH && c == '.') || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without 
1434:.\sd/ff.c     **** 			ord = 0xFF;
1435:.\sd/ff.c     **** 		} else {
1436:.\sd/ff.c     **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1437:.\sd/ff.c     **** 				if (c & LLE) {			/* Is it start of LFN sequence? */
1438:.\sd/ff.c     **** 					sum = dir[LDIR_Chksum];
1439:.\sd/ff.c     **** 					c &= ~LLE; ord = c;
1440:.\sd/ff.c     **** 					dj->lfn_idx = dj->index;
1441:.\sd/ff.c     **** 				}
1442:.\sd/ff.c     **** 				/* Check LFN validity and capture it */
1443:.\sd/ff.c     **** 				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dj->lfn, dir)) ? ord - 1 : 0xFF;
1444:.\sd/ff.c     **** 			} else {					/* An SFN entry is found */
1445:.\sd/ff.c     **** 				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
1446:.\sd/ff.c     **** 					dj->lfn_idx = 0xFFFF;		/* It has no LFN. */
1447:.\sd/ff.c     **** 				break;
1448:.\sd/ff.c     **** 			}
1449:.\sd/ff.c     **** 		}
1450:.\sd/ff.c     **** #else		/* Non LFN configuration */
1451:.\sd/ff.c     **** 		if (c != DDE && (_FS_RPATH || c != '.') && !(dir[DIR_Attr] & AM_VOL))	/* Is it a valid entry? */
1452:.\sd/ff.c     **** 			break;
1453:.\sd/ff.c     **** #endif
1454:.\sd/ff.c     **** 		res = dir_next(dj, 0);				/* Next entry */
1455:.\sd/ff.c     **** 		if (res != FR_OK) break;
1456:.\sd/ff.c     **** 	}
1457:.\sd/ff.c     **** 
1458:.\sd/ff.c     **** 	if (res != FR_OK) dj->sect = 0;
1459:.\sd/ff.c     **** 
1460:.\sd/ff.c     **** 	return res;
1461:.\sd/ff.c     **** }
1462:.\sd/ff.c     **** #endif
1463:.\sd/ff.c     **** 
1464:.\sd/ff.c     **** 
1465:.\sd/ff.c     **** 
1466:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1467:.\sd/ff.c     **** /* Register an object to the directory                                   */
1468:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1469:.\sd/ff.c     **** #if !_FS_READONLY
1470:.\sd/ff.c     **** static
1471:.\sd/ff.c     **** FRESULT dir_register (	/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_D
1472:.\sd/ff.c     **** 	DIR *dj				/* Target directory with object name to be created */
1473:.\sd/ff.c     **** )
1474:.\sd/ff.c     **** {
1475:.\sd/ff.c     **** 	FRESULT res;
1476:.\sd/ff.c     **** 	BYTE c, *dir;
1477:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1478:.\sd/ff.c     **** 	WORD n, ne, is;
1479:.\sd/ff.c     **** 	BYTE sn[12], *fn, sum;
1480:.\sd/ff.c     **** 	WCHAR *lfn;
1481:.\sd/ff.c     **** 
1482:.\sd/ff.c     **** 
1483:.\sd/ff.c     **** 	fn = dj->fn; lfn = dj->lfn;
1484:.\sd/ff.c     **** 	mem_cpy(sn, fn, 12);
1485:.\sd/ff.c     **** 
1486:.\sd/ff.c     **** 	if (_FS_RPATH && (sn[NS] & NS_DOT))		/* Cannot create dot entry */
1487:.\sd/ff.c     **** 		return FR_INVALID_NAME;
1488:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 30


1489:.\sd/ff.c     **** 	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
1490:.\sd/ff.c     **** 		fn[NS] = 0; dj->lfn = 0;			/* Find only SFN */
1491:.\sd/ff.c     **** 		for (n = 1; n < 100; n++) {
1492:.\sd/ff.c     **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
1493:.\sd/ff.c     **** 			res = dir_find(dj);				/* Check if the name collides with existing SFN */
1494:.\sd/ff.c     **** 			if (res != FR_OK) break;
1495:.\sd/ff.c     **** 		}
1496:.\sd/ff.c     **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
1497:.\sd/ff.c     **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
1498:.\sd/ff.c     **** 		fn[NS] = sn[NS]; dj->lfn = lfn;
1499:.\sd/ff.c     **** 	}
1500:.\sd/ff.c     **** 
1501:.\sd/ff.c     **** 	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, reserve an SFN + LFN entries. */
1502:.\sd/ff.c     **** 		for (ne = 0; lfn[ne]; ne++) ;
1503:.\sd/ff.c     **** 		ne = (ne + 25) / 13;
1504:.\sd/ff.c     **** 	} else {						/* Otherwise reserve only an SFN entry. */
1505:.\sd/ff.c     **** 		ne = 1;
1506:.\sd/ff.c     **** 	}
1507:.\sd/ff.c     **** 
1508:.\sd/ff.c     **** 	/* Reserve contiguous entries */
1509:.\sd/ff.c     **** 	res = dir_sdi(dj, 0);
1510:.\sd/ff.c     **** 	if (res != FR_OK) return res;
1511:.\sd/ff.c     **** 	n = is = 0;
1512:.\sd/ff.c     **** 	do {
1513:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1514:.\sd/ff.c     **** 		if (res != FR_OK) break;
1515:.\sd/ff.c     **** 		c = *dj->dir;				/* Check the entry status */
1516:.\sd/ff.c     **** 		if (c == DDE || c == 0) {	/* Is it a blank entry? */
1517:.\sd/ff.c     **** 			if (n == 0) is = dj->index;	/* First index of the contiguous entry */
1518:.\sd/ff.c     **** 			if (++n == ne) break;	/* A contiguous entry that required count is found */
1519:.\sd/ff.c     **** 		} else {
1520:.\sd/ff.c     **** 			n = 0;					/* Not a blank entry. Restart to search */
1521:.\sd/ff.c     **** 		}
1522:.\sd/ff.c     **** 		res = dir_next(dj, 1);		/* Next entry with table stretch */
1523:.\sd/ff.c     **** 	} while (res == FR_OK);
1524:.\sd/ff.c     **** 
1525:.\sd/ff.c     **** 	if (res == FR_OK && ne > 1) {	/* Initialize LFN entry if needed */
1526:.\sd/ff.c     **** 		res = dir_sdi(dj, is);
1527:.\sd/ff.c     **** 		if (res == FR_OK) {
1528:.\sd/ff.c     **** 			sum = sum_sfn(dj->fn);	/* Sum of the SFN tied to the LFN */
1529:.\sd/ff.c     **** 			ne--;
1530:.\sd/ff.c     **** 			do {					/* Store LFN entries in bottom first */
1531:.\sd/ff.c     **** 				res = move_window(dj->fs, dj->sect);
1532:.\sd/ff.c     **** 				if (res != FR_OK) break;
1533:.\sd/ff.c     **** 				fit_lfn(dj->lfn, dj->dir, (BYTE)ne, sum);
1534:.\sd/ff.c     **** 				dj->fs->wflag = 1;
1535:.\sd/ff.c     **** 				res = dir_next(dj, 0);	/* Next entry */
1536:.\sd/ff.c     **** 			} while (res == FR_OK && --ne);
1537:.\sd/ff.c     **** 		}
1538:.\sd/ff.c     **** 	}
1539:.\sd/ff.c     **** 
1540:.\sd/ff.c     **** #else	/* Non LFN configuration */
1541:.\sd/ff.c     **** 	res = dir_sdi(dj, 0);
1542:.\sd/ff.c     **** 	if (res == FR_OK) {
1543:.\sd/ff.c     **** 		do {	/* Find a blank entry for the SFN */
1544:.\sd/ff.c     **** 			res = move_window(dj->fs, dj->sect);
1545:.\sd/ff.c     **** 			if (res != FR_OK) break;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 31


1546:.\sd/ff.c     **** 			c = *dj->dir;
1547:.\sd/ff.c     **** 			if (c == DDE || c == 0) break;	/* Is it a blank entry? */
1548:.\sd/ff.c     **** 			res = dir_next(dj, 1);			/* Next entry with table stretch */
1549:.\sd/ff.c     **** 		} while (res == FR_OK);
1550:.\sd/ff.c     **** 	}
1551:.\sd/ff.c     **** #endif
1552:.\sd/ff.c     **** 
1553:.\sd/ff.c     **** 	if (res == FR_OK) {		/* Initialize the SFN entry */
1554:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1555:.\sd/ff.c     **** 		if (res == FR_OK) {
1556:.\sd/ff.c     **** 			dir = dj->dir;
1557:.\sd/ff.c     **** 			mem_set(dir, 0, SZ_DIR);	/* Clean the entry */
1558:.\sd/ff.c     **** 			mem_cpy(dir, dj->fn, 11);	/* Put SFN */
1559:.\sd/ff.c     **** #if _USE_LFN
1560:.\sd/ff.c     **** 			dir[DIR_NTres] = *(dj->fn+NS) & (NS_BODY | NS_EXT);	/* Put NT flag */
1561:.\sd/ff.c     **** #endif
1562:.\sd/ff.c     **** 			dj->fs->wflag = 1;
1563:.\sd/ff.c     **** 		}
1564:.\sd/ff.c     **** 	}
1565:.\sd/ff.c     **** 
1566:.\sd/ff.c     **** 	return res;
1567:.\sd/ff.c     **** }
1568:.\sd/ff.c     **** #endif /* !_FS_READONLY */
1569:.\sd/ff.c     **** 
1570:.\sd/ff.c     **** 
1571:.\sd/ff.c     **** 
1572:.\sd/ff.c     **** 
1573:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1574:.\sd/ff.c     **** /* Remove an object from the directory                                   */
1575:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1576:.\sd/ff.c     **** #if !_FS_READONLY && !_FS_MINIMIZE
1577:.\sd/ff.c     **** static
1578:.\sd/ff.c     **** FRESULT dir_remove (	/* FR_OK: Successful, FR_DISK_ERR: A disk error */
1579:.\sd/ff.c     **** 	DIR *dj				/* Directory object pointing the entry to be removed */
1580:.\sd/ff.c     **** )
1581:.\sd/ff.c     **** {
1582:.\sd/ff.c     **** 	FRESULT res;
1583:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1584:.\sd/ff.c     **** 	WORD i;
1585:.\sd/ff.c     **** 
1586:.\sd/ff.c     **** 	i = dj->index;	/* SFN index */
1587:.\sd/ff.c     **** 	res = dir_sdi(dj, (WORD)((dj->lfn_idx == 0xFFFF) ? i : dj->lfn_idx));	/* Goto the SFN or top of th
1588:.\sd/ff.c     **** 	if (res == FR_OK) {
1589:.\sd/ff.c     **** 		do {
1590:.\sd/ff.c     **** 			res = move_window(dj->fs, dj->sect);
1591:.\sd/ff.c     **** 			if (res != FR_OK) break;
1592:.\sd/ff.c     **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
1593:.\sd/ff.c     **** 			dj->fs->wflag = 1;
1594:.\sd/ff.c     **** 			if (dj->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
1595:.\sd/ff.c     **** 			res = dir_next(dj, 0);		/* Next entry */
1596:.\sd/ff.c     **** 		} while (res == FR_OK);
1597:.\sd/ff.c     **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
1598:.\sd/ff.c     **** 	}
1599:.\sd/ff.c     **** 
1600:.\sd/ff.c     **** #else			/* Non LFN configuration */
1601:.\sd/ff.c     **** 	res = dir_sdi(dj, dj->index);
1602:.\sd/ff.c     **** 	if (res == FR_OK) {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 32


1603:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1604:.\sd/ff.c     **** 		if (res == FR_OK) {
1605:.\sd/ff.c     **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
1606:.\sd/ff.c     **** 			dj->fs->wflag = 1;
1607:.\sd/ff.c     **** 		}
1608:.\sd/ff.c     **** 	}
1609:.\sd/ff.c     **** #endif
1610:.\sd/ff.c     **** 
1611:.\sd/ff.c     **** 	return res;
1612:.\sd/ff.c     **** }
1613:.\sd/ff.c     **** #endif /* !_FS_READONLY */
1614:.\sd/ff.c     **** 
1615:.\sd/ff.c     **** 
1616:.\sd/ff.c     **** 
1617:.\sd/ff.c     **** 
1618:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1619:.\sd/ff.c     **** /* Pick a segment and create the object name in directory form           */
1620:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1621:.\sd/ff.c     **** 
1622:.\sd/ff.c     **** static
1623:.\sd/ff.c     **** FRESULT create_name (
1624:.\sd/ff.c     **** 	DIR *dj,			/* Pointer to the directory object */
1625:.\sd/ff.c     **** 	const TCHAR **path	/* Pointer to pointer to the segment in the path string */
1626:.\sd/ff.c     **** )
1627:.\sd/ff.c     **** {
1628:.\sd/ff.c     **** #ifdef _EXCVT
1629:.\sd/ff.c     **** 	static const BYTE excvt[] = _EXCVT;	/* Upper conversion table for extended chars */
1630:.\sd/ff.c     **** #endif
1631:.\sd/ff.c     **** 
1632:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1633:.\sd/ff.c     **** 	BYTE b, cf;
1634:.\sd/ff.c     **** 	WCHAR w, *lfn;
1635:.\sd/ff.c     **** 	UINT i, ni, si, di;
1636:.\sd/ff.c     **** 	const TCHAR *p;
1637:.\sd/ff.c     **** 
1638:.\sd/ff.c     **** 	/* Create LFN in Unicode */
1639:.\sd/ff.c     **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1640:.\sd/ff.c     **** 	lfn = dj->lfn;
1641:.\sd/ff.c     **** 	si = di = 0;
1642:.\sd/ff.c     **** 	for (;;) {
1643:.\sd/ff.c     **** 		w = p[si++];					/* Get a character */
1644:.\sd/ff.c     **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
1645:.\sd/ff.c     **** 		if (di >= _MAX_LFN)				/* Reject too LONG_ name */
1646:.\sd/ff.c     **** 			return FR_INVALID_NAME;
1647:.\sd/ff.c     **** #if !_LFN_UNICODE
1648:.\sd/ff.c     **** 		w &= 0xFF;
1649:.\sd/ff.c     **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1650:.\sd/ff.c     **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
1651:.\sd/ff.c     **** 			if (!IsDBCS2(b))
1652:.\sd/ff.c     **** 				return FR_INVALID_NAME;	/* Reject invalid sequence */
1653:.\sd/ff.c     **** 			w = (w << 8) + b;			/* Create a DBC */
1654:.\sd/ff.c     **** 		}
1655:.\sd/ff.c     **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
1656:.\sd/ff.c     **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
1657:.\sd/ff.c     **** #endif
1658:.\sd/ff.c     **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal chars for LFN */
1659:.\sd/ff.c     **** 			return FR_INVALID_NAME;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 33


1660:.\sd/ff.c     **** 		lfn[di++] = w;					/* Store the Unicode char */
1661:.\sd/ff.c     **** 	}
1662:.\sd/ff.c     **** 	*path = &p[si];						/* Return pointer to the next segment */
1663:.\sd/ff.c     **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1664:.\sd/ff.c     **** #if _FS_RPATH
1665:.\sd/ff.c     **** 	if ((di == 1 && lfn[di-1] == '.') || /* Is this a dot entry? */
1666:.\sd/ff.c     **** 		(di == 2 && lfn[di-1] == '.' && lfn[di-2] == '.')) {
1667:.\sd/ff.c     **** 		lfn[di] = 0;
1668:.\sd/ff.c     **** 		for (i = 0; i < 11; i++)
1669:.\sd/ff.c     **** 			dj->fn[i] = (i < di) ? '.' : ' ';
1670:.\sd/ff.c     **** 		dj->fn[i] = cf | NS_DOT;		/* This is a dot entry */
1671:.\sd/ff.c     **** 		return FR_OK;
1672:.\sd/ff.c     **** 	}
1673:.\sd/ff.c     **** #endif
1674:.\sd/ff.c     **** 	while (di) {						/* Strip trailing spaces and dots */
1675:.\sd/ff.c     **** 		w = lfn[di-1];
1676:.\sd/ff.c     **** 		if (w != ' ' && w != '.') break;
1677:.\sd/ff.c     **** 		di--;
1678:.\sd/ff.c     **** 	}
1679:.\sd/ff.c     **** 	if (!di) return FR_INVALID_NAME;	/* Reject nul string */
1680:.\sd/ff.c     **** 
1681:.\sd/ff.c     **** 	lfn[di] = 0;						/* LFN is created */
1682:.\sd/ff.c     **** 
1683:.\sd/ff.c     **** 	/* Create SFN in directory form */
1684:.\sd/ff.c     **** 	mem_set(dj->fn, ' ', 11);
1685:.\sd/ff.c     **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
1686:.\sd/ff.c     **** 	if (si) cf |= NS_LOSS | NS_LFN;
1687:.\sd/ff.c     **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
1688:.\sd/ff.c     **** 
1689:.\sd/ff.c     **** 	b = i = 0; ni = 8;
1690:.\sd/ff.c     **** 	for (;;) {
1691:.\sd/ff.c     **** 		w = lfn[si++];					/* Get an LFN char */
1692:.\sd/ff.c     **** 		if (!w) break;					/* Break on end of the LFN */
1693:.\sd/ff.c     **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
1694:.\sd/ff.c     **** 			cf |= NS_LOSS | NS_LFN; continue;
1695:.\sd/ff.c     **** 		}
1696:.\sd/ff.c     **** 
1697:.\sd/ff.c     **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
1698:.\sd/ff.c     **** 			if (ni == 11) {				/* LONG_ extension */
1699:.\sd/ff.c     **** 				cf |= NS_LOSS | NS_LFN; break;
1700:.\sd/ff.c     **** 			}
1701:.\sd/ff.c     **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
1702:.\sd/ff.c     **** 			if (si > di) break;			/* No extension */
1703:.\sd/ff.c     **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
1704:.\sd/ff.c     **** 			b <<= 2; continue;
1705:.\sd/ff.c     **** 		}
1706:.\sd/ff.c     **** 
1707:.\sd/ff.c     **** 		if (w >= 0x80) {				/* Non ASCII char */
1708:.\sd/ff.c     **** #ifdef _EXCVT
1709:.\sd/ff.c     **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
1710:.\sd/ff.c     **** 			if (w) w = excvt[w - 0x80];	/* Convert extended char to upper (SBCS) */
1711:.\sd/ff.c     **** #else
1712:.\sd/ff.c     **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
1713:.\sd/ff.c     **** #endif
1714:.\sd/ff.c     **** 			cf |= NS_LFN;				/* Force create LFN entry */
1715:.\sd/ff.c     **** 		}
1716:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 34


1717:.\sd/ff.c     **** 		if (_DF1S && w >= 0x100) {		/* Double byte char (always false on SBCS cfg) */
1718:.\sd/ff.c     **** 			if (i >= ni - 1) {
1719:.\sd/ff.c     **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
1720:.\sd/ff.c     **** 			}
1721:.\sd/ff.c     **** 			dj->fn[i++] = (BYTE)(w >> 8);
1722:.\sd/ff.c     **** 		} else {						/* Single byte char */
1723:.\sd/ff.c     **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal chars for SFN */
1724:.\sd/ff.c     **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
1725:.\sd/ff.c     **** 			} else {
1726:.\sd/ff.c     **** 				if (IsUpper(w)) {		/* ASCII large capital */
1727:.\sd/ff.c     **** 					b |= 2;
1728:.\sd/ff.c     **** 				} else {
1729:.\sd/ff.c     **** 					if (IsLower(w)) {	/* ASCII small capital */
1730:.\sd/ff.c     **** 						b |= 1; w -= 0x20;
1731:.\sd/ff.c     **** 					}
1732:.\sd/ff.c     **** 				}
1733:.\sd/ff.c     **** 			}
1734:.\sd/ff.c     **** 		}
1735:.\sd/ff.c     **** 		dj->fn[i++] = (BYTE)w;
1736:.\sd/ff.c     **** 	}
1737:.\sd/ff.c     **** 
1738:.\sd/ff.c     **** 	if (dj->fn[0] == DDE) dj->fn[0] = NDDE;	/* If the first char collides with deleted mark, replace i
1739:.\sd/ff.c     **** 
1740:.\sd/ff.c     **** 	if (ni == 8) b <<= 2;
1741:.\sd/ff.c     **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
1742:.\sd/ff.c     **** 		cf |= NS_LFN;
1743:.\sd/ff.c     **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended char, NT flags are create
1744:.\sd/ff.c     **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
1745:.\sd/ff.c     **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
1746:.\sd/ff.c     **** 	}
1747:.\sd/ff.c     **** 
1748:.\sd/ff.c     **** 	dj->fn[NS] = cf;	/* SFN is created */
1749:.\sd/ff.c     **** 
1750:.\sd/ff.c     **** 	return FR_OK;
1751:.\sd/ff.c     **** 
1752:.\sd/ff.c     **** 
1753:.\sd/ff.c     **** #else	/* Non-LFN configuration */
1754:.\sd/ff.c     **** 	BYTE b, c, d, *sfn;
1755:.\sd/ff.c     **** 	UINT ni, si, i;
1756:.\sd/ff.c     **** 	const char *p;
1757:.\sd/ff.c     **** 
1758:.\sd/ff.c     **** 	/* Create file name in directory form */
1759:.\sd/ff.c     **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1760:.\sd/ff.c     **** 	sfn = dj->fn;
1761:.\sd/ff.c     **** 	mem_set(sfn, ' ', 11);
1762:.\sd/ff.c     **** 	si = i = b = 0; ni = 8;
1763:.\sd/ff.c     **** #if _FS_RPATH
1764:.\sd/ff.c     **** 	if (p[si] == '.') { /* Is this a dot entry? */
1765:.\sd/ff.c     **** 		for (;;) {
1766:.\sd/ff.c     **** 			c = (BYTE)p[si++];
1767:.\sd/ff.c     **** 			if (c != '.' || si >= 3) break;
1768:.\sd/ff.c     **** 			sfn[i++] = c;
1769:.\sd/ff.c     **** 		}
1770:.\sd/ff.c     **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
1771:.\sd/ff.c     **** 		*path = &p[si];									/* Return pointer to the next segment */
1772:.\sd/ff.c     **** 		sfn[NS] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of path */
1773:.\sd/ff.c     **** 		return FR_OK;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 35


1774:.\sd/ff.c     **** 	}
1775:.\sd/ff.c     **** #endif
1776:.\sd/ff.c     **** 	for (;;) {
1777:.\sd/ff.c     **** 		c = (BYTE)p[si++];
1778:.\sd/ff.c     **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
1779:.\sd/ff.c     **** 		if (c == '.' || i >= ni) {
1780:.\sd/ff.c     **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
1781:.\sd/ff.c     **** 			i = 8; ni = 11;
1782:.\sd/ff.c     **** 			b <<= 2; continue;
1783:.\sd/ff.c     **** 		}
1784:.\sd/ff.c     **** 		if (c >= 0x80) {				/* Extended char? */
1785:.\sd/ff.c     **** 			b |= 3;						/* Eliminate NT flag */
1786:.\sd/ff.c     **** #ifdef _EXCVT
1787:.\sd/ff.c     **** 			c = excvt[c-0x80];			/* Upper conversion (SBCS) */
1788:.\sd/ff.c     **** #else
1789:.\sd/ff.c     **** #if !_DF1S	/* ASCII only cfg */
1790:.\sd/ff.c     **** 			return FR_INVALID_NAME;
1791:.\sd/ff.c     **** #endif
1792:.\sd/ff.c     **** #endif
1793:.\sd/ff.c     **** 		}
1794:.\sd/ff.c     **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1795:.\sd/ff.c     **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
1796:.\sd/ff.c     **** 			if (!IsDBCS2(d) || i >= ni - 1)	/* Reject invalid DBC */
1797:.\sd/ff.c     **** 				return FR_INVALID_NAME;
1798:.\sd/ff.c     **** 			sfn[i++] = c;
1799:.\sd/ff.c     **** 			sfn[i++] = d;
1800:.\sd/ff.c     **** 		} else {						/* Single byte code */
1801:.\sd/ff.c     **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
1802:.\sd/ff.c     **** 				return FR_INVALID_NAME;
1803:.\sd/ff.c     **** 			if (IsUpper(c)) {			/* ASCII large capital? */
1804:.\sd/ff.c     **** 				b |= 2;
1805:.\sd/ff.c     **** 			} else {
1806:.\sd/ff.c     **** 				if (IsLower(c)) {		/* ASCII small capital? */
1807:.\sd/ff.c     **** 					b |= 1; c -= 0x20;
1808:.\sd/ff.c     **** 				}
1809:.\sd/ff.c     **** 			}
1810:.\sd/ff.c     **** 			sfn[i++] = c;
1811:.\sd/ff.c     **** 		}
1812:.\sd/ff.c     **** 	}
1813:.\sd/ff.c     **** 	*path = &p[si];						/* Return pointer to the next segment */
1814:.\sd/ff.c     **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1815:.\sd/ff.c     **** 
1816:.\sd/ff.c     **** 	if (!i) return FR_INVALID_NAME;		/* Reject nul string */
1817:.\sd/ff.c     **** 	if (sfn[0] == DDE) sfn[0] = NDDE;	/* When first char collides with DDE, replace it with 0x05 */
1818:.\sd/ff.c     **** 
1819:.\sd/ff.c     **** 	if (ni == 8) b <<= 2;
1820:.\sd/ff.c     **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
1821:.\sd/ff.c     **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
1822:.\sd/ff.c     **** 
1823:.\sd/ff.c     **** 	sfn[NS] = c;		/* Store NT flag, File name is created */
1824:.\sd/ff.c     **** 
1825:.\sd/ff.c     **** 	return FR_OK;
1826:.\sd/ff.c     **** #endif
1827:.\sd/ff.c     **** }
1828:.\sd/ff.c     **** 
1829:.\sd/ff.c     **** 
1830:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 36


1831:.\sd/ff.c     **** 
1832:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1833:.\sd/ff.c     **** /* Get file information from directory entry                             */
1834:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1835:.\sd/ff.c     **** #if _FS_MINIMIZE <= 1
1836:.\sd/ff.c     **** static
1837:.\sd/ff.c     **** void get_fileinfo (		/* No return code */
1838:.\sd/ff.c     **** 	DIR *dj,			/* Pointer to the directory object */
1839:.\sd/ff.c     **** 	FILINFO *fno	 	/* Pointer to the file information to be filled */
1840:.\sd/ff.c     **** )
1841:.\sd/ff.c     **** {
 161              		.loc 1 1841 0
 162              		.cfi_startproc
 163              	.LVL15:
 164 0000 70B5     		push	{r4, r5, r6, lr}
 165              		.cfi_def_cfa_offset 16
 166              		.cfi_offset 4, -16
 167              		.cfi_offset 5, -12
 168              		.cfi_offset 6, -8
 169              		.cfi_offset 14, -4
1842:.\sd/ff.c     **** 	UINT i;
1843:.\sd/ff.c     **** 	BYTE nt, *dir;
1844:.\sd/ff.c     **** 	TCHAR *p, c;
1845:.\sd/ff.c     **** 
1846:.\sd/ff.c     **** 
1847:.\sd/ff.c     **** 	p = fno->fname;
 170              		.loc 1 1847 0
 171 0002 0C1C     		mov	r4, r1
1848:.\sd/ff.c     **** 	if (dj->sect) {
 172              		.loc 1 1848 0
 173 0004 0369     		ldr	r3, [r0, #16]
1847:.\sd/ff.c     **** 	if (dj->sect) {
 174              		.loc 1 1847 0
 175 0006 0934     		add	r4, r4, #9
 176              	.LVL16:
 177              		.loc 1 1848 0
 178 0008 002B     		cmp	r3, #0
 179 000a 37D0     		beq	.L28
1849:.\sd/ff.c     **** 		dir = dj->dir;
 180              		.loc 1 1849 0
 181 000c 4369     		ldr	r3, [r0, #20]
 182              	.LVL17:
1847:.\sd/ff.c     **** 	if (dj->sect) {
 183              		.loc 1 1847 0
 184 000e 221C     		mov	r2, r4
1850:.\sd/ff.c     **** 		nt = dir[DIR_NTres];		/* NT flag */
1851:.\sd/ff.c     **** 		for (i = 0; i < 8; i++) {	/* Copy name body */
 185              		.loc 1 1851 0
 186 0010 0020     		mov	r0, #0
 187              	.LVL18:
 188              	.L31:
1852:.\sd/ff.c     **** 			c = dir[i];
 189              		.loc 1 1852 0
 190 0012 1D5C     		ldrb	r5, [r3, r0]
 191              	.LVL19:
1853:.\sd/ff.c     **** 			if (c == ' ') break;
 192              		.loc 1 1853 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 37


 193 0014 202D     		cmp	r5, #32
 194 0016 07D0     		beq	.L29
1854:.\sd/ff.c     **** 			if (c == NDDE) c = (TCHAR)DDE;
 195              		.loc 1 1854 0
 196 0018 052D     		cmp	r5, #5
 197 001a 00D1     		bne	.L30
 198 001c E035     		add	r5, r5, #224
 199              	.LVL20:
 200              	.L30:
1855:.\sd/ff.c     **** 			if (_USE_LFN && (nt & NS_BODY) && IsUpper(c)) c += 0x20;
1856:.\sd/ff.c     **** #if _LFN_UNICODE
1857:.\sd/ff.c     **** 			if (IsDBCS1(c) && i < 7 && IsDBCS2(dir[i+1]))
1858:.\sd/ff.c     **** 				c = (c << 8) | dir[++i];
1859:.\sd/ff.c     **** 			c = ff_convert(c, 1);
1860:.\sd/ff.c     **** 			if (!c) c = '?';
1861:.\sd/ff.c     **** #endif
1862:.\sd/ff.c     **** 			*p++ = c;
 201              		.loc 1 1862 0 discriminator 2
 202 001e 2554     		strb	r5, [r4, r0]
1851:.\sd/ff.c     **** 			c = dir[i];
 203              		.loc 1 1851 0 discriminator 2
 204 0020 0130     		add	r0, r0, #1
 205              	.LVL21:
 206              		.loc 1 1862 0 discriminator 2
 207 0022 0132     		add	r2, r2, #1
 208              	.LVL22:
1851:.\sd/ff.c     **** 			c = dir[i];
 209              		.loc 1 1851 0 discriminator 2
 210 0024 0828     		cmp	r0, #8
 211 0026 F4D1     		bne	.L31
 212              	.L29:
1863:.\sd/ff.c     **** 		}
1864:.\sd/ff.c     **** 		if (dir[8] != ' ') {		/* Copy name extension */
 213              		.loc 1 1864 0
 214 0028 187A     		ldrb	r0, [r3, #8]
 215              	.LVL23:
 216 002a 2028     		cmp	r0, #32
 217 002c 0ED0     		beq	.L32
 218              	.LVL24:
1865:.\sd/ff.c     **** 			*p++ = '.';
 219              		.loc 1 1865 0
 220 002e 2E20     		mov	r0, #46
 221 0030 1070     		strb	r0, [r2]
 222              	.LVL25:
 223 0032 181C     		mov	r0, r3
 224 0034 151D     		add	r5, r2, #4
 225              	.LVL26:
 226 0036 0830     		add	r0, r0, #8
 227 0038 0132     		add	r2, r2, #1
 228              	.LVL27:
 229              	.L33:
1866:.\sd/ff.c     **** 			for (i = 8; i < 11; i++) {
1867:.\sd/ff.c     **** 				c = dir[i];
 230              		.loc 1 1867 0
 231 003a 0478     		ldrb	r4, [r0]
 232              	.LVL28:
1868:.\sd/ff.c     **** 				if (c == ' ') break;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 38


 233              		.loc 1 1868 0
 234 003c 202C     		cmp	r4, #32
 235 003e 05D0     		beq	.L32
1869:.\sd/ff.c     **** 				if (_USE_LFN && (nt & NS_EXT) && IsUpper(c)) c += 0x20;
1870:.\sd/ff.c     **** #if _LFN_UNICODE
1871:.\sd/ff.c     **** 				if (IsDBCS1(c) && i < 10 && IsDBCS2(dir[i+1]))
1872:.\sd/ff.c     **** 					c = (c << 8) | dir[++i];
1873:.\sd/ff.c     **** 				c = ff_convert(c, 1);
1874:.\sd/ff.c     **** 				if (!c) c = '?';
1875:.\sd/ff.c     **** #endif
1876:.\sd/ff.c     **** 				*p++ = c;
 236              		.loc 1 1876 0 discriminator 2
 237 0040 0132     		add	r2, r2, #1
 238              	.LVL29:
 239 0042 561E     		sub	r6, r2, #1
 240 0044 3470     		strb	r4, [r6]
 241 0046 0130     		add	r0, r0, #1
1866:.\sd/ff.c     **** 				c = dir[i];
 242              		.loc 1 1866 0 discriminator 2
 243 0048 AA42     		cmp	r2, r5
 244 004a F6D1     		bne	.L33
 245              	.LVL30:
 246              	.L32:
1877:.\sd/ff.c     **** 			}
1878:.\sd/ff.c     **** 		}
1879:.\sd/ff.c     **** 		fno->fattrib = dir[DIR_Attr];				/* Attribute */
 247              		.loc 1 1879 0
 248 004c D87A     		ldrb	r0, [r3, #11]
 249 004e 0872     		strb	r0, [r1, #8]
1880:.\sd/ff.c     **** 		fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
 250              		.loc 1 1880 0
 251 0050 D87F     		ldrb	r0, [r3, #31]
 252 0052 0406     		lsl	r4, r0, #24
 253 0054 987F     		ldrb	r0, [r3, #30]
 254 0056 0004     		lsl	r0, r0, #16
 255 0058 2043     		orr	r0, r4
 256 005a 1C7F     		ldrb	r4, [r3, #28]
 257 005c 2043     		orr	r0, r4
 258 005e 5C7F     		ldrb	r4, [r3, #29]
 259 0060 2402     		lsl	r4, r4, #8
 260 0062 2043     		orr	r0, r4
 261 0064 0860     		str	r0, [r1]
1881:.\sd/ff.c     **** 		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
 262              		.loc 1 1881 0
 263 0066 587E     		ldrb	r0, [r3, #25]
 264 0068 1C7E     		ldrb	r4, [r3, #24]
 265 006a 0002     		lsl	r0, r0, #8
 266 006c 2043     		orr	r0, r4
1882:.\sd/ff.c     **** 		fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
 267              		.loc 1 1882 0
 268 006e 141C     		mov	r4, r2
1881:.\sd/ff.c     **** 		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
 269              		.loc 1 1881 0
 270 0070 8880     		strh	r0, [r1, #4]
 271              		.loc 1 1882 0
 272 0072 D87D     		ldrb	r0, [r3, #23]
 273 0074 9B7D     		ldrb	r3, [r3, #22]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 39


 274              	.LVL31:
 275 0076 0002     		lsl	r0, r0, #8
 276 0078 0343     		orr	r3, r0
 277 007a CB80     		strh	r3, [r1, #6]
 278              	.LVL32:
 279              	.L28:
1883:.\sd/ff.c     **** 	}
1884:.\sd/ff.c     **** 	*p = 0;		/* Terminate SFN str by a \0 */
 280              		.loc 1 1884 0
 281 007c 0023     		mov	r3, #0
1885:.\sd/ff.c     **** 
1886:.\sd/ff.c     **** #if _USE_LFN
1887:.\sd/ff.c     **** 	if (fno->lfname && fno->lfsize) {
1888:.\sd/ff.c     **** 		TCHAR *tp = fno->lfname;
1889:.\sd/ff.c     **** 		WCHAR w, *lfn;
1890:.\sd/ff.c     **** 
1891:.\sd/ff.c     **** 		i = 0;
1892:.\sd/ff.c     **** 		if (dj->sect && dj->lfn_idx != 0xFFFF) {/* Get LFN if available */
1893:.\sd/ff.c     **** 			lfn = dj->lfn;
1894:.\sd/ff.c     **** 			while ((w = *lfn++) != 0) {			/* Get an LFN char */
1895:.\sd/ff.c     **** #if !_LFN_UNICODE
1896:.\sd/ff.c     **** 				w = ff_convert(w, 0);			/* Unicode -> OEM conversion */
1897:.\sd/ff.c     **** 				if (!w) { i = 0; break; }		/* Could not convert, no LFN */
1898:.\sd/ff.c     **** 				if (_DF1S && w >= 0x100)		/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
1899:.\sd/ff.c     **** 					tp[i++] = (TCHAR)(w >> 8);
1900:.\sd/ff.c     **** #endif
1901:.\sd/ff.c     **** 				if (i >= fno->lfsize - 1) { i = 0; break; }	/* Buffer overflow, no LFN */
1902:.\sd/ff.c     **** 				tp[i++] = (TCHAR)w;
1903:.\sd/ff.c     **** 			}
1904:.\sd/ff.c     **** 		}
1905:.\sd/ff.c     **** 		tp[i] = 0;	/* Terminate the LFN str by a \0 */
1906:.\sd/ff.c     **** 	}
1907:.\sd/ff.c     **** #endif
1908:.\sd/ff.c     **** }
 282              		.loc 1 1908 0
 283              		@ sp needed
1884:.\sd/ff.c     **** 
 284              		.loc 1 1884 0
 285 007e 2370     		strb	r3, [r4]
 286              	.LVL33:
 287              		.loc 1 1908 0
 288 0080 70BD     		pop	{r4, r5, r6, pc}
 289              		.cfi_endproc
 290              	.LFE23:
 291              		.size	get_fileinfo, .-get_fileinfo
 292              		.section	.text.move_window,"ax",%progbits
 293              		.align	1
 294              		.code	16
 295              		.thumb_func
 296              		.type	move_window, %function
 297              	move_window:
 298              	.LFB9:
 723:.\sd/ff.c     **** 	DWORD wsect;
 299              		.loc 1 723 0
 300              		.cfi_startproc
 301              	.LVL34:
 302 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 40


 303              		.cfi_def_cfa_offset 32
 304              		.cfi_offset 0, -32
 305              		.cfi_offset 1, -28
 306              		.cfi_offset 2, -24
 307              		.cfi_offset 4, -20
 308              		.cfi_offset 5, -16
 309              		.cfi_offset 6, -12
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 727:.\sd/ff.c     **** 	if (wsect != sector) {	/* Changed current window */
 312              		.loc 1 727 0
 313 0002 C66A     		ldr	r6, [r0, #44]
 314              	.LVL35:
 728:.\sd/ff.c     **** #if !_FS_READONLY
 315              		.loc 1 728 0
 316 0004 8E42     		cmp	r6, r1
 317 0006 01D1     		bne	.L47
 318              	.LVL36:
 319              	.L51:
 750:.\sd/ff.c     **** }
 320              		.loc 1 750 0
 321 0008 0020     		mov	r0, #0
 322 000a 32E0     		b	.L48
 323              	.LVL37:
 324              	.L47:
 730:.\sd/ff.c     **** 			if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK)
 325              		.loc 1 730 0
 326 000c 0379     		ldrb	r3, [r0, #4]
 327 000e 0D1C     		mov	r5, r1
 328 0010 041C     		mov	r4, r0
 329 0012 002B     		cmp	r3, #0
 330 0014 02D1     		bne	.L49
 331              	.LVL38:
 332              	.L53:
 743:.\sd/ff.c     **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK)
 333              		.loc 1 743 0
 334 0016 002D     		cmp	r5, #0
 335 0018 F6D0     		beq	.L51
 336 001a 20E0     		b	.L57
 337              	.LVL39:
 338              	.L49:
 731:.\sd/ff.c     **** 				return FR_DISK_ERR;
 339              		.loc 1 731 0
 340 001c 031C     		mov	r3, r0
 341 001e 3033     		add	r3, r3, #48
 342 0020 0193     		str	r3, [sp, #4]
 343 0022 191C     		mov	r1, r3
 344              	.LVL40:
 345 0024 4078     		ldrb	r0, [r0, #1]
 346              	.LVL41:
 347 0026 321C     		mov	r2, r6
 348 0028 0123     		mov	r3, #1
 349 002a FFF7FEFF 		bl	disk_write
 350              	.LVL42:
 351 002e 0028     		cmp	r0, #0
 352 0030 01D0     		beq	.L52
 353              	.L56:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 41


 732:.\sd/ff.c     **** 			fs->wflag = 0;
 354              		.loc 1 732 0
 355 0032 0120     		mov	r0, #1
 356 0034 1DE0     		b	.L48
 357              	.L52:
 734:.\sd/ff.c     **** 				BYTE nf;
 358              		.loc 1 734 0
 359 0036 E369     		ldr	r3, [r4, #28]
 360 0038 226A     		ldr	r2, [r4, #32]
 733:.\sd/ff.c     **** 			if (wsect < (fs->fatbase + fs->fsize)) {	/* In FAT area */
 361              		.loc 1 733 0
 362 003a 2071     		strb	r0, [r4, #4]
 734:.\sd/ff.c     **** 				BYTE nf;
 363              		.loc 1 734 0
 364 003c 9B18     		add	r3, r3, r2
 365 003e 9E42     		cmp	r6, r3
 366 0040 E9D2     		bcs	.L53
 367              	.LBB2:
 736:.\sd/ff.c     **** 					wsect += fs->fsize;
 368              		.loc 1 736 0
 369 0042 E778     		ldrb	r7, [r4, #3]
 370              	.LVL43:
 371              	.L54:
 736:.\sd/ff.c     **** 					wsect += fs->fsize;
 372              		.loc 1 736 0 is_stmt 0 discriminator 1
 373 0044 012F     		cmp	r7, #1
 374 0046 E6D9     		bls	.L53
 737:.\sd/ff.c     **** 					disk_write(fs->drv, fs->win, wsect, 1);
 375              		.loc 1 737 0 is_stmt 1 discriminator 3
 376 0048 E369     		ldr	r3, [r4, #28]
 738:.\sd/ff.c     **** 				}
 377              		.loc 1 738 0 discriminator 3
 378 004a 6078     		ldrb	r0, [r4, #1]
 737:.\sd/ff.c     **** 					disk_write(fs->drv, fs->win, wsect, 1);
 379              		.loc 1 737 0 discriminator 3
 380 004c F618     		add	r6, r6, r3
 381              	.LVL44:
 738:.\sd/ff.c     **** 				}
 382              		.loc 1 738 0 discriminator 3
 383 004e 0199     		ldr	r1, [sp, #4]
 384 0050 321C     		mov	r2, r6
 385 0052 0123     		mov	r3, #1
 736:.\sd/ff.c     **** 					wsect += fs->fsize;
 386              		.loc 1 736 0 discriminator 3
 387 0054 013F     		sub	r7, r7, #1
 388              	.LVL45:
 738:.\sd/ff.c     **** 				}
 389              		.loc 1 738 0 discriminator 3
 390 0056 FFF7FEFF 		bl	disk_write
 391              	.LVL46:
 736:.\sd/ff.c     **** 					wsect += fs->fsize;
 392              		.loc 1 736 0 discriminator 3
 393 005a FFB2     		uxtb	r7, r7
 394              	.LVL47:
 395 005c F2E7     		b	.L54
 396              	.LVL48:
 397              	.L57:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 42


 398              	.LBE2:
 744:.\sd/ff.c     **** 				return FR_DISK_ERR;
 399              		.loc 1 744 0
 400 005e 211C     		mov	r1, r4
 401 0060 6078     		ldrb	r0, [r4, #1]
 402 0062 3031     		add	r1, r1, #48
 403 0064 2A1C     		mov	r2, r5
 404 0066 0123     		mov	r3, #1
 405 0068 FFF7FEFF 		bl	disk_read
 406              	.LVL49:
 407 006c 0028     		cmp	r0, #0
 408 006e E0D1     		bne	.L56
 746:.\sd/ff.c     **** 		}
 409              		.loc 1 746 0
 410 0070 E562     		str	r5, [r4, #44]
 411              	.LVL50:
 412              	.L48:
 751:.\sd/ff.c     **** 
 413              		.loc 1 751 0
 414              		@ sp needed
 415              	.LVL51:
 416 0072 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 417              		.cfi_endproc
 418              	.LFE9:
 419              		.size	move_window, .-move_window
 420              		.section	.text.check_fs,"ax",%progbits
 421              		.align	1
 422              		.code	16
 423              		.thumb_func
 424              		.type	check_fs, %function
 425              	check_fs:
 426              	.LFB25:
1909:.\sd/ff.c     **** #endif /* _FS_MINIMIZE <= 1 */
1910:.\sd/ff.c     **** 
1911:.\sd/ff.c     **** 
1912:.\sd/ff.c     **** 
1913:.\sd/ff.c     **** 
1914:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1915:.\sd/ff.c     **** /* Follow a file path                                                    */
1916:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1917:.\sd/ff.c     **** 
1918:.\sd/ff.c     **** static
1919:.\sd/ff.c     **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
1920:.\sd/ff.c     **** 	DIR *dj,			/* Directory object to return last directory and found object */
1921:.\sd/ff.c     **** 	const TCHAR *path	/* Full-path string to find a file or directory */
1922:.\sd/ff.c     **** )
1923:.\sd/ff.c     **** {
1924:.\sd/ff.c     **** 	FRESULT res;
1925:.\sd/ff.c     **** 	BYTE *dir, ns;
1926:.\sd/ff.c     **** 
1927:.\sd/ff.c     **** 
1928:.\sd/ff.c     **** #if _FS_RPATH
1929:.\sd/ff.c     **** 	if (*path == '/' || *path == '\\') { /* There is a heading separator */
1930:.\sd/ff.c     **** 		path++;	dj->sclust = 0;		/* Strip it and start from the root dir */
1931:.\sd/ff.c     **** 	} else {							/* No heading separator */
1932:.\sd/ff.c     **** 		dj->sclust = dj->fs->cdir;	/* Start from the current dir */
1933:.\sd/ff.c     **** 	}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 43


1934:.\sd/ff.c     **** #else
1935:.\sd/ff.c     **** 	if (*path == '/' || *path == '\\')	/* Strip heading separator if exist */
1936:.\sd/ff.c     **** 		path++;
1937:.\sd/ff.c     **** 	dj->sclust = 0;						/* Start from the root dir */
1938:.\sd/ff.c     **** #endif
1939:.\sd/ff.c     **** 
1940:.\sd/ff.c     **** 	if ((UINT)*path < ' ') {			/* Nul path means the start directory itself */
1941:.\sd/ff.c     **** 		res = dir_sdi(dj, 0);
1942:.\sd/ff.c     **** 		dj->dir = 0;
1943:.\sd/ff.c     **** 
1944:.\sd/ff.c     **** 	} else {							/* Follow path */
1945:.\sd/ff.c     **** 		for (;;) {
1946:.\sd/ff.c     **** 			res = create_name(dj, &path);	/* Get a segment */
1947:.\sd/ff.c     **** 			if (res != FR_OK) break;
1948:.\sd/ff.c     **** 			res = dir_find(dj);				/* Find it */
1949:.\sd/ff.c     **** 			ns = *(dj->fn+NS);
1950:.\sd/ff.c     **** 			if (res != FR_OK) {				/* Failed to find the object */
1951:.\sd/ff.c     **** 				if (res != FR_NO_FILE) break;	/* Abort if any hard error occured */
1952:.\sd/ff.c     **** 				/* Object not found */
1953:.\sd/ff.c     **** 				if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exit */
1954:.\sd/ff.c     **** 					dj->sclust = 0; dj->dir = 0;	/* It is the root dir */
1955:.\sd/ff.c     **** 					res = FR_OK;
1956:.\sd/ff.c     **** 					if (!(ns & NS_LAST)) continue;
1957:.\sd/ff.c     **** 				} else {							/* Could not find the object */
1958:.\sd/ff.c     **** 					if (!(ns & NS_LAST)) res = FR_NO_PATH;
1959:.\sd/ff.c     **** 				}
1960:.\sd/ff.c     **** 				break;
1961:.\sd/ff.c     **** 			}
1962:.\sd/ff.c     **** 			if (ns & NS_LAST) break;			/* Last segment match. Function completed. */
1963:.\sd/ff.c     **** 			dir = dj->dir;						/* There is next segment. Follow the sub directory */
1964:.\sd/ff.c     **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* Cannot follow because it is a file */
1965:.\sd/ff.c     **** 				res = FR_NO_PATH; break;
1966:.\sd/ff.c     **** 			}
1967:.\sd/ff.c     **** 			dj->sclust = LD_CLUST(dir);
1968:.\sd/ff.c     **** 		}
1969:.\sd/ff.c     **** 	}
1970:.\sd/ff.c     **** 
1971:.\sd/ff.c     **** 	return res;
1972:.\sd/ff.c     **** }
1973:.\sd/ff.c     **** 
1974:.\sd/ff.c     **** 
1975:.\sd/ff.c     **** 
1976:.\sd/ff.c     **** 
1977:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1978:.\sd/ff.c     **** /* Load a sector and check if it is an FAT Volume Boot Record            */
1979:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1980:.\sd/ff.c     **** 
1981:.\sd/ff.c     **** static
1982:.\sd/ff.c     **** BYTE check_fs (	/* 0:FAT-VBR, 1:Valid BR but not FAT, 2:Not a BR, 3:Disk error */
1983:.\sd/ff.c     **** 	FATFS *fs,	/* File system object */
1984:.\sd/ff.c     **** 	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
1985:.\sd/ff.c     **** )
1986:.\sd/ff.c     **** {
 427              		.loc 1 1986 0
 428              		.cfi_startproc
 429              	.LVL52:
 430 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 44


 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 4, -8
 433              		.cfi_offset 14, -4
 434              		.loc 1 1986 0
 435 0002 041C     		mov	r4, r0
 436 0004 0A1C     		mov	r2, r1
1987:.\sd/ff.c     **** 	if (disk_read(fs->drv, fs->win, sect, 1) != RES_OK)	/* Load boot record */
 437              		.loc 1 1987 0
 438 0006 211C     		mov	r1, r4
 439              	.LVL53:
 440 0008 4078     		ldrb	r0, [r0, #1]
 441              	.LVL54:
 442 000a 3031     		add	r1, r1, #48
 443              	.LVL55:
 444 000c 0123     		mov	r3, #1
 445 000e FFF7FEFF 		bl	disk_read
 446              	.LVL56:
 447 0012 011C     		mov	r1, r0
1988:.\sd/ff.c     **** 		return 3;
 448              		.loc 1 1988 0
 449 0014 0320     		mov	r0, #3
1987:.\sd/ff.c     **** 	if (disk_read(fs->drv, fs->win, sect, 1) != RES_OK)	/* Load boot record */
 450              		.loc 1 1987 0
 451 0016 0029     		cmp	r1, #0
 452 0018 39D1     		bne	.L59
1989:.\sd/ff.c     **** 	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)		/* Check record signature (always placed at offset 510 
 453              		.loc 1 1989 0
 454 001a 1D4B     		ldr	r3, .L63
 455 001c 1D4A     		ldr	r2, .L63+4
 456 001e E35C     		ldrb	r3, [r4, r3]
 457 0020 A25C     		ldrb	r2, [r4, r2]
 458 0022 1B02     		lsl	r3, r3, #8
 459 0024 1343     		orr	r3, r2
 460 0026 1C4A     		ldr	r2, .L63+8
 461 0028 1BB2     		sxth	r3, r3
1990:.\sd/ff.c     **** 		return 2;
 462              		.loc 1 1990 0
 463 002a 0138     		sub	r0, r0, #1
1989:.\sd/ff.c     **** 	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)		/* Check record signature (always placed at offset 510 
 464              		.loc 1 1989 0
 465 002c 9342     		cmp	r3, r2
 466 002e 2ED1     		bne	.L59
1991:.\sd/ff.c     **** 
1992:.\sd/ff.c     **** 	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 467              		.loc 1 1992 0
 468 0030 231C     		mov	r3, r4
 469 0032 6933     		add	r3, r3, #105
 470 0034 1B78     		ldrb	r3, [r3]
1993:.\sd/ff.c     **** 		return 0;
 471              		.loc 1 1993 0
 472 0036 081C     		mov	r0, r1
1992:.\sd/ff.c     **** 		return 0;
 473              		.loc 1 1992 0
 474 0038 1A06     		lsl	r2, r3, #24
 475 003a 231C     		mov	r3, r4
 476 003c 6833     		add	r3, r3, #104
 477 003e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 45


 478 0040 1B04     		lsl	r3, r3, #16
 479 0042 1343     		orr	r3, r2
 480 0044 221C     		mov	r2, r4
 481 0046 6632     		add	r2, r2, #102
 482 0048 1278     		ldrb	r2, [r2]
 483 004a 1343     		orr	r3, r2
 484 004c 221C     		mov	r2, r4
 485 004e 6732     		add	r2, r2, #103
 486 0050 1278     		ldrb	r2, [r2]
 487 0052 1202     		lsl	r2, r2, #8
 488 0054 1343     		orr	r3, r2
 489 0056 114A     		ldr	r2, .L63+12
 490 0058 1B02     		lsl	r3, r3, #8
 491 005a 1B0A     		lsr	r3, r3, #8
 492 005c 9342     		cmp	r3, r2
 493 005e 16D0     		beq	.L59
 494              	.LVL57:
 495              	.LBB5:
 496              	.LBB6:
1994:.\sd/ff.c     **** 	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)
 497              		.loc 1 1994 0
 498 0060 231C     		mov	r3, r4
 499 0062 8533     		add	r3, r3, #133
 500 0064 1878     		ldrb	r0, [r3]
 501 0066 013B     		sub	r3, r3, #1
 502 0068 1B78     		ldrb	r3, [r3]
 503 006a 0006     		lsl	r0, r0, #24
 504 006c 1B04     		lsl	r3, r3, #16
 505 006e 1843     		orr	r0, r3
 506 0070 231C     		mov	r3, r4
 507 0072 8233     		add	r3, r3, #130
 508 0074 1B78     		ldrb	r3, [r3]
 509 0076 8334     		add	r4, r4, #131
 510              	.LVL58:
 511 0078 1843     		orr	r0, r3
 512 007a 2378     		ldrb	r3, [r4]
 513 007c 1B02     		lsl	r3, r3, #8
 514 007e 1843     		orr	r0, r3
 515 0080 0002     		lsl	r0, r0, #8
 516 0082 074B     		ldr	r3, .L63+16
 517 0084 000A     		lsr	r0, r0, #8
 518 0086 C018     		add	r0, r0, r3
 519 0088 431E     		sub	r3, r0, #1
 520 008a 9841     		sbc	r0, r0, r3
 521              	.LBE6:
 522              	.LBE5:
1988:.\sd/ff.c     **** 	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)		/* Check record signature (always placed at offset 510 
 523              		.loc 1 1988 0
 524 008c C0B2     		uxtb	r0, r0
 525              	.LVL59:
 526              	.L59:
1995:.\sd/ff.c     **** 		return 0;
1996:.\sd/ff.c     **** 
1997:.\sd/ff.c     **** 	return 1;
1998:.\sd/ff.c     **** }
 527              		.loc 1 1998 0
 528              		@ sp needed
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 46


 529 008e 10BD     		pop	{r4, pc}
 530              	.L64:
 531              		.align	2
 532              	.L63:
 533 0090 2F020000 		.word	559
 534 0094 2E020000 		.word	558
 535 0098 55AAFFFF 		.word	-21931
 536 009c 46415400 		.word	5521734
 537 00a0 BABEABFF 		.word	-5521734
 538              		.cfi_endproc
 539              	.LFE25:
 540              		.size	check_fs, .-check_fs
 541              		.global	__aeabi_uidiv
 542              		.section	.text.chk_mounted,"ax",%progbits
 543              		.align	1
 544              		.code	16
 545              		.thumb_func
 546              		.type	chk_mounted, %function
 547              	chk_mounted:
 548              	.LFB26:
1999:.\sd/ff.c     **** 
2000:.\sd/ff.c     **** 
2001:.\sd/ff.c     **** 
2002:.\sd/ff.c     **** 
2003:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2004:.\sd/ff.c     **** /* Check if the file system object is valid or not                       */
2005:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2006:.\sd/ff.c     **** 
2007:.\sd/ff.c     **** static
2008:.\sd/ff.c     **** FRESULT chk_mounted (	/* FR_OK(0): successful, !=0: any error occurred */
2009:.\sd/ff.c     **** 	const TCHAR **path,	/* Pointer to pointer to the path name (drive number) */
2010:.\sd/ff.c     **** 	FATFS **rfs,		/* Pointer to pointer to the found file system object */
2011:.\sd/ff.c     **** 	BYTE chk_wp			/* !=0: Check media write protection for write access */
2012:.\sd/ff.c     **** )
2013:.\sd/ff.c     **** {
 549              		.loc 1 2013 0
 550              		.cfi_startproc
 551              	.LVL60:
 552 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 553              		.cfi_def_cfa_offset 20
 554              		.cfi_offset 4, -20
 555              		.cfi_offset 5, -16
 556              		.cfi_offset 6, -12
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
2014:.\sd/ff.c     **** 	BYTE fmt, b, pi, *tbl;
2015:.\sd/ff.c     **** 	UINT vol;
2016:.\sd/ff.c     **** 	DSTATUS stat;
2017:.\sd/ff.c     **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat;
2018:.\sd/ff.c     **** 	WORD nrsv;
2019:.\sd/ff.c     **** 	const TCHAR *p = *path;
 559              		.loc 1 2019 0
 560 0002 0368     		ldr	r3, [r0]
 561              	.LVL61:
2013:.\sd/ff.c     **** 	BYTE fmt, b, pi, *tbl;
 562              		.loc 1 2013 0
 563 0004 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 47


 564              		.cfi_def_cfa_offset 40
2020:.\sd/ff.c     **** 	FATFS *fs;
2021:.\sd/ff.c     **** 
2022:.\sd/ff.c     **** 	/* Get logical drive number from the path name */
2023:.\sd/ff.c     **** 	vol = p[0] - '0';					/* Is there a drive number? */
 565              		.loc 1 2023 0
 566 0006 1C78     		ldrb	r4, [r3]
 567 0008 303C     		sub	r4, r4, #48
 568              	.LVL62:
2024:.\sd/ff.c     **** 	if (vol <= 9 && p[1] == ':') {		/* Found a drive number, get and strip it */
 569              		.loc 1 2024 0
 570 000a 092C     		cmp	r4, #9
 571 000c 06D9     		bls	.L66
 572              	.LVL63:
 573              	.L69:
2025:.\sd/ff.c     **** 		p += 2; *path = p;				/* Return pointer to the path name */
2026:.\sd/ff.c     **** 	} else {							/* No drive number is given */
2027:.\sd/ff.c     **** #if _FS_RPATH
2028:.\sd/ff.c     **** 		vol = CurrVol;					/* Use current drive */
2029:.\sd/ff.c     **** #else
2030:.\sd/ff.c     **** 		vol = 0;						/* Use drive 0 */
2031:.\sd/ff.c     **** #endif
2032:.\sd/ff.c     **** 	}
2033:.\sd/ff.c     **** 
2034:.\sd/ff.c     **** 	/* Check if the file system object is valid or not */
2035:.\sd/ff.c     **** 	if (vol >= _VOLUMES) 				/* Is the drive number valid? */
2036:.\sd/ff.c     **** 		return FR_INVALID_DRIVE;
2037:.\sd/ff.c     **** 	*rfs = fs = FatFs[vol];				/* Return pointer to the corresponding file system object */
 574              		.loc 1 2037 0
 575 000e CA4B     		ldr	r3, .L119
 576 0010 5C6A     		ldr	r4, [r3, #36]
 577              	.LVL64:
2038:.\sd/ff.c     **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 578              		.loc 1 2038 0
 579 0012 0C23     		mov	r3, #12
2037:.\sd/ff.c     **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 580              		.loc 1 2037 0
 581 0014 0C60     		str	r4, [r1]
 582              		.loc 1 2038 0
 583 0016 002C     		cmp	r4, #0
 584 0018 0AD1     		bne	.L117
 585 001a 89E1     		b	.L67
 586              	.LVL65:
 587              	.L66:
2024:.\sd/ff.c     **** 		p += 2; *path = p;				/* Return pointer to the path name */
 588              		.loc 1 2024 0 discriminator 1
 589 001c 5D78     		ldrb	r5, [r3, #1]
 590 001e 3A2D     		cmp	r5, #58
 591 0020 F5D1     		bne	.L69
 592              	.LVL66:
2025:.\sd/ff.c     **** 	} else {							/* No drive number is given */
 593              		.loc 1 2025 0
 594 0022 0233     		add	r3, r3, #2
 595              	.LVL67:
 596 0024 0360     		str	r3, [r0]
2036:.\sd/ff.c     **** 	*rfs = fs = FatFs[vol];				/* Return pointer to the corresponding file system object */
 597              		.loc 1 2036 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 48


 598 0026 0B23     		mov	r3, #11
 599              	.LVL68:
2035:.\sd/ff.c     **** 		return FR_INVALID_DRIVE;
 600              		.loc 1 2035 0
 601 0028 002C     		cmp	r4, #0
 602 002a 00D0     		beq	.LCB623
 603 002c 80E1     		b	.L67	@long jump
 604              	.LCB623:
 605 002e EEE7     		b	.L69
 606              	.LVL69:
 607              	.L117:
2039:.\sd/ff.c     **** 
2040:.\sd/ff.c     **** 	ENTER_FF(fs);						/* Lock file system */
2041:.\sd/ff.c     **** 
2042:.\sd/ff.c     **** 	if (fs->fs_type) {					/* If the logical drive has been mounted */
 608              		.loc 1 2042 0
 609 0030 2378     		ldrb	r3, [r4]
 610 0032 151C     		mov	r5, r2
 611 0034 002B     		cmp	r3, #0
 612 0036 0DD0     		beq	.L70
2043:.\sd/ff.c     **** 		stat = disk_status(fs->drv);
 613              		.loc 1 2043 0
 614 0038 6078     		ldrb	r0, [r4, #1]
 615              	.LVL70:
 616 003a FFF7FEFF 		bl	disk_status
 617              	.LVL71:
2044:.\sd/ff.c     **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized (has not been changed)
 618              		.loc 1 2044 0
 619 003e 0123     		mov	r3, #1
 620 0040 0340     		and	r3, r0
 621 0042 07D1     		bne	.L70
2045:.\sd/ff.c     **** 			if (!_FS_READONLY && chk_wp && (stat & STA_PROTECT))	/* Check write protection if needed */
 622              		.loc 1 2045 0
 623 0044 002D     		cmp	r5, #0
 624 0046 00D1     		bne	.LCB650
 625 0048 72E1     		b	.L67	@long jump
 626              	.LCB650:
 627              		.loc 1 2045 0 is_stmt 0 discriminator 1
 628 004a 4207     		lsl	r2, r0, #29
 629 004c 00D4     		bmi	.LCB655
 630 004e 6FE1     		b	.L67	@long jump
 631              	.LCB655:
 632              	.L72:
2046:.\sd/ff.c     **** 				return FR_WRITE_PROTECTED;
 633              		.loc 1 2046 0 is_stmt 1
 634 0050 0A23     		mov	r3, #10
 635 0052 6DE1     		b	.L67
 636              	.LVL72:
 637              	.L70:
2047:.\sd/ff.c     **** 			return FR_OK;				/* The file system object is valid */
2048:.\sd/ff.c     **** 		}
2049:.\sd/ff.c     **** 	}
2050:.\sd/ff.c     **** 
2051:.\sd/ff.c     **** 	/* The file system object is not valid. */
2052:.\sd/ff.c     **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
2053:.\sd/ff.c     **** 
2054:.\sd/ff.c     **** 	fs->fs_type = 0;					/* Clear the file system object */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 49


 638              		.loc 1 2054 0
 639 0054 0020     		mov	r0, #0
 640 0056 2070     		strb	r0, [r4]
2055:.\sd/ff.c     **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 641              		.loc 1 2055 0
 642 0058 6070     		strb	r0, [r4, #1]
2056:.\sd/ff.c     **** 	stat = disk_initialize(fs->drv);	/* Initialize low level disk I/O layer */
 643              		.loc 1 2056 0
 644 005a FFF7FEFF 		bl	disk_initialize
 645              	.LVL73:
2057:.\sd/ff.c     **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
2058:.\sd/ff.c     **** 		return FR_NOT_READY;			/* Failed to initialize due to no media or hard error */
 646              		.loc 1 2058 0
 647 005e 0323     		mov	r3, #3
2057:.\sd/ff.c     **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 648              		.loc 1 2057 0
 649 0060 C207     		lsl	r2, r0, #31
 650 0062 00D5     		bpl	.LCB675
 651 0064 64E1     		b	.L67	@long jump
 652              	.LCB675:
2059:.\sd/ff.c     **** 	if (!_FS_READONLY && chk_wp && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 653              		.loc 1 2059 0
 654 0066 002D     		cmp	r5, #0
 655 0068 01D0     		beq	.L71
 656              		.loc 1 2059 0 is_stmt 0 discriminator 1
 657 006a 4307     		lsl	r3, r0, #29
 658 006c F0D4     		bmi	.L72
 659              	.L71:
 660              	.LVL74:
2060:.\sd/ff.c     **** 		return FR_WRITE_PROTECTED;
2061:.\sd/ff.c     **** #if _MAX_SS != 512						/* Get disk sector size (variable sector size cfg only) */
2062:.\sd/ff.c     **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &fs->ssize) != RES_OK)
2063:.\sd/ff.c     **** 		return FR_DISK_ERR;
2064:.\sd/ff.c     **** #endif
2065:.\sd/ff.c     **** 	/* Search FAT partition on the drive. Supports only generic partitionings, FDISK and SFD. */
2066:.\sd/ff.c     **** 	fmt = check_fs(fs, bsect = 0);		/* Load sector 0 and check if it is an FAT-VBR (in SFD) */
 661              		.loc 1 2066 0 is_stmt 1
 662 006e 201C     		mov	r0, r4
 663              	.LVL75:
 664 0070 0021     		mov	r1, #0
 665 0072 FFF7FEFF 		bl	check_fs
 666              	.LVL76:
 667 0076 0026     		mov	r6, #0
2067:.\sd/ff.c     **** 	if (LD2PT(vol) && !fmt) fmt = 1;	/* Force non-SFD if the volume is forced partition */
2068:.\sd/ff.c     **** 	if (fmt == 1) {						/* Not an FAT-VBR, the physical drive can be partitioned */
 668              		.loc 1 2068 0
 669 0078 0128     		cmp	r0, #1
 670 007a 1BD1     		bne	.L73
 671              	.LVL77:
2069:.\sd/ff.c     **** 		/* Check the partition listed in the partition table */
2070:.\sd/ff.c     **** 		pi = LD2PT(vol);
2071:.\sd/ff.c     **** 		if (pi) pi--;
2072:.\sd/ff.c     **** 		tbl = &fs->win[MBR_Table + pi * SZ_PTE];/* Partition table */
2073:.\sd/ff.c     **** 		if (tbl[4]) {						/* Is the partition existing? */
 672              		.loc 1 2073 0
 673 007c F923     		mov	r3, #249
 674 007e 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 50


 675 0080 E35C     		ldrb	r3, [r4, r3]
 676 0082 B342     		cmp	r3, r6
 677 0084 01D1     		bne	.L74
 678              	.LVL78:
 679              	.L75:
2074:.\sd/ff.c     **** 			bsect = LD_DWORD(&tbl[8]);		/* Partition offset in LBA */
2075:.\sd/ff.c     **** 			fmt = check_fs(fs, bsect);		/* Check the partition */
2076:.\sd/ff.c     **** 		}
2077:.\sd/ff.c     **** 	}
2078:.\sd/ff.c     **** 	if (fmt == 3) return FR_DISK_ERR;
2079:.\sd/ff.c     **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 680              		.loc 1 2079 0
 681 0086 0D23     		mov	r3, #13
 682 0088 52E1     		b	.L67
 683              	.LVL79:
 684              	.L74:
2074:.\sd/ff.c     **** 			bsect = LD_DWORD(&tbl[8]);		/* Partition offset in LBA */
 685              		.loc 1 2074 0
 686 008a FA23     		mov	r3, #250
 687 008c FF33     		add	r3, r3, #255
 688 008e E65C     		ldrb	r6, [r4, r3]
 689 0090 013B     		sub	r3, r3, #1
 690 0092 E35C     		ldrb	r3, [r4, r3]
 691 0094 3606     		lsl	r6, r6, #24
 692 0096 1B04     		lsl	r3, r3, #16
 693 0098 1E43     		orr	r6, r3
 694 009a FB23     		mov	r3, #251
 695 009c 5B00     		lsl	r3, r3, #1
 696 009e E25C     		ldrb	r2, [r4, r3]
 697 00a0 F823     		mov	r3, #248
 698 00a2 FF33     		add	r3, r3, #255
 699 00a4 E35C     		ldrb	r3, [r4, r3]
 700 00a6 1643     		orr	r6, r2
 701 00a8 1B02     		lsl	r3, r3, #8
 702 00aa 1E43     		orr	r6, r3
 703              	.LVL80:
2075:.\sd/ff.c     **** 		}
 704              		.loc 1 2075 0
 705 00ac 201C     		mov	r0, r4
 706              	.LVL81:
 707 00ae 311C     		mov	r1, r6
 708 00b0 FFF7FEFF 		bl	check_fs
 709              	.LVL82:
 710              	.L73:
2078:.\sd/ff.c     **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 711              		.loc 1 2078 0
 712 00b4 0123     		mov	r3, #1
 713 00b6 0328     		cmp	r0, #3
 714 00b8 00D1     		bne	.LCB750
 715 00ba 39E1     		b	.L67	@long jump
 716              	.LCB750:
 717              		.loc 1 2079 0
 718 00bc 0028     		cmp	r0, #0
 719 00be E2D1     		bne	.L75
2080:.\sd/ff.c     **** 
2081:.\sd/ff.c     **** 	/* An FAT volume is found. Following code initializes the file system object */
2082:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 51


2083:.\sd/ff.c     **** 	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical s
 720              		.loc 1 2083 0
 721 00c0 231C     		mov	r3, r4
 722 00c2 221C     		mov	r2, r4
 723 00c4 3C33     		add	r3, r3, #60
 724 00c6 1B78     		ldrb	r3, [r3]
 725 00c8 3B32     		add	r2, r2, #59
 726 00ca 1278     		ldrb	r2, [r2]
 727 00cc 1B02     		lsl	r3, r3, #8
 728 00ce 1343     		orr	r3, r2
 729 00d0 8022     		mov	r2, #128
 730 00d2 1BB2     		sxth	r3, r3
 731 00d4 9200     		lsl	r2, r2, #2
 732 00d6 9342     		cmp	r3, r2
 733 00d8 D5D1     		bne	.L75
2084:.\sd/ff.c     **** 		return FR_NO_FILESYSTEM;
2085:.\sd/ff.c     **** 
2086:.\sd/ff.c     **** 	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
 734              		.loc 1 2086 0
 735 00da 231C     		mov	r3, r4
 736 00dc 221C     		mov	r2, r4
 737 00de 4733     		add	r3, r3, #71
 738 00e0 1B78     		ldrb	r3, [r3]
 739 00e2 4632     		add	r2, r2, #70
 740 00e4 1278     		ldrb	r2, [r2]
 741 00e6 1B02     		lsl	r3, r3, #8
 742 00e8 1343     		orr	r3, r2
 743              	.LVL83:
2087:.\sd/ff.c     **** 	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
 744              		.loc 1 2087 0
 745 00ea 11D1     		bne	.L118
 746              		.loc 1 2087 0 is_stmt 0 discriminator 1
 747 00ec 231C     		mov	r3, r4
 748              	.LVL84:
 749 00ee 5733     		add	r3, r3, #87
 750              	.LVL85:
 751 00f0 1B78     		ldrb	r3, [r3]
 752 00f2 1A06     		lsl	r2, r3, #24
 753              	.LVL86:
 754 00f4 231C     		mov	r3, r4
 755 00f6 5633     		add	r3, r3, #86
 756 00f8 1B78     		ldrb	r3, [r3]
 757 00fa 1B04     		lsl	r3, r3, #16
 758 00fc 1343     		orr	r3, r2
 759 00fe 221C     		mov	r2, r4
 760 0100 5432     		add	r2, r2, #84
 761 0102 1278     		ldrb	r2, [r2]
 762 0104 1343     		orr	r3, r2
 763 0106 221C     		mov	r2, r4
 764 0108 5532     		add	r2, r2, #85
 765 010a 1278     		ldrb	r2, [r2]
 766 010c 1202     		lsl	r2, r2, #8
 767 010e 1343     		orr	r3, r2
 768              	.L118:
 769 0110 0093     		str	r3, [sp]
 770              	.LVL87:
2088:.\sd/ff.c     **** 	fs->fsize = fasize;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 52


 771              		.loc 1 2088 0 is_stmt 1 discriminator 1
 772 0112 009B     		ldr	r3, [sp]
 773 0114 E361     		str	r3, [r4, #28]
2089:.\sd/ff.c     **** 
2090:.\sd/ff.c     **** 	fs->n_fats = b = fs->win[BPB_NumFATs];				/* Number of FAT copies */
 774              		.loc 1 2090 0 discriminator 1
 775 0116 231C     		mov	r3, r4
 776              	.LVL88:
 777 0118 4033     		add	r3, r3, #64
 778 011a 1A78     		ldrb	r2, [r3]
 779              	.LVL89:
2091:.\sd/ff.c     **** 	if (b != 1 && b != 2) return FR_NO_FILESYSTEM;		/* (Must be 1 or 2) */
 780              		.loc 1 2091 0 discriminator 1
 781 011c 531E     		sub	r3, r2, #1
2090:.\sd/ff.c     **** 	if (b != 1 && b != 2) return FR_NO_FILESYSTEM;		/* (Must be 1 or 2) */
 782              		.loc 1 2090 0 discriminator 1
 783 011e E270     		strb	r2, [r4, #3]
 784              		.loc 1 2091 0 discriminator 1
 785 0120 012B     		cmp	r3, #1
 786 0122 B0D8     		bhi	.L75
 787              	.LVL90:
2092:.\sd/ff.c     **** 	fasize *= b;										/* Number of sectors for FAT area */
2093:.\sd/ff.c     **** 
2094:.\sd/ff.c     **** 	fs->csize = b = fs->win[BPB_SecPerClus];			/* Number of sectors per cluster */
 788              		.loc 1 2094 0
 789 0124 231C     		mov	r3, r4
 790 0126 3D33     		add	r3, r3, #61
 791 0128 1978     		ldrb	r1, [r3]
 792              	.LVL91:
 793 012a A170     		strb	r1, [r4, #2]
2095:.\sd/ff.c     **** 	if (!b || (b & (b - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
 794              		.loc 1 2095 0
 795 012c 0029     		cmp	r1, #0
 796 012e AAD0     		beq	.L75
 797              		.loc 1 2095 0 is_stmt 0 discriminator 2
 798 0130 4B1E     		sub	r3, r1, #1
 799 0132 1942     		tst	r1, r3
 800 0134 A7D1     		bne	.L75
2096:.\sd/ff.c     **** 
2097:.\sd/ff.c     **** 	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
 801              		.loc 1 2097 0 is_stmt 1
 802 0136 231C     		mov	r3, r4
 803 0138 4233     		add	r3, r3, #66
 804 013a 1F78     		ldrb	r7, [r3]
 805 013c 013B     		sub	r3, r3, #1
 806 013e 1B78     		ldrb	r3, [r3]
 807 0140 3F02     		lsl	r7, r7, #8
 808 0142 1F43     		orr	r7, r3
 809 0144 2781     		strh	r7, [r4, #8]
2098:.\sd/ff.c     **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIR)) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be sector 
 810              		.loc 1 2098 0
 811 0146 3B07     		lsl	r3, r7, #28
 812 0148 9DD1     		bne	.L75
2099:.\sd/ff.c     **** 
2100:.\sd/ff.c     **** 	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
 813              		.loc 1 2100 0
 814 014a 231C     		mov	r3, r4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 53


 815 014c 4433     		add	r3, r3, #68
 816 014e 1878     		ldrb	r0, [r3]
 817              	.LVL92:
 818 0150 013B     		sub	r3, r3, #1
 819 0152 1B78     		ldrb	r3, [r3]
 820 0154 0002     		lsl	r0, r0, #8
 821 0156 1843     		orr	r0, r3
 822              	.LVL93:
2101:.\sd/ff.c     **** 	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
 823              		.loc 1 2101 0
 824 0158 10D1     		bne	.L78
 825              		.loc 1 2101 0 is_stmt 0 discriminator 1
 826 015a 231C     		mov	r3, r4
 827 015c 5333     		add	r3, r3, #83
 828 015e 1878     		ldrb	r0, [r3]
 829              	.LVL94:
 830 0160 013B     		sub	r3, r3, #1
 831 0162 1B78     		ldrb	r3, [r3]
 832 0164 0006     		lsl	r0, r0, #24
 833 0166 1B04     		lsl	r3, r3, #16
 834 0168 1843     		orr	r0, r3
 835 016a 231C     		mov	r3, r4
 836 016c 5033     		add	r3, r3, #80
 837 016e 1B78     		ldrb	r3, [r3]
 838 0170 1843     		orr	r0, r3
 839 0172 231C     		mov	r3, r4
 840 0174 5133     		add	r3, r3, #81
 841 0176 1B78     		ldrb	r3, [r3]
 842 0178 1B02     		lsl	r3, r3, #8
 843 017a 1843     		orr	r0, r3
 844              	.LVL95:
 845              	.L78:
2102:.\sd/ff.c     **** 
2103:.\sd/ff.c     **** 	nrsv = LD_WORD(fs->win+BPB_RsvdSecCnt);				/* Number of reserved sectors */
 846              		.loc 1 2103 0 is_stmt 1
 847 017c 231C     		mov	r3, r4
 848 017e 251C     		mov	r5, r4
 849 0180 3F33     		add	r3, r3, #63
 850 0182 1B78     		ldrb	r3, [r3]
 851 0184 3E35     		add	r5, r5, #62
 852 0186 2D78     		ldrb	r5, [r5]
 853 0188 1B02     		lsl	r3, r3, #8
 854 018a 1D43     		orr	r5, r3
 855 018c 0195     		str	r5, [sp, #4]
 856              	.LVL96:
2104:.\sd/ff.c     **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (BPB_RsvdSecCnt must not be 0) */
 857              		.loc 1 2104 0
 858 018e 00D1     		bne	.LCB893
 859 0190 79E7     		b	.L75	@long jump
 860              	.LCB893:
2092:.\sd/ff.c     **** 
 861              		.loc 1 2092 0
 862 0192 009B     		ldr	r3, [sp]
 863 0194 5343     		mul	r3, r2
 864 0196 0393     		str	r3, [sp, #12]
2105:.\sd/ff.c     **** 
2106:.\sd/ff.c     **** 	/* Determine the FAT sub type */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 54


2107:.\sd/ff.c     **** 	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
 865              		.loc 1 2107 0
 866 0198 039A     		ldr	r2, [sp, #12]
 867              	.LVL97:
 868 019a 3B09     		lsr	r3, r7, #4
 869 019c 5B19     		add	r3, r3, r5
 870 019e 9B18     		add	r3, r3, r2
 871 01a0 0293     		str	r3, [sp, #8]
 872              	.LVL98:
2108:.\sd/ff.c     **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 873              		.loc 1 2108 0
 874 01a2 9842     		cmp	r0, r3
 875 01a4 00D2     		bcs	.LCB907
 876 01a6 6EE7     		b	.L75	@long jump
 877              	.LCB907:
2109:.\sd/ff.c     **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 878              		.loc 1 2109 0
 879 01a8 C01A     		sub	r0, r0, r3
 880              	.LVL99:
 881 01aa FFF7FEFF 		bl	__aeabi_uidiv
 882              	.LVL100:
2110:.\sd/ff.c     **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 883              		.loc 1 2110 0
 884 01ae 0028     		cmp	r0, #0
 885 01b0 00D1     		bne	.LCB917
 886 01b2 68E7     		b	.L75	@long jump
 887              	.LCB917:
 888              	.LVL101:
2111:.\sd/ff.c     **** 	fmt = FS_FAT12;
2112:.\sd/ff.c     **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
 889              		.loc 1 2112 0
 890 01b4 614B     		ldr	r3, .L119+4
2111:.\sd/ff.c     **** 	fmt = FS_FAT12;
 891              		.loc 1 2111 0
 892 01b6 0125     		mov	r5, #1
 893              		.loc 1 2112 0
 894 01b8 9842     		cmp	r0, r3
 895 01ba 04D9     		bls	.L80
 896              	.LVL102:
2113:.\sd/ff.c     **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 897              		.loc 1 2113 0
 898 01bc 604D     		ldr	r5, .L119+8
2112:.\sd/ff.c     **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 899              		.loc 1 2112 0
 900 01be 8542     		cmp	r5, r0
 901 01c0 AD41     		sbc	r5, r5, r5
 902 01c2 6D42     		neg	r5, r5
 903 01c4 0235     		add	r5, r5, #2
 904              	.LVL103:
 905              	.L80:
2114:.\sd/ff.c     **** 
2115:.\sd/ff.c     **** 	/* Boundaries and Limits */
2116:.\sd/ff.c     **** 	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
2117:.\sd/ff.c     **** 	fs->database = bsect + sysect;						/* Data start sector */
 906              		.loc 1 2117 0
 907 01c6 029B     		ldr	r3, [sp, #8]
2116:.\sd/ff.c     **** 	fs->database = bsect + sysect;						/* Data start sector */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 55


 908              		.loc 1 2116 0
 909 01c8 0230     		add	r0, r0, #2
 910              	.LVL104:
 911              		.loc 1 2117 0
 912 01ca 9B19     		add	r3, r3, r6
 913 01cc A362     		str	r3, [r4, #40]
2118:.\sd/ff.c     **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 914              		.loc 1 2118 0
 915 01ce 019B     		ldr	r3, [sp, #4]
2116:.\sd/ff.c     **** 	fs->database = bsect + sysect;						/* Data start sector */
 916              		.loc 1 2116 0
 917 01d0 A061     		str	r0, [r4, #24]
 918              		.loc 1 2118 0
 919 01d2 F318     		add	r3, r6, r3
 920 01d4 2362     		str	r3, [r4, #32]
2119:.\sd/ff.c     **** 	if (fmt == FS_FAT32) {
 921              		.loc 1 2119 0
 922 01d6 032D     		cmp	r5, #3
 923 01d8 17D1     		bne	.L81
 924              	.LVL105:
2120:.\sd/ff.c     **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 925              		.loc 1 2120 0
 926 01da 002F     		cmp	r7, #0
 927 01dc 00D0     		beq	.LCB945
 928 01de 52E7     		b	.L75	@long jump
 929              	.LCB945:
2121:.\sd/ff.c     **** 		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
 930              		.loc 1 2121 0
 931 01e0 231C     		mov	r3, r4
 932 01e2 5F33     		add	r3, r3, #95
 933 01e4 1B78     		ldrb	r3, [r3]
2122:.\sd/ff.c     **** 		szbfat = fs->n_fatent * 4;						/* (Required FAT size) */
 934              		.loc 1 2122 0
 935 01e6 8000     		lsl	r0, r0, #2
 936              	.LVL106:
2121:.\sd/ff.c     **** 		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
 937              		.loc 1 2121 0
 938 01e8 1A06     		lsl	r2, r3, #24
 939 01ea 231C     		mov	r3, r4
 940 01ec 5E33     		add	r3, r3, #94
 941 01ee 1B78     		ldrb	r3, [r3]
 942 01f0 1B04     		lsl	r3, r3, #16
 943 01f2 1343     		orr	r3, r2
 944 01f4 221C     		mov	r2, r4
 945 01f6 5C32     		add	r2, r2, #92
 946 01f8 1278     		ldrb	r2, [r2]
 947 01fa 1343     		orr	r3, r2
 948 01fc 221C     		mov	r2, r4
 949 01fe 5D32     		add	r2, r2, #93
 950 0200 1278     		ldrb	r2, [r2]
 951 0202 1202     		lsl	r2, r2, #8
 952 0204 1343     		orr	r3, r2
 953 0206 6362     		str	r3, [r4, #36]
 954 0208 0FE0     		b	.L82
 955              	.LVL107:
 956              	.L81:
2123:.\sd/ff.c     **** 	} else {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 56


2124:.\sd/ff.c     **** 		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
 957              		.loc 1 2124 0
 958 020a 002F     		cmp	r7, #0
 959 020c 00D1     		bne	.LCB977
 960 020e 3AE7     		b	.L75	@long jump
 961              	.LCB977:
2125:.\sd/ff.c     **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 962              		.loc 1 2125 0
 963 0210 039A     		ldr	r2, [sp, #12]
 964 0212 D318     		add	r3, r2, r3
 965 0214 6362     		str	r3, [r4, #36]
2126:.\sd/ff.c     **** 		szbfat = (fmt == FS_FAT16) ?					/* (Required FAT size) */
2127:.\sd/ff.c     **** 			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 966              		.loc 1 2127 0
 967 0216 022D     		cmp	r5, #2
 968 0218 01D1     		bne	.L83
 969              		.loc 1 2127 0 is_stmt 0 discriminator 1
 970 021a 4000     		lsl	r0, r0, #1
 971              	.LVL108:
 972 021c 05E0     		b	.L82
 973              	.LVL109:
 974              	.L83:
 975              		.loc 1 2127 0 discriminator 2
 976 021e 0323     		mov	r3, #3
 977 0220 0122     		mov	r2, #1
 978 0222 4343     		mul	r3, r0
 979 0224 1040     		and	r0, r2
 980              	.LVL110:
 981 0226 5B08     		lsr	r3, r3, #1
 982 0228 1818     		add	r0, r3, r0
 983              	.LVL111:
 984              	.L82:
2128:.\sd/ff.c     **** 	}
2129:.\sd/ff.c     **** 	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than required) */
 985              		.loc 1 2129 0 is_stmt 1
 986 022a 464B     		ldr	r3, .L119+12
 987 022c C018     		add	r0, r0, r3
 988              	.LVL112:
 989 022e 009B     		ldr	r3, [sp]
 990 0230 400A     		lsr	r0, r0, #9
 991              	.LVL113:
 992 0232 8342     		cmp	r3, r0
 993 0234 00D2     		bcs	.LCB1010
 994 0236 26E7     		b	.L75	@long jump
 995              	.LCB1010:
2130:.\sd/ff.c     **** 		return FR_NO_FILESYSTEM;
2131:.\sd/ff.c     **** 
2132:.\sd/ff.c     **** #if !_FS_READONLY
2133:.\sd/ff.c     **** 	/* Initialize cluster allocation information */
2134:.\sd/ff.c     **** 	fs->free_clust = 0xFFFFFFFF;
 996              		.loc 1 2134 0
 997 0238 0123     		mov	r3, #1
 998 023a 5B42     		neg	r3, r3
 999 023c 2361     		str	r3, [r4, #16]
2135:.\sd/ff.c     **** 	fs->last_clust = 0;
 1000              		.loc 1 2135 0
 1001 023e 0023     		mov	r3, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 57


 1002 0240 E360     		str	r3, [r4, #12]
2136:.\sd/ff.c     **** 
2137:.\sd/ff.c     **** 	/* Get fsinfo if available */
2138:.\sd/ff.c     **** 	if (fmt == FS_FAT32) {
 1003              		.loc 1 2138 0
 1004 0242 032D     		cmp	r5, #3
 1005 0244 61D1     		bne	.L85
2139:.\sd/ff.c     **** 	 	fs->fsi_flag = 0;
 1006              		.loc 1 2139 0
 1007 0246 6371     		strb	r3, [r4, #5]
2140:.\sd/ff.c     **** 		fs->fsi_sector = bsect + LD_WORD(fs->win+BPB_FSInfo);
 1008              		.loc 1 2140 0
 1009 0248 231C     		mov	r3, r4
 1010 024a 6133     		add	r3, r3, #97
 1011 024c 1A78     		ldrb	r2, [r3]
 1012 024e 013B     		sub	r3, r3, #1
 1013 0250 1B78     		ldrb	r3, [r3]
 1014 0252 1202     		lsl	r2, r2, #8
 1015 0254 1A43     		orr	r2, r3
 1016 0256 B218     		add	r2, r6, r2
2141:.\sd/ff.c     **** 		if (disk_read(fs->drv, fs->win, fs->fsi_sector, 1) == RES_OK &&
 1017              		.loc 1 2141 0
 1018 0258 261C     		mov	r6, r4
 1019              	.LVL114:
 1020 025a 3036     		add	r6, r6, #48
2140:.\sd/ff.c     **** 		fs->fsi_sector = bsect + LD_WORD(fs->win+BPB_FSInfo);
 1021              		.loc 1 2140 0
 1022 025c 6261     		str	r2, [r4, #20]
 1023              		.loc 1 2141 0
 1024 025e 6078     		ldrb	r0, [r4, #1]
 1025 0260 311C     		mov	r1, r6
 1026 0262 0123     		mov	r3, #1
 1027 0264 FFF7FEFF 		bl	disk_read
 1028              	.LVL115:
 1029 0268 0028     		cmp	r0, #0
 1030 026a 4ED1     		bne	.L85
2142:.\sd/ff.c     **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
 1031              		.loc 1 2142 0 discriminator 1
 1032 026c 364B     		ldr	r3, .L119+16
 1033 026e 374A     		ldr	r2, .L119+20
 1034 0270 E35C     		ldrb	r3, [r4, r3]
 1035 0272 A25C     		ldrb	r2, [r4, r2]
 1036 0274 1B02     		lsl	r3, r3, #8
 1037 0276 1343     		orr	r3, r2
2141:.\sd/ff.c     **** 		if (disk_read(fs->drv, fs->win, fs->fsi_sector, 1) == RES_OK &&
 1038              		.loc 1 2141 0 discriminator 1
 1039 0278 354A     		ldr	r2, .L119+24
 1040 027a 1BB2     		sxth	r3, r3
 1041 027c 9342     		cmp	r3, r2
 1042 027e 44D1     		bne	.L85
2143:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
 1043              		.loc 1 2143 0
 1044 0280 231C     		mov	r3, r4
 1045 0282 3333     		add	r3, r3, #51
 1046 0284 1B78     		ldrb	r3, [r3]
 1047 0286 1A06     		lsl	r2, r3, #24
 1048 0288 231C     		mov	r3, r4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 58


 1049 028a 3233     		add	r3, r3, #50
 1050 028c 1B78     		ldrb	r3, [r3]
 1051 028e 1B04     		lsl	r3, r3, #16
 1052 0290 1343     		orr	r3, r2
 1053 0292 3278     		ldrb	r2, [r6]
 1054 0294 1343     		orr	r3, r2
 1055 0296 221C     		mov	r2, r4
 1056 0298 3132     		add	r2, r2, #49
 1057 029a 1278     		ldrb	r2, [r2]
 1058 029c 1202     		lsl	r2, r2, #8
 1059 029e 1343     		orr	r3, r2
2142:.\sd/ff.c     **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
 1060              		.loc 1 2142 0
 1061 02a0 2C4A     		ldr	r2, .L119+28
 1062 02a2 9342     		cmp	r3, r2
 1063 02a4 31D1     		bne	.L85
2144:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272) {
 1064              		.loc 1 2144 0
 1065 02a6 2C4B     		ldr	r3, .L119+32
 1066 02a8 E35C     		ldrb	r3, [r4, r3]
 1067 02aa 1A06     		lsl	r2, r3, #24
 1068 02ac 2B4B     		ldr	r3, .L119+36
 1069 02ae E35C     		ldrb	r3, [r4, r3]
 1070 02b0 1B04     		lsl	r3, r3, #16
 1071 02b2 1343     		orr	r3, r2
 1072 02b4 8522     		mov	r2, #133
 1073 02b6 9200     		lsl	r2, r2, #2
 1074 02b8 A25C     		ldrb	r2, [r4, r2]
 1075 02ba 1343     		orr	r3, r2
 1076 02bc 284A     		ldr	r2, .L119+40
 1077 02be A25C     		ldrb	r2, [r4, r2]
 1078 02c0 1202     		lsl	r2, r2, #8
 1079 02c2 1343     		orr	r3, r2
2143:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
 1080              		.loc 1 2143 0
 1081 02c4 274A     		ldr	r2, .L119+44
 1082 02c6 9342     		cmp	r3, r2
 1083 02c8 1FD1     		bne	.L85
2145:.\sd/ff.c     **** 				fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
 1084              		.loc 1 2145 0
 1085 02ca 274B     		ldr	r3, .L119+48
 1086 02cc E35C     		ldrb	r3, [r4, r3]
 1087 02ce 1A06     		lsl	r2, r3, #24
 1088 02d0 264B     		ldr	r3, .L119+52
 1089 02d2 E35C     		ldrb	r3, [r4, r3]
 1090 02d4 1B04     		lsl	r3, r3, #16
 1091 02d6 1343     		orr	r3, r2
 1092 02d8 8722     		mov	r2, #135
 1093 02da 9200     		lsl	r2, r2, #2
 1094 02dc A25C     		ldrb	r2, [r4, r2]
 1095 02de 1343     		orr	r3, r2
 1096 02e0 234A     		ldr	r2, .L119+56
 1097 02e2 A25C     		ldrb	r2, [r4, r2]
 1098 02e4 1202     		lsl	r2, r2, #8
 1099 02e6 1343     		orr	r3, r2
 1100 02e8 E360     		str	r3, [r4, #12]
2146:.\sd/ff.c     **** 				fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 59


 1101              		.loc 1 2146 0
 1102 02ea 224B     		ldr	r3, .L119+60
 1103 02ec E35C     		ldrb	r3, [r4, r3]
 1104 02ee 1A06     		lsl	r2, r3, #24
 1105 02f0 214B     		ldr	r3, .L119+64
 1106 02f2 E35C     		ldrb	r3, [r4, r3]
 1107 02f4 1B04     		lsl	r3, r3, #16
 1108 02f6 1343     		orr	r3, r2
 1109 02f8 8622     		mov	r2, #134
 1110 02fa 9200     		lsl	r2, r2, #2
 1111 02fc A25C     		ldrb	r2, [r4, r2]
 1112 02fe 1343     		orr	r3, r2
 1113 0300 1E4A     		ldr	r2, .L119+68
 1114 0302 A25C     		ldrb	r2, [r4, r2]
 1115 0304 1202     		lsl	r2, r2, #8
 1116 0306 1343     		orr	r3, r2
 1117 0308 2361     		str	r3, [r4, #16]
 1118              	.L85:
2147:.\sd/ff.c     **** 		}
2148:.\sd/ff.c     **** 	}
2149:.\sd/ff.c     **** #endif
2150:.\sd/ff.c     **** 	fs->fs_type = fmt;		/* FAT sub-type */
2151:.\sd/ff.c     **** 	fs->id = ++Fsid;		/* File system mount ID */
 1119              		.loc 1 2151 0
 1120 030a 0B4A     		ldr	r2, .L119
2150:.\sd/ff.c     **** 	fs->id = ++Fsid;		/* File system mount ID */
 1121              		.loc 1 2150 0
 1122 030c 2570     		strb	r5, [r4]
 1123              		.loc 1 2151 0
 1124 030e 138D     		ldrh	r3, [r2, #40]
 1125 0310 0133     		add	r3, r3, #1
 1126 0312 9BB2     		uxth	r3, r3
 1127 0314 1385     		strh	r3, [r2, #40]
 1128 0316 E380     		strh	r3, [r4, #6]
2152:.\sd/ff.c     **** 	fs->winsect = 0;		/* Invalidate sector cache */
 1129              		.loc 1 2152 0
 1130 0318 0023     		mov	r3, #0
 1131 031a E362     		str	r3, [r4, #44]
2153:.\sd/ff.c     **** 	fs->wflag = 0;
 1132              		.loc 1 2153 0
 1133 031c 2371     		strb	r3, [r4, #4]
 1134              	.LVL116:
 1135              	.L88:
 1136              	.LBB9:
 1137              	.LBB10:
 707:.\sd/ff.c     **** 	}
 1138              		.loc 1 707 0
 1139 031e D158     		ldr	r1, [r2, r3]
 1140 0320 A142     		cmp	r1, r4
 1141 0322 01D1     		bne	.L87
 1142 0324 0021     		mov	r1, #0
 1143 0326 D150     		str	r1, [r2, r3]
 1144              	.L87:
 1145 0328 0C33     		add	r3, r3, #12
 706:.\sd/ff.c     **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 1146              		.loc 1 706 0
 1147 032a 242B     		cmp	r3, #36
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 60


 1148 032c F7D1     		bne	.L88
 1149              	.LBE10:
 1150              	.LBE9:
2154:.\sd/ff.c     **** #if _FS_RPATH
2155:.\sd/ff.c     **** 	fs->cdir = 0;			/* Current directory (root dir) */
2156:.\sd/ff.c     **** #endif
2157:.\sd/ff.c     **** #if _FS_SHARE				/* Clear file lock semaphores */
2158:.\sd/ff.c     **** 	clear_lock(fs);
2159:.\sd/ff.c     **** #endif
2160:.\sd/ff.c     **** 
2161:.\sd/ff.c     **** 	return FR_OK;
 1151              		.loc 1 2161 0
 1152 032e 0023     		mov	r3, #0
 1153              	.LVL117:
 1154              	.L67:
2162:.\sd/ff.c     **** }
 1155              		.loc 1 2162 0
 1156 0330 181C     		mov	r0, r3
 1157 0332 05B0     		add	sp, sp, #20
 1158              		@ sp needed
 1159 0334 F0BD     		pop	{r4, r5, r6, r7, pc}
 1160              	.L120:
 1161 0336 C046     		.align	2
 1162              	.L119:
 1163 0338 00000000 		.word	.LANCHOR0
 1164 033c F50F0000 		.word	4085
 1165 0340 F5FF0000 		.word	65525
 1166 0344 FF010000 		.word	511
 1167 0348 2F020000 		.word	559
 1168 034c 2E020000 		.word	558
 1169 0350 55AAFFFF 		.word	-21931
 1170 0354 52526141 		.word	1096897106
 1171 0358 17020000 		.word	535
 1172 035c 16020000 		.word	534
 1173 0360 15020000 		.word	533
 1174 0364 72724161 		.word	1631679090
 1175 0368 1F020000 		.word	543
 1176 036c 1E020000 		.word	542
 1177 0370 1D020000 		.word	541
 1178 0374 1B020000 		.word	539
 1179 0378 1A020000 		.word	538
 1180 037c 19020000 		.word	537
 1181              		.cfi_endproc
 1182              	.LFE26:
 1183              		.size	chk_mounted, .-chk_mounted
 1184              		.section	.text.validate,"ax",%progbits
 1185              		.align	1
 1186              		.code	16
 1187              		.thumb_func
 1188              		.type	validate, %function
 1189              	validate:
 1190              	.LFB27:
2163:.\sd/ff.c     **** 
2164:.\sd/ff.c     **** 
2165:.\sd/ff.c     **** 
2166:.\sd/ff.c     **** 
2167:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 61


2168:.\sd/ff.c     **** /* Check if the file/dir object is valid or not                          */
2169:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2170:.\sd/ff.c     **** 
2171:.\sd/ff.c     **** static
2172:.\sd/ff.c     **** FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
2173:.\sd/ff.c     **** 	FATFS *fs,		/* Pointer to the file system object */
2174:.\sd/ff.c     **** 	WORD id			/* Member id of the target object to be checked */
2175:.\sd/ff.c     **** )
2176:.\sd/ff.c     **** {
 1191              		.loc 1 2176 0
 1192              		.cfi_startproc
 1193              	.LVL118:
 1194 0000 08B5     		push	{r3, lr}
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 3, -8
 1197              		.cfi_offset 14, -4
2177:.\sd/ff.c     **** 	if (!fs || !fs->fs_type || fs->id != id)
2178:.\sd/ff.c     **** 		return FR_INVALID_OBJECT;
 1198              		.loc 1 2178 0
 1199 0002 0923     		mov	r3, #9
2177:.\sd/ff.c     **** 	if (!fs || !fs->fs_type || fs->id != id)
 1200              		.loc 1 2177 0
 1201 0004 0028     		cmp	r0, #0
 1202 0006 0CD0     		beq	.L122
2177:.\sd/ff.c     **** 	if (!fs || !fs->fs_type || fs->id != id)
 1203              		.loc 1 2177 0 is_stmt 0 discriminator 1
 1204 0008 0278     		ldrb	r2, [r0]
 1205 000a 002A     		cmp	r2, #0
 1206 000c 09D0     		beq	.L122
2177:.\sd/ff.c     **** 	if (!fs || !fs->fs_type || fs->id != id)
 1207              		.loc 1 2177 0 discriminator 2
 1208 000e C288     		ldrh	r2, [r0, #6]
 1209 0010 8A42     		cmp	r2, r1
 1210 0012 06D1     		bne	.L122
 1211              	.LVL119:
 1212              	.LBB13:
 1213              	.LBB14:
2179:.\sd/ff.c     **** 
2180:.\sd/ff.c     **** 	ENTER_FF(fs);		/* Lock file system */
2181:.\sd/ff.c     **** 
2182:.\sd/ff.c     **** 	if (disk_status(fs->drv) & STA_NOINIT)
 1214              		.loc 1 2182 0 is_stmt 1
 1215 0014 4078     		ldrb	r0, [r0, #1]
 1216              	.LVL120:
 1217 0016 FFF7FEFF 		bl	disk_status
 1218              	.LVL121:
2183:.\sd/ff.c     **** 		return FR_NOT_READY;
 1219              		.loc 1 2183 0
 1220 001a 0323     		mov	r3, #3
2184:.\sd/ff.c     **** 
2185:.\sd/ff.c     **** 	return FR_OK;
 1221              		.loc 1 2185 0
 1222 001c C007     		lsl	r0, r0, #31
 1223 001e C017     		asr	r0, r0, #31
 1224 0020 0340     		and	r3, r0
 1225              	.LVL122:
 1226              	.L122:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 62


 1227              	.LBE14:
 1228              	.LBE13:
2186:.\sd/ff.c     **** }
 1229              		.loc 1 2186 0
 1230 0022 181C     		mov	r0, r3
 1231              		@ sp needed
 1232 0024 08BD     		pop	{r3, pc}
 1233              		.cfi_endproc
 1234              	.LFE27:
 1235              		.size	validate, .-validate
 1236              		.section	.text.sync,"ax",%progbits
 1237              		.align	1
 1238              		.code	16
 1239              		.thumb_func
 1240              		.type	sync, %function
 1241              	sync:
 1242              	.LFB10:
 764:.\sd/ff.c     **** 	FRESULT res;
 1243              		.loc 1 764 0
 1244              		.cfi_startproc
 1245              	.LVL123:
 1246 0000 38B5     		push	{r3, r4, r5, lr}
 1247              		.cfi_def_cfa_offset 16
 1248              		.cfi_offset 3, -16
 1249              		.cfi_offset 4, -12
 1250              		.cfi_offset 5, -8
 1251              		.cfi_offset 14, -4
 768:.\sd/ff.c     **** 	if (res == FR_OK) {
 1252              		.loc 1 768 0
 1253 0002 0021     		mov	r1, #0
 764:.\sd/ff.c     **** 	FRESULT res;
 1254              		.loc 1 764 0
 1255 0004 041C     		mov	r4, r0
 768:.\sd/ff.c     **** 	if (res == FR_OK) {
 1256              		.loc 1 768 0
 1257 0006 FFF7FEFF 		bl	move_window
 1258              	.LVL124:
 1259 000a 031E     		sub	r3, r0, #0
 1260              	.LVL125:
 769:.\sd/ff.c     **** 		/* Update FSInfo sector if needed */
 1261              		.loc 1 769 0
 1262 000c 56D1     		bne	.L129
 771:.\sd/ff.c     **** 			fs->winsect = 0;
 1263              		.loc 1 771 0
 1264 000e 2278     		ldrb	r2, [r4]
 1265 0010 032A     		cmp	r2, #3
 1266 0012 4BD1     		bne	.L130
 771:.\sd/ff.c     **** 			fs->winsect = 0;
 1267              		.loc 1 771 0 is_stmt 0 discriminator 1
 1268 0014 6279     		ldrb	r2, [r4, #5]
 1269 0016 002A     		cmp	r2, #0
 1270 0018 48D0     		beq	.L130
 774:.\sd/ff.c     **** 			ST_WORD(fs->win+BS_55AA, 0xAA55);
 1271              		.loc 1 774 0 is_stmt 1
 1272 001a 211C     		mov	r1, r4
 1273 001c 8C22     		mov	r2, #140
 1274 001e 3031     		add	r1, r1, #48
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 63


 1275              	.LVL126:
 772:.\sd/ff.c     **** 			/* Create FSInfo structure */
 1276              		.loc 1 772 0
 1277 0020 E362     		str	r3, [r4, #44]
 1278 0022 0B1C     		mov	r3, r1
 1279              	.LVL127:
 1280 0024 9200     		lsl	r2, r2, #2
 1281 0026 A218     		add	r2, r4, r2
 1282              	.LVL128:
 1283              	.L131:
 1284              	.LBB17:
 1285              	.LBB18:
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 1286              		.loc 1 549 0
 1287 0028 9342     		cmp	r3, r2
 1288 002a 03D0     		beq	.L136
 1289              	.LVL129:
 550:.\sd/ff.c     **** }
 1290              		.loc 1 550 0
 1291 002c 0020     		mov	r0, #0
 1292 002e 1870     		strb	r0, [r3]
 1293 0030 0133     		add	r3, r3, #1
 1294              	.LVL130:
 1295 0032 F9E7     		b	.L131
 1296              	.LVL131:
 1297              	.L136:
 1298              	.LBE18:
 1299              	.LBE17:
 775:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_LeadSig, 0x41615252);
 1300              		.loc 1 775 0
 1301 0034 5522     		mov	r2, #85
 1302 0036 224B     		ldr	r3, .L137
 1303              	.LVL132:
 776:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_StrucSig, 0x61417272);
 1304              		.loc 1 776 0
 1305 0038 4120     		mov	r0, #65
 775:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_LeadSig, 0x41615252);
 1306              		.loc 1 775 0
 1307 003a E254     		strb	r2, [r4, r3]
 1308 003c 214B     		ldr	r3, .L137+4
 1309 003e 9218     		add	r2, r2, r2
 1310 0040 E254     		strb	r2, [r4, r3]
 776:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_StrucSig, 0x61417272);
 1311              		.loc 1 776 0
 1312 0042 221C     		mov	r2, r4
 1313 0044 DE3B     		sub	r3, r3, #222
 1314 0046 FF3B     		sub	r3, r3, #255
 1315 0048 3132     		add	r2, r2, #49
 1316 004a 0B70     		strb	r3, [r1]
 1317 004c 1370     		strb	r3, [r2]
 1318 004e 231C     		mov	r3, r4
 1319 0050 6122     		mov	r2, #97
 1320 0052 3233     		add	r3, r3, #50
 777:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Free_Count, fs->free_clust);
 1321              		.loc 1 777 0
 1322 0054 8525     		mov	r5, #133
 776:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_StrucSig, 0x61417272);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 64


 1323              		.loc 1 776 0
 1324 0056 1A70     		strb	r2, [r3]
 1325 0058 5870     		strb	r0, [r3, #1]
 777:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Free_Count, fs->free_clust);
 1326              		.loc 1 777 0
 1327 005a 7223     		mov	r3, #114
 1328 005c AD00     		lsl	r5, r5, #2
 1329 005e 6355     		strb	r3, [r4, r5]
 1330 0060 194D     		ldr	r5, .L137+8
 1331 0062 6355     		strb	r3, [r4, r5]
 1332 0064 194B     		ldr	r3, .L137+12
 1333 0066 E054     		strb	r0, [r4, r3]
 1334 0068 194B     		ldr	r3, .L137+16
 1335 006a E254     		strb	r2, [r4, r3]
 778:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Nxt_Free, fs->last_clust);
 1336              		.loc 1 778 0
 1337 006c 2369     		ldr	r3, [r4, #16]
 1338 006e B832     		add	r2, r2, #184
 1339 0070 FF32     		add	r2, r2, #255
 1340 0072 A354     		strb	r3, [r4, r2]
 1341 0074 174A     		ldr	r2, .L137+20
 1342 0076 180A     		lsr	r0, r3, #8
 1343 0078 A054     		strb	r0, [r4, r2]
 1344 007a 174A     		ldr	r2, .L137+24
 1345 007c 180C     		lsr	r0, r3, #16
 1346 007e A054     		strb	r0, [r4, r2]
 1347 0080 164A     		ldr	r2, .L137+28
 1348 0082 1B0E     		lsr	r3, r3, #24
 1349 0084 A354     		strb	r3, [r4, r2]
 779:.\sd/ff.c     **** 			/* Write it into the FSInfo sector */
 1350              		.loc 1 779 0
 1351 0086 E368     		ldr	r3, [r4, #12]
 1352 0088 0132     		add	r2, r2, #1
 1353 008a A354     		strb	r3, [r4, r2]
 1354 008c 144A     		ldr	r2, .L137+32
 1355 008e 180A     		lsr	r0, r3, #8
 1356 0090 A054     		strb	r0, [r4, r2]
 1357 0092 144A     		ldr	r2, .L137+36
 1358 0094 180C     		lsr	r0, r3, #16
 1359 0096 A054     		strb	r0, [r4, r2]
 1360 0098 134A     		ldr	r2, .L137+40
 1361 009a 1B0E     		lsr	r3, r3, #24
 1362 009c A354     		strb	r3, [r4, r2]
 781:.\sd/ff.c     **** 			fs->fsi_flag = 0;
 1363              		.loc 1 781 0
 1364 009e 6078     		ldrb	r0, [r4, #1]
 1365 00a0 0123     		mov	r3, #1
 1366 00a2 6269     		ldr	r2, [r4, #20]
 1367 00a4 FFF7FEFF 		bl	disk_write
 1368              	.LVL133:
 782:.\sd/ff.c     **** 		}
 1369              		.loc 1 782 0
 1370 00a8 0023     		mov	r3, #0
 1371 00aa 6371     		strb	r3, [r4, #5]
 1372              	.LVL134:
 1373              	.L130:
 785:.\sd/ff.c     **** 			res = FR_DISK_ERR;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 65


 1374              		.loc 1 785 0
 1375 00ac 0021     		mov	r1, #0
 1376 00ae 6078     		ldrb	r0, [r4, #1]
 1377 00b0 0A1C     		mov	r2, r1
 1378 00b2 FFF7FEFF 		bl	disk_ioctl
 1379              	.LVL135:
 1380 00b6 431E     		sub	r3, r0, #1
 1381 00b8 9841     		sbc	r0, r0, r3
 1382 00ba C0B2     		uxtb	r0, r0
 1383              	.L129:
 1384              	.LVL136:
 790:.\sd/ff.c     **** #endif
 1385              		.loc 1 790 0
 1386              		@ sp needed
 1387              	.LVL137:
 1388 00bc 38BD     		pop	{r3, r4, r5, pc}
 1389              	.L138:
 1390 00be C046     		.align	2
 1391              	.L137:
 1392 00c0 2E020000 		.word	558
 1393 00c4 2F020000 		.word	559
 1394 00c8 15020000 		.word	533
 1395 00cc 16020000 		.word	534
 1396 00d0 17020000 		.word	535
 1397 00d4 19020000 		.word	537
 1398 00d8 1A020000 		.word	538
 1399 00dc 1B020000 		.word	539
 1400 00e0 1D020000 		.word	541
 1401 00e4 1E020000 		.word	542
 1402 00e8 1F020000 		.word	543
 1403              		.cfi_endproc
 1404              	.LFE10:
 1405              		.size	sync, .-sync
 1406              		.section	.text.clust2sect,"ax",%progbits
 1407              		.align	1
 1408              		.global	clust2sect
 1409              		.code	16
 1410              		.thumb_func
 1411              		.type	clust2sect, %function
 1412              	clust2sect:
 1413              	.LFB11:
 805:.\sd/ff.c     **** 	clst -= 2;
 1414              		.loc 1 805 0
 1415              		.cfi_startproc
 1416              	.LVL138:
 807:.\sd/ff.c     **** 	return clst * fs->csize + fs->database;
 1417              		.loc 1 807 0
 1418 0000 8369     		ldr	r3, [r0, #24]
 806:.\sd/ff.c     **** 	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
 1419              		.loc 1 806 0
 1420 0002 0239     		sub	r1, r1, #2
 1421              	.LVL139:
 807:.\sd/ff.c     **** 	return clst * fs->csize + fs->database;
 1422              		.loc 1 807 0
 1423 0004 9A1E     		sub	r2, r3, #2
 1424 0006 0023     		mov	r3, #0
 1425 0008 9142     		cmp	r1, r2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 66


 1426 000a 03D2     		bcs	.L140
 808:.\sd/ff.c     **** }
 1427              		.loc 1 808 0
 1428 000c 8378     		ldrb	r3, [r0, #2]
 1429 000e 826A     		ldr	r2, [r0, #40]
 1430 0010 5943     		mul	r1, r3
 1431              	.LVL140:
 1432 0012 8B18     		add	r3, r1, r2
 1433              	.L140:
 809:.\sd/ff.c     **** 
 1434              		.loc 1 809 0
 1435 0014 181C     		mov	r0, r3
 1436              	.LVL141:
 1437              		@ sp needed
 1438 0016 7047     		bx	lr
 1439              		.cfi_endproc
 1440              	.LFE11:
 1441              		.size	clust2sect, .-clust2sect
 1442              		.section	.text.get_fat,"ax",%progbits
 1443              		.align	1
 1444              		.global	get_fat
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	get_fat, %function
 1448              	get_fat:
 1449              	.LFB12:
 823:.\sd/ff.c     **** 	UINT wc, bc;
 1450              		.loc 1 823 0
 1451              		.cfi_startproc
 1452              	.LVL142:
 1453 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1454              		.cfi_def_cfa_offset 32
 1455              		.cfi_offset 0, -32
 1456              		.cfi_offset 1, -28
 1457              		.cfi_offset 2, -24
 1458              		.cfi_offset 4, -20
 1459              		.cfi_offset 5, -16
 1460              		.cfi_offset 6, -12
 1461              		.cfi_offset 7, -8
 1462              		.cfi_offset 14, -4
 829:.\sd/ff.c     **** 
 1463              		.loc 1 829 0
 1464 0002 0124     		mov	r4, #1
 828:.\sd/ff.c     **** 		return 1;
 1465              		.loc 1 828 0
 1466 0004 A142     		cmp	r1, r4
 1467 0006 65D9     		bls	.L143
 828:.\sd/ff.c     **** 		return 1;
 1468              		.loc 1 828 0 is_stmt 0 discriminator 1
 1469 0008 8369     		ldr	r3, [r0, #24]
 1470 000a 9942     		cmp	r1, r3
 1471 000c 62D2     		bcs	.L143
 1472              	.LBB21:
 1473              	.LBB22:
 831:.\sd/ff.c     **** 	case FS_FAT12 :
 1474              		.loc 1 831 0 is_stmt 1
 1475 000e 0378     		ldrb	r3, [r0]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 67


 1476 0010 0F1C     		mov	r7, r1
 1477 0012 051C     		mov	r5, r0
 1478              	.LVL143:
 1479 0014 022B     		cmp	r3, #2
 1480 0016 2AD0     		beq	.L144
 1481 0018 032B     		cmp	r3, #3
 1482 001a 3CD0     		beq	.L145
 1483 001c A342     		cmp	r3, r4
 1484 001e 57D1     		bne	.L153
 1485              	.LVL144:
 833:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 1486              		.loc 1 833 0
 1487 0020 4E08     		lsr	r6, r1, #1
 1488 0022 7618     		add	r6, r6, r1
 1489              	.LVL145:
 834:.\sd/ff.c     **** 		wc = fs->win[bc % SS(fs)]; bc++;
 1490              		.loc 1 834 0
 1491 0024 036A     		ldr	r3, [r0, #32]
 1492 0026 710A     		lsr	r1, r6, #9
 1493              	.LVL146:
 1494 0028 C918     		add	r1, r1, r3
 1495 002a FFF7FEFF 		bl	move_window
 1496              	.LVL147:
 1497 002e 0028     		cmp	r0, #0
 1498 0030 4ED1     		bne	.L153
 835:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 1499              		.loc 1 835 0
 1500 0032 F305     		lsl	r3, r6, #23
 1501 0034 DB0D     		lsr	r3, r3, #23
 1502 0036 EB18     		add	r3, r5, r3
 1503 0038 3033     		add	r3, r3, #48
 1504 003a 1B78     		ldrb	r3, [r3]
 1505 003c 0136     		add	r6, r6, #1
 1506              	.LVL148:
 1507 003e 0193     		str	r3, [sp, #4]
 1508              	.LVL149:
 836:.\sd/ff.c     **** 		wc |= fs->win[bc % SS(fs)] << 8;
 1509              		.loc 1 836 0
 1510 0040 2B6A     		ldr	r3, [r5, #32]
 1511 0042 710A     		lsr	r1, r6, #9
 1512 0044 C918     		add	r1, r1, r3
 1513 0046 281C     		mov	r0, r5
 1514 0048 FFF7FEFF 		bl	move_window
 1515              	.LVL150:
 1516 004c 0028     		cmp	r0, #0
 1517 004e 3FD1     		bne	.L153
 837:.\sd/ff.c     **** 		return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 1518              		.loc 1 837 0
 1519 0050 F605     		lsl	r6, r6, #23
 1520              	.LVL151:
 1521 0052 F60D     		lsr	r6, r6, #23
 1522 0054 AD19     		add	r5, r5, r6
 1523              	.LVL152:
 1524 0056 3035     		add	r5, r5, #48
 1525 0058 2B78     		ldrb	r3, [r5]
 1526 005a 019A     		ldr	r2, [sp, #4]
 1527 005c 1B02     		lsl	r3, r3, #8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 68


 1528 005e 1343     		orr	r3, r2
 1529              	.LVL153:
 838:.\sd/ff.c     **** 
 1530              		.loc 1 838 0
 1531 0060 2742     		tst	r7, r4
 1532 0062 01D0     		beq	.L149
 1533 0064 1C09     		lsr	r4, r3, #4
 1534 0066 35E0     		b	.L143
 1535              	.L149:
 1536 0068 1C05     		lsl	r4, r3, #20
 1537 006a 240D     		lsr	r4, r4, #20
 1538 006c 32E0     		b	.L143
 1539              	.LVL154:
 1540              	.L144:
 841:.\sd/ff.c     **** 		p = &fs->win[clst * 2 % SS(fs)];
 1541              		.loc 1 841 0
 1542 006e 036A     		ldr	r3, [r0, #32]
 1543 0070 090A     		lsr	r1, r1, #8
 1544              	.LVL155:
 1545 0072 C918     		add	r1, r1, r3
 1546 0074 FFF7FEFF 		bl	move_window
 1547              	.LVL156:
 1548 0078 0028     		cmp	r0, #0
 1549 007a 29D1     		bne	.L153
 842:.\sd/ff.c     **** 		return LD_WORD(p);
 1550              		.loc 1 842 0
 1551 007c FF23     		mov	r3, #255
 1552 007e 7F00     		lsl	r7, r7, #1
 1553              	.LVL157:
 1554 0080 5B00     		lsl	r3, r3, #1
 1555 0082 1F40     		and	r7, r3
 1556              	.LVL158:
 843:.\sd/ff.c     **** 
 1557              		.loc 1 843 0
 1558 0084 EB19     		add	r3, r5, r7
 842:.\sd/ff.c     **** 		return LD_WORD(p);
 1559              		.loc 1 842 0
 1560 0086 3037     		add	r7, r7, #48
 1561              	.LVL159:
 843:.\sd/ff.c     **** 
 1562              		.loc 1 843 0
 1563 0088 ED19     		add	r5, r5, r7
 1564              	.LVL160:
 1565 008a 3033     		add	r3, r3, #48
 1566              	.LVL161:
 1567 008c 6C78     		ldrb	r4, [r5, #1]
 1568 008e 1B78     		ldrb	r3, [r3]
 1569              	.LVL162:
 1570 0090 2402     		lsl	r4, r4, #8
 1571 0092 1C43     		orr	r4, r3
 1572 0094 1EE0     		b	.L143
 1573              	.LVL163:
 1574              	.L145:
 846:.\sd/ff.c     **** 		p = &fs->win[clst * 4 % SS(fs)];
 1575              		.loc 1 846 0
 1576 0096 036A     		ldr	r3, [r0, #32]
 1577 0098 C909     		lsr	r1, r1, #7
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 69


 1578              	.LVL164:
 1579 009a C918     		add	r1, r1, r3
 1580 009c FFF7FEFF 		bl	move_window
 1581              	.LVL165:
 1582 00a0 0028     		cmp	r0, #0
 1583 00a2 15D1     		bne	.L153
 847:.\sd/ff.c     **** 		return LD_DWORD(p) & 0x0FFFFFFF;
 1584              		.loc 1 847 0
 1585 00a4 FD30     		add	r0, r0, #253
 1586 00a6 BF00     		lsl	r7, r7, #2
 1587              	.LVL166:
 1588 00a8 FF30     		add	r0, r0, #255
 1589 00aa 0740     		and	r7, r0
 1590 00ac 3A1C     		mov	r2, r7
 1591 00ae 3032     		add	r2, r2, #48
 1592 00b0 AA18     		add	r2, r5, r2
 1593              	.LVL167:
 848:.\sd/ff.c     **** 	}
 1594              		.loc 1 848 0
 1595 00b2 9478     		ldrb	r4, [r2, #2]
 1596 00b4 D378     		ldrb	r3, [r2, #3]
 1597 00b6 2404     		lsl	r4, r4, #16
 1598 00b8 1B06     		lsl	r3, r3, #24
 1599 00ba 1C43     		orr	r4, r3
 1600 00bc 5378     		ldrb	r3, [r2, #1]
 1601 00be EF19     		add	r7, r5, r7
 1602 00c0 1B02     		lsl	r3, r3, #8
 1603 00c2 3037     		add	r7, r7, #48
 1604 00c4 1C43     		orr	r4, r3
 1605 00c6 3B78     		ldrb	r3, [r7]
 1606 00c8 1C43     		orr	r4, r3
 1607 00ca 2401     		lsl	r4, r4, #4
 1608 00cc 2409     		lsr	r4, r4, #4
 1609 00ce 01E0     		b	.L143
 1610              	.LVL168:
 1611              	.L153:
 851:.\sd/ff.c     **** }
 1612              		.loc 1 851 0
 1613 00d0 0124     		mov	r4, #1
 1614 00d2 6442     		neg	r4, r4
 1615              	.LVL169:
 1616              	.L143:
 1617              	.LBE22:
 1618              	.LBE21:
 852:.\sd/ff.c     **** 
 1619              		.loc 1 852 0
 1620 00d4 201C     		mov	r0, r4
 1621              		@ sp needed
 1622 00d6 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 1623              		.cfi_endproc
 1624              	.LFE12:
 1625              		.size	get_fat, .-get_fat
 1626              		.section	.text.dir_sdi,"ax",%progbits
 1627              		.align	1
 1628              		.code	16
 1629              		.thumb_func
 1630              		.type	dir_sdi, %function
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 70


 1631              	dir_sdi:
 1632              	.LFB16:
1069:.\sd/ff.c     **** 	DWORD clst;
 1633              		.loc 1 1069 0
 1634              		.cfi_startproc
 1635              	.LVL170:
 1636 0000 70B5     		push	{r4, r5, r6, lr}
 1637              		.cfi_def_cfa_offset 16
 1638              		.cfi_offset 4, -16
 1639              		.cfi_offset 5, -12
 1640              		.cfi_offset 6, -8
 1641              		.cfi_offset 14, -4
1069:.\sd/ff.c     **** 	DWORD clst;
 1642              		.loc 1 1069 0
 1643 0002 041C     		mov	r4, r0
 1644 0004 0D1C     		mov	r5, r1
1074:.\sd/ff.c     **** 	clst = dj->sclust;
 1645              		.loc 1 1074 0
 1646 0006 E180     		strh	r1, [r4, #6]
1075:.\sd/ff.c     **** 	if (clst == 1 || clst >= dj->fs->n_fatent)	/* Check start cluster range */
 1647              		.loc 1 1075 0
 1648 0008 8168     		ldr	r1, [r0, #8]
 1649              	.LVL171:
1076:.\sd/ff.c     **** 		return FR_INT_ERR;
 1650              		.loc 1 1076 0
 1651 000a 0129     		cmp	r1, #1
 1652 000c 01D1     		bne	.L155
 1653              	.LVL172:
 1654              	.L157:
1077:.\sd/ff.c     **** 	if (!clst && dj->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 1655              		.loc 1 1077 0
 1656 000e 0220     		mov	r0, #2
 1657 0010 39E0     		b	.L156
 1658              	.LVL173:
 1659              	.L155:
1076:.\sd/ff.c     **** 		return FR_INT_ERR;
 1660              		.loc 1 1076 0 discriminator 1
 1661 0012 0368     		ldr	r3, [r0]
 1662 0014 9A69     		ldr	r2, [r3, #24]
 1663 0016 9142     		cmp	r1, r2
 1664 0018 F9D2     		bcs	.L157
1078:.\sd/ff.c     **** 		clst = dj->fs->dirbase;
 1665              		.loc 1 1078 0
 1666 001a 0029     		cmp	r1, #0
 1667 001c 0FD1     		bne	.L158
1078:.\sd/ff.c     **** 		clst = dj->fs->dirbase;
 1668              		.loc 1 1078 0 is_stmt 0 discriminator 1
 1669 001e 1A78     		ldrb	r2, [r3]
 1670 0020 032A     		cmp	r2, #3
 1671 0022 02D1     		bne	.L159
1079:.\sd/ff.c     **** 
 1672              		.loc 1 1079 0 is_stmt 1
 1673 0024 596A     		ldr	r1, [r3, #36]
 1674              	.LVL174:
1081:.\sd/ff.c     **** 		dj->clust = clst;
 1675              		.loc 1 1081 0
 1676 0026 0029     		cmp	r1, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 71


 1677 0028 09D1     		bne	.L158
 1678              	.L159:
 1679              	.LVL175:
1082:.\sd/ff.c     **** 		if (idx >= dj->fs->n_rootdir)		/* Index is out of range */
 1680              		.loc 1 1082 0
 1681 002a 0022     		mov	r2, #0
 1682 002c E260     		str	r2, [r4, #12]
1083:.\sd/ff.c     **** 			return FR_INT_ERR;
 1683              		.loc 1 1083 0
 1684 002e 1A89     		ldrh	r2, [r3, #8]
 1685 0030 AA42     		cmp	r2, r5
 1686 0032 ECD9     		bls	.L157
1085:.\sd/ff.c     **** 	}
 1687              		.loc 1 1085 0
 1688 0034 5A6A     		ldr	r2, [r3, #36]
 1689 0036 2909     		lsr	r1, r5, #4
 1690 0038 8B18     		add	r3, r1, r2
 1691 003a 2361     		str	r3, [r4, #16]
 1692 003c 19E0     		b	.L160
 1693              	.LVL176:
 1694              	.L158:
1088:.\sd/ff.c     **** 		while (idx >= ic) {	/* Follow cluster chain */
 1695              		.loc 1 1088 0
 1696 003e 9E78     		ldrb	r6, [r3, #2]
 1697 0040 3601     		lsl	r6, r6, #4
 1698              	.LVL177:
 1699              	.L161:
1089:.\sd/ff.c     **** 			clst = get_fat(dj->fs, clst);				/* Get next cluster */
 1700              		.loc 1 1089 0
 1701 0042 B542     		cmp	r5, r6
 1702 0044 0ED3     		bcc	.L164
1090:.\sd/ff.c     **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 1703              		.loc 1 1090 0
 1704 0046 2068     		ldr	r0, [r4]
 1705 0048 FFF7FEFF 		bl	get_fat
 1706              	.LVL178:
 1707 004c 011C     		mov	r1, r0
 1708              	.LVL179:
1091:.\sd/ff.c     **** 			if (clst < 2 || clst >= dj->fs->n_fatent)	/* Reached to end of table or int error */
 1709              		.loc 1 1091 0
 1710 004e 431C     		add	r3, r0, #1
 1711 0050 18D0     		beq	.L163
1092:.\sd/ff.c     **** 				return FR_INT_ERR;
 1712              		.loc 1 1092 0
 1713 0052 0128     		cmp	r0, #1
 1714 0054 DBD9     		bls	.L157
1092:.\sd/ff.c     **** 				return FR_INT_ERR;
 1715              		.loc 1 1092 0 is_stmt 0 discriminator 1
 1716 0056 2368     		ldr	r3, [r4]
 1717 0058 9B69     		ldr	r3, [r3, #24]
 1718 005a 9842     		cmp	r0, r3
 1719 005c D7D2     		bcs	.L157
1094:.\sd/ff.c     **** 		}
 1720              		.loc 1 1094 0 is_stmt 1
 1721 005e AD1B     		sub	r5, r5, r6
 1722              	.LVL180:
 1723 0060 ADB2     		uxth	r5, r5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 72


 1724              	.LVL181:
 1725 0062 EEE7     		b	.L161
 1726              	.LVL182:
 1727              	.L164:
1096:.\sd/ff.c     **** 		dj->sect = clust2sect(dj->fs, clst) + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
 1728              		.loc 1 1096 0
 1729 0064 E160     		str	r1, [r4, #12]
1097:.\sd/ff.c     **** 	}
 1730              		.loc 1 1097 0
 1731 0066 2068     		ldr	r0, [r4]
 1732 0068 FFF7FEFF 		bl	clust2sect
 1733              	.LVL183:
 1734 006c 2B09     		lsr	r3, r5, #4
 1735 006e 1818     		add	r0, r3, r0
 1736 0070 2061     		str	r0, [r4, #16]
 1737              	.LVL184:
 1738              	.L160:
1100:.\sd/ff.c     **** 
 1739              		.loc 1 1100 0
 1740 0072 0F23     		mov	r3, #15
 1741 0074 1D40     		and	r5, r3
 1742              	.LVL185:
 1743 0076 6D01     		lsl	r5, r5, #5
 1744 0078 2368     		ldr	r3, [r4]
 1745 007a 3035     		add	r5, r5, #48
 1746 007c 5D19     		add	r5, r3, r5
 1747 007e 6561     		str	r5, [r4, #20]
1102:.\sd/ff.c     **** }
 1748              		.loc 1 1102 0
 1749 0080 0020     		mov	r0, #0
 1750 0082 00E0     		b	.L156
 1751              	.LVL186:
 1752              	.L163:
1091:.\sd/ff.c     **** 			if (clst < 2 || clst >= dj->fs->n_fatent)	/* Reached to end of table or int error */
 1753              		.loc 1 1091 0
 1754 0084 0120     		mov	r0, #1
 1755              	.LVL187:
 1756              	.L156:
1103:.\sd/ff.c     **** 
 1757              		.loc 1 1103 0
 1758              		@ sp needed
 1759              	.LVL188:
 1760 0086 70BD     		pop	{r4, r5, r6, pc}
 1761              		.cfi_endproc
 1762              	.LFE16:
 1763              		.size	dir_sdi, .-dir_sdi
 1764              		.section	.text.dir_remove,"ax",%progbits
 1765              		.align	1
 1766              		.code	16
 1767              		.thumb_func
 1768              		.type	dir_remove, %function
 1769              	dir_remove:
 1770              	.LFB21:
1581:.\sd/ff.c     **** 	FRESULT res;
 1771              		.loc 1 1581 0
 1772              		.cfi_startproc
 1773              	.LVL189:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 73


 1774 0000 10B5     		push	{r4, lr}
 1775              		.cfi_def_cfa_offset 8
 1776              		.cfi_offset 4, -8
 1777              		.cfi_offset 14, -4
1601:.\sd/ff.c     **** 	if (res == FR_OK) {
 1778              		.loc 1 1601 0
 1779 0002 C188     		ldrh	r1, [r0, #6]
1581:.\sd/ff.c     **** 	FRESULT res;
 1780              		.loc 1 1581 0
 1781 0004 041C     		mov	r4, r0
1601:.\sd/ff.c     **** 	if (res == FR_OK) {
 1782              		.loc 1 1601 0
 1783 0006 FFF7FEFF 		bl	dir_sdi
 1784              	.LVL190:
1602:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 1785              		.loc 1 1602 0
 1786 000a 0028     		cmp	r0, #0
 1787 000c 0BD1     		bne	.L166
 1788              	.LVL191:
 1789              	.LBB25:
 1790              	.LBB26:
1603:.\sd/ff.c     **** 		if (res == FR_OK) {
 1791              		.loc 1 1603 0
 1792 000e 2068     		ldr	r0, [r4]
 1793              	.LVL192:
 1794 0010 2169     		ldr	r1, [r4, #16]
 1795 0012 FFF7FEFF 		bl	move_window
 1796              	.LVL193:
1604:.\sd/ff.c     **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
 1797              		.loc 1 1604 0
 1798 0016 0028     		cmp	r0, #0
 1799 0018 05D1     		bne	.L166
1605:.\sd/ff.c     **** 			dj->fs->wflag = 1;
 1800              		.loc 1 1605 0
 1801 001a E523     		mov	r3, #229
 1802 001c 6269     		ldr	r2, [r4, #20]
 1803 001e 1370     		strb	r3, [r2]
1606:.\sd/ff.c     **** 		}
 1804              		.loc 1 1606 0
 1805 0020 0122     		mov	r2, #1
 1806 0022 2368     		ldr	r3, [r4]
 1807 0024 1A71     		strb	r2, [r3, #4]
 1808              	.LVL194:
 1809              	.L166:
 1810              	.LBE26:
 1811              	.LBE25:
1612:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 1812              		.loc 1 1612 0
 1813              		@ sp needed
 1814              	.LVL195:
 1815 0026 10BD     		pop	{r4, pc}
 1816              		.cfi_endproc
 1817              	.LFE21:
 1818              		.size	dir_remove, .-dir_remove
 1819              		.section	.text.put_fat,"ax",%progbits
 1820              		.align	1
 1821              		.global	put_fat
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 74


 1822              		.code	16
 1823              		.thumb_func
 1824              		.type	put_fat, %function
 1825              	put_fat:
 1826              	.LFB13:
 867:.\sd/ff.c     **** 	UINT bc;
 1827              		.loc 1 867 0
 1828              		.cfi_startproc
 1829              	.LVL196:
 1830 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1831              		.cfi_def_cfa_offset 32
 1832              		.cfi_offset 0, -32
 1833              		.cfi_offset 1, -28
 1834              		.cfi_offset 2, -24
 1835              		.cfi_offset 4, -20
 1836              		.cfi_offset 5, -16
 1837              		.cfi_offset 6, -12
 1838              		.cfi_offset 7, -8
 1839              		.cfi_offset 14, -4
 867:.\sd/ff.c     **** 	UINT bc;
 1840              		.loc 1 867 0
 1841 0002 041C     		mov	r4, r0
 1842 0004 0E1C     		mov	r6, r1
 1843 0006 151C     		mov	r5, r2
 874:.\sd/ff.c     **** 
 1844              		.loc 1 874 0
 1845 0008 0220     		mov	r0, #2
 1846              	.LVL197:
 873:.\sd/ff.c     **** 		res = FR_INT_ERR;
 1847              		.loc 1 873 0
 1848 000a 0129     		cmp	r1, #1
 1849 000c 79D9     		bls	.L168
 873:.\sd/ff.c     **** 		res = FR_INT_ERR;
 1850              		.loc 1 873 0 is_stmt 0 discriminator 1
 1851 000e A369     		ldr	r3, [r4, #24]
 1852 0010 9942     		cmp	r1, r3
 1853 0012 76D2     		bcs	.L168
 1854              	.LVL198:
 1855              	.LBB29:
 1856              	.LBB30:
 877:.\sd/ff.c     **** 		case FS_FAT12 :
 1857              		.loc 1 877 0 is_stmt 1
 1858 0014 2778     		ldrb	r7, [r4]
 1859 0016 8742     		cmp	r7, r0
 1860 0018 41D0     		beq	.L170
 1861 001a 032F     		cmp	r7, #3
 1862 001c 53D0     		beq	.L171
 1863 001e 012F     		cmp	r7, #1
 1864 0020 6DD1     		bne	.L169
 1865              	.LVL199:
 879:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1866              		.loc 1 879 0
 1867 0022 4B08     		lsr	r3, r1, #1
 1868 0024 5B18     		add	r3, r3, r1
 880:.\sd/ff.c     **** 			if (res != FR_OK) break;
 1869              		.loc 1 880 0
 1870 0026 590A     		lsr	r1, r3, #9
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 75


 1871              	.LVL200:
 879:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1872              		.loc 1 879 0
 1873 0028 0193     		str	r3, [sp, #4]
 1874              	.LVL201:
 880:.\sd/ff.c     **** 			if (res != FR_OK) break;
 1875              		.loc 1 880 0
 1876 002a 236A     		ldr	r3, [r4, #32]
 1877              	.LVL202:
 1878 002c 201C     		mov	r0, r4
 1879 002e C918     		add	r1, r1, r3
 1880 0030 FFF7FEFF 		bl	move_window
 1881              	.LVL203:
 881:.\sd/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 1882              		.loc 1 881 0
 1883 0034 0028     		cmp	r0, #0
 1884 0036 62D1     		bne	.L169
 882:.\sd/ff.c     **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 1885              		.loc 1 882 0
 1886 0038 019B     		ldr	r3, [sp, #4]
 883:.\sd/ff.c     **** 			bc++;
 1887              		.loc 1 883 0
 1888 003a 3E40     		and	r6, r7
 1889              	.LVL204:
 882:.\sd/ff.c     **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 1890              		.loc 1 882 0
 1891 003c DB05     		lsl	r3, r3, #23
 1892 003e DB0D     		lsr	r3, r3, #23
 1893              	.LVL205:
 1894 0040 E318     		add	r3, r4, r3
 1895              	.LVL206:
 883:.\sd/ff.c     **** 			bc++;
 1896              		.loc 1 883 0
 1897 0042 EAB2     		uxtb	r2, r5
 1898 0044 002E     		cmp	r6, #0
 1899 0046 08D0     		beq	.L174
 1900 0048 1A1C     		mov	r2, r3
 1901 004a 3032     		add	r2, r2, #48
 1902              	.LVL207:
 1903 004c 1178     		ldrb	r1, [r2]
 1904 004e 0F22     		mov	r2, #15
 1905              	.LVL208:
 1906 0050 0A40     		and	r2, r1
 1907 0052 E9B2     		uxtb	r1, r5
 1908 0054 0901     		lsl	r1, r1, #4
 1909 0056 0A43     		orr	r2, r1
 1910 0058 D2B2     		uxtb	r2, r2
 1911              	.L174:
 1912 005a 3033     		add	r3, r3, #48
 1913 005c 1A70     		strb	r2, [r3]
 885:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 1914              		.loc 1 885 0
 1915 005e 0123     		mov	r3, #1
 884:.\sd/ff.c     **** 			fs->wflag = 1;
 1916              		.loc 1 884 0
 1917 0060 019F     		ldr	r7, [sp, #4]
 885:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 76


 1918              		.loc 1 885 0
 1919 0062 2371     		strb	r3, [r4, #4]
 884:.\sd/ff.c     **** 			fs->wflag = 1;
 1920              		.loc 1 884 0
 1921 0064 0137     		add	r7, r7, #1
 1922              	.LVL209:
 886:.\sd/ff.c     **** 			if (res != FR_OK) break;
 1923              		.loc 1 886 0
 1924 0066 236A     		ldr	r3, [r4, #32]
 1925 0068 790A     		lsr	r1, r7, #9
 1926 006a C918     		add	r1, r1, r3
 1927 006c 201C     		mov	r0, r4
 1928              	.LVL210:
 1929 006e FFF7FEFF 		bl	move_window
 1930              	.LVL211:
 887:.\sd/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 1931              		.loc 1 887 0
 1932 0072 0028     		cmp	r0, #0
 1933 0074 43D1     		bne	.L169
 888:.\sd/ff.c     **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 1934              		.loc 1 888 0
 1935 0076 FF05     		lsl	r7, r7, #23
 1936              	.LVL212:
 1937 0078 FF0D     		lsr	r7, r7, #23
 1938              	.LVL213:
 1939 007a E719     		add	r7, r4, r7
 1940              	.LVL214:
 889:.\sd/ff.c     **** 			break;
 1941              		.loc 1 889 0
 1942 007c 002E     		cmp	r6, #0
 1943 007e 02D0     		beq	.L175
 1944 0080 2D09     		lsr	r5, r5, #4
 1945              	.LVL215:
 1946 0082 EDB2     		uxtb	r5, r5
 1947 0084 08E0     		b	.L176
 1948              	.LVL216:
 1949              	.L175:
 1950 0086 3B1C     		mov	r3, r7
 1951 0088 3033     		add	r3, r3, #48
 1952 008a 1A78     		ldrb	r2, [r3]
 1953 008c 0F23     		mov	r3, #15
 1954 008e 2D0A     		lsr	r5, r5, #8
 1955              	.LVL217:
 1956 0090 9A43     		bic	r2, r3
 1957 0092 2B40     		and	r3, r5
 1958 0094 1A43     		orr	r2, r3
 1959 0096 151C     		mov	r5, r2
 1960              	.LVL218:
 1961              	.L176:
 1962 0098 3037     		add	r7, r7, #48
 1963 009a 3D70     		strb	r5, [r7]
 1964 009c 2FE0     		b	.L169
 1965              	.LVL219:
 1966              	.L170:
 893:.\sd/ff.c     **** 			if (res != FR_OK) break;
 1967              		.loc 1 893 0
 1968 009e 236A     		ldr	r3, [r4, #32]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 77


 1969 00a0 090A     		lsr	r1, r1, #8
 1970              	.LVL220:
 1971 00a2 C918     		add	r1, r1, r3
 1972 00a4 201C     		mov	r0, r4
 1973 00a6 FFF7FEFF 		bl	move_window
 1974              	.LVL221:
 894:.\sd/ff.c     **** 			p = &fs->win[clst * 2 % SS(fs)];
 1975              		.loc 1 894 0
 1976 00aa 0028     		cmp	r0, #0
 1977 00ac 27D1     		bne	.L169
 895:.\sd/ff.c     **** 			ST_WORD(p, (WORD)val);
 1978              		.loc 1 895 0
 1979 00ae FF23     		mov	r3, #255
 1980 00b0 7600     		lsl	r6, r6, #1
 1981              	.LVL222:
 1982 00b2 5B00     		lsl	r3, r3, #1
 1983 00b4 1E40     		and	r6, r3
 1984              	.LVL223:
 896:.\sd/ff.c     **** 			break;
 1985              		.loc 1 896 0
 1986 00b6 A319     		add	r3, r4, r6
 1987 00b8 3033     		add	r3, r3, #48
 1988              	.LVL224:
 895:.\sd/ff.c     **** 			ST_WORD(p, (WORD)val);
 1989              		.loc 1 895 0
 1990 00ba 3036     		add	r6, r6, #48
 896:.\sd/ff.c     **** 			break;
 1991              		.loc 1 896 0
 1992 00bc 1D70     		strb	r5, [r3]
 1993 00be A619     		add	r6, r4, r6
 1994 00c0 2D0A     		lsr	r5, r5, #8
 1995              	.LVL225:
 1996 00c2 7570     		strb	r5, [r6, #1]
 1997 00c4 1BE0     		b	.L169
 1998              	.LVL226:
 1999              	.L171:
 900:.\sd/ff.c     **** 			if (res != FR_OK) break;
 2000              		.loc 1 900 0
 2001 00c6 236A     		ldr	r3, [r4, #32]
 2002 00c8 C909     		lsr	r1, r1, #7
 2003              	.LVL227:
 2004 00ca C918     		add	r1, r1, r3
 2005 00cc 201C     		mov	r0, r4
 2006 00ce FFF7FEFF 		bl	move_window
 2007              	.LVL228:
 901:.\sd/ff.c     **** 			p = &fs->win[clst * 4 % SS(fs)];
 2008              		.loc 1 901 0
 2009 00d2 0028     		cmp	r0, #0
 2010 00d4 13D1     		bne	.L169
 902:.\sd/ff.c     **** 			val |= LD_DWORD(p) & 0xF0000000;
 2011              		.loc 1 902 0
 2012 00d6 FE23     		mov	r3, #254
 2013 00d8 B600     		lsl	r6, r6, #2
 2014              	.LVL229:
 2015 00da 5B00     		lsl	r3, r3, #1
 2016 00dc 1E40     		and	r6, r3
 2017 00de 331C     		mov	r3, r6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 78


 2018 00e0 3033     		add	r3, r3, #48
 2019 00e2 E318     		add	r3, r4, r3
 2020              	.LVL230:
 903:.\sd/ff.c     **** 			ST_DWORD(p, val);
 2021              		.loc 1 903 0
 2022 00e4 DA78     		ldrb	r2, [r3, #3]
 2023 00e6 A619     		add	r6, r4, r6
 2024 00e8 1209     		lsr	r2, r2, #4
 2025 00ea 1207     		lsl	r2, r2, #28
 2026 00ec 1543     		orr	r5, r2
 2027              	.LVL231:
 904:.\sd/ff.c     **** 			break;
 2028              		.loc 1 904 0
 2029 00ee 2A0A     		lsr	r2, r5, #8
 903:.\sd/ff.c     **** 			ST_DWORD(p, val);
 2030              		.loc 1 903 0
 2031 00f0 3036     		add	r6, r6, #48
 904:.\sd/ff.c     **** 			break;
 2032              		.loc 1 904 0
 2033 00f2 3570     		strb	r5, [r6]
 2034 00f4 5A70     		strb	r2, [r3, #1]
 2035 00f6 2A0C     		lsr	r2, r5, #16
 2036 00f8 2D0E     		lsr	r5, r5, #24
 2037              	.LVL232:
 2038 00fa 9A70     		strb	r2, [r3, #2]
 2039 00fc DD70     		strb	r5, [r3, #3]
 2040              	.LVL233:
 2041              	.L169:
 910:.\sd/ff.c     **** 	}
 2042              		.loc 1 910 0
 2043 00fe 0123     		mov	r3, #1
 2044 0100 2371     		strb	r3, [r4, #4]
 2045              	.LVL234:
 2046              	.L168:
 2047              	.LBE30:
 2048              	.LBE29:
 914:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 2049              		.loc 1 914 0
 2050              		@ sp needed
 2051              	.LVL235:
 2052 0102 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2053              		.cfi_endproc
 2054              	.LFE13:
 2055              		.size	put_fat, .-put_fat
 2056              		.section	.text.create_chain,"ax",%progbits
 2057              		.align	1
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	create_chain, %function
 2061              	create_chain:
 2062              	.LFB15:
 982:.\sd/ff.c     **** 	DWORD cs, ncl, scl;
 2063              		.loc 1 982 0
 2064              		.cfi_startproc
 2065              	.LVL236:
 2066 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2067              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 79


 2068              		.cfi_offset 3, -24
 2069              		.cfi_offset 4, -20
 2070              		.cfi_offset 5, -16
 2071              		.cfi_offset 6, -12
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 982:.\sd/ff.c     **** 	DWORD cs, ncl, scl;
 2074              		.loc 1 982 0
 2075 0002 051C     		mov	r5, r0
 2076 0004 0E1E     		sub	r6, r1, #0
 987:.\sd/ff.c     **** 		scl = fs->last_clust;			/* Get suggested start point */
 2077              		.loc 1 987 0
 2078 0006 06D1     		bne	.L182
 988:.\sd/ff.c     **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 2079              		.loc 1 988 0
 2080 0008 C768     		ldr	r7, [r0, #12]
 2081              	.LVL237:
 989:.\sd/ff.c     **** 	}
 2082              		.loc 1 989 0
 2083 000a 002F     		cmp	r7, #0
 2084 000c 0ED0     		beq	.L195
 989:.\sd/ff.c     **** 	}
 2085              		.loc 1 989 0 is_stmt 0 discriminator 2
 2086 000e 8369     		ldr	r3, [r0, #24]
 2087 0010 9F42     		cmp	r7, r3
 2088 0012 0CD3     		bcc	.L183
 2089 0014 0AE0     		b	.L195
 2090              	.LVL238:
 2091              	.L182:
 992:.\sd/ff.c     **** 		if (cs < 2) return 1;			/* It is an invalid cluster */
 2092              		.loc 1 992 0 is_stmt 1
 2093 0016 FFF7FEFF 		bl	get_fat
 2094              	.LVL239:
 993:.\sd/ff.c     **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 2095              		.loc 1 993 0
 2096 001a 0124     		mov	r4, #1
 2097 001c A042     		cmp	r0, r4
 2098 001e 3ED9     		bls	.L184
 994:.\sd/ff.c     **** 		scl = clst;
 2099              		.loc 1 994 0
 2100 0020 AB69     		ldr	r3, [r5, #24]
 2101 0022 041C     		mov	r4, r0
 2102 0024 371C     		mov	r7, r6
 2103 0026 9842     		cmp	r0, r3
 2104 0028 01D2     		bcs	.L183
 2105 002a 38E0     		b	.L184
 2106              	.LVL240:
 2107              	.L195:
 989:.\sd/ff.c     **** 	}
 2108              		.loc 1 989 0
 2109 002c 0127     		mov	r7, #1
 2110              	.LVL241:
 2111              	.L183:
 2112 002e 3C1C     		mov	r4, r7
 2113              	.LVL242:
 2114              	.L190:
1001:.\sd/ff.c     **** 			ncl = 2;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 80


 2115              		.loc 1 1001 0
 2116 0030 AB69     		ldr	r3, [r5, #24]
1000:.\sd/ff.c     **** 		if (ncl >= fs->n_fatent) {		/* Wrap around */
 2117              		.loc 1 1000 0
 2118 0032 0134     		add	r4, r4, #1
 2119              	.LVL243:
1001:.\sd/ff.c     **** 			ncl = 2;
 2120              		.loc 1 1001 0
 2121 0034 9C42     		cmp	r4, r3
 2122 0036 04D3     		bcc	.L185
 2123              	.LVL244:
1003:.\sd/ff.c     **** 		}
 2124              		.loc 1 1003 0
 2125 0038 012F     		cmp	r7, #1
 2126 003a 01D8     		bhi	.L198
 2127              	.LVL245:
 2128              	.L189:
 2129 003c 0024     		mov	r4, #0
 2130 003e 2EE0     		b	.L184
 2131              	.LVL246:
 2132              	.L198:
1002:.\sd/ff.c     **** 			if (ncl > scl) return 0;	/* No free cluster */
 2133              		.loc 1 1002 0
 2134 0040 0224     		mov	r4, #2
 2135              	.LVL247:
 2136              	.L185:
1005:.\sd/ff.c     **** 		if (cs == 0) break;				/* Found a free cluster */
 2137              		.loc 1 1005 0
 2138 0042 281C     		mov	r0, r5
 2139 0044 211C     		mov	r1, r4
 2140 0046 FFF7FEFF 		bl	get_fat
 2141              	.LVL248:
1006:.\sd/ff.c     **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 2142              		.loc 1 1006 0
 2143 004a 0028     		cmp	r0, #0
 2144 004c 08D0     		beq	.L186
1007:.\sd/ff.c     **** 			return cs;
 2145              		.loc 1 1007 0
 2146 004e 431C     		add	r3, r0, #1
 2147 0050 01D0     		beq	.L187
1007:.\sd/ff.c     **** 			return cs;
 2148              		.loc 1 1007 0 is_stmt 0 discriminator 1
 2149 0052 0128     		cmp	r0, #1
 2150 0054 01D1     		bne	.L188
 2151              	.L187:
1008:.\sd/ff.c     **** 		if (ncl == scl) return 0;		/* No free cluster */
 2152              		.loc 1 1008 0 is_stmt 1
 2153 0056 041C     		mov	r4, r0
 2154              	.LVL249:
 2155 0058 21E0     		b	.L184
 2156              	.LVL250:
 2157              	.L188:
1009:.\sd/ff.c     **** 	}
 2158              		.loc 1 1009 0
 2159 005a BC42     		cmp	r4, r7
 2160 005c E8D1     		bne	.L190
 2161 005e EDE7     		b	.L189
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 81


 2162              	.L186:
1012:.\sd/ff.c     **** 	if (res == FR_OK && clst != 0) {
 2163              		.loc 1 1012 0
 2164 0060 281C     		mov	r0, r5
 2165              	.LVL251:
 2166 0062 211C     		mov	r1, r4
 2167 0064 0F4A     		ldr	r2, .L206
 2168 0066 FFF7FEFF 		bl	put_fat
 2169              	.LVL252:
1013:.\sd/ff.c     **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 2170              		.loc 1 1013 0
 2171 006a 0028     		cmp	r0, #0
 2172 006c 11D1     		bne	.L191
1013:.\sd/ff.c     **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 2173              		.loc 1 1013 0 is_stmt 0 discriminator 1
 2174 006e 002E     		cmp	r6, #0
 2175 0070 08D1     		bne	.L192
 2176              	.LVL253:
 2177              	.L194:
1018:.\sd/ff.c     **** 			fs->free_clust--;
 2178              		.loc 1 1018 0 is_stmt 1
 2179 0072 2B69     		ldr	r3, [r5, #16]
1017:.\sd/ff.c     **** 		if (fs->free_clust != 0xFFFFFFFF) {
 2180              		.loc 1 1017 0
 2181 0074 EC60     		str	r4, [r5, #12]
1018:.\sd/ff.c     **** 			fs->free_clust--;
 2182              		.loc 1 1018 0
 2183 0076 5A1C     		add	r2, r3, #1
 2184 0078 11D0     		beq	.L184
1019:.\sd/ff.c     **** 			fs->fsi_flag = 1;
 2185              		.loc 1 1019 0
 2186 007a 013B     		sub	r3, r3, #1
 2187 007c 2B61     		str	r3, [r5, #16]
1020:.\sd/ff.c     **** 		}
 2188              		.loc 1 1020 0
 2189 007e 0123     		mov	r3, #1
 2190 0080 6B71     		strb	r3, [r5, #5]
 2191 0082 0CE0     		b	.L184
 2192              	.LVL254:
 2193              	.L192:
1014:.\sd/ff.c     **** 	}
 2194              		.loc 1 1014 0
 2195 0084 281C     		mov	r0, r5
 2196              	.LVL255:
 2197 0086 311C     		mov	r1, r6
 2198 0088 221C     		mov	r2, r4
 2199 008a FFF7FEFF 		bl	put_fat
 2200              	.LVL256:
1016:.\sd/ff.c     **** 		fs->last_clust = ncl;			/* Update FSINFO */
 2201              		.loc 1 1016 0
 2202 008e 0028     		cmp	r0, #0
 2203 0090 EFD0     		beq	.L194
 2204              	.LVL257:
 2205              	.L191:
1023:.\sd/ff.c     **** 	}
 2206              		.loc 1 1023 0
 2207 0092 0138     		sub	r0, r0, #1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 82


 2208              	.LVL258:
 2209 0094 4442     		neg	r4, r0
 2210 0096 4441     		adc	r4, r4, r0
 2211              	.LVL259:
 2212 0098 6042     		neg	r0, r4
 2213 009a 0124     		mov	r4, #1
 2214 009c 0443     		orr	r4, r0
 2215              	.LVL260:
 2216              	.L184:
1027:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 2217              		.loc 1 1027 0
 2218 009e 201C     		mov	r0, r4
 2219              		@ sp needed
 2220              	.LVL261:
 2221              	.LVL262:
 2222 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2223              	.L207:
 2224 00a2 C046     		.align	2
 2225              	.L206:
 2226 00a4 FFFFFF0F 		.word	268435455
 2227              		.cfi_endproc
 2228              	.LFE15:
 2229              		.size	create_chain, .-create_chain
 2230              		.section	.text.dir_next,"ax",%progbits
 2231              		.align	1
 2232              		.code	16
 2233              		.thumb_func
 2234              		.type	dir_next, %function
 2235              	dir_next:
 2236              	.LFB17:
1117:.\sd/ff.c     **** 	DWORD clst;
 2237              		.loc 1 1117 0
 2238              		.cfi_startproc
 2239              	.LVL263:
 2240 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2241              		.cfi_def_cfa_offset 32
 2242              		.cfi_offset 0, -32
 2243              		.cfi_offset 1, -28
 2244              		.cfi_offset 2, -24
 2245              		.cfi_offset 4, -20
 2246              		.cfi_offset 5, -16
 2247              		.cfi_offset 6, -12
 2248              		.cfi_offset 7, -8
 2249              		.cfi_offset 14, -4
1123:.\sd/ff.c     **** 	if (!i || !dj->sect)	/* Report EOT when index has reached 65535 */
 2250              		.loc 1 1123 0
 2251 0002 C688     		ldrh	r6, [r0, #6]
 2252 0004 0136     		add	r6, r6, #1
 2253 0006 B6B2     		uxth	r6, r6
 2254              	.LVL264:
1124:.\sd/ff.c     **** 		return FR_NO_FILE;
 2255              		.loc 1 1124 0
 2256 0008 002E     		cmp	r6, #0
 2257 000a 01D1     		bne	.L209
 2258              	.LVL265:
 2259              	.L211:
1125:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 83


 2260              		.loc 1 1125 0
 2261 000c 0420     		mov	r0, #4
 2262 000e 71E0     		b	.L210
 2263              	.LVL266:
 2264              	.L209:
1124:.\sd/ff.c     **** 		return FR_NO_FILE;
 2265              		.loc 1 1124 0 discriminator 1
 2266 0010 0369     		ldr	r3, [r0, #16]
 2267 0012 002B     		cmp	r3, #0
 2268 0014 FAD0     		beq	.L211
1127:.\sd/ff.c     **** 		dj->sect++;					/* Next sector */
 2269              		.loc 1 1127 0
 2270 0016 0F22     		mov	r2, #15
 2271 0018 3240     		and	r2, r6
 2272 001a 0F1C     		mov	r7, r1
 2273 001c 041C     		mov	r4, r0
 2274 001e 0192     		str	r2, [sp, #4]
 2275 0020 002A     		cmp	r2, #0
 2276 0022 5FD1     		bne	.L213
1130:.\sd/ff.c     **** 			if (i >= dj->fs->n_rootdir)	/* Report EOT when end of table */
 2277              		.loc 1 1130 0
 2278 0024 C168     		ldr	r1, [r0, #12]
 2279              	.LVL267:
1128:.\sd/ff.c     **** 
 2280              		.loc 1 1128 0
 2281 0026 0133     		add	r3, r3, #1
 2282 0028 0361     		str	r3, [r0, #16]
 2283 002a 0068     		ldr	r0, [r0]
 2284              	.LVL268:
1130:.\sd/ff.c     **** 			if (i >= dj->fs->n_rootdir)	/* Report EOT when end of table */
 2285              		.loc 1 1130 0
 2286 002c 0029     		cmp	r1, #0
 2287 002e 03D1     		bne	.L214
1131:.\sd/ff.c     **** 				return FR_NO_FILE;
 2288              		.loc 1 1131 0
 2289 0030 0389     		ldrh	r3, [r0, #8]
 2290 0032 B342     		cmp	r3, r6
 2291 0034 EAD9     		bls	.L211
 2292 0036 55E0     		b	.L213
 2293              	.L214:
1135:.\sd/ff.c     **** 				clst = get_fat(dj->fs, dj->clust);				/* Get next cluster */
 2294              		.loc 1 1135 0
 2295 0038 8378     		ldrb	r3, [r0, #2]
 2296 003a 3209     		lsr	r2, r6, #4
 2297 003c 013B     		sub	r3, r3, #1
 2298 003e 1A42     		tst	r2, r3
 2299 0040 50D1     		bne	.L213
1136:.\sd/ff.c     **** 				if (clst <= 1) return FR_INT_ERR;
 2300              		.loc 1 1136 0
 2301 0042 FFF7FEFF 		bl	get_fat
 2302              	.LVL269:
 2303 0046 051E     		sub	r5, r0, #0
 2304              	.LVL270:
1137:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 2305              		.loc 1 1137 0
 2306 0048 012D     		cmp	r5, #1
 2307 004a 01D8     		bhi	.L216
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 84


 2308              	.LVL271:
 2309              	.L219:
 2310 004c 0220     		mov	r0, #2
 2311 004e 51E0     		b	.L210
 2312              	.LVL272:
 2313              	.L216:
1138:.\sd/ff.c     **** 				if (clst >= dj->fs->n_fatent) {					/* When it reached end of dynamic table */
 2314              		.loc 1 1138 0
 2315 0050 431C     		add	r3, r0, #1
 2316 0052 01D1     		bne	.L217
 2317              	.LVL273:
 2318              	.L220:
 2319 0054 0120     		mov	r0, #1
 2320 0056 4DE0     		b	.L210
 2321              	.LVL274:
 2322              	.L217:
1139:.\sd/ff.c     **** #if !_FS_READONLY
 2323              		.loc 1 1139 0
 2324 0058 2068     		ldr	r0, [r4]
 2325              	.LVL275:
 2326 005a 8369     		ldr	r3, [r0, #24]
 2327 005c 9D42     		cmp	r5, r3
 2328 005e 3BD3     		bcc	.L218
 2329              	.LBB34:
1142:.\sd/ff.c     **** 					clst = create_chain(dj->fs, dj->clust);		/* Stretch cluster chain */
 2330              		.loc 1 1142 0
 2331 0060 002F     		cmp	r7, #0
 2332 0062 D3D0     		beq	.L211
1143:.\sd/ff.c     **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 2333              		.loc 1 1143 0
 2334 0064 E168     		ldr	r1, [r4, #12]
 2335 0066 FFF7FEFF 		bl	create_chain
 2336              	.LVL276:
 2337 006a 051C     		mov	r5, r0
 2338              	.LVL277:
1144:.\sd/ff.c     **** 					if (clst == 1) return FR_INT_ERR;
 2339              		.loc 1 1144 0
 2340 006c 0720     		mov	r0, #7
 2341              	.LVL278:
 2342 006e 002D     		cmp	r5, #0
 2343 0070 40D0     		beq	.L210
1145:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 2344              		.loc 1 1145 0
 2345 0072 012D     		cmp	r5, #1
 2346 0074 EAD0     		beq	.L219
1146:.\sd/ff.c     **** 					/* Clean-up stretched table */
 2347              		.loc 1 1146 0
 2348 0076 6B1C     		add	r3, r5, #1
 2349 0078 ECD0     		beq	.L220
1148:.\sd/ff.c     **** 					mem_set(dj->fs->win, 0, SS(dj->fs));			/* Clear window buffer */
 2350              		.loc 1 1148 0
 2351 007a 2068     		ldr	r0, [r4]
 2352 007c 0021     		mov	r1, #0
 2353 007e FFF7FEFF 		bl	move_window
 2354              	.LVL279:
 2355 0082 0028     		cmp	r0, #0
 2356 0084 E6D1     		bne	.L220
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 85


1149:.\sd/ff.c     **** 					dj->fs->winsect = clust2sect(dj->fs, clst);	/* Cluster start sector */
 2357              		.loc 1 1149 0
 2358 0086 2368     		ldr	r3, [r4]
 2359              	.LVL280:
 2360 0088 8C21     		mov	r1, #140
 2361 008a 1A1C     		mov	r2, r3
 2362 008c 8900     		lsl	r1, r1, #2
 2363 008e 3032     		add	r2, r2, #48
 2364              	.LVL281:
 2365 0090 5B18     		add	r3, r3, r1
 2366              	.LVL282:
 2367              	.L221:
 2368              	.LBB35:
 2369              	.LBB36:
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 2370              		.loc 1 549 0
 2371 0092 9A42     		cmp	r2, r3
 2372 0094 03D0     		beq	.L239
 2373              	.LVL283:
 550:.\sd/ff.c     **** }
 2374              		.loc 1 550 0
 2375 0096 0021     		mov	r1, #0
 2376 0098 1170     		strb	r1, [r2]
 2377 009a 0132     		add	r2, r2, #1
 2378              	.LVL284:
 2379 009c F9E7     		b	.L221
 2380              	.LVL285:
 2381              	.L239:
 2382              	.LBE36:
 2383              	.LBE35:
1150:.\sd/ff.c     **** 					for (c = 0; c < dj->fs->csize; c++) {		/* Fill the new cluster with 0 */
 2384              		.loc 1 1150 0
 2385 009e 2768     		ldr	r7, [r4]
 2386              	.LVL286:
 2387 00a0 291C     		mov	r1, r5
 2388 00a2 381C     		mov	r0, r7
 2389 00a4 FFF7FEFF 		bl	clust2sect
 2390              	.LVL287:
 2391 00a8 F862     		str	r0, [r7, #44]
 2392              	.LVL288:
1151:.\sd/ff.c     **** 						dj->fs->wflag = 1;
 2393              		.loc 1 1151 0
 2394 00aa 0027     		mov	r7, #0
 2395              	.LVL289:
 2396              	.L223:
1151:.\sd/ff.c     **** 						dj->fs->wflag = 1;
 2397              		.loc 1 1151 0 is_stmt 0 discriminator 1
 2398 00ac 2368     		ldr	r3, [r4]
 2399 00ae 9A78     		ldrb	r2, [r3, #2]
 2400 00b0 BA42     		cmp	r2, r7
 2401 00b2 0ED9     		bls	.L240
1152:.\sd/ff.c     **** 						if (move_window(dj->fs, 0)) return FR_DISK_ERR;
 2402              		.loc 1 1152 0 is_stmt 1
 2403 00b4 0122     		mov	r2, #1
 2404 00b6 1A71     		strb	r2, [r3, #4]
1153:.\sd/ff.c     **** 						dj->fs->winsect++;
 2405              		.loc 1 1153 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 86


 2406 00b8 2068     		ldr	r0, [r4]
 2407 00ba 0021     		mov	r1, #0
 2408 00bc FFF7FEFF 		bl	move_window
 2409              	.LVL290:
 2410 00c0 0028     		cmp	r0, #0
 2411 00c2 C7D1     		bne	.L220
1154:.\sd/ff.c     **** 					}
 2412              		.loc 1 1154 0 discriminator 2
 2413 00c4 2268     		ldr	r2, [r4]
1151:.\sd/ff.c     **** 						dj->fs->wflag = 1;
 2414              		.loc 1 1151 0 discriminator 2
 2415 00c6 0137     		add	r7, r7, #1
 2416              	.LVL291:
1154:.\sd/ff.c     **** 					}
 2417              		.loc 1 1154 0 discriminator 2
 2418 00c8 D36A     		ldr	r3, [r2, #44]
1151:.\sd/ff.c     **** 						dj->fs->wflag = 1;
 2419              		.loc 1 1151 0 discriminator 2
 2420 00ca FFB2     		uxtb	r7, r7
 2421              	.LVL292:
1154:.\sd/ff.c     **** 					}
 2422              		.loc 1 1154 0 discriminator 2
 2423 00cc 0133     		add	r3, r3, #1
 2424 00ce D362     		str	r3, [r2, #44]
 2425 00d0 ECE7     		b	.L223
 2426              	.L240:
1156:.\sd/ff.c     **** #else
 2427              		.loc 1 1156 0
 2428 00d2 DA6A     		ldr	r2, [r3, #44]
 2429 00d4 D71B     		sub	r7, r2, r7
 2430              	.LVL293:
 2431 00d6 DF62     		str	r7, [r3, #44]
 2432              	.LVL294:
 2433              	.L218:
 2434              	.LBE34:
1161:.\sd/ff.c     **** 				dj->sect = clust2sect(dj->fs, clst);
 2435              		.loc 1 1161 0
 2436 00d8 E560     		str	r5, [r4, #12]
1162:.\sd/ff.c     **** 			}
 2437              		.loc 1 1162 0
 2438 00da 2068     		ldr	r0, [r4]
 2439 00dc 291C     		mov	r1, r5
 2440 00de FFF7FEFF 		bl	clust2sect
 2441              	.LVL295:
 2442 00e2 2061     		str	r0, [r4, #16]
 2443              	.LVL296:
 2444              	.L213:
1170:.\sd/ff.c     **** }
 2445              		.loc 1 1170 0
 2446 00e4 0020     		mov	r0, #0
1168:.\sd/ff.c     **** 
 2447              		.loc 1 1168 0
 2448 00e6 019B     		ldr	r3, [sp, #4]
 2449 00e8 2268     		ldr	r2, [r4]
 2450 00ea 5B01     		lsl	r3, r3, #5
 2451 00ec 3033     		add	r3, r3, #48
 2452 00ee D318     		add	r3, r2, r3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 87


1167:.\sd/ff.c     **** 	dj->dir = dj->fs->win + (i % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;
 2453              		.loc 1 1167 0
 2454 00f0 E680     		strh	r6, [r4, #6]
1168:.\sd/ff.c     **** 
 2455              		.loc 1 1168 0
 2456 00f2 6361     		str	r3, [r4, #20]
 2457              	.LVL297:
 2458              	.L210:
1171:.\sd/ff.c     **** 
 2459              		.loc 1 1171 0
 2460              		@ sp needed
 2461              	.LVL298:
 2462 00f4 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2463              		.cfi_endproc
 2464              	.LFE17:
 2465              		.size	dir_next, .-dir_next
 2466              		.section	.text.follow_path,"ax",%progbits
 2467              		.align	1
 2468              		.code	16
 2469              		.thumb_func
 2470              		.type	follow_path, %function
 2471              	follow_path:
 2472              	.LFB24:
1923:.\sd/ff.c     **** 	FRESULT res;
 2473              		.loc 1 1923 0
 2474              		.cfi_startproc
 2475              	.LVL299:
 2476 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2477              		.cfi_def_cfa_offset 32
 2478              		.cfi_offset 0, -32
 2479              		.cfi_offset 1, -28
 2480              		.cfi_offset 2, -24
 2481              		.cfi_offset 4, -20
 2482              		.cfi_offset 5, -16
 2483              		.cfi_offset 6, -12
 2484              		.cfi_offset 7, -8
 2485              		.cfi_offset 14, -4
1935:.\sd/ff.c     **** 		path++;
 2486              		.loc 1 1935 0
 2487 0002 0B78     		ldrb	r3, [r1]
1923:.\sd/ff.c     **** 	FRESULT res;
 2488              		.loc 1 1923 0
 2489 0004 041C     		mov	r4, r0
 2490 0006 0D1C     		mov	r5, r1
1935:.\sd/ff.c     **** 		path++;
 2491              		.loc 1 1935 0
 2492 0008 2F2B     		cmp	r3, #47
 2493 000a 01D0     		beq	.L242
1935:.\sd/ff.c     **** 		path++;
 2494              		.loc 1 1935 0 is_stmt 0 discriminator 1
 2495 000c 5C2B     		cmp	r3, #92
 2496 000e 00D1     		bne	.L243
 2497              	.L242:
1936:.\sd/ff.c     **** 	dj->sclust = 0;						/* Start from the root dir */
 2498              		.loc 1 1936 0 is_stmt 1
 2499 0010 0135     		add	r5, r5, #1
 2500              	.LVL300:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 88


 2501              	.L243:
1937:.\sd/ff.c     **** #endif
 2502              		.loc 1 1937 0
 2503 0012 0026     		mov	r6, #0
 2504 0014 A660     		str	r6, [r4, #8]
1940:.\sd/ff.c     **** 		res = dir_sdi(dj, 0);
 2505              		.loc 1 1940 0
 2506 0016 2B78     		ldrb	r3, [r5]
 2507 0018 1F2B     		cmp	r3, #31
 2508 001a 06D8     		bhi	.L247
1941:.\sd/ff.c     **** 		dj->dir = 0;
 2509              		.loc 1 1941 0
 2510 001c 201C     		mov	r0, r4
 2511              	.LVL301:
 2512 001e 311C     		mov	r1, r6
 2513 0020 FFF7FEFF 		bl	dir_sdi
 2514              	.LVL302:
1942:.\sd/ff.c     **** 
 2515              		.loc 1 1942 0
 2516 0024 6661     		str	r6, [r4, #20]
 2517 0026 B4E0     		b	.L292
 2518              	.LVL303:
 2519              	.L248:
 2520              	.LBB47:
 2521              	.LBB48:
1759:.\sd/ff.c     **** 	sfn = dj->fn;
 2522              		.loc 1 1759 0
 2523 0028 0135     		add	r5, r5, #1
 2524              	.LVL304:
 2525              	.L247:
 2526 002a 2B78     		ldrb	r3, [r5]
 2527 002c 2F2B     		cmp	r3, #47
 2528 002e FBD0     		beq	.L248
 2529 0030 5C2B     		cmp	r3, #92
 2530 0032 F9D0     		beq	.L248
1760:.\sd/ff.c     **** 	mem_set(sfn, ' ', 11);
 2531              		.loc 1 1760 0
 2532 0034 A069     		ldr	r0, [r4, #24]
 2533              	.LVL305:
 2534 0036 021C     		mov	r2, r0
 2535 0038 031C     		mov	r3, r0
 2536 003a 0B32     		add	r2, r2, #11
 2537              	.LVL306:
 2538              	.L249:
 2539              	.LBB49:
 2540              	.LBB50:
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 2541              		.loc 1 549 0
 2542 003c 9342     		cmp	r3, r2
 2543 003e 03D0     		beq	.L307
 2544              	.LVL307:
 550:.\sd/ff.c     **** }
 2545              		.loc 1 550 0
 2546 0040 2021     		mov	r1, #32
 2547 0042 1970     		strb	r1, [r3]
 2548 0044 0133     		add	r3, r3, #1
 2549              	.LVL308:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 89


 2550 0046 F9E7     		b	.L249
 2551              	.LVL309:
 2552              	.L307:
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 2553              		.loc 1 549 0
 2554 0048 0021     		mov	r1, #0
 2555 004a 0822     		mov	r2, #8
 2556 004c 0B1C     		mov	r3, r1
 2557              	.LVL310:
 2558 004e 0092     		str	r2, [sp]
 2559 0050 0A1C     		mov	r2, r1
 2560              	.L251:
 2561              	.LVL311:
 2562              	.LBE50:
 2563              	.LBE49:
1777:.\sd/ff.c     **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
 2564              		.loc 1 1777 0
 2565 0052 5F1C     		add	r7, r3, #1
 2566 0054 EB5C     		ldrb	r3, [r5, r3]
 2567              	.LVL312:
 2568 0056 0197     		str	r7, [sp, #4]
 2569              	.LVL313:
1778:.\sd/ff.c     **** 		if (c == '.' || i >= ni) {
 2570              		.loc 1 1778 0
 2571 0058 202B     		cmp	r3, #32
 2572 005a 19D9     		bls	.L252
 2573 005c 2F2B     		cmp	r3, #47
 2574 005e 17D0     		beq	.L252
 2575 0060 5C2B     		cmp	r3, #92
 2576 0062 15D0     		beq	.L252
1779:.\sd/ff.c     **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
 2577              		.loc 1 1779 0
 2578 0064 2E2B     		cmp	r3, #46
 2579 0066 78D0     		beq	.L253
 2580 0068 009E     		ldr	r6, [sp]
 2581 006a B142     		cmp	r1, r6
 2582 006c 73D2     		bcs	.L285
1784:.\sd/ff.c     **** 			b |= 3;						/* Eliminate NT flag */
 2583              		.loc 1 1784 0
 2584 006e 5FB2     		sxtb	r7, r3
 2585              	.LVL314:
 2586 0070 002F     		cmp	r7, #0
 2587 0072 04DA     		bge	.L256
1785:.\sd/ff.c     **** #ifdef _EXCVT
 2588              		.loc 1 1785 0
 2589 0074 0327     		mov	r7, #3
 2590 0076 3A43     		orr	r2, r7
 2591              	.LVL315:
1787:.\sd/ff.c     **** #else
 2592              		.loc 1 1787 0
 2593 0078 464F     		ldr	r7, .L309
 2594 007a 803B     		sub	r3, r3, #128
 2595              	.LVL316:
 2596 007c FB5C     		ldrb	r3, [r7, r3]
 2597              	.LVL317:
 2598              	.L256:
1801:.\sd/ff.c     **** 				return FR_INVALID_NAME;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 90


 2599              		.loc 1 1801 0
 2600 007e 0027     		mov	r7, #0
 2601              	.LVL318:
 2602              	.L258:
 2603              	.LBB51:
 2604              	.LBB52:
 566:.\sd/ff.c     **** 	return *str;
 2605              		.loc 1 566 0
 2606 0080 454E     		ldr	r6, .L309+4
 2607 0082 F65D     		ldrb	r6, [r6, r7]
 2608 0084 002E     		cmp	r6, #0
 2609 0086 72D0     		beq	.L257
 2610 0088 0137     		add	r7, r7, #1
 2611              	.LVL319:
 2612 008a 9E42     		cmp	r6, r3
 2613 008c F8D1     		bne	.L258
 2614 008e 62E0     		b	.L285
 2615              	.LVL320:
 2616              	.L252:
 2617              	.LBE52:
 2618              	.LBE51:
1813:.\sd/ff.c     **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 2619              		.loc 1 1813 0
 2620 0090 019E     		ldr	r6, [sp, #4]
1814:.\sd/ff.c     **** 
 2621              		.loc 1 1814 0
 2622 0092 0027     		mov	r7, #0
 2623              	.LVL321:
1813:.\sd/ff.c     **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 2624              		.loc 1 1813 0
 2625 0094 AD19     		add	r5, r5, r6
 2626              	.LVL322:
1814:.\sd/ff.c     **** 
 2627              		.loc 1 1814 0
 2628 0096 2026     		mov	r6, #32
 2629 0098 9E42     		cmp	r6, r3
 2630 009a 7F41     		adc	r7, r7, r7
 2631 009c BB00     		lsl	r3, r7, #2
 2632              	.LVL323:
1816:.\sd/ff.c     **** 	if (sfn[0] == DDE) sfn[0] = NDDE;	/* When first char collides with DDE, replace it with 0x05 */
 2633              		.loc 1 1816 0
 2634 009e 0029     		cmp	r1, #0
 2635 00a0 59D0     		beq	.L285
1817:.\sd/ff.c     **** 
 2636              		.loc 1 1817 0
 2637 00a2 0178     		ldrb	r1, [r0]
 2638              	.LVL324:
 2639 00a4 E529     		cmp	r1, #229
 2640 00a6 01D1     		bne	.L261
 2641 00a8 E039     		sub	r1, r1, #224
 2642 00aa 0170     		strb	r1, [r0]
 2643              	.L261:
1819:.\sd/ff.c     **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
 2644              		.loc 1 1819 0
 2645 00ac 0099     		ldr	r1, [sp]
 2646 00ae 0829     		cmp	r1, #8
 2647 00b0 01D1     		bne	.L262
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 91


 2648 00b2 9200     		lsl	r2, r2, #2
 2649              	.LVL325:
 2650 00b4 D2B2     		uxtb	r2, r2
 2651              	.LVL326:
 2652              	.L262:
1820:.\sd/ff.c     **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
 2653              		.loc 1 1820 0
 2654 00b6 0321     		mov	r1, #3
 2655 00b8 1140     		and	r1, r2
 2656 00ba 0129     		cmp	r1, #1
 2657 00bc 02D1     		bne	.L263
 2658 00be 0F31     		add	r1, r1, #15
 2659 00c0 0B43     		orr	r3, r1
 2660              	.LVL327:
 2661 00c2 DBB2     		uxtb	r3, r3
 2662              	.LVL328:
 2663              	.L263:
1821:.\sd/ff.c     **** 
 2664              		.loc 1 1821 0
 2665 00c4 0C21     		mov	r1, #12
 2666 00c6 0A40     		and	r2, r1
 2667              	.LVL329:
 2668 00c8 042A     		cmp	r2, #4
 2669 00ca 02D1     		bne	.L264
 2670 00cc 0432     		add	r2, r2, #4
 2671 00ce 1343     		orr	r3, r2
 2672              	.LVL330:
 2673 00d0 DBB2     		uxtb	r3, r3
 2674              	.LVL331:
 2675              	.L264:
1823:.\sd/ff.c     **** 
 2676              		.loc 1 1823 0
 2677 00d2 C372     		strb	r3, [r0, #11]
 2678              	.LVL332:
 2679              	.LBE48:
 2680              	.LBE47:
 2681              	.LBB54:
 2682              	.LBB55:
1363:.\sd/ff.c     **** 	if (res != FR_OK) return res;
 2683              		.loc 1 1363 0
 2684 00d4 0021     		mov	r1, #0
 2685 00d6 201C     		mov	r0, r4
 2686              	.LVL333:
 2687 00d8 FFF7FEFF 		bl	dir_sdi
 2688              	.LVL334:
 2689              	.L306:
1364:.\sd/ff.c     **** 
 2690              		.loc 1 1364 0
 2691 00dc 0028     		cmp	r0, #0
 2692 00de 1CD1     		bne	.L265
1370:.\sd/ff.c     **** 		if (res != FR_OK) break;
 2693              		.loc 1 1370 0
 2694 00e0 2068     		ldr	r0, [r4]
 2695              	.LVL335:
 2696 00e2 2169     		ldr	r1, [r4, #16]
 2697 00e4 FFF7FEFF 		bl	move_window
 2698              	.LVL336:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 92


1371:.\sd/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
 2699              		.loc 1 1371 0
 2700 00e8 0028     		cmp	r0, #0
 2701 00ea 16D1     		bne	.L265
1372:.\sd/ff.c     **** 		c = dir[DIR_Name];
 2702              		.loc 1 1372 0
 2703 00ec 6169     		ldr	r1, [r4, #20]
 2704              	.LVL337:
1374:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
 2705              		.loc 1 1374 0
 2706 00ee 0B78     		ldrb	r3, [r1]
 2707 00f0 002B     		cmp	r3, #0
 2708 00f2 11D0     		beq	.L279
1397:.\sd/ff.c     **** 			break;
 2709              		.loc 1 1397 0
 2710 00f4 0823     		mov	r3, #8
 2711 00f6 CA7A     		ldrb	r2, [r1, #11]
 2712 00f8 1A40     		and	r2, r3
 2713 00fa 08D1     		bne	.L266
 2714 00fc A669     		ldr	r6, [r4, #24]
 2715              	.LVL338:
 2716              	.L267:
 2717              	.LBB56:
 2718              	.LBB57:
 559:.\sd/ff.c     **** 	return r;
 2719              		.loc 1 559 0
 2720 00fe 8B5C     		ldrb	r3, [r1, r2]
 2721 0100 B05C     		ldrb	r0, [r6, r2]
 2722 0102 0132     		add	r2, r2, #1
 2723              	.LVL339:
 2724 0104 181A     		sub	r0, r3, r0
 2725              	.LVL340:
 2726 0106 02D1     		bne	.L266
 2727              	.LVL341:
 2728 0108 0B2A     		cmp	r2, #11
 2729 010a F8D1     		bne	.L267
 2730 010c 05E0     		b	.L265
 2731              	.LVL342:
 2732              	.L266:
 2733              	.LBE57:
 2734              	.LBE56:
1400:.\sd/ff.c     **** 	} while (res == FR_OK);
 2735              		.loc 1 1400 0
 2736 010e 201C     		mov	r0, r4
 2737 0110 0021     		mov	r1, #0
 2738              	.LVL343:
 2739 0112 FFF7FEFF 		bl	dir_next
 2740              	.LVL344:
 2741 0116 E1E7     		b	.L306
 2742              	.LVL345:
 2743              	.L279:
1374:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
 2744              		.loc 1 1374 0
 2745 0118 0420     		mov	r0, #4
 2746              	.LVL346:
 2747              	.L265:
 2748              	.LBE55:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 93


 2749              	.LBE54:
1949:.\sd/ff.c     **** 			if (res != FR_OK) {				/* Failed to find the object */
 2750              		.loc 1 1949 0
 2751 011a A369     		ldr	r3, [r4, #24]
 2752 011c DB7A     		ldrb	r3, [r3, #11]
 2753              	.LVL347:
1950:.\sd/ff.c     **** 				if (res != FR_NO_FILE) break;	/* Abort if any hard error occured */
 2754              		.loc 1 1950 0
 2755 011e 0028     		cmp	r0, #0
 2756 0120 05D0     		beq	.L270
1951:.\sd/ff.c     **** 				/* Object not found */
 2757              		.loc 1 1951 0
 2758 0122 0428     		cmp	r0, #4
 2759 0124 35D1     		bne	.L292
1958:.\sd/ff.c     **** 				}
 2760              		.loc 1 1958 0
 2761 0126 0342     		tst	r3, r0
 2762 0128 33D1     		bne	.L292
 2763 012a 0130     		add	r0, r0, #1
 2764 012c 31E0     		b	.L292
 2765              	.L270:
1962:.\sd/ff.c     **** 			dir = dj->dir;						/* There is next segment. Follow the sub directory */
 2766              		.loc 1 1962 0
 2767 012e 5B07     		lsl	r3, r3, #29
 2768 0130 2FD4     		bmi	.L292
 2769              	.LVL348:
1963:.\sd/ff.c     **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* Cannot follow because it is a file */
 2770              		.loc 1 1963 0
 2771 0132 6069     		ldr	r0, [r4, #20]
 2772              	.LVL349:
1964:.\sd/ff.c     **** 				res = FR_NO_PATH; break;
 2773              		.loc 1 1964 0
 2774 0134 C37A     		ldrb	r3, [r0, #11]
 2775 0136 DB06     		lsl	r3, r3, #27
 2776 0138 0BD5     		bpl	.L284
1967:.\sd/ff.c     **** 		}
 2777              		.loc 1 1967 0
 2778 013a 437D     		ldrb	r3, [r0, #21]
 2779 013c 017D     		ldrb	r1, [r0, #20]
 2780 013e 1B02     		lsl	r3, r3, #8
 2781 0140 0B43     		orr	r3, r1
 2782 0142 C27E     		ldrb	r2, [r0, #27]
 2783 0144 1904     		lsl	r1, r3, #16
 2784 0146 837E     		ldrb	r3, [r0, #26]
 2785 0148 1202     		lsl	r2, r2, #8
 2786 014a 1343     		orr	r3, r2
 2787 014c 0B43     		orr	r3, r1
 2788 014e A360     		str	r3, [r4, #8]
 2789              	.LVL350:
1968:.\sd/ff.c     **** 	}
 2790              		.loc 1 1968 0
 2791 0150 6BE7     		b	.L247
 2792              	.LVL351:
 2793              	.L284:
1965:.\sd/ff.c     **** 			}
 2794              		.loc 1 1965 0
 2795 0152 0520     		mov	r0, #5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 94


 2796              	.LVL352:
 2797 0154 1DE0     		b	.L292
 2798              	.LVL353:
 2799              	.L285:
 2800              	.LBB58:
 2801              	.LBB53:
1780:.\sd/ff.c     **** 			i = 8; ni = 11;
 2802              		.loc 1 1780 0
 2803 0156 0620     		mov	r0, #6
 2804              	.LVL354:
 2805 0158 1BE0     		b	.L292
 2806              	.LVL355:
 2807              	.L253:
 2808 015a 009B     		ldr	r3, [sp]
 2809              	.LVL356:
 2810 015c 082B     		cmp	r3, #8
 2811 015e FAD1     		bne	.L285
 2812              	.LVL357:
1781:.\sd/ff.c     **** 			b <<= 2; continue;
 2813              		.loc 1 1781 0
 2814 0160 0B23     		mov	r3, #11
1782:.\sd/ff.c     **** 		}
 2815              		.loc 1 1782 0
 2816 0162 9200     		lsl	r2, r2, #2
 2817              	.LVL358:
1781:.\sd/ff.c     **** 			b <<= 2; continue;
 2818              		.loc 1 1781 0
 2819 0164 0099     		ldr	r1, [sp]
1782:.\sd/ff.c     **** 		}
 2820              		.loc 1 1782 0
 2821 0166 D2B2     		uxtb	r2, r2
 2822              	.LVL359:
1781:.\sd/ff.c     **** 			b <<= 2; continue;
 2823              		.loc 1 1781 0
 2824 0168 0093     		str	r3, [sp]
 2825              	.LVL360:
 2826              	.L255:
1777:.\sd/ff.c     **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
 2827              		.loc 1 1777 0
 2828 016a 019B     		ldr	r3, [sp, #4]
 2829 016c 71E7     		b	.L251
 2830              	.LVL361:
 2831              	.L257:
1803:.\sd/ff.c     **** 				b |= 2;
 2832              		.loc 1 1803 0
 2833 016e 1F1C     		mov	r7, r3
 2834              	.LVL362:
 2835 0170 413F     		sub	r7, r7, #65
 2836 0172 192F     		cmp	r7, #25
 2837 0174 02D8     		bhi	.L308
1804:.\sd/ff.c     **** 			} else {
 2838              		.loc 1 1804 0
 2839 0176 0227     		mov	r7, #2
 2840 0178 3A43     		orr	r2, r7
 2841              	.LVL363:
 2842 017a 07E0     		b	.L259
 2843              	.L308:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 95


1806:.\sd/ff.c     **** 					b |= 1; c -= 0x20;
 2844              		.loc 1 1806 0
 2845 017c 1F1C     		mov	r7, r3
 2846 017e 613F     		sub	r7, r7, #97
 2847 0180 192F     		cmp	r7, #25
 2848 0182 03D8     		bhi	.L259
1807:.\sd/ff.c     **** 				}
 2849              		.loc 1 1807 0
 2850 0184 0127     		mov	r7, #1
 2851 0186 203B     		sub	r3, r3, #32
 2852              	.LVL364:
 2853 0188 3A43     		orr	r2, r7
 2854              	.LVL365:
 2855 018a DBB2     		uxtb	r3, r3
 2856              	.LVL366:
 2857              	.L259:
1810:.\sd/ff.c     **** 		}
 2858              		.loc 1 1810 0
 2859 018c 4354     		strb	r3, [r0, r1]
 2860 018e 0131     		add	r1, r1, #1
 2861              	.LVL367:
 2862 0190 EBE7     		b	.L255
 2863              	.LVL368:
 2864              	.L292:
 2865              	.LBE53:
 2866              	.LBE58:
1972:.\sd/ff.c     **** 
 2867              		.loc 1 1972 0
 2868              		@ sp needed
 2869              	.LVL369:
 2870 0192 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2871              	.L310:
 2872              		.align	2
 2873              	.L309:
 2874 0194 00000000 		.word	.LANCHOR1
 2875 0198 00000000 		.word	.LC8
 2876              		.cfi_endproc
 2877              	.LFE24:
 2878              		.size	follow_path, .-follow_path
 2879              		.section	.text.dir_register,"ax",%progbits
 2880              		.align	1
 2881              		.code	16
 2882              		.thumb_func
 2883              		.type	dir_register, %function
 2884              	dir_register:
 2885              	.LFB20:
1474:.\sd/ff.c     **** 	FRESULT res;
 2886              		.loc 1 1474 0
 2887              		.cfi_startproc
 2888              	.LVL370:
 2889 0000 38B5     		push	{r3, r4, r5, lr}
 2890              		.cfi_def_cfa_offset 16
 2891              		.cfi_offset 3, -16
 2892              		.cfi_offset 4, -12
 2893              		.cfi_offset 5, -8
 2894              		.cfi_offset 14, -4
1541:.\sd/ff.c     **** 	if (res == FR_OK) {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 96


 2895              		.loc 1 1541 0
 2896 0002 0021     		mov	r1, #0
1474:.\sd/ff.c     **** 	FRESULT res;
 2897              		.loc 1 1474 0
 2898 0004 041C     		mov	r4, r0
1541:.\sd/ff.c     **** 	if (res == FR_OK) {
 2899              		.loc 1 1541 0
 2900 0006 FFF7FEFF 		bl	dir_sdi
 2901              	.LVL371:
 2902              	.L327:
 2903 000a 051E     		sub	r5, r0, #0
 2904              	.LVL372:
1542:.\sd/ff.c     **** 		do {	/* Find a blank entry for the SFN */
 2905              		.loc 1 1542 0
 2906 000c 27D1     		bne	.L322
1544:.\sd/ff.c     **** 			if (res != FR_OK) break;
 2907              		.loc 1 1544 0
 2908 000e 2068     		ldr	r0, [r4]
 2909              	.LVL373:
 2910 0010 2169     		ldr	r1, [r4, #16]
 2911 0012 FFF7FEFF 		bl	move_window
 2912              	.LVL374:
 2913 0016 051E     		sub	r5, r0, #0
 2914              	.LVL375:
1545:.\sd/ff.c     **** 			c = *dj->dir;
 2915              		.loc 1 1545 0
 2916 0018 21D1     		bne	.L322
1546:.\sd/ff.c     **** 			if (c == DDE || c == 0) break;	/* Is it a blank entry? */
 2917              		.loc 1 1546 0
 2918 001a 6369     		ldr	r3, [r4, #20]
 2919 001c 1B78     		ldrb	r3, [r3]
 2920              	.LVL376:
1547:.\sd/ff.c     **** 			res = dir_next(dj, 1);			/* Next entry with table stretch */
 2921              		.loc 1 1547 0
 2922 001e E52B     		cmp	r3, #229
 2923 0020 06D0     		beq	.L313
1547:.\sd/ff.c     **** 			res = dir_next(dj, 1);			/* Next entry with table stretch */
 2924              		.loc 1 1547 0 is_stmt 0 discriminator 1
 2925 0022 002B     		cmp	r3, #0
 2926 0024 04D0     		beq	.L313
1548:.\sd/ff.c     **** 		} while (res == FR_OK);
 2927              		.loc 1 1548 0 is_stmt 1
 2928 0026 201C     		mov	r0, r4
 2929              	.LVL377:
 2930 0028 0121     		mov	r1, #1
 2931 002a FFF7FEFF 		bl	dir_next
 2932              	.LVL378:
 2933 002e ECE7     		b	.L327
 2934              	.LVL379:
 2935              	.L313:
 2936              	.LBB63:
 2937              	.LBB64:
1554:.\sd/ff.c     **** 		if (res == FR_OK) {
 2938              		.loc 1 1554 0
 2939 0030 2068     		ldr	r0, [r4]
 2940 0032 2169     		ldr	r1, [r4, #16]
 2941 0034 FFF7FEFF 		bl	move_window
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 97


 2942              	.LVL380:
 2943 0038 051E     		sub	r5, r0, #0
 2944              	.LVL381:
1555:.\sd/ff.c     **** 			dir = dj->dir;
 2945              		.loc 1 1555 0
 2946 003a 10D1     		bne	.L322
1556:.\sd/ff.c     **** 			mem_set(dir, 0, SZ_DIR);	/* Clean the entry */
 2947              		.loc 1 1556 0
 2948 003c 6069     		ldr	r0, [r4, #20]
 2949              	.LVL382:
 2950 003e 021C     		mov	r2, r0
 2951 0040 031C     		mov	r3, r0
 2952 0042 2032     		add	r2, r2, #32
 2953              	.LVL383:
 2954              	.L315:
 2955              	.LBB65:
 2956              	.LBB66:
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 2957              		.loc 1 549 0
 2958 0044 9342     		cmp	r3, r2
 2959 0046 03D0     		beq	.L328
 2960              	.LVL384:
 550:.\sd/ff.c     **** }
 2961              		.loc 1 550 0
 2962 0048 0021     		mov	r1, #0
 2963 004a 1970     		strb	r1, [r3]
 2964 004c 0133     		add	r3, r3, #1
 2965              	.LVL385:
 2966 004e F9E7     		b	.L315
 2967              	.LVL386:
 2968              	.L328:
 2969              	.LBE66:
 2970              	.LBE65:
1558:.\sd/ff.c     **** #if _USE_LFN
 2971              		.loc 1 1558 0
 2972 0050 0B22     		mov	r2, #11
 2973 0052 A169     		ldr	r1, [r4, #24]
 2974 0054 FFF7FEFF 		bl	mem_cpy
 2975              	.LVL387:
1562:.\sd/ff.c     **** 		}
 2976              		.loc 1 1562 0
 2977 0058 0122     		mov	r2, #1
 2978 005a 2368     		ldr	r3, [r4]
 2979 005c 1A71     		strb	r2, [r3, #4]
 2980              	.LVL388:
 2981              	.L322:
 2982              	.LBE64:
 2983              	.LBE63:
1567:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 2984              		.loc 1 1567 0
 2985 005e 281C     		mov	r0, r5
 2986              		@ sp needed
 2987              	.LVL389:
 2988 0060 38BD     		pop	{r3, r4, r5, pc}
 2989              		.cfi_endproc
 2990              	.LFE20:
 2991              		.size	dir_register, .-dir_register
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 98


 2992              		.section	.text.dir_read,"ax",%progbits
 2993              		.align	1
 2994              		.code	16
 2995              		.thumb_func
 2996              		.type	dir_read, %function
 2997              	dir_read:
 2998              	.LFB19:
1417:.\sd/ff.c     **** 	FRESULT res;
 2999              		.loc 1 1417 0
 3000              		.cfi_startproc
 3001              	.LVL390:
 3002 0000 10B5     		push	{r4, lr}
 3003              		.cfi_def_cfa_offset 8
 3004              		.cfi_offset 4, -8
 3005              		.cfi_offset 14, -4
1417:.\sd/ff.c     **** 	FRESULT res;
 3006              		.loc 1 1417 0
 3007 0002 041C     		mov	r4, r0
1424:.\sd/ff.c     **** 	while (dj->sect) {
 3008              		.loc 1 1424 0
 3009 0004 0420     		mov	r0, #4
 3010              	.LVL391:
 3011              	.L330:
1425:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 3012              		.loc 1 1425 0
 3013 0006 2169     		ldr	r1, [r4, #16]
 3014 0008 0029     		cmp	r1, #0
 3015 000a 18D0     		beq	.L348
1426:.\sd/ff.c     **** 		if (res != FR_OK) break;
 3016              		.loc 1 1426 0
 3017 000c 2068     		ldr	r0, [r4]
 3018 000e FFF7FEFF 		bl	move_window
 3019              	.LVL392:
1427:.\sd/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
 3020              		.loc 1 1427 0
 3021 0012 0028     		cmp	r0, #0
 3022 0014 15D1     		bne	.L336
1428:.\sd/ff.c     **** 		c = dir[DIR_Name];
 3023              		.loc 1 1428 0
 3024 0016 6269     		ldr	r2, [r4, #20]
 3025              	.LVL393:
1429:.\sd/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3026              		.loc 1 1429 0
 3027 0018 1378     		ldrb	r3, [r2]
 3028              	.LVL394:
1430:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
 3029              		.loc 1 1430 0
 3030 001a 002B     		cmp	r3, #0
 3031 001c 14D0     		beq	.L337
1451:.\sd/ff.c     **** 			break;
 3032              		.loc 1 1451 0
 3033 001e E52B     		cmp	r3, #229
 3034 0020 06D0     		beq	.L332
1451:.\sd/ff.c     **** 			break;
 3035              		.loc 1 1451 0 is_stmt 0 discriminator 1
 3036 0022 2E2B     		cmp	r3, #46
 3037 0024 04D0     		beq	.L332
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 99


1451:.\sd/ff.c     **** 			break;
 3038              		.loc 1 1451 0 discriminator 2
 3039 0026 D37A     		ldrb	r3, [r2, #11]
 3040              	.LVL395:
 3041 0028 1B07     		lsl	r3, r3, #28
 3042 002a 01D4     		bmi	.L332
 3043              	.LVL396:
 3044              	.L335:
 3045 002c 0020     		mov	r0, #0
 3046 002e 0DE0     		b	.L347
 3047              	.LVL397:
 3048              	.L332:
1454:.\sd/ff.c     **** 		if (res != FR_OK) break;
 3049              		.loc 1 1454 0 is_stmt 1
 3050 0030 201C     		mov	r0, r4
 3051              	.LVL398:
 3052 0032 0021     		mov	r1, #0
 3053 0034 FFF7FEFF 		bl	dir_next
 3054              	.LVL399:
1455:.\sd/ff.c     **** 	}
 3055              		.loc 1 1455 0
 3056 0038 0028     		cmp	r0, #0
 3057 003a E4D0     		beq	.L330
 3058 003c 01E0     		b	.L336
 3059              	.LVL400:
 3060              	.L348:
1458:.\sd/ff.c     **** 
 3061              		.loc 1 1458 0
 3062 003e 0028     		cmp	r0, #0
 3063 0040 F4D0     		beq	.L335
 3064              	.L336:
1458:.\sd/ff.c     **** 
 3065              		.loc 1 1458 0 is_stmt 0 discriminator 1
 3066 0042 0023     		mov	r3, #0
 3067 0044 2361     		str	r3, [r4, #16]
 3068 0046 01E0     		b	.L347
 3069              	.LVL401:
 3070              	.L337:
1430:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
 3071              		.loc 1 1430 0 is_stmt 1
 3072 0048 0420     		mov	r0, #4
 3073              	.LVL402:
 3074 004a FAE7     		b	.L336
 3075              	.LVL403:
 3076              	.L347:
1461:.\sd/ff.c     **** #endif
 3077              		.loc 1 1461 0
 3078              		@ sp needed
 3079              	.LVL404:
 3080 004c 10BD     		pop	{r4, pc}
 3081              		.cfi_endproc
 3082              	.LFE19:
 3083              		.size	dir_read, .-dir_read
 3084              		.section	.text.remove_chain,"ax",%progbits
 3085              		.align	1
 3086              		.code	16
 3087              		.thumb_func
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 100


 3088              		.type	remove_chain, %function
 3089              	remove_chain:
 3090              	.LFB14:
 929:.\sd/ff.c     **** 	FRESULT res;
 3091              		.loc 1 929 0
 3092              		.cfi_startproc
 3093              	.LVL405:
 3094 0000 70B5     		push	{r4, r5, r6, lr}
 3095              		.cfi_def_cfa_offset 16
 3096              		.cfi_offset 4, -16
 3097              		.cfi_offset 5, -12
 3098              		.cfi_offset 6, -8
 3099              		.cfi_offset 14, -4
 929:.\sd/ff.c     **** 	FRESULT res;
 3100              		.loc 1 929 0
 3101 0002 041C     		mov	r4, r0
 3102 0004 0D1E     		sub	r5, r1, #0
 936:.\sd/ff.c     **** 		res = FR_INT_ERR;
 3103              		.loc 1 936 0
 3104 0006 012D     		cmp	r5, #1
 3105 0008 01D8     		bhi	.L350
 3106              	.LVL406:
 3107              	.L352:
 937:.\sd/ff.c     **** 
 3108              		.loc 1 937 0
 3109 000a 0220     		mov	r0, #2
 3110 000c 22E0     		b	.L351
 3111              	.LVL407:
 3112              	.L350:
 936:.\sd/ff.c     **** 		res = FR_INT_ERR;
 3113              		.loc 1 936 0 discriminator 1
 3114 000e 8369     		ldr	r3, [r0, #24]
 3115 0010 9942     		cmp	r1, r3
 3116 0012 FAD2     		bcs	.L352
 3117              	.LVL408:
 3118              	.L353:
 3119              	.LBB69:
 3120              	.LBB70:
 941:.\sd/ff.c     **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 3121              		.loc 1 941 0
 3122 0014 A369     		ldr	r3, [r4, #24]
 3123 0016 9D42     		cmp	r5, r3
 3124 0018 05D2     		bcs	.L357
 942:.\sd/ff.c     **** 			if (nxt == 0) break;				/* Empty cluster? */
 3125              		.loc 1 942 0
 3126 001a 201C     		mov	r0, r4
 3127 001c 291C     		mov	r1, r5
 3128 001e FFF7FEFF 		bl	get_fat
 3129              	.LVL409:
 3130 0022 061E     		sub	r6, r0, #0
 3131              	.LVL410:
 943:.\sd/ff.c     **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 3132              		.loc 1 943 0
 3133 0024 01D1     		bne	.L354
 3134              	.LVL411:
 3135              	.L357:
 3136              	.LBE70:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 101


 3137              	.LBE69:
 937:.\sd/ff.c     **** 
 3138              		.loc 1 937 0
 3139 0026 0020     		mov	r0, #0
 3140 0028 14E0     		b	.L351
 3141              	.LVL412:
 3142              	.L354:
 3143              	.LBB73:
 3144              	.LBB71:
 944:.\sd/ff.c     **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 3145              		.loc 1 944 0
 3146 002a 0128     		cmp	r0, #1
 3147 002c EDD0     		beq	.L352
 945:.\sd/ff.c     **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 3148              		.loc 1 945 0
 3149 002e 431C     		add	r3, r0, #1
 3150 0030 0FD0     		beq	.L358
 946:.\sd/ff.c     **** 			if (res != FR_OK) break;
 3151              		.loc 1 946 0
 3152 0032 201C     		mov	r0, r4
 3153              	.LVL413:
 3154 0034 291C     		mov	r1, r5
 3155 0036 0022     		mov	r2, #0
 3156 0038 FFF7FEFF 		bl	put_fat
 3157              	.LVL414:
 947:.\sd/ff.c     **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSInfo */
 3158              		.loc 1 947 0
 3159 003c 0028     		cmp	r0, #0
 3160 003e 09D1     		bne	.L351
 948:.\sd/ff.c     **** 				fs->free_clust++;
 3161              		.loc 1 948 0
 3162 0040 2369     		ldr	r3, [r4, #16]
 3163 0042 5A1C     		add	r2, r3, #1
 3164 0044 03D0     		beq	.L355
 949:.\sd/ff.c     **** 				fs->fsi_flag = 1;
 3165              		.loc 1 949 0
 3166 0046 0133     		add	r3, r3, #1
 3167 0048 2361     		str	r3, [r4, #16]
 950:.\sd/ff.c     **** 			}
 3168              		.loc 1 950 0
 3169 004a 0123     		mov	r3, #1
 3170 004c 6371     		strb	r3, [r4, #5]
 3171              	.L355:
 3172              	.LBE71:
 3173              	.LBE73:
 929:.\sd/ff.c     **** 	FRESULT res;
 3174              		.loc 1 929 0
 3175 004e 351C     		mov	r5, r6
 3176              	.LVL415:
 3177 0050 E0E7     		b	.L353
 3178              	.LVL416:
 3179              	.L358:
 3180              	.LBB74:
 3181              	.LBB72:
 945:.\sd/ff.c     **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 3182              		.loc 1 945 0
 3183 0052 0120     		mov	r0, #1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 102


 3184              	.LVL417:
 3185              	.L351:
 3186              	.LBE72:
 3187              	.LBE74:
 967:.\sd/ff.c     **** #endif
 3188              		.loc 1 967 0
 3189              		@ sp needed
 3190              	.LVL418:
 3191 0054 70BD     		pop	{r4, r5, r6, pc}
 3192              		.cfi_endproc
 3193              	.LFE14:
 3194              		.size	remove_chain, .-remove_chain
 3195              		.section	.text.f_mount,"ax",%progbits
 3196              		.align	1
 3197              		.global	f_mount
 3198              		.code	16
 3199              		.thumb_func
 3200              		.type	f_mount, %function
 3201              	f_mount:
 3202              	.LFB28:
2187:.\sd/ff.c     **** 
2188:.\sd/ff.c     **** 
2189:.\sd/ff.c     **** 
2190:.\sd/ff.c     **** 
2191:.\sd/ff.c     **** /*--------------------------------------------------------------------------
2192:.\sd/ff.c     **** 
2193:.\sd/ff.c     ****    Public Functions
2194:.\sd/ff.c     **** 
2195:.\sd/ff.c     **** --------------------------------------------------------------------------*/
2196:.\sd/ff.c     **** 
2197:.\sd/ff.c     **** 
2198:.\sd/ff.c     **** 
2199:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2200:.\sd/ff.c     **** /* Mount/Unmount a Logical Drive                                         */
2201:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2202:.\sd/ff.c     **** 
2203:.\sd/ff.c     **** FRESULT f_mount (
2204:.\sd/ff.c     **** 	BYTE vol,		/* Logical drive number to be mounted/unmounted */
2205:.\sd/ff.c     **** 	FATFS *fs		/* Pointer to new file system object (NULL for unmount)*/
2206:.\sd/ff.c     **** )
2207:.\sd/ff.c     **** {
 3203              		.loc 1 2207 0
 3204              		.cfi_startproc
 3205              	.LVL419:
 3206 0000 10B5     		push	{r4, lr}
 3207              		.cfi_def_cfa_offset 8
 3208              		.cfi_offset 4, -8
 3209              		.cfi_offset 14, -4
2208:.\sd/ff.c     **** 	FATFS *rfs;
2209:.\sd/ff.c     **** 
2210:.\sd/ff.c     **** 
2211:.\sd/ff.c     **** 	if (vol >= _VOLUMES)		/* Check if the drive number is valid */
2212:.\sd/ff.c     **** 		return FR_INVALID_DRIVE;
 3210              		.loc 1 2212 0
 3211 0002 0B23     		mov	r3, #11
2211:.\sd/ff.c     **** 		return FR_INVALID_DRIVE;
 3212              		.loc 1 2211 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 103


 3213 0004 0028     		cmp	r0, #0
 3214 0006 13D1     		bne	.L366
2213:.\sd/ff.c     **** 	rfs = FatFs[vol];			/* Get current fs object */
 3215              		.loc 1 2213 0
 3216 0008 0A4B     		ldr	r3, .L378
 3217 000a 5A6A     		ldr	r2, [r3, #36]
 3218              	.LVL420:
2214:.\sd/ff.c     **** 
2215:.\sd/ff.c     **** 	if (rfs) {
 3219              		.loc 1 2215 0
 3220 000c 002A     		cmp	r2, #0
 3221 000e 09D0     		beq	.L367
 3222              	.LVL421:
 3223              	.L369:
 3224              	.LBB77:
 3225              	.LBB78:
 707:.\sd/ff.c     **** 	}
 3226              		.loc 1 707 0
 3227 0010 1C58     		ldr	r4, [r3, r0]
 3228 0012 9442     		cmp	r4, r2
 3229 0014 01D1     		bne	.L368
 3230 0016 0024     		mov	r4, #0
 3231 0018 1C50     		str	r4, [r3, r0]
 3232              	.L368:
 3233              	.LVL422:
 3234 001a 0C30     		add	r0, r0, #12
 706:.\sd/ff.c     **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 3235              		.loc 1 706 0
 3236 001c 2428     		cmp	r0, #36
 3237 001e F7D1     		bne	.L369
 3238              	.LBE78:
 3239              	.LBE77:
2216:.\sd/ff.c     **** #if _FS_SHARE
2217:.\sd/ff.c     **** 		clear_lock(rfs);
2218:.\sd/ff.c     **** #endif
2219:.\sd/ff.c     **** #if _FS_REENTRANT				/* Discard sync object of the current volume */
2220:.\sd/ff.c     **** 		if (!ff_del_syncobj(rfs->sobj)) return FR_INT_ERR;
2221:.\sd/ff.c     **** #endif
2222:.\sd/ff.c     **** 		rfs->fs_type = 0;		/* Clear old fs object */
 3240              		.loc 1 2222 0
 3241 0020 0020     		mov	r0, #0
 3242 0022 1070     		strb	r0, [r2]
 3243              	.L367:
2223:.\sd/ff.c     **** 	}
2224:.\sd/ff.c     **** 
2225:.\sd/ff.c     **** 	if (fs) {
 3244              		.loc 1 2225 0
 3245 0024 0029     		cmp	r1, #0
 3246 0026 01D0     		beq	.L370
2226:.\sd/ff.c     **** 		fs->fs_type = 0;		/* Clear new fs object */
 3247              		.loc 1 2226 0
 3248 0028 0022     		mov	r2, #0
 3249              	.LVL423:
 3250 002a 0A70     		strb	r2, [r1]
 3251              	.L370:
2227:.\sd/ff.c     **** #if _FS_REENTRANT				/* Create sync object for the new volume */
2228:.\sd/ff.c     **** 		if (!ff_cre_syncobj(vol, &fs->sobj)) return FR_INT_ERR;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 104


2229:.\sd/ff.c     **** #endif
2230:.\sd/ff.c     **** 	}
2231:.\sd/ff.c     **** 	FatFs[vol] = fs;			/* Register new fs object */
 3252              		.loc 1 2231 0
 3253 002c 5962     		str	r1, [r3, #36]
2232:.\sd/ff.c     **** 
2233:.\sd/ff.c     **** 	return FR_OK;
 3254              		.loc 1 2233 0
 3255 002e 0023     		mov	r3, #0
 3256              	.LVL424:
 3257              	.L366:
2234:.\sd/ff.c     **** }
 3258              		.loc 1 2234 0
 3259 0030 181C     		mov	r0, r3
 3260              		@ sp needed
 3261 0032 10BD     		pop	{r4, pc}
 3262              	.L379:
 3263              		.align	2
 3264              	.L378:
 3265 0034 00000000 		.word	.LANCHOR0
 3266              		.cfi_endproc
 3267              	.LFE28:
 3268              		.size	f_mount, .-f_mount
 3269              		.section	.text.f_open,"ax",%progbits
 3270              		.align	1
 3271              		.global	f_open
 3272              		.code	16
 3273              		.thumb_func
 3274              		.type	f_open, %function
 3275              	f_open:
 3276              	.LFB29:
2235:.\sd/ff.c     **** 
2236:.\sd/ff.c     **** 
2237:.\sd/ff.c     **** 
2238:.\sd/ff.c     **** 
2239:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2240:.\sd/ff.c     **** /* Open or Create a File                                                 */
2241:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2242:.\sd/ff.c     **** 
2243:.\sd/ff.c     **** FRESULT f_open (
2244:.\sd/ff.c     **** 	FIL *fp,			/* Pointer to the blank file object */
2245:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the file name */
2246:.\sd/ff.c     **** 	BYTE mode			/* Access mode and file open mode flags */
2247:.\sd/ff.c     **** )
2248:.\sd/ff.c     **** {
 3277              		.loc 1 2248 0
 3278              		.cfi_startproc
 3279              	.LVL425:
2249:.\sd/ff.c     **** 	FRESULT res;
2250:.\sd/ff.c     **** 	DIR dj;
2251:.\sd/ff.c     **** 	BYTE *dir;
2252:.\sd/ff.c     **** 	DEF_NAMEBUF;
2253:.\sd/ff.c     **** 
2254:.\sd/ff.c     **** 
2255:.\sd/ff.c     **** 	fp->fs = 0;			/* Clear file object */
 3280              		.loc 1 2255 0
 3281 0000 0023     		mov	r3, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 105


2248:.\sd/ff.c     **** 	FRESULT res;
 3282              		.loc 1 2248 0
 3283 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 3284              		.cfi_def_cfa_offset 20
 3285              		.cfi_offset 4, -20
 3286              		.cfi_offset 5, -16
 3287              		.cfi_offset 6, -12
 3288              		.cfi_offset 7, -8
 3289              		.cfi_offset 14, -4
 3290              		.loc 1 2255 0
 3291 0004 0360     		str	r3, [r0]
2256:.\sd/ff.c     **** 
2257:.\sd/ff.c     **** #if !_FS_READONLY
2258:.\sd/ff.c     **** 	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
 3292              		.loc 1 2258 0
 3293 0006 1F33     		add	r3, r3, #31
 3294 0008 1340     		and	r3, r2
2248:.\sd/ff.c     **** 	FRESULT res;
 3295              		.loc 1 2248 0
 3296 000a 151C     		mov	r5, r2
2259:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, (BYTE)(mode & ~FA_READ));
 3297              		.loc 1 2259 0
 3298 000c 1E22     		mov	r2, #30
 3299              	.LVL426:
2248:.\sd/ff.c     **** 	FRESULT res;
 3300              		.loc 1 2248 0
 3301 000e 8FB0     		sub	sp, sp, #60
 3302              		.cfi_def_cfa_offset 80
 3303              		.loc 1 2259 0
 3304 0010 07AE     		add	r6, sp, #28
2248:.\sd/ff.c     **** 	FRESULT res;
 3305              		.loc 1 2248 0
 3306 0012 0391     		str	r1, [sp, #12]
 3307 0014 071C     		mov	r7, r0
 3308              		.loc 1 2259 0
 3309 0016 2A40     		and	r2, r5
 3310 0018 03A8     		add	r0, sp, #12
 3311              	.LVL427:
 3312 001a 311C     		mov	r1, r6
 3313              	.LVL428:
2258:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, (BYTE)(mode & ~FA_READ));
 3314              		.loc 1 2258 0
 3315 001c 0093     		str	r3, [sp]
 3316              	.LVL429:
 3317              		.loc 1 2259 0
 3318 001e FFF7FEFF 		bl	chk_mounted
 3319              	.LVL430:
2260:.\sd/ff.c     **** #else
2261:.\sd/ff.c     **** 	mode &= FA_READ;
2262:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
2263:.\sd/ff.c     **** #endif
2264:.\sd/ff.c     **** 	INIT_BUF(dj);
 3320              		.loc 1 2264 0
 3321 0022 04AB     		add	r3, sp, #16
 3322 0024 B361     		str	r3, [r6, #24]
2265:.\sd/ff.c     **** 	if (res == FR_OK)
 3323              		.loc 1 2265 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 106


 3324 0026 0028     		cmp	r0, #0
 3325 0028 03D1     		bne	.L381
2266:.\sd/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 3326              		.loc 1 2266 0
 3327 002a 301C     		mov	r0, r6
 3328              	.LVL431:
 3329 002c 0399     		ldr	r1, [sp, #12]
 3330 002e FFF7FEFF 		bl	follow_path
 3331              	.LVL432:
 3332              	.L381:
2267:.\sd/ff.c     **** 	dir = dj.dir;
 3333              		.loc 1 2267 0
 3334 0032 7469     		ldr	r4, [r6, #20]
 3335              	.LVL433:
2268:.\sd/ff.c     **** 
2269:.\sd/ff.c     **** #if !_FS_READONLY	/* R/W configuration */
2270:.\sd/ff.c     **** 	if (res == FR_OK) {
 3336              		.loc 1 2270 0
 3337 0034 0028     		cmp	r0, #0
 3338 0036 0AD1     		bne	.L382
2271:.\sd/ff.c     **** 		if (!dir)	/* Current dir itself */
2272:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
 3339              		.loc 1 2272 0
 3340 0038 0630     		add	r0, r0, #6
 3341              	.LVL434:
2271:.\sd/ff.c     **** 		if (!dir)	/* Current dir itself */
 3342              		.loc 1 2271 0
 3343 003a 002C     		cmp	r4, #0
 3344 003c 07D0     		beq	.L382
2273:.\sd/ff.c     **** #if _FS_SHARE
2274:.\sd/ff.c     **** 		else
2275:.\sd/ff.c     **** 			res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 3345              		.loc 1 2275 0
 3346 003e 0123     		mov	r3, #1
 3347 0040 0099     		ldr	r1, [sp]
 3348 0042 301C     		mov	r0, r6
 3349 0044 9943     		bic	r1, r3
 3350 0046 4B1E     		sub	r3, r1, #1
 3351 0048 9941     		sbc	r1, r1, r3
 3352 004a FFF7FEFF 		bl	chk_lock
 3353              	.LVL435:
 3354              	.L382:
2276:.\sd/ff.c     **** #endif
2277:.\sd/ff.c     **** 	}
2278:.\sd/ff.c     **** 	/* Create or Open a file */
2279:.\sd/ff.c     **** 	if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 3355              		.loc 1 2279 0
 3356 004e 1C23     		mov	r3, #28
 3357 0050 1D42     		tst	r5, r3
 3358 0052 58D0     		beq	.L383
 3359              	.LBB84:
2280:.\sd/ff.c     **** 		DWORD dw, cl;
2281:.\sd/ff.c     **** 
2282:.\sd/ff.c     **** 		if (res != FR_OK) {					/* No file, create new */
 3360              		.loc 1 2282 0
 3361 0054 0028     		cmp	r0, #0
 3362 0056 17D0     		beq	.L384
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 107


2283:.\sd/ff.c     **** 			if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
 3363              		.loc 1 2283 0
 3364 0058 0428     		cmp	r0, #4
 3365 005a 0DD1     		bne	.L385
 3366              	.LVL436:
 3367              	.LBB85:
 3368              	.LBB86:
 639:.\sd/ff.c     **** 	return (i == _FS_SHARE) ? 0 : 1;
 3369              		.loc 1 639 0
 3370 005c 744B     		ldr	r3, .L447
 3371 005e 1A68     		ldr	r2, [r3]
 3372 0060 002A     		cmp	r2, #0
 3373 0062 00D1     		bne	.LCB3744
 3374 0064 DEE0     		b	.L386	@long jump
 3375              	.LCB3744:
 3376              	.LVL437:
 3377 0066 DA68     		ldr	r2, [r3, #12]
 3378 0068 002A     		cmp	r2, #0
 3379 006a 00D1     		bne	.LCB3749
 3380 006c DAE0     		b	.L386	@long jump
 3381              	.LCB3749:
 3382              	.LVL438:
 3383 006e 9B69     		ldr	r3, [r3, #24]
 3384 0070 002B     		cmp	r3, #0
 3385 0072 00D1     		bne	.LCB3753
 3386 0074 D6E0     		b	.L386	@long jump
 3387              	.LCB3753:
 3388              	.LBE86:
 3389              	.LBE85:
2284:.\sd/ff.c     **** #if _FS_SHARE
2285:.\sd/ff.c     **** 				res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
 3390              		.loc 1 2285 0
 3391 0076 0E30     		add	r0, r0, #14
 3392              	.LVL439:
 3393              	.L385:
2286:.\sd/ff.c     **** #else
2287:.\sd/ff.c     **** 				res = dir_register(&dj);
2288:.\sd/ff.c     **** #endif
2289:.\sd/ff.c     **** 			mode |= FA_CREATE_ALWAYS;		/* File is created */
 3394              		.loc 1 2289 0
 3395 0078 0823     		mov	r3, #8
 3396 007a 009A     		ldr	r2, [sp]
2290:.\sd/ff.c     **** 			dir = dj.dir;					/* New entry */
 3397              		.loc 1 2290 0
 3398 007c 7469     		ldr	r4, [r6, #20]
 3399              	.LVL440:
2289:.\sd/ff.c     **** 			dir = dj.dir;					/* New entry */
 3400              		.loc 1 2289 0
 3401 007e 1A43     		orr	r2, r3
 3402              	.LVL441:
 3403 0080 0092     		str	r2, [sp]
 3404              	.LVL442:
2291:.\sd/ff.c     **** 		}
2292:.\sd/ff.c     **** 		else {								/* Any object is already existing */
2293:.\sd/ff.c     **** 			if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
2294:.\sd/ff.c     **** 				res = FR_DENIED;
2295:.\sd/ff.c     **** 			} else {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 108


2296:.\sd/ff.c     **** 				if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
2297:.\sd/ff.c     **** 					res = FR_EXIST;
2298:.\sd/ff.c     **** 			}
2299:.\sd/ff.c     **** 		}
2300:.\sd/ff.c     **** 		if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 3405              		.loc 1 2300 0
 3406 0082 0028     		cmp	r0, #0
 3407 0084 0AD0     		beq	.L387
 3408 0086 D1E0     		b	.L424
 3409              	.LVL443:
 3410              	.L384:
2293:.\sd/ff.c     **** 				res = FR_DENIED;
 3411              		.loc 1 2293 0
 3412 0088 1123     		mov	r3, #17
 3413 008a E27A     		ldrb	r2, [r4, #11]
2294:.\sd/ff.c     **** 			} else {
 3414              		.loc 1 2294 0
 3415 008c 0720     		mov	r0, #7
 3416              	.LVL444:
2293:.\sd/ff.c     **** 				res = FR_DENIED;
 3417              		.loc 1 2293 0
 3418 008e 1A42     		tst	r2, r3
 3419 0090 00D0     		beq	.LCB3792
 3420 0092 CBE0     		b	.L424	@long jump
 3421              	.LCB3792:
2297:.\sd/ff.c     **** 			}
 3422              		.loc 1 2297 0
 3423 0094 0130     		add	r0, r0, #1
2296:.\sd/ff.c     **** 					res = FR_EXIST;
 3424              		.loc 1 2296 0
 3425 0096 6B07     		lsl	r3, r5, #29
 3426 0098 00D5     		bpl	.LCB3798
 3427 009a C7E0     		b	.L424	@long jump
 3428              	.LCB3798:
 3429              	.LVL445:
 3430              	.L387:
 3431              		.loc 1 2300 0 discriminator 1
 3432 009c 009B     		ldr	r3, [sp]
 3433 009e 1B07     		lsl	r3, r3, #28
 3434 00a0 3FD5     		bpl	.L391
2301:.\sd/ff.c     **** 			dw = get_fattime();					/* Created time */
 3435              		.loc 1 2301 0
 3436 00a2 FFF7FEFF 		bl	get_fattime
 3437              	.LVL446:
2302:.\sd/ff.c     **** 			ST_DWORD(dir+DIR_CrtTime, dw);
 3438              		.loc 1 2302 0
 3439 00a6 030A     		lsr	r3, r0, #8
 3440 00a8 E373     		strb	r3, [r4, #15]
 3441 00aa 030C     		lsr	r3, r0, #16
 3442 00ac 2374     		strb	r3, [r4, #16]
2303:.\sd/ff.c     **** 			dir[DIR_Attr] = 0;					/* Reset attribute */
 3443              		.loc 1 2303 0
 3444 00ae 0023     		mov	r3, #0
2304:.\sd/ff.c     **** 			ST_DWORD(dir+DIR_FileSize, 0);		/* size = 0 */
2305:.\sd/ff.c     **** 			cl = LD_CLUST(dir);					/* Get start cluster */
 3445              		.loc 1 2305 0
 3446 00b0 657D     		ldrb	r5, [r4, #21]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 109


 3447 00b2 227D     		ldrb	r2, [r4, #20]
 3448 00b4 2D02     		lsl	r5, r5, #8
 3449 00b6 1543     		orr	r5, r2
 3450 00b8 E27E     		ldrb	r2, [r4, #27]
2302:.\sd/ff.c     **** 			dir[DIR_Attr] = 0;					/* Reset attribute */
 3451              		.loc 1 2302 0
 3452 00ba A073     		strb	r0, [r4, #14]
 3453              		.loc 1 2305 0
 3454 00bc 2904     		lsl	r1, r5, #16
2302:.\sd/ff.c     **** 			dir[DIR_Attr] = 0;					/* Reset attribute */
 3455              		.loc 1 2302 0
 3456 00be 000E     		lsr	r0, r0, #24
 3457              	.LVL447:
 3458              		.loc 1 2305 0
 3459 00c0 A57E     		ldrb	r5, [r4, #26]
2302:.\sd/ff.c     **** 			dir[DIR_Attr] = 0;					/* Reset attribute */
 3460              		.loc 1 2302 0
 3461 00c2 6074     		strb	r0, [r4, #17]
 3462              		.loc 1 2305 0
 3463 00c4 1202     		lsl	r2, r2, #8
2306:.\sd/ff.c     **** 			ST_CLUST(dir, 0);					/* cluster = 0 */
2307:.\sd/ff.c     **** 			dj.fs->wflag = 1;
 3464              		.loc 1 2307 0
 3465 00c6 0798     		ldr	r0, [sp, #28]
2303:.\sd/ff.c     **** 			ST_DWORD(dir+DIR_FileSize, 0);		/* size = 0 */
 3466              		.loc 1 2303 0
 3467 00c8 E372     		strb	r3, [r4, #11]
2304:.\sd/ff.c     **** 			cl = LD_CLUST(dir);					/* Get start cluster */
 3468              		.loc 1 2304 0
 3469 00ca 2377     		strb	r3, [r4, #28]
 3470 00cc 6377     		strb	r3, [r4, #29]
 3471 00ce A377     		strb	r3, [r4, #30]
 3472 00d0 E377     		strb	r3, [r4, #31]
2306:.\sd/ff.c     **** 			ST_CLUST(dir, 0);					/* cluster = 0 */
 3473              		.loc 1 2306 0
 3474 00d2 A376     		strb	r3, [r4, #26]
 3475 00d4 E376     		strb	r3, [r4, #27]
 3476 00d6 2375     		strb	r3, [r4, #20]
 3477 00d8 6375     		strb	r3, [r4, #21]
2305:.\sd/ff.c     **** 			ST_CLUST(dir, 0);					/* cluster = 0 */
 3478              		.loc 1 2305 0
 3479 00da 1543     		orr	r5, r2
 3480              		.loc 1 2307 0
 3481 00dc 0133     		add	r3, r3, #1
2305:.\sd/ff.c     **** 			ST_CLUST(dir, 0);					/* cluster = 0 */
 3482              		.loc 1 2305 0
 3483 00de 0D43     		orr	r5, r1
 3484              	.LVL448:
 3485              		.loc 1 2307 0
 3486 00e0 0371     		strb	r3, [r0, #4]
2308:.\sd/ff.c     **** 			if (cl) {							/* Remove the cluster chain if exist */
 3487              		.loc 1 2308 0
 3488 00e2 1ED0     		beq	.L391
2309:.\sd/ff.c     **** 				dw = dj.fs->winsect;
 3489              		.loc 1 2309 0
 3490 00e4 C36A     		ldr	r3, [r0, #44]
2310:.\sd/ff.c     **** 				res = remove_chain(dj.fs, cl);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 110


 3491              		.loc 1 2310 0
 3492 00e6 291C     		mov	r1, r5
2309:.\sd/ff.c     **** 				dw = dj.fs->winsect;
 3493              		.loc 1 2309 0
 3494 00e8 0193     		str	r3, [sp, #4]
 3495              	.LVL449:
 3496              		.loc 1 2310 0
 3497 00ea FFF7FEFF 		bl	remove_chain
 3498              	.LVL450:
2311:.\sd/ff.c     **** 				if (res == FR_OK) {
 3499              		.loc 1 2311 0
 3500 00ee 0028     		cmp	r0, #0
 3501 00f0 00D0     		beq	.LCB3861
 3502 00f2 9BE0     		b	.L424	@long jump
 3503              	.LCB3861:
2312:.\sd/ff.c     **** 					dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
 3504              		.loc 1 2312 0
 3505 00f4 3068     		ldr	r0, [r6]
 3506              	.LVL451:
 3507 00f6 013D     		sub	r5, r5, #1
 3508              	.LVL452:
 3509 00f8 C560     		str	r5, [r0, #12]
2313:.\sd/ff.c     **** 					res = move_window(dj.fs, dw);
 3510              		.loc 1 2313 0
 3511 00fa 0199     		ldr	r1, [sp, #4]
 3512 00fc FFF7FEFF 		bl	move_window
 3513              	.LVL453:
 3514              	.LBE84:
2314:.\sd/ff.c     **** 				}
2315:.\sd/ff.c     **** 			}
2316:.\sd/ff.c     **** 		}
2317:.\sd/ff.c     **** 	}
2318:.\sd/ff.c     **** 	else {	/* Open an existing file */
2319:.\sd/ff.c     **** 		if (res == FR_OK) {						/* Follow succeeded */
2320:.\sd/ff.c     **** 			if (dir[DIR_Attr] & AM_DIR) {		/* It is a directory */
2321:.\sd/ff.c     **** 				res = FR_NO_FILE;
2322:.\sd/ff.c     **** 			} else {
2323:.\sd/ff.c     **** 				if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
2324:.\sd/ff.c     **** 					res = FR_DENIED;
2325:.\sd/ff.c     **** 			}
2326:.\sd/ff.c     **** 		}
2327:.\sd/ff.c     **** 	}
2328:.\sd/ff.c     **** 	if (res == FR_OK) {
 3515              		.loc 1 2328 0
 3516 0100 0028     		cmp	r0, #0
 3517 0102 0ED0     		beq	.L391
 3518 0104 92E0     		b	.L424
 3519              	.LVL454:
 3520              	.L383:
2319:.\sd/ff.c     **** 			if (dir[DIR_Attr] & AM_DIR) {		/* It is a directory */
 3521              		.loc 1 2319 0
 3522 0106 0028     		cmp	r0, #0
 3523 0108 00D0     		beq	.LCB3886
 3524 010a 8FE0     		b	.L424	@long jump
 3525              	.LCB3886:
2320:.\sd/ff.c     **** 				res = FR_NO_FILE;
 3526              		.loc 1 2320 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 111


 3527 010c E37A     		ldrb	r3, [r4, #11]
2321:.\sd/ff.c     **** 			} else {
 3528              		.loc 1 2321 0
 3529 010e 0430     		add	r0, r0, #4
 3530              	.LVL455:
2320:.\sd/ff.c     **** 				res = FR_NO_FILE;
 3531              		.loc 1 2320 0
 3532 0110 DA06     		lsl	r2, r3, #27
 3533 0112 00D5     		bpl	.LCB3894
 3534 0114 8AE0     		b	.L424	@long jump
 3535              	.LCB3894:
2323:.\sd/ff.c     **** 					res = FR_DENIED;
 3536              		.loc 1 2323 0
 3537 0116 AA07     		lsl	r2, r5, #30
 3538 0118 03D5     		bpl	.L391
2324:.\sd/ff.c     **** 			}
 3539              		.loc 1 2324 0 discriminator 1
 3540 011a 0330     		add	r0, r0, #3
2323:.\sd/ff.c     **** 					res = FR_DENIED;
 3541              		.loc 1 2323 0 discriminator 1
 3542 011c DB07     		lsl	r3, r3, #31
 3543 011e 00D5     		bpl	.LCB3905
 3544 0120 84E0     		b	.L424	@long jump
 3545              	.LCB3905:
 3546              	.LVL456:
 3547              	.L391:
2329:.\sd/ff.c     **** 		if (mode & FA_CREATE_ALWAYS)			/* Set file change flag if created or overwritten */
 3548              		.loc 1 2329 0
 3549 0122 009B     		ldr	r3, [sp]
 3550 0124 1B07     		lsl	r3, r3, #28
 3551 0126 03D5     		bpl	.L393
 3552              	.LVL457:
2330:.\sd/ff.c     **** 			mode |= FA__WRITTEN;
 3553              		.loc 1 2330 0
 3554 0128 2023     		mov	r3, #32
 3555 012a 009A     		ldr	r2, [sp]
 3556 012c 1A43     		orr	r2, r3
 3557              	.LVL458:
 3558 012e 0092     		str	r2, [sp]
 3559              	.LVL459:
 3560              	.L393:
2331:.\sd/ff.c     **** 		fp->dir_sect = dj.fs->winsect;			/* Pointer to the directory entry */
 3561              		.loc 1 2331 0
 3562 0130 079A     		ldr	r2, [sp, #28]
2332:.\sd/ff.c     **** 		fp->dir_ptr = dir;
2333:.\sd/ff.c     **** #if _FS_SHARE
2334:.\sd/ff.c     **** 		fp->lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 3563              		.loc 1 2334 0
 3564 0132 009D     		ldr	r5, [sp]
2331:.\sd/ff.c     **** 		fp->dir_sect = dj.fs->winsect;			/* Pointer to the directory entry */
 3565              		.loc 1 2331 0
 3566 0134 D36A     		ldr	r3, [r2, #44]
2332:.\sd/ff.c     **** 		fp->dir_ptr = dir;
 3567              		.loc 1 2332 0
 3568 0136 3C62     		str	r4, [r7, #32]
2331:.\sd/ff.c     **** 		fp->dir_sect = dj.fs->winsect;			/* Pointer to the directory entry */
 3569              		.loc 1 2331 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 112


 3570 0138 FB61     		str	r3, [r7, #28]
 3571              		.loc 1 2334 0
 3572 013a 0123     		mov	r3, #1
 3573 013c 9D43     		bic	r5, r3
 3574              	.LVL460:
 3575              	.LBB87:
 3576              	.LBB88:
 655:.\sd/ff.c     **** 			Files[i].idx == dj->index) break;
 3577              		.loc 1 655 0
 3578 013e B368     		ldr	r3, [r6, #8]
 3579 0140 3B48     		ldr	r0, .L447
 3580 0142 9C46     		mov	ip, r3
 656:.\sd/ff.c     **** 	}
 3581              		.loc 1 656 0
 3582 0144 F388     		ldrh	r3, [r6, #6]
 3583 0146 011D     		add	r1, r0, #4
 3584 0148 0193     		str	r3, [sp, #4]
 653:.\sd/ff.c     **** 		if (Files[i].fs == dj->fs &&
 3585              		.loc 1 653 0
 3586 014a 0023     		mov	r3, #0
 3587 014c 0290     		str	r0, [sp, #8]
 3588              	.LVL461:
 3589              	.L396:
 3590 014e 0E1F     		sub	r6, r1, #4
 654:.\sd/ff.c     **** 			Files[i].clu == dj->sclust &&
 3591              		.loc 1 654 0
 3592 0150 3668     		ldr	r6, [r6]
 3593 0152 9642     		cmp	r6, r2
 3594 0154 06D1     		bne	.L394
 3595 0156 0E68     		ldr	r6, [r1]
 3596 0158 6645     		cmp	r6, ip
 3597 015a 03D1     		bne	.L394
 655:.\sd/ff.c     **** 			Files[i].idx == dj->index) break;
 3598              		.loc 1 655 0
 3599 015c 8E88     		ldrh	r6, [r1, #4]
 3600 015e 0198     		ldr	r0, [sp, #4]
 3601 0160 8642     		cmp	r6, r0
 3602 0162 11D0     		beq	.L395
 3603              	.L394:
 653:.\sd/ff.c     **** 		if (Files[i].fs == dj->fs &&
 3604              		.loc 1 653 0
 3605 0164 0133     		add	r3, r3, #1
 3606              	.LVL462:
 3607 0166 0C31     		add	r1, r1, #12
 3608 0168 032B     		cmp	r3, #3
 3609 016a F0D1     		bne	.L396
 3610              	.LVL463:
 660:.\sd/ff.c     **** 		if (i == _FS_SHARE) return 0;	/* No space to register (int err) */
 3611              		.loc 1 660 0
 3612 016c 3049     		ldr	r1, .L447
 3613 016e 0B68     		ldr	r3, [r1]
 3614 0170 081C     		mov	r0, r1
 3615 0172 002B     		cmp	r3, #0
 3616 0174 14D0     		beq	.L397
 3617              	.LVL464:
 3618 0176 CB68     		ldr	r3, [r1, #12]
 3619 0178 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 113


 3620 017a 10D0     		beq	.L409
 3621              	.LVL465:
 661:.\sd/ff.c     **** 		Files[i].fs = dj->fs;
 3622              		.loc 1 661 0
 3623 017c 0021     		mov	r1, #0
 660:.\sd/ff.c     **** 		if (i == _FS_SHARE) return 0;	/* No space to register (int err) */
 3624              		.loc 1 660 0
 3625 017e 8369     		ldr	r3, [r0, #24]
 3626 0180 8B42     		cmp	r3, r1
 3627 0182 2BD1     		bne	.L398
 3628 0184 0223     		mov	r3, #2
 3629 0186 0BE0     		b	.L397
 3630              	.LVL466:
 3631              	.L395:
 668:.\sd/ff.c     **** 
 3632              		.loc 1 668 0
 3633 0188 002D     		cmp	r5, #0
 3634 018a 17D0     		beq	.L399
 3635 018c 0C21     		mov	r1, #12
 3636 018e 5943     		mul	r1, r3
 3637 0190 0298     		ldr	r0, [sp, #8]
 3638 0192 4018     		add	r0, r0, r1
 661:.\sd/ff.c     **** 		Files[i].fs = dj->fs;
 3639              		.loc 1 661 0
 3640 0194 0021     		mov	r1, #0
 668:.\sd/ff.c     **** 
 3641              		.loc 1 668 0
 3642 0196 4089     		ldrh	r0, [r0, #10]
 3643 0198 8842     		cmp	r0, r1
 3644 019a 17D0     		beq	.L413
 3645 019c 1EE0     		b	.L398
 3646              	.LVL467:
 3647              	.L409:
 660:.\sd/ff.c     **** 		if (i == _FS_SHARE) return 0;	/* No space to register (int err) */
 3648              		.loc 1 660 0
 3649 019e 0123     		mov	r3, #1
 3650              	.LVL468:
 3651              	.L397:
 662:.\sd/ff.c     **** 		Files[i].clu = dj->sclust;
 3652              		.loc 1 662 0
 3653 01a0 0C21     		mov	r1, #12
 3654 01a2 5943     		mul	r1, r3
 663:.\sd/ff.c     **** 		Files[i].idx = dj->index;
 3655              		.loc 1 663 0
 3656 01a4 099E     		ldr	r6, [sp, #36]
 662:.\sd/ff.c     **** 		Files[i].clu = dj->sclust;
 3657              		.loc 1 662 0
 3658 01a6 4250     		str	r2, [r0, r1]
 663:.\sd/ff.c     **** 		Files[i].idx = dj->index;
 3659              		.loc 1 663 0
 3660 01a8 4118     		add	r1, r0, r1
 3661 01aa 4E60     		str	r6, [r1, #4]
 3662 01ac 07A8     		add	r0, sp, #28
 664:.\sd/ff.c     **** 		Files[i].ctr = 0;
 3663              		.loc 1 664 0
 3664 01ae C088     		ldrh	r0, [r0, #6]
 3665 01b0 0E1C     		mov	r6, r1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 114


 3666 01b2 0881     		strh	r0, [r1, #8]
 665:.\sd/ff.c     **** 	}
 3667              		.loc 1 665 0
 3668 01b4 0021     		mov	r1, #0
 3669 01b6 7181     		strh	r1, [r6, #10]
 3670              	.LVL469:
 668:.\sd/ff.c     **** 
 3671              		.loc 1 668 0
 3672 01b8 8D42     		cmp	r5, r1
 3673 01ba 07D1     		bne	.L413
 3674              	.L399:
 670:.\sd/ff.c     **** 
 3675              		.loc 1 670 0
 3676 01bc 0C21     		mov	r1, #12
 3677 01be 5943     		mul	r1, r3
 3678 01c0 1B48     		ldr	r0, .L447
 3679 01c2 4118     		add	r1, r0, r1
 3680 01c4 4889     		ldrh	r0, [r1, #10]
 3681 01c6 0130     		add	r0, r0, #1
 3682 01c8 80B2     		uxth	r0, r0
 3683 01ca 01E0     		b	.L400
 3684              	.L413:
 3685 01cc 8020     		mov	r0, #128
 3686 01ce 4000     		lsl	r0, r0, #1
 3687              	.L400:
 3688 01d0 0C21     		mov	r1, #12
 3689 01d2 5943     		mul	r1, r3
 3690 01d4 164D     		ldr	r5, .L447
 3691              	.LVL470:
 3692 01d6 6918     		add	r1, r5, r1
 3693 01d8 4881     		strh	r0, [r1, #10]
 672:.\sd/ff.c     **** }
 3694              		.loc 1 672 0
 3695 01da 591C     		add	r1, r3, #1
 3696              	.LVL471:
 3697              	.L398:
 3698              	.LBE88:
 3699              	.LBE87:
 3700              		.loc 1 2334 0
 3701 01dc 7962     		str	r1, [r7, #36]
2335:.\sd/ff.c     **** 		if (!fp->lockid) res = FR_INT_ERR;
 3702              		.loc 1 2335 0
 3703 01de 0220     		mov	r0, #2
 3704 01e0 0029     		cmp	r1, #0
 3705 01e2 23D0     		beq	.L424
 3706              	.LVL472:
2336:.\sd/ff.c     **** #endif
2337:.\sd/ff.c     **** 	}
2338:.\sd/ff.c     **** 
2339:.\sd/ff.c     **** #else				/* R/O configuration */
2340:.\sd/ff.c     **** 	if (res == FR_OK) {					/* Follow succeeded */
2341:.\sd/ff.c     **** 		if (!dir) {						/* Current dir itself */
2342:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
2343:.\sd/ff.c     **** 		} else {
2344:.\sd/ff.c     **** 			if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
2345:.\sd/ff.c     **** 				res = FR_NO_FILE;
2346:.\sd/ff.c     **** 		}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 115


2347:.\sd/ff.c     **** 	}
2348:.\sd/ff.c     **** #endif
2349:.\sd/ff.c     **** 	FREE_BUF();
2350:.\sd/ff.c     **** 
2351:.\sd/ff.c     **** 	if (res == FR_OK) {
2352:.\sd/ff.c     **** 		fp->flag = mode;					/* File access mode */
 3707              		.loc 1 2352 0
 3708 01e4 6B46     		mov	r3, sp
 3709 01e6 1B78     		ldrb	r3, [r3]
 3710 01e8 BB71     		strb	r3, [r7, #6]
2353:.\sd/ff.c     **** 		fp->sclust = LD_CLUST(dir);			/* File start cluster */
 3711              		.loc 1 2353 0
 3712 01ea 637D     		ldrb	r3, [r4, #21]
 3713 01ec 207D     		ldrb	r0, [r4, #20]
 3714 01ee 1B02     		lsl	r3, r3, #8
 3715 01f0 E17E     		ldrb	r1, [r4, #27]
 3716 01f2 0343     		orr	r3, r0
 3717 01f4 1804     		lsl	r0, r3, #16
 3718 01f6 A37E     		ldrb	r3, [r4, #26]
 3719 01f8 0902     		lsl	r1, r1, #8
 3720 01fa 0B43     		orr	r3, r1
 3721 01fc 0343     		orr	r3, r0
2354:.\sd/ff.c     **** 		fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
2355:.\sd/ff.c     **** 		fp->fptr = 0;						/* File pointer */
 3722              		.loc 1 2355 0
 3723 01fe 0020     		mov	r0, #0
2353:.\sd/ff.c     **** 		fp->sclust = LD_CLUST(dir);			/* File start cluster */
 3724              		.loc 1 2353 0
 3725 0200 3B61     		str	r3, [r7, #16]
2354:.\sd/ff.c     **** 		fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
 3726              		.loc 1 2354 0
 3727 0202 E37F     		ldrb	r3, [r4, #31]
 3728 0204 1906     		lsl	r1, r3, #24
 3729 0206 A37F     		ldrb	r3, [r4, #30]
 3730 0208 1B04     		lsl	r3, r3, #16
 3731 020a 0B43     		orr	r3, r1
 3732 020c 217F     		ldrb	r1, [r4, #28]
 3733 020e 0B43     		orr	r3, r1
 3734 0210 617F     		ldrb	r1, [r4, #29]
 3735              		.loc 1 2355 0
 3736 0212 B860     		str	r0, [r7, #8]
2354:.\sd/ff.c     **** 		fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
 3737              		.loc 1 2354 0
 3738 0214 0902     		lsl	r1, r1, #8
 3739 0216 0B43     		orr	r3, r1
 3740 0218 FB60     		str	r3, [r7, #12]
2356:.\sd/ff.c     **** 		fp->dsect = 0;
 3741              		.loc 1 2356 0
 3742 021a B861     		str	r0, [r7, #24]
2357:.\sd/ff.c     **** #if _USE_FASTSEEK
2358:.\sd/ff.c     **** 		fp->cltbl = 0;						/* Normal seek mode */
2359:.\sd/ff.c     **** #endif
2360:.\sd/ff.c     **** 		fp->fs = dj.fs; fp->id = dj.fs->id;	/* Validate file object */
 3743              		.loc 1 2360 0
 3744 021c 3A60     		str	r2, [r7]
 3745 021e D388     		ldrh	r3, [r2, #6]
 3746 0220 BB80     		strh	r3, [r7, #4]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 116


 3747 0222 03E0     		b	.L424
 3748              	.LVL473:
 3749              	.L386:
 3750              	.LBB89:
2285:.\sd/ff.c     **** #else
 3751              		.loc 1 2285 0
 3752 0224 301C     		mov	r0, r6
 3753              	.LVL474:
 3754 0226 FFF7FEFF 		bl	dir_register
 3755              	.LVL475:
 3756 022a 25E7     		b	.L385
 3757              	.LVL476:
 3758              	.L424:
 3759              	.LBE89:
2361:.\sd/ff.c     **** 	}
2362:.\sd/ff.c     **** 
2363:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
2364:.\sd/ff.c     **** }
 3760              		.loc 1 2364 0
 3761 022c 0FB0     		add	sp, sp, #60
 3762              		@ sp needed
 3763              	.LVL477:
 3764              	.LVL478:
 3765 022e F0BD     		pop	{r4, r5, r6, r7, pc}
 3766              	.L448:
 3767              		.align	2
 3768              	.L447:
 3769 0230 00000000 		.word	.LANCHOR0
 3770              		.cfi_endproc
 3771              	.LFE29:
 3772              		.size	f_open, .-f_open
 3773              		.section	.text.f_read,"ax",%progbits
 3774              		.align	1
 3775              		.global	f_read
 3776              		.code	16
 3777              		.thumb_func
 3778              		.type	f_read, %function
 3779              	f_read:
 3780              	.LFB30:
2365:.\sd/ff.c     **** 
2366:.\sd/ff.c     **** 
2367:.\sd/ff.c     **** 
2368:.\sd/ff.c     **** 
2369:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2370:.\sd/ff.c     **** /* Read File                                                             */
2371:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2372:.\sd/ff.c     **** 
2373:.\sd/ff.c     **** FRESULT f_read (
2374:.\sd/ff.c     **** 	FIL *fp, 		/* Pointer to the file object */
2375:.\sd/ff.c     **** 	void *buff,		/* Pointer to data buffer */
2376:.\sd/ff.c     **** 	UINT btr,		/* Number of bytes to read */
2377:.\sd/ff.c     **** 	UINT *br		/* Pointer to number of bytes read */
2378:.\sd/ff.c     **** )
2379:.\sd/ff.c     **** {
 3781              		.loc 1 2379 0
 3782              		.cfi_startproc
 3783              	.LVL479:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 117


 3784 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3785              		.cfi_def_cfa_offset 20
 3786              		.cfi_offset 4, -20
 3787              		.cfi_offset 5, -16
 3788              		.cfi_offset 6, -12
 3789              		.cfi_offset 7, -8
 3790              		.cfi_offset 14, -4
 3791 0002 1E1C     		mov	r6, r3
2380:.\sd/ff.c     **** 	FRESULT res;
2381:.\sd/ff.c     **** 	DWORD clst, sect, remain;
2382:.\sd/ff.c     **** 	UINT rcnt, cc;
2383:.\sd/ff.c     **** 	BYTE csect, *rbuff = buff;
2384:.\sd/ff.c     **** 
2385:.\sd/ff.c     **** 
2386:.\sd/ff.c     **** 	*br = 0;	/* Initialize byte counter */
 3792              		.loc 1 2386 0
 3793 0004 0023     		mov	r3, #0
 3794              	.LVL480:
2379:.\sd/ff.c     **** 	FRESULT res;
 3795              		.loc 1 2379 0
 3796 0006 85B0     		sub	sp, sp, #20
 3797              		.cfi_def_cfa_offset 40
 3798              	.LVL481:
2379:.\sd/ff.c     **** 	FRESULT res;
 3799              		.loc 1 2379 0
 3800 0008 0091     		str	r1, [sp]
 3801              	.LVL482:
 3802              		.loc 1 2386 0
 3803 000a 3360     		str	r3, [r6]
2379:.\sd/ff.c     **** 	FRESULT res;
 3804              		.loc 1 2379 0
 3805 000c 041C     		mov	r4, r0
2387:.\sd/ff.c     **** 
2388:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);				/* Check validity */
 3806              		.loc 1 2388 0
 3807 000e 8188     		ldrh	r1, [r0, #4]
 3808              	.LVL483:
 3809 0010 0068     		ldr	r0, [r0]
 3810              	.LVL484:
2379:.\sd/ff.c     **** 	FRESULT res;
 3811              		.loc 1 2379 0
 3812 0012 151C     		mov	r5, r2
 3813              		.loc 1 2388 0
 3814 0014 FFF7FEFF 		bl	validate
 3815              	.LVL485:
2389:.\sd/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 3816              		.loc 1 2389 0
 3817 0018 0028     		cmp	r0, #0
 3818 001a 00D0     		beq	.LCB4188
 3819 001c 9CE0     		b	.L450	@long jump
 3820              	.LCB4188:
2390:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)					/* Aborted file? */
 3821              		.loc 1 2390 0
 3822 001e A379     		ldrb	r3, [r4, #6]
2391:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 3823              		.loc 1 2391 0
 3824 0020 0230     		add	r0, r0, #2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 118


 3825              	.LVL486:
2390:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)					/* Aborted file? */
 3826              		.loc 1 2390 0
 3827 0022 5AB2     		sxtb	r2, r3
 3828 0024 002A     		cmp	r2, #0
 3829 0026 00DA     		bge	.LCB4194
 3830 0028 96E0     		b	.L450	@long jump
 3831              	.LCB4194:
2392:.\sd/ff.c     **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
2393:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_DENIED);
 3832              		.loc 1 2393 0
 3833 002a 0530     		add	r0, r0, #5
2392:.\sd/ff.c     **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 3834              		.loc 1 2392 0
 3835 002c DB07     		lsl	r3, r3, #31
 3836 002e 00D4     		bmi	.LCB4200
 3837 0030 92E0     		b	.L450	@long jump
 3838              	.LCB4200:
2394:.\sd/ff.c     **** 	remain = fp->fsize - fp->fptr;
 3839              		.loc 1 2394 0
 3840 0032 E368     		ldr	r3, [r4, #12]
 3841 0034 A268     		ldr	r2, [r4, #8]
 3842 0036 2F1C     		mov	r7, r5
 3843 0038 9B1A     		sub	r3, r3, r2
 3844              	.LVL487:
 3845 003a 9D42     		cmp	r5, r3
 3846 003c 3BD9     		bls	.L452
 3847 003e 1F1C     		mov	r7, r3
 3848 0040 39E0     		b	.L452
 3849              	.LVL488:
 3850              	.L467:
2395:.\sd/ff.c     **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
2396:.\sd/ff.c     **** 
2397:.\sd/ff.c     **** 	for ( ;  btr;								/* Repeat until all data read */
2398:.\sd/ff.c     **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
2399:.\sd/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 3851              		.loc 1 2399 0
 3852 0042 A268     		ldr	r2, [r4, #8]
 3853 0044 D305     		lsl	r3, r2, #23
 3854 0046 64D1     		bne	.L453
2400:.\sd/ff.c     **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 3855              		.loc 1 2400 0
 3856 0048 2068     		ldr	r0, [r4]
 3857 004a 530A     		lsr	r3, r2, #9
 3858 004c 8578     		ldrb	r5, [r0, #2]
 3859 004e 013D     		sub	r5, r5, #1
 3860 0050 2B40     		and	r3, r5
 3861 0052 DBB2     		uxtb	r3, r3
 3862 0054 0193     		str	r3, [sp, #4]
 3863              	.LVL489:
2401:.\sd/ff.c     **** 			if (!csect) {						/* On the cluster boundary? */
 3864              		.loc 1 2401 0
 3865 0056 002B     		cmp	r3, #0
 3866 0058 30D0     		beq	.L477
 3867              	.L454:
2402:.\sd/ff.c     **** 				if (fp->fptr == 0) {			/* On the top of the file? */
2403:.\sd/ff.c     **** 					clst = fp->sclust;			/* Follow from the origin */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 119


2404:.\sd/ff.c     **** 				} else {						/* Middle or end of the file */
2405:.\sd/ff.c     **** #if _USE_FASTSEEK
2406:.\sd/ff.c     **** 					if (fp->cltbl)
2407:.\sd/ff.c     **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2408:.\sd/ff.c     **** 					else
2409:.\sd/ff.c     **** #endif
2410:.\sd/ff.c     **** 						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
2411:.\sd/ff.c     **** 				}
2412:.\sd/ff.c     **** 				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
2413:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2414:.\sd/ff.c     **** 				fp->clust = clst;				/* Update current cluster */
2415:.\sd/ff.c     **** 			}
2416:.\sd/ff.c     **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 3868              		.loc 1 2416 0
 3869 005a 2368     		ldr	r3, [r4]
 3870 005c 6169     		ldr	r1, [r4, #20]
 3871 005e 181C     		mov	r0, r3
 3872 0060 0293     		str	r3, [sp, #8]
 3873 0062 FFF7FEFF 		bl	clust2sect
 3874              	.LVL490:
2417:.\sd/ff.c     **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 3875              		.loc 1 2417 0
 3876 0066 0028     		cmp	r0, #0
 3877 0068 3CD0     		beq	.L475
2418:.\sd/ff.c     **** 			sect += csect;
 3878              		.loc 1 2418 0
 3879 006a 019B     		ldr	r3, [sp, #4]
2419:.\sd/ff.c     **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
 3880              		.loc 1 2419 0
 3881 006c 7D0A     		lsr	r5, r7, #9
2418:.\sd/ff.c     **** 			sect += csect;
 3882              		.loc 1 2418 0
 3883 006e C318     		add	r3, r0, r3
 3884 0070 0393     		str	r3, [sp, #12]
 3885              	.LVL491:
2420:.\sd/ff.c     **** 			if (cc) {							/* Read maximum contiguous sectors directly */
 3886              		.loc 1 2420 0
 3887 0072 002D     		cmp	r5, #0
 3888 0074 4BD0     		beq	.L460
2421:.\sd/ff.c     **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 3889              		.loc 1 2421 0
 3890 0076 029B     		ldr	r3, [sp, #8]
 3891              	.LVL492:
 3892 0078 019A     		ldr	r2, [sp, #4]
 3893 007a 9B78     		ldrb	r3, [r3, #2]
 3894 007c AA18     		add	r2, r5, r2
 3895 007e 9A42     		cmp	r2, r3
 3896 0080 01D9     		bls	.L461
2422:.\sd/ff.c     **** 					cc = fp->fs->csize - csect;
 3897              		.loc 1 2422 0
 3898 0082 019A     		ldr	r2, [sp, #4]
 3899 0084 9D1A     		sub	r5, r3, r2
 3900              	.LVL493:
 3901              	.L461:
2423:.\sd/ff.c     **** 				if (disk_read(fp->fs->drv, rbuff, sect, (BYTE)cc) != RES_OK)
 3902              		.loc 1 2423 0
 3903 0086 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 120


 3904 0088 0099     		ldr	r1, [sp]
 3905 008a 5878     		ldrb	r0, [r3, #1]
 3906 008c 039A     		ldr	r2, [sp, #12]
 3907 008e EBB2     		uxtb	r3, r5
 3908 0090 FFF7FEFF 		bl	disk_read
 3909              	.LVL494:
 3910 0094 0028     		cmp	r0, #0
 3911 0096 4CD1     		bne	.L476
2424:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2425:.\sd/ff.c     **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
2426:.\sd/ff.c     **** #if _FS_TINY
2427:.\sd/ff.c     **** 				if (fp->fs->wflag && fp->fs->winsect - sect < cc)
 3912              		.loc 1 2427 0
 3913 0098 2168     		ldr	r1, [r4]
 3914 009a 0B79     		ldrb	r3, [r1, #4]
 3915 009c 002B     		cmp	r3, #0
 3916 009e 28D1     		bne	.L478
 3917              	.L463:
2428:.\sd/ff.c     **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win, SS(fp->fs));
2429:.\sd/ff.c     **** #else
2430:.\sd/ff.c     **** 				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
2431:.\sd/ff.c     **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
2432:.\sd/ff.c     **** #endif
2433:.\sd/ff.c     **** #endif
2434:.\sd/ff.c     **** 				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
 3918              		.loc 1 2434 0
 3919 00a0 6D02     		lsl	r5, r5, #9
 3920              	.LVL495:
 3921              	.L464:
2398:.\sd/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 3922              		.loc 1 2398 0
 3923 00a2 009B     		ldr	r3, [sp]
 3924 00a4 7F1B     		sub	r7, r7, r5
 3925              	.LVL496:
 3926 00a6 5B19     		add	r3, r3, r5
 3927 00a8 0093     		str	r3, [sp]
 3928              	.LVL497:
 3929 00aa A368     		ldr	r3, [r4, #8]
 3930              	.LVL498:
 3931 00ac 5B19     		add	r3, r3, r5
 3932 00ae A360     		str	r3, [r4, #8]
 3933 00b0 3368     		ldr	r3, [r6]
 3934 00b2 5B19     		add	r3, r3, r5
 3935 00b4 3360     		str	r3, [r6]
 3936              	.LVL499:
 3937              	.L452:
2397:.\sd/ff.c     **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 3938              		.loc 1 2397 0
 3939 00b6 002F     		cmp	r7, #0
 3940 00b8 C3D1     		bne	.L467
 3941 00ba 4CE0     		b	.L479
 3942              	.LVL500:
 3943              	.L477:
2402:.\sd/ff.c     **** 					clst = fp->sclust;			/* Follow from the origin */
 3944              		.loc 1 2402 0
 3945 00bc 002A     		cmp	r2, #0
 3946 00be 01D1     		bne	.L455
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 121


2403:.\sd/ff.c     **** 				} else {						/* Middle or end of the file */
 3947              		.loc 1 2403 0
 3948 00c0 2069     		ldr	r0, [r4, #16]
 3949              	.LVL501:
 3950 00c2 02E0     		b	.L456
 3951              	.LVL502:
 3952              	.L455:
2410:.\sd/ff.c     **** 				}
 3953              		.loc 1 2410 0
 3954 00c4 6169     		ldr	r1, [r4, #20]
 3955 00c6 FFF7FEFF 		bl	get_fat
 3956              	.LVL503:
 3957              	.L456:
2412:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 3958              		.loc 1 2412 0
 3959 00ca 0128     		cmp	r0, #1
 3960 00cc 06D8     		bhi	.L457
2412:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 3961              		.loc 1 2412 0 is_stmt 0 discriminator 1
 3962 00ce 8022     		mov	r2, #128
 3963 00d0 A379     		ldrb	r3, [r4, #6]
 3964 00d2 5242     		neg	r2, r2
 3965 00d4 1343     		orr	r3, r2
 3966 00d6 A371     		strb	r3, [r4, #6]
 3967 00d8 0220     		mov	r0, #2
 3968              	.LVL504:
 3969 00da 3DE0     		b	.L450
 3970              	.LVL505:
 3971              	.L457:
2413:.\sd/ff.c     **** 				fp->clust = clst;				/* Update current cluster */
 3972              		.loc 1 2413 0 is_stmt 1
 3973 00dc 431C     		add	r3, r0, #1
 3974 00de 01D0     		beq	.L475
2414:.\sd/ff.c     **** 			}
 3975              		.loc 1 2414 0
 3976 00e0 6061     		str	r0, [r4, #20]
 3977 00e2 BAE7     		b	.L454
 3978              	.LVL506:
 3979              	.L475:
2417:.\sd/ff.c     **** 			sect += csect;
 3980              		.loc 1 2417 0 discriminator 1
 3981 00e4 8022     		mov	r2, #128
 3982 00e6 A379     		ldrb	r3, [r4, #6]
 3983 00e8 5242     		neg	r2, r2
 3984 00ea 1343     		orr	r3, r2
 3985 00ec A371     		strb	r3, [r4, #6]
 3986 00ee 0230     		add	r0, r0, #2
 3987 00f0 32E0     		b	.L450
 3988              	.LVL507:
 3989              	.L478:
2427:.\sd/ff.c     **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win, SS(fp->fs));
 3990              		.loc 1 2427 0 discriminator 1
 3991 00f2 CB6A     		ldr	r3, [r1, #44]
 3992 00f4 039A     		ldr	r2, [sp, #12]
 3993 00f6 981A     		sub	r0, r3, r2
 3994 00f8 A842     		cmp	r0, r5
 3995 00fa D1D2     		bcs	.L463
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 122


2428:.\sd/ff.c     **** #else
 3996              		.loc 1 2428 0
 3997 00fc 8022     		mov	r2, #128
 3998 00fe 009B     		ldr	r3, [sp]
 3999 0100 4002     		lsl	r0, r0, #9
 4000 0102 1818     		add	r0, r3, r0
 4001 0104 3031     		add	r1, r1, #48
 4002 0106 9200     		lsl	r2, r2, #2
 4003 0108 FFF7FEFF 		bl	mem_cpy
 4004              	.LVL508:
 4005 010c C8E7     		b	.L463
 4006              	.LVL509:
 4007              	.L460:
2435:.\sd/ff.c     **** 				continue;
2436:.\sd/ff.c     **** 			}
2437:.\sd/ff.c     **** #if !_FS_TINY
2438:.\sd/ff.c     **** 			if (fp->dsect != sect) {			/* Load data sector if not in cache */
2439:.\sd/ff.c     **** #if !_FS_READONLY
2440:.\sd/ff.c     **** 				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2441:.\sd/ff.c     **** 					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2442:.\sd/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2443:.\sd/ff.c     **** 					fp->flag &= ~FA__DIRTY;
2444:.\sd/ff.c     **** 				}
2445:.\sd/ff.c     **** #endif
2446:.\sd/ff.c     **** 				if (disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)	/* Fill sector cache */
2447:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2448:.\sd/ff.c     **** 			}
2449:.\sd/ff.c     **** #endif
2450:.\sd/ff.c     **** 			fp->dsect = sect;
 4008              		.loc 1 2450 0
 4009 010e 039B     		ldr	r3, [sp, #12]
 4010              	.LVL510:
 4011 0110 A361     		str	r3, [r4, #24]
 4012              	.LVL511:
 4013              	.L453:
2451:.\sd/ff.c     **** 		}
2452:.\sd/ff.c     **** 		rcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
 4014              		.loc 1 2452 0
 4015 0112 8022     		mov	r2, #128
 4016 0114 A368     		ldr	r3, [r4, #8]
 4017 0116 9200     		lsl	r2, r2, #2
 4018 0118 DB05     		lsl	r3, r3, #23
 4019 011a DB0D     		lsr	r3, r3, #23
 4020 011c D31A     		sub	r3, r2, r3
 4021              	.LVL512:
 4022 011e 3D1E     		sub	r5, r7, #0
 4023 0120 9D42     		cmp	r5, r3
 4024 0122 00D9     		bls	.L465
 4025              	.LVL513:
 4026 0124 1D1C     		mov	r5, r3
 4027              	.LVL514:
 4028              	.L465:
2453:.\sd/ff.c     **** 		if (rcnt > btr) rcnt = btr;
2454:.\sd/ff.c     **** #if _FS_TINY
2455:.\sd/ff.c     **** 		if (move_window(fp->fs, fp->dsect))		/* Move sector window */
 4029              		.loc 1 2455 0
 4030 0126 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 123


 4031 0128 A169     		ldr	r1, [r4, #24]
 4032 012a FFF7FEFF 		bl	move_window
 4033              	.LVL515:
 4034 012e 0028     		cmp	r0, #0
 4035 0130 06D0     		beq	.L466
 4036              	.LVL516:
 4037              	.L476:
2456:.\sd/ff.c     **** 			ABORT(fp->fs, FR_DISK_ERR);
 4038              		.loc 1 2456 0
 4039 0132 8022     		mov	r2, #128
 4040 0134 A379     		ldrb	r3, [r4, #6]
 4041 0136 5242     		neg	r2, r2
 4042 0138 1343     		orr	r3, r2
 4043 013a A371     		strb	r3, [r4, #6]
 4044 013c 0120     		mov	r0, #1
 4045 013e 0BE0     		b	.L450
 4046              	.LVL517:
 4047              	.L466:
2457:.\sd/ff.c     **** 		mem_cpy(rbuff, &fp->fs->win[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
 4048              		.loc 1 2457 0
 4049 0140 A368     		ldr	r3, [r4, #8]
 4050 0142 0098     		ldr	r0, [sp]
 4051 0144 D905     		lsl	r1, r3, #23
 4052 0146 C90D     		lsr	r1, r1, #23
 4053 0148 2368     		ldr	r3, [r4]
 4054 014a 3031     		add	r1, r1, #48
 4055 014c 5918     		add	r1, r3, r1
 4056 014e 2A1C     		mov	r2, r5
 4057 0150 FFF7FEFF 		bl	mem_cpy
 4058              	.LVL518:
 4059 0154 A5E7     		b	.L464
 4060              	.LVL519:
 4061              	.L479:
2458:.\sd/ff.c     **** #else
2459:.\sd/ff.c     **** 		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2460:.\sd/ff.c     **** #endif
2461:.\sd/ff.c     **** 	}
2462:.\sd/ff.c     **** 
2463:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, FR_OK);
 4062              		.loc 1 2463 0
 4063 0156 381C     		mov	r0, r7
 4064              	.LVL520:
 4065              	.L450:
2464:.\sd/ff.c     **** }
 4066              		.loc 1 2464 0
 4067 0158 05B0     		add	sp, sp, #20
 4068              		@ sp needed
 4069              	.LVL521:
 4070              	.LVL522:
 4071 015a F0BD     		pop	{r4, r5, r6, r7, pc}
 4072              		.cfi_endproc
 4073              	.LFE30:
 4074              		.size	f_read, .-f_read
 4075              		.section	.text.f_write,"ax",%progbits
 4076              		.align	1
 4077              		.global	f_write
 4078              		.code	16
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 124


 4079              		.thumb_func
 4080              		.type	f_write, %function
 4081              	f_write:
 4082              	.LFB31:
2465:.\sd/ff.c     **** 
2466:.\sd/ff.c     **** 
2467:.\sd/ff.c     **** 
2468:.\sd/ff.c     **** 
2469:.\sd/ff.c     **** #if !_FS_READONLY
2470:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2471:.\sd/ff.c     **** /* Write File                                                            */
2472:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2473:.\sd/ff.c     **** 
2474:.\sd/ff.c     **** FRESULT f_write (
2475:.\sd/ff.c     **** 	FIL *fp,			/* Pointer to the file object */
2476:.\sd/ff.c     **** 	const void *buff,	/* Pointer to the data to be written */
2477:.\sd/ff.c     **** 	UINT btw,			/* Number of bytes to write */
2478:.\sd/ff.c     **** 	UINT *bw			/* Pointer to number of bytes written */
2479:.\sd/ff.c     **** )
2480:.\sd/ff.c     **** {
 4083              		.loc 1 2480 0
 4084              		.cfi_startproc
 4085              	.LVL523:
 4086 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4087              		.cfi_def_cfa_offset 20
 4088              		.cfi_offset 4, -20
 4089              		.cfi_offset 5, -16
 4090              		.cfi_offset 6, -12
 4091              		.cfi_offset 7, -8
 4092              		.cfi_offset 14, -4
 4093 0002 1F1C     		mov	r7, r3
2481:.\sd/ff.c     **** 	FRESULT res;
2482:.\sd/ff.c     **** 	DWORD clst, sect;
2483:.\sd/ff.c     **** 	UINT wcnt, cc;
2484:.\sd/ff.c     **** 	const BYTE *wbuff = buff;
2485:.\sd/ff.c     **** 	BYTE csect;
2486:.\sd/ff.c     **** 
2487:.\sd/ff.c     **** 
2488:.\sd/ff.c     **** 	*bw = 0;	/* Initialize byte counter */
 4094              		.loc 1 2488 0
 4095 0004 0023     		mov	r3, #0
 4096              	.LVL524:
2480:.\sd/ff.c     **** 	FRESULT res;
 4097              		.loc 1 2480 0
 4098 0006 85B0     		sub	sp, sp, #20
 4099              		.cfi_def_cfa_offset 40
 4100              	.LVL525:
 4101              		.loc 1 2488 0
 4102 0008 3B60     		str	r3, [r7]
2480:.\sd/ff.c     **** 	FRESULT res;
 4103              		.loc 1 2480 0
 4104 000a 0191     		str	r1, [sp, #4]
 4105              	.LVL526:
2489:.\sd/ff.c     **** 
2490:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);			/* Check validity */
 4106              		.loc 1 2490 0
 4107 000c 8188     		ldrh	r1, [r0, #4]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 125


 4108              	.LVL527:
2480:.\sd/ff.c     **** 	FRESULT res;
 4109              		.loc 1 2480 0
 4110 000e 041C     		mov	r4, r0
 4111              		.loc 1 2490 0
 4112 0010 0068     		ldr	r0, [r0]
 4113              	.LVL528:
2480:.\sd/ff.c     **** 	FRESULT res;
 4114              		.loc 1 2480 0
 4115 0012 161C     		mov	r6, r2
 4116              		.loc 1 2490 0
 4117 0014 FFF7FEFF 		bl	validate
 4118              	.LVL529:
 4119 0018 031E     		sub	r3, r0, #0
2491:.\sd/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4120              		.loc 1 2491 0
 4121 001a 00D0     		beq	.LCB4537
 4122 001c C0E0     		b	.L481	@long jump
 4123              	.LCB4537:
 4124 001e 0222     		mov	r2, #2
2492:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)				/* Aborted file? */
 4125              		.loc 1 2492 0
 4126 0020 A179     		ldrb	r1, [r4, #6]
2493:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 4127              		.loc 1 2493 0
 4128 0022 131C     		mov	r3, r2
2492:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)				/* Aborted file? */
 4129              		.loc 1 2492 0
 4130 0024 4DB2     		sxtb	r5, r1
 4131 0026 002D     		cmp	r5, #0
 4132 0028 00DA     		bge	.LCB4543
 4133 002a B9E0     		b	.L481	@long jump
 4134              	.LCB4543:
2494:.\sd/ff.c     **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
2495:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_DENIED);
 4135              		.loc 1 2495 0
 4136 002c 0533     		add	r3, r3, #5
2494:.\sd/ff.c     **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 4137              		.loc 1 2494 0
 4138 002e 1142     		tst	r1, r2
 4139 0030 00D1     		bne	.LCB4548
 4140 0032 B5E0     		b	.L481	@long jump
 4141              	.LCB4548:
2496:.\sd/ff.c     **** 	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */
 4142              		.loc 1 2496 0
 4143 0034 E368     		ldr	r3, [r4, #12]
 4144 0036 F218     		add	r2, r6, r3
 4145 0038 9A42     		cmp	r2, r3
 4146 003a 4041     		adc	r0, r0, r0
 4147              	.LVL530:
 4148 003c 4042     		neg	r0, r0
 4149 003e 0640     		and	r6, r0
 4150              	.LVL531:
 4151              	.L483:
2497:.\sd/ff.c     **** 
2498:.\sd/ff.c     **** 	for ( ;  btw;							/* Repeat until all data written */
 4152              		.loc 1 2498 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 126


 4153 0040 002E     		cmp	r6, #0
 4154 0042 1AD0     		beq	.L505
2499:.\sd/ff.c     **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
2500:.\sd/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 4155              		.loc 1 2500 0
 4156 0044 A268     		ldr	r2, [r4, #8]
 4157 0046 D305     		lsl	r3, r2, #23
 4158 0048 76D1     		bne	.L484
2501:.\sd/ff.c     **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4159              		.loc 1 2501 0
 4160 004a 2068     		ldr	r0, [r4]
 4161 004c 530A     		lsr	r3, r2, #9
 4162 004e 8578     		ldrb	r5, [r0, #2]
 4163 0050 013D     		sub	r5, r5, #1
 4164 0052 2B40     		and	r3, r5
 4165 0054 DDB2     		uxtb	r5, r3
 4166              	.LVL532:
2502:.\sd/ff.c     **** 			if (!csect) {					/* On the cluster boundary? */
 4167              		.loc 1 2502 0
 4168 0056 002D     		cmp	r5, #0
 4169 0058 1BD1     		bne	.L485
2503:.\sd/ff.c     **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 4170              		.loc 1 2503 0
 4171 005a 002A     		cmp	r2, #0
 4172 005c 07D1     		bne	.L486
2504:.\sd/ff.c     **** 					clst = fp->sclust;		/* Follow from the origin */
 4173              		.loc 1 2504 0
 4174 005e 2169     		ldr	r1, [r4, #16]
 4175              	.LVL533:
2505:.\sd/ff.c     **** 					if (clst == 0)			/* When no cluster is allocated, */
 4176              		.loc 1 2505 0
 4177 0060 0029     		cmp	r1, #0
 4178 0062 11D1     		bne	.L487
2506:.\sd/ff.c     **** 						fp->sclust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
 4179              		.loc 1 2506 0
 4180 0064 FFF7FEFF 		bl	create_chain
 4181              	.LVL534:
 4182 0068 011C     		mov	r1, r0
 4183              	.LVL535:
 4184 006a 2061     		str	r0, [r4, #16]
 4185 006c 03E0     		b	.L488
 4186              	.LVL536:
 4187              	.L486:
2507:.\sd/ff.c     **** 				} else {					/* Middle or end of the file */
2508:.\sd/ff.c     **** #if _USE_FASTSEEK
2509:.\sd/ff.c     **** 					if (fp->cltbl)
2510:.\sd/ff.c     **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2511:.\sd/ff.c     **** 					else
2512:.\sd/ff.c     **** #endif
2513:.\sd/ff.c     **** 						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 4188              		.loc 1 2513 0
 4189 006e 6169     		ldr	r1, [r4, #20]
 4190 0070 FFF7FEFF 		bl	create_chain
 4191              	.LVL537:
 4192 0074 011C     		mov	r1, r0
 4193              	.LVL538:
 4194              	.L488:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 127


2514:.\sd/ff.c     **** 				}
2515:.\sd/ff.c     **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 4195              		.loc 1 2515 0
 4196 0076 0029     		cmp	r1, #0
 4197 0078 06D1     		bne	.L487
 4198              	.LVL539:
 4199              	.L505:
2516:.\sd/ff.c     **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
2517:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2518:.\sd/ff.c     **** 				fp->clust = clst;			/* Update current cluster */
2519:.\sd/ff.c     **** 			}
2520:.\sd/ff.c     **** #if _FS_TINY
2521:.\sd/ff.c     **** 			if (fp->fs->winsect == fp->dsect && move_window(fp->fs, 0))	/* Write-back sector cache */
2522:.\sd/ff.c     **** 				ABORT(fp->fs, FR_DISK_ERR);
2523:.\sd/ff.c     **** #else
2524:.\sd/ff.c     **** 			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
2525:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2526:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2527:.\sd/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2528:.\sd/ff.c     **** 			}
2529:.\sd/ff.c     **** #endif
2530:.\sd/ff.c     **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
2531:.\sd/ff.c     **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
2532:.\sd/ff.c     **** 			sect += csect;
2533:.\sd/ff.c     **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
2534:.\sd/ff.c     **** 			if (cc) {						/* Write maximum contiguous sectors directly */
2535:.\sd/ff.c     **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
2536:.\sd/ff.c     **** 					cc = fp->fs->csize - csect;
2537:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
2538:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2539:.\sd/ff.c     **** #if _FS_TINY
2540:.\sd/ff.c     **** 				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct 
2541:.\sd/ff.c     **** 					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
2542:.\sd/ff.c     **** 					fp->fs->wflag = 0;
2543:.\sd/ff.c     **** 				}
2544:.\sd/ff.c     **** #else
2545:.\sd/ff.c     **** 				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write 
2546:.\sd/ff.c     **** 					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
2547:.\sd/ff.c     **** 					fp->flag &= ~FA__DIRTY;
2548:.\sd/ff.c     **** 				}
2549:.\sd/ff.c     **** #endif
2550:.\sd/ff.c     **** 				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
2551:.\sd/ff.c     **** 				continue;
2552:.\sd/ff.c     **** 			}
2553:.\sd/ff.c     **** #if _FS_TINY
2554:.\sd/ff.c     **** 			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
2555:.\sd/ff.c     **** 				if (move_window(fp->fs, 0)) ABORT(fp->fs, FR_DISK_ERR);
2556:.\sd/ff.c     **** 				fp->fs->winsect = sect;
2557:.\sd/ff.c     **** 			}
2558:.\sd/ff.c     **** #else
2559:.\sd/ff.c     **** 			if (fp->dsect != sect) {		/* Fill sector cache with file data */
2560:.\sd/ff.c     **** 				if (fp->fptr < fp->fsize &&
2561:.\sd/ff.c     **** 					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
2562:.\sd/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2563:.\sd/ff.c     **** 			}
2564:.\sd/ff.c     **** #endif
2565:.\sd/ff.c     **** 			fp->dsect = sect;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 128


2566:.\sd/ff.c     **** 		}
2567:.\sd/ff.c     **** 		wcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
2568:.\sd/ff.c     **** 		if (wcnt > btw) wcnt = btw;
2569:.\sd/ff.c     **** #if _FS_TINY
2570:.\sd/ff.c     **** 		if (move_window(fp->fs, fp->dsect))	/* Move sector window */
2571:.\sd/ff.c     **** 			ABORT(fp->fs, FR_DISK_ERR);
2572:.\sd/ff.c     **** 		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2573:.\sd/ff.c     **** 		fp->fs->wflag = 1;
2574:.\sd/ff.c     **** #else
2575:.\sd/ff.c     **** 		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2576:.\sd/ff.c     **** 		fp->flag |= FA__DIRTY;
2577:.\sd/ff.c     **** #endif
2578:.\sd/ff.c     **** 	}
2579:.\sd/ff.c     **** 
2580:.\sd/ff.c     **** 	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
 4200              		.loc 1 2580 0
 4201 007a A368     		ldr	r3, [r4, #8]
 4202 007c E268     		ldr	r2, [r4, #12]
 4203 007e 9342     		cmp	r3, r2
 4204 0080 00D8     		bhi	.LCB4616
 4205 0082 88E0     		b	.L490	@long jump
 4206              	.LCB4616:
 4207              		.loc 1 2580 0 is_stmt 0 discriminator 1
 4208 0084 E360     		str	r3, [r4, #12]
 4209 0086 86E0     		b	.L490
 4210              	.LVL540:
 4211              	.L487:
2516:.\sd/ff.c     **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 4212              		.loc 1 2516 0 is_stmt 1
 4213 0088 0129     		cmp	r1, #1
 4214 008a 14D0     		beq	.L513
2517:.\sd/ff.c     **** 				fp->clust = clst;			/* Update current cluster */
 4215              		.loc 1 2517 0
 4216 008c 4B1C     		add	r3, r1, #1
 4217 008e 63D0     		beq	.L514
2518:.\sd/ff.c     **** 			}
 4218              		.loc 1 2518 0
 4219 0090 6161     		str	r1, [r4, #20]
 4220              	.LVL541:
 4221              	.L485:
2521:.\sd/ff.c     **** 				ABORT(fp->fs, FR_DISK_ERR);
 4222              		.loc 1 2521 0
 4223 0092 2068     		ldr	r0, [r4]
 4224 0094 A269     		ldr	r2, [r4, #24]
 4225 0096 C36A     		ldr	r3, [r0, #44]
 4226 0098 9342     		cmp	r3, r2
 4227 009a 04D1     		bne	.L493
2521:.\sd/ff.c     **** 				ABORT(fp->fs, FR_DISK_ERR);
 4228              		.loc 1 2521 0 is_stmt 0 discriminator 1
 4229 009c 0021     		mov	r1, #0
 4230 009e FFF7FEFF 		bl	move_window
 4231              	.LVL542:
 4232 00a2 0028     		cmp	r0, #0
 4233 00a4 58D1     		bne	.L514
 4234              	.L493:
2530:.\sd/ff.c     **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4235              		.loc 1 2530 0 is_stmt 1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 129


 4236 00a6 2368     		ldr	r3, [r4]
 4237 00a8 6169     		ldr	r1, [r4, #20]
 4238 00aa 181C     		mov	r0, r3
 4239 00ac 0293     		str	r3, [sp, #8]
 4240 00ae FFF7FEFF 		bl	clust2sect
 4241              	.LVL543:
2531:.\sd/ff.c     **** 			sect += csect;
 4242              		.loc 1 2531 0
 4243 00b2 0028     		cmp	r0, #0
 4244 00b4 06D1     		bne	.L494
 4245              	.LVL544:
 4246              	.L513:
2531:.\sd/ff.c     **** 			sect += csect;
 4247              		.loc 1 2531 0 is_stmt 0 discriminator 1
 4248 00b6 8022     		mov	r2, #128
 4249 00b8 A379     		ldrb	r3, [r4, #6]
 4250 00ba 5242     		neg	r2, r2
 4251 00bc 1343     		orr	r3, r2
 4252 00be A371     		strb	r3, [r4, #6]
 4253 00c0 0223     		mov	r3, #2
 4254 00c2 6DE0     		b	.L481
 4255              	.LVL545:
 4256              	.L494:
2532:.\sd/ff.c     **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
 4257              		.loc 1 2532 0 is_stmt 1
 4258 00c4 4319     		add	r3, r0, r5
 4259 00c6 0393     		str	r3, [sp, #12]
 4260              	.LVL546:
2533:.\sd/ff.c     **** 			if (cc) {						/* Write maximum contiguous sectors directly */
 4261              		.loc 1 2533 0
 4262 00c8 730A     		lsr	r3, r6, #9
 4263              	.LVL547:
 4264 00ca 0093     		str	r3, [sp]
 4265              	.LVL548:
2534:.\sd/ff.c     **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4266              		.loc 1 2534 0
 4267 00cc 25D0     		beq	.L495
2535:.\sd/ff.c     **** 					cc = fp->fs->csize - csect;
 4268              		.loc 1 2535 0
 4269 00ce 029B     		ldr	r3, [sp, #8]
 4270              	.LVL549:
 4271 00d0 009A     		ldr	r2, [sp]
 4272 00d2 9B78     		ldrb	r3, [r3, #2]
 4273 00d4 5219     		add	r2, r2, r5
 4274 00d6 9A42     		cmp	r2, r3
 4275 00d8 01D9     		bls	.L496
2536:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
 4276              		.loc 1 2536 0
 4277 00da 5B1B     		sub	r3, r3, r5
 4278 00dc 0093     		str	r3, [sp]
 4279              	.LVL550:
 4280              	.L496:
2537:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
 4281              		.loc 1 2537 0
 4282 00de 029B     		ldr	r3, [sp, #8]
 4283 00e0 0199     		ldr	r1, [sp, #4]
 4284 00e2 5878     		ldrb	r0, [r3, #1]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 130


 4285 00e4 6B46     		mov	r3, sp
 4286 00e6 039A     		ldr	r2, [sp, #12]
 4287 00e8 1B78     		ldrb	r3, [r3]
 4288 00ea FFF7FEFF 		bl	disk_write
 4289              	.LVL551:
 4290 00ee 051E     		sub	r5, r0, #0
 4291              	.LVL552:
 4292 00f0 32D1     		bne	.L514
2540:.\sd/ff.c     **** 					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
 4293              		.loc 1 2540 0
 4294 00f2 2068     		ldr	r0, [r4]
 4295 00f4 039A     		ldr	r2, [sp, #12]
 4296 00f6 C36A     		ldr	r3, [r0, #44]
 4297 00f8 991A     		sub	r1, r3, r2
 4298 00fa 009B     		ldr	r3, [sp]
 4299 00fc 9942     		cmp	r1, r3
 4300 00fe 09D2     		bcs	.L498
2541:.\sd/ff.c     **** 					fp->fs->wflag = 0;
 4301              		.loc 1 2541 0
 4302 0100 8022     		mov	r2, #128
 4303 0102 019B     		ldr	r3, [sp, #4]
 4304 0104 4902     		lsl	r1, r1, #9
 4305 0106 5918     		add	r1, r3, r1
 4306 0108 3030     		add	r0, r0, #48
 4307 010a 9200     		lsl	r2, r2, #2
 4308 010c FFF7FEFF 		bl	mem_cpy
 4309              	.LVL553:
2542:.\sd/ff.c     **** 				}
 4310              		.loc 1 2542 0
 4311 0110 2368     		ldr	r3, [r4]
 4312 0112 1D71     		strb	r5, [r3, #4]
 4313              	.L498:
2550:.\sd/ff.c     **** 				continue;
 4314              		.loc 1 2550 0
 4315 0114 009B     		ldr	r3, [sp]
 4316 0116 5D02     		lsl	r5, r3, #9
 4317              	.LVL554:
2551:.\sd/ff.c     **** 			}
 4318              		.loc 1 2551 0
 4319 0118 32E0     		b	.L499
 4320              	.LVL555:
 4321              	.L495:
2554:.\sd/ff.c     **** 				if (move_window(fp->fs, 0)) ABORT(fp->fs, FR_DISK_ERR);
 4322              		.loc 1 2554 0
 4323 011a A368     		ldr	r3, [r4, #8]
 4324              	.LVL556:
 4325 011c E268     		ldr	r2, [r4, #12]
 4326 011e 9342     		cmp	r3, r2
 4327 0120 08D3     		bcc	.L500
2555:.\sd/ff.c     **** 				fp->fs->winsect = sect;
 4328              		.loc 1 2555 0
 4329 0122 0298     		ldr	r0, [sp, #8]
 4330 0124 0099     		ldr	r1, [sp]
 4331 0126 FFF7FEFF 		bl	move_window
 4332              	.LVL557:
 4333 012a 0028     		cmp	r0, #0
 4334 012c 14D1     		bne	.L514
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 131


2556:.\sd/ff.c     **** 			}
 4335              		.loc 1 2556 0
 4336 012e 2368     		ldr	r3, [r4]
 4337 0130 039A     		ldr	r2, [sp, #12]
 4338 0132 DA62     		str	r2, [r3, #44]
 4339              	.L500:
2565:.\sd/ff.c     **** 		}
 4340              		.loc 1 2565 0
 4341 0134 039B     		ldr	r3, [sp, #12]
 4342 0136 A361     		str	r3, [r4, #24]
 4343              	.LVL558:
 4344              	.L484:
2567:.\sd/ff.c     **** 		if (wcnt > btw) wcnt = btw;
 4345              		.loc 1 2567 0
 4346 0138 8022     		mov	r2, #128
 4347 013a A368     		ldr	r3, [r4, #8]
 4348 013c 9200     		lsl	r2, r2, #2
 4349 013e DB05     		lsl	r3, r3, #23
 4350 0140 DB0D     		lsr	r3, r3, #23
 4351 0142 D31A     		sub	r3, r2, r3
 4352              	.LVL559:
 4353 0144 351E     		sub	r5, r6, #0
 4354 0146 9D42     		cmp	r5, r3
 4355 0148 00D9     		bls	.L502
 4356              	.LVL560:
 4357 014a 1D1C     		mov	r5, r3
 4358              	.LVL561:
 4359              	.L502:
2570:.\sd/ff.c     **** 			ABORT(fp->fs, FR_DISK_ERR);
 4360              		.loc 1 2570 0
 4361 014c 2068     		ldr	r0, [r4]
 4362 014e A169     		ldr	r1, [r4, #24]
 4363 0150 FFF7FEFF 		bl	move_window
 4364              	.LVL562:
 4365 0154 0028     		cmp	r0, #0
 4366 0156 06D0     		beq	.L503
 4367              	.LVL563:
 4368              	.L514:
2571:.\sd/ff.c     **** 		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
 4369              		.loc 1 2571 0
 4370 0158 8022     		mov	r2, #128
 4371 015a A379     		ldrb	r3, [r4, #6]
 4372 015c 5242     		neg	r2, r2
 4373 015e 1343     		orr	r3, r2
 4374 0160 A371     		strb	r3, [r4, #6]
 4375 0162 0123     		mov	r3, #1
 4376 0164 1CE0     		b	.L481
 4377              	.LVL564:
 4378              	.L503:
2572:.\sd/ff.c     **** 		fp->fs->wflag = 1;
 4379              		.loc 1 2572 0
 4380 0166 A368     		ldr	r3, [r4, #8]
 4381 0168 2A1C     		mov	r2, r5
 4382 016a D805     		lsl	r0, r3, #23
 4383 016c C00D     		lsr	r0, r0, #23
 4384 016e 2368     		ldr	r3, [r4]
 4385 0170 3030     		add	r0, r0, #48
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 132


 4386 0172 1818     		add	r0, r3, r0
 4387 0174 0199     		ldr	r1, [sp, #4]
 4388 0176 FFF7FEFF 		bl	mem_cpy
 4389              	.LVL565:
2573:.\sd/ff.c     **** #else
 4390              		.loc 1 2573 0
 4391 017a 0123     		mov	r3, #1
 4392 017c 2268     		ldr	r2, [r4]
 4393 017e 1371     		strb	r3, [r2, #4]
 4394              	.L499:
2499:.\sd/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 4395              		.loc 1 2499 0
 4396 0180 019B     		ldr	r3, [sp, #4]
 4397 0182 761B     		sub	r6, r6, r5
 4398              	.LVL566:
 4399 0184 5B19     		add	r3, r3, r5
 4400 0186 0193     		str	r3, [sp, #4]
 4401              	.LVL567:
 4402 0188 A368     		ldr	r3, [r4, #8]
 4403              	.LVL568:
 4404 018a 5B19     		add	r3, r3, r5
 4405 018c A360     		str	r3, [r4, #8]
 4406 018e 3B68     		ldr	r3, [r7]
 4407 0190 5B19     		add	r3, r3, r5
 4408 0192 3B60     		str	r3, [r7]
 4409 0194 54E7     		b	.L483
 4410              	.LVL569:
 4411              	.L490:
2581:.\sd/ff.c     **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
 4412              		.loc 1 2581 0
 4413 0196 2022     		mov	r2, #32
 4414 0198 A379     		ldrb	r3, [r4, #6]
 4415 019a 1343     		orr	r3, r2
 4416 019c A371     		strb	r3, [r4, #6]
2582:.\sd/ff.c     **** 
2583:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, FR_OK);
 4417              		.loc 1 2583 0
 4418 019e 0023     		mov	r3, #0
 4419              	.LVL570:
 4420              	.L481:
2584:.\sd/ff.c     **** }
 4421              		.loc 1 2584 0
 4422 01a0 181C     		mov	r0, r3
 4423 01a2 05B0     		add	sp, sp, #20
 4424              		@ sp needed
 4425              	.LVL571:
 4426              	.LVL572:
 4427              	.LVL573:
 4428 01a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 4429              		.cfi_endproc
 4430              	.LFE31:
 4431              		.size	f_write, .-f_write
 4432              		.section	.text.f_sync,"ax",%progbits
 4433              		.align	1
 4434              		.global	f_sync
 4435              		.code	16
 4436              		.thumb_func
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 133


 4437              		.type	f_sync, %function
 4438              	f_sync:
 4439              	.LFB32:
2585:.\sd/ff.c     **** 
2586:.\sd/ff.c     **** 
2587:.\sd/ff.c     **** 
2588:.\sd/ff.c     **** 
2589:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2590:.\sd/ff.c     **** /* Synchronize the File Object                                           */
2591:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2592:.\sd/ff.c     **** 
2593:.\sd/ff.c     **** FRESULT f_sync (
2594:.\sd/ff.c     **** 	FIL *fp		/* Pointer to the file object */
2595:.\sd/ff.c     **** )
2596:.\sd/ff.c     **** {
 4440              		.loc 1 2596 0
 4441              		.cfi_startproc
 4442              	.LVL574:
 4443 0000 70B5     		push	{r4, r5, r6, lr}
 4444              		.cfi_def_cfa_offset 16
 4445              		.cfi_offset 4, -16
 4446              		.cfi_offset 5, -12
 4447              		.cfi_offset 6, -8
 4448              		.cfi_offset 14, -4
 4449              		.loc 1 2596 0
 4450 0002 041C     		mov	r4, r0
2597:.\sd/ff.c     **** 	FRESULT res;
2598:.\sd/ff.c     **** 	DWORD tim;
2599:.\sd/ff.c     **** 	BYTE *dir;
2600:.\sd/ff.c     **** 
2601:.\sd/ff.c     **** 
2602:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 4451              		.loc 1 2602 0
 4452 0004 8188     		ldrh	r1, [r0, #4]
 4453 0006 0068     		ldr	r0, [r0]
 4454              	.LVL575:
 4455 0008 FFF7FEFF 		bl	validate
 4456              	.LVL576:
2603:.\sd/ff.c     **** 	if (res == FR_OK) {
 4457              		.loc 1 2603 0
 4458 000c 0028     		cmp	r0, #0
 4459 000e 33D1     		bne	.L516
2604:.\sd/ff.c     **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
 4460              		.loc 1 2604 0
 4461 0010 2026     		mov	r6, #32
 4462 0012 A379     		ldrb	r3, [r4, #6]
 4463 0014 3342     		tst	r3, r6
 4464 0016 2FD0     		beq	.L516
2605:.\sd/ff.c     **** #if !_FS_TINY	/* Write-back dirty buffer */
2606:.\sd/ff.c     **** 			if (fp->flag & FA__DIRTY) {
2607:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2608:.\sd/ff.c     **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
2609:.\sd/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2610:.\sd/ff.c     **** 			}
2611:.\sd/ff.c     **** #endif
2612:.\sd/ff.c     **** 			/* Update the directory entry */
2613:.\sd/ff.c     **** 			res = move_window(fp->fs, fp->dir_sect);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 134


 4465              		.loc 1 2613 0
 4466 0018 2068     		ldr	r0, [r4]
 4467              	.LVL577:
 4468 001a E169     		ldr	r1, [r4, #28]
 4469 001c FFF7FEFF 		bl	move_window
 4470              	.LVL578:
2614:.\sd/ff.c     **** 			if (res == FR_OK) {
 4471              		.loc 1 2614 0
 4472 0020 0028     		cmp	r0, #0
 4473 0022 29D1     		bne	.L516
 4474              	.LVL579:
 4475              	.LBB92:
 4476              	.LBB93:
2615:.\sd/ff.c     **** 				dir = fp->dir_ptr;
 4477              		.loc 1 2615 0
 4478 0024 256A     		ldr	r5, [r4, #32]
 4479              	.LVL580:
2616:.\sd/ff.c     **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
 4480              		.loc 1 2616 0
 4481 0026 EB7A     		ldrb	r3, [r5, #11]
 4482 0028 3343     		orr	r3, r6
 4483 002a EB72     		strb	r3, [r5, #11]
2617:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
 4484              		.loc 1 2617 0
 4485 002c 237B     		ldrb	r3, [r4, #12]
 4486 002e 2B77     		strb	r3, [r5, #28]
 4487 0030 637B     		ldrb	r3, [r4, #13]
 4488 0032 6B77     		strb	r3, [r5, #29]
 4489 0034 E368     		ldr	r3, [r4, #12]
 4490 0036 1B0C     		lsr	r3, r3, #16
 4491 0038 AB77     		strb	r3, [r5, #30]
 4492 003a E368     		ldr	r3, [r4, #12]
 4493 003c 1B0E     		lsr	r3, r3, #24
 4494 003e EB77     		strb	r3, [r5, #31]
2618:.\sd/ff.c     **** 				ST_CLUST(dir, fp->sclust);					/* Update start cluster */
 4495              		.loc 1 2618 0
 4496 0040 237C     		ldrb	r3, [r4, #16]
 4497 0042 AB76     		strb	r3, [r5, #26]
 4498 0044 637C     		ldrb	r3, [r4, #17]
 4499 0046 EB76     		strb	r3, [r5, #27]
 4500 0048 2369     		ldr	r3, [r4, #16]
 4501 004a 1B0C     		lsr	r3, r3, #16
 4502 004c 2B75     		strb	r3, [r5, #20]
 4503 004e 2369     		ldr	r3, [r4, #16]
 4504 0050 1B0E     		lsr	r3, r3, #24
 4505 0052 6B75     		strb	r3, [r5, #21]
2619:.\sd/ff.c     **** 				tim = get_fattime();						/* Update updated time */
 4506              		.loc 1 2619 0
 4507 0054 FFF7FEFF 		bl	get_fattime
 4508              	.LVL581:
2620:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);
 4509              		.loc 1 2620 0
 4510 0058 030A     		lsr	r3, r0, #8
 4511 005a A875     		strb	r0, [r5, #22]
 4512 005c EB75     		strb	r3, [r5, #23]
 4513 005e 030C     		lsr	r3, r0, #16
 4514 0060 000E     		lsr	r0, r0, #24
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 135


 4515              	.LVL582:
 4516 0062 2B76     		strb	r3, [r5, #24]
 4517 0064 6876     		strb	r0, [r5, #25]
2621:.\sd/ff.c     **** 				fp->flag &= ~FA__WRITTEN;
 4518              		.loc 1 2621 0
 4519 0066 A379     		ldrb	r3, [r4, #6]
2622:.\sd/ff.c     **** 				fp->fs->wflag = 1;
 4520              		.loc 1 2622 0
 4521 0068 2268     		ldr	r2, [r4]
2621:.\sd/ff.c     **** 				fp->flag &= ~FA__WRITTEN;
 4522              		.loc 1 2621 0
 4523 006a B343     		bic	r3, r6
 4524 006c A371     		strb	r3, [r4, #6]
 4525              		.loc 1 2622 0
 4526 006e 0123     		mov	r3, #1
 4527 0070 1371     		strb	r3, [r2, #4]
2623:.\sd/ff.c     **** 				res = sync(fp->fs);
 4528              		.loc 1 2623 0
 4529 0072 2068     		ldr	r0, [r4]
 4530 0074 FFF7FEFF 		bl	sync
 4531              	.LVL583:
 4532              	.L516:
 4533              	.LBE93:
 4534              	.LBE92:
2624:.\sd/ff.c     **** 			}
2625:.\sd/ff.c     **** 		}
2626:.\sd/ff.c     **** 	}
2627:.\sd/ff.c     **** 
2628:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, res);
2629:.\sd/ff.c     **** }
 4535              		.loc 1 2629 0
 4536              		@ sp needed
 4537              	.LVL584:
 4538 0078 70BD     		pop	{r4, r5, r6, pc}
 4539              		.cfi_endproc
 4540              	.LFE32:
 4541              		.size	f_sync, .-f_sync
 4542              		.section	.text.f_close,"ax",%progbits
 4543              		.align	1
 4544              		.global	f_close
 4545              		.code	16
 4546              		.thumb_func
 4547              		.type	f_close, %function
 4548              	f_close:
 4549              	.LFB33:
2630:.\sd/ff.c     **** 
2631:.\sd/ff.c     **** #endif /* !_FS_READONLY */
2632:.\sd/ff.c     **** 
2633:.\sd/ff.c     **** 
2634:.\sd/ff.c     **** 
2635:.\sd/ff.c     **** 
2636:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2637:.\sd/ff.c     **** /* Close File                                                            */
2638:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2639:.\sd/ff.c     **** 
2640:.\sd/ff.c     **** FRESULT f_close (
2641:.\sd/ff.c     **** 	FIL *fp		/* Pointer to the file object to be closed */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 136


2642:.\sd/ff.c     **** )
2643:.\sd/ff.c     **** {
 4550              		.loc 1 2643 0
 4551              		.cfi_startproc
 4552              	.LVL585:
 4553 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4554              		.cfi_def_cfa_offset 24
 4555              		.cfi_offset 3, -24
 4556              		.cfi_offset 4, -20
 4557              		.cfi_offset 5, -16
 4558              		.cfi_offset 6, -12
 4559              		.cfi_offset 7, -8
 4560              		.cfi_offset 14, -4
 4561              		.loc 1 2643 0
 4562 0002 041C     		mov	r4, r0
2644:.\sd/ff.c     **** 	FRESULT res;
2645:.\sd/ff.c     **** 
2646:.\sd/ff.c     **** #if _FS_READONLY
2647:.\sd/ff.c     **** 	FATFS *fs = fp->fs;
2648:.\sd/ff.c     **** 	res = validate(fs, fp->id);
2649:.\sd/ff.c     **** 	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
2650:.\sd/ff.c     **** 	LEAVE_FF(fs, res);
2651:.\sd/ff.c     **** 
2652:.\sd/ff.c     **** #else
2653:.\sd/ff.c     **** 	res = f_sync(fp);		/* Flush cached data */
 4563              		.loc 1 2653 0
 4564 0004 FFF7FEFF 		bl	f_sync
 4565              	.LVL586:
2654:.\sd/ff.c     **** #if _FS_SHARE
2655:.\sd/ff.c     **** 	if (res == FR_OK) {		/* Decrement open counter */
 4566              		.loc 1 2655 0
 4567 0008 0028     		cmp	r0, #0
 4568 000a 1AD1     		bne	.L527
 4569              	.LVL587:
 4570              	.LBB96:
 4571              	.LBB97:
 685:.\sd/ff.c     **** 		n = Files[i].ctr;
 4572              		.loc 1 685 0
 4573 000c 636A     		ldr	r3, [r4, #36]
 4574 000e 013B     		sub	r3, r3, #1
 4575              	.LVL588:
 4576 0010 022B     		cmp	r3, #2
 4577 0012 12D8     		bhi	.L525
 686:.\sd/ff.c     **** 		if (n == 0x100) n = 0;
 4578              		.loc 1 686 0
 4579 0014 0C22     		mov	r2, #12
 4580 0016 151C     		mov	r5, r2
 4581 0018 5D43     		mul	r5, r3
 4582 001a 0A49     		ldr	r1, .L528
 688:.\sd/ff.c     **** 		Files[i].ctr = n;
 4583              		.loc 1 688 0
 4584 001c 0A4F     		ldr	r7, .L528+4
 686:.\sd/ff.c     **** 		if (n == 0x100) n = 0;
 4585              		.loc 1 686 0
 4586 001e 4D19     		add	r5, r1, r5
 4587 0020 6E89     		ldrh	r6, [r5, #10]
 4588              	.LVL589:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 137


 688:.\sd/ff.c     **** 		Files[i].ctr = n;
 4589              		.loc 1 688 0
 4590 0022 051C     		mov	r5, r0
 4591 0024 3E42     		tst	r6, r7
 4592 0026 01D0     		beq	.L522
 4593 0028 751E     		sub	r5, r6, #1
 4594 002a ADB2     		uxth	r5, r5
 4595              	.LVL590:
 4596              	.L522:
 689:.\sd/ff.c     **** 		if (!n) Files[i].fs = 0;
 4597              		.loc 1 689 0
 4598 002c 5343     		mul	r3, r2
 4599              	.LVL591:
 4600 002e CA18     		add	r2, r1, r3
 4601 0030 5581     		strh	r5, [r2, #10]
 690:.\sd/ff.c     **** 		res = FR_OK;
 4602              		.loc 1 690 0
 4603 0032 002D     		cmp	r5, #0
 4604 0034 03D1     		bne	.L523
 4605              	.LVL592:
 4606 0036 CD50     		str	r5, [r1, r3]
 4607 0038 01E0     		b	.L523
 4608              	.LVL593:
 4609              	.L525:
 693:.\sd/ff.c     **** 	}
 4610              		.loc 1 693 0
 4611 003a 0220     		mov	r0, #2
 4612              	.LVL594:
 4613 003c 01E0     		b	.L527
 4614              	.LVL595:
 4615              	.L523:
 4616              	.LBE97:
 4617              	.LBE96:
2656:.\sd/ff.c     **** #if _FS_REENTRANT
2657:.\sd/ff.c     **** 		res = validate(fp->fs, fp->id);
2658:.\sd/ff.c     **** 		if (res == FR_OK) {
2659:.\sd/ff.c     **** 			res = dec_lock(fp->lockid);	
2660:.\sd/ff.c     **** 			unlock_fs(fp->fs, FR_OK);
2661:.\sd/ff.c     **** 		}
2662:.\sd/ff.c     **** #else
2663:.\sd/ff.c     **** 		res = dec_lock(fp->lockid);
2664:.\sd/ff.c     **** #endif
2665:.\sd/ff.c     **** 	}
2666:.\sd/ff.c     **** #endif
2667:.\sd/ff.c     **** 	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
 4618              		.loc 1 2667 0
 4619 003e 0023     		mov	r3, #0
 4620 0040 2360     		str	r3, [r4]
 4621              	.LVL596:
 4622              	.L527:
2668:.\sd/ff.c     **** 	return res;
2669:.\sd/ff.c     **** #endif
2670:.\sd/ff.c     **** }
 4623              		.loc 1 2670 0
 4624              		@ sp needed
 4625              	.LVL597:
 4626 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 138


 4627              	.L529:
 4628              		.align	2
 4629              	.L528:
 4630 0044 00000000 		.word	.LANCHOR0
 4631 0048 FFFEFFFF 		.word	-257
 4632              		.cfi_endproc
 4633              	.LFE33:
 4634              		.size	f_close, .-f_close
 4635              		.section	.text.f_lseek,"ax",%progbits
 4636              		.align	1
 4637              		.global	f_lseek
 4638              		.code	16
 4639              		.thumb_func
 4640              		.type	f_lseek, %function
 4641              	f_lseek:
 4642              	.LFB34:
2671:.\sd/ff.c     **** 
2672:.\sd/ff.c     **** 
2673:.\sd/ff.c     **** 
2674:.\sd/ff.c     **** 
2675:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2676:.\sd/ff.c     **** /* Current Drive/Directory Handlings                                     */
2677:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2678:.\sd/ff.c     **** 
2679:.\sd/ff.c     **** #if _FS_RPATH >= 1
2680:.\sd/ff.c     **** 
2681:.\sd/ff.c     **** FRESULT f_chdrive (
2682:.\sd/ff.c     **** 	BYTE drv		/* Drive number */
2683:.\sd/ff.c     **** )
2684:.\sd/ff.c     **** {
2685:.\sd/ff.c     **** 	if (drv >= _VOLUMES) return FR_INVALID_DRIVE;
2686:.\sd/ff.c     **** 
2687:.\sd/ff.c     **** 	CurrVol = drv;
2688:.\sd/ff.c     **** 
2689:.\sd/ff.c     **** 	return FR_OK;
2690:.\sd/ff.c     **** }
2691:.\sd/ff.c     **** 
2692:.\sd/ff.c     **** 
2693:.\sd/ff.c     **** 
2694:.\sd/ff.c     **** FRESULT f_chdir (
2695:.\sd/ff.c     **** 	const TCHAR *path	/* Pointer to the directory path */
2696:.\sd/ff.c     **** )
2697:.\sd/ff.c     **** {
2698:.\sd/ff.c     **** 	FRESULT res;
2699:.\sd/ff.c     **** 	DIR dj;
2700:.\sd/ff.c     **** 	DEF_NAMEBUF;
2701:.\sd/ff.c     **** 
2702:.\sd/ff.c     **** 
2703:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
2704:.\sd/ff.c     **** 	if (res == FR_OK) {
2705:.\sd/ff.c     **** 		INIT_BUF(dj);
2706:.\sd/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the path */
2707:.\sd/ff.c     **** 		FREE_BUF();
2708:.\sd/ff.c     **** 		if (res == FR_OK) {					/* Follow completed */
2709:.\sd/ff.c     **** 			if (!dj.dir) {
2710:.\sd/ff.c     **** 				dj.fs->cdir = dj.sclust;	/* Start directory itself */
2711:.\sd/ff.c     **** 			} else {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 139


2712:.\sd/ff.c     **** 				if (dj.dir[DIR_Attr] & AM_DIR)	/* Reached to the directory */
2713:.\sd/ff.c     **** 					dj.fs->cdir = LD_CLUST(dj.dir);
2714:.\sd/ff.c     **** 				else
2715:.\sd/ff.c     **** 					res = FR_NO_PATH;		/* Reached but a file */
2716:.\sd/ff.c     **** 			}
2717:.\sd/ff.c     **** 		}
2718:.\sd/ff.c     **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
2719:.\sd/ff.c     **** 	}
2720:.\sd/ff.c     **** 
2721:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
2722:.\sd/ff.c     **** }
2723:.\sd/ff.c     **** 
2724:.\sd/ff.c     **** 
2725:.\sd/ff.c     **** #if _FS_RPATH >= 2
2726:.\sd/ff.c     **** FRESULT f_getcwd (
2727:.\sd/ff.c     **** 	TCHAR *path,	/* Pointer to the directory path */
2728:.\sd/ff.c     **** 	UINT sz_path	/* Size of path */
2729:.\sd/ff.c     **** )
2730:.\sd/ff.c     **** {
2731:.\sd/ff.c     **** 	FRESULT res;
2732:.\sd/ff.c     **** 	DIR dj;
2733:.\sd/ff.c     **** 	UINT i, n;
2734:.\sd/ff.c     **** 	DWORD ccl;
2735:.\sd/ff.c     **** 	TCHAR *tp;
2736:.\sd/ff.c     **** 	FILINFO fno;
2737:.\sd/ff.c     **** 	DEF_NAMEBUF;
2738:.\sd/ff.c     **** 
2739:.\sd/ff.c     **** 
2740:.\sd/ff.c     **** 	*path = 0;
2741:.\sd/ff.c     **** 	res = chk_mounted((const TCHAR**)&path, &dj.fs, 0);	/* Get current volume */
2742:.\sd/ff.c     **** 	if (res == FR_OK) {
2743:.\sd/ff.c     **** 		INIT_BUF(dj);
2744:.\sd/ff.c     **** 		i = sz_path;		/* Bottom of buffer (dir stack base) */
2745:.\sd/ff.c     **** 		dj.sclust = dj.fs->cdir;			/* Start to follow upper dir from current dir */
2746:.\sd/ff.c     **** 		while ((ccl = dj.sclust) != 0) {	/* Repeat while current dir is a sub-dir */
2747:.\sd/ff.c     **** 			res = dir_sdi(&dj, 1);			/* Get parent dir */
2748:.\sd/ff.c     **** 			if (res != FR_OK) break;
2749:.\sd/ff.c     **** 			res = dir_read(&dj);
2750:.\sd/ff.c     **** 			if (res != FR_OK) break;
2751:.\sd/ff.c     **** 			dj.sclust = LD_CLUST(dj.dir);	/* Goto parent dir */
2752:.\sd/ff.c     **** 			res = dir_sdi(&dj, 0);
2753:.\sd/ff.c     **** 			if (res != FR_OK) break;
2754:.\sd/ff.c     **** 			do {							/* Find the entry links to the child dir */
2755:.\sd/ff.c     **** 				res = dir_read(&dj);
2756:.\sd/ff.c     **** 				if (res != FR_OK) break;
2757:.\sd/ff.c     **** 				if (ccl == LD_CLUST(dj.dir)) break;	/* Found the entry */
2758:.\sd/ff.c     **** 				res = dir_next(&dj, 0);	
2759:.\sd/ff.c     **** 			} while (res == FR_OK);
2760:.\sd/ff.c     **** 			if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
2761:.\sd/ff.c     **** 			if (res != FR_OK) break;
2762:.\sd/ff.c     **** #if _USE_LFN
2763:.\sd/ff.c     **** 			fno.lfname = path;
2764:.\sd/ff.c     **** 			fno.lfsize = i;
2765:.\sd/ff.c     **** #endif
2766:.\sd/ff.c     **** 			get_fileinfo(&dj, &fno);		/* Get the dir name and push it to the buffer */
2767:.\sd/ff.c     **** 			tp = fno.fname;
2768:.\sd/ff.c     **** 			if (_USE_LFN && *path) tp = path;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 140


2769:.\sd/ff.c     **** 			for (n = 0; tp[n]; n++) ;
2770:.\sd/ff.c     **** 			if (i < n + 3) {
2771:.\sd/ff.c     **** 				res = FR_NOT_ENOUGH_CORE; break;
2772:.\sd/ff.c     **** 			}
2773:.\sd/ff.c     **** 			while (n) path[--i] = tp[--n];
2774:.\sd/ff.c     **** 			path[--i] = '/';
2775:.\sd/ff.c     **** 		}
2776:.\sd/ff.c     **** 		tp = path;
2777:.\sd/ff.c     **** 		if (res == FR_OK) {
2778:.\sd/ff.c     **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
2779:.\sd/ff.c     **** 			*tp++ = ':';
2780:.\sd/ff.c     **** 			if (i == sz_path) {				/* Root-dir */
2781:.\sd/ff.c     **** 				*tp++ = '/';
2782:.\sd/ff.c     **** 			} else {						/* Sub-dir */
2783:.\sd/ff.c     **** 				do		/* Add stacked path str */
2784:.\sd/ff.c     **** 					*tp++ = path[i++];
2785:.\sd/ff.c     **** 				while (i < sz_path);
2786:.\sd/ff.c     **** 			}
2787:.\sd/ff.c     **** 		}
2788:.\sd/ff.c     **** 		*tp = 0;
2789:.\sd/ff.c     **** 		FREE_BUF();
2790:.\sd/ff.c     **** 	}
2791:.\sd/ff.c     **** 
2792:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
2793:.\sd/ff.c     **** }
2794:.\sd/ff.c     **** #endif /* _FS_RPATH >= 2 */
2795:.\sd/ff.c     **** #endif /* _FS_RPATH >= 1 */
2796:.\sd/ff.c     **** 
2797:.\sd/ff.c     **** 
2798:.\sd/ff.c     **** 
2799:.\sd/ff.c     **** #if _FS_MINIMIZE <= 2
2800:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2801:.\sd/ff.c     **** /* Seek File R/W Pointer                                                 */
2802:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2803:.\sd/ff.c     **** 
2804:.\sd/ff.c     **** FRESULT f_lseek (
2805:.\sd/ff.c     **** 	FIL *fp,		/* Pointer to the file object */
2806:.\sd/ff.c     **** 	DWORD ofs		/* File pointer from top of file */
2807:.\sd/ff.c     **** )
2808:.\sd/ff.c     **** {
 4643              		.loc 1 2808 0
 4644              		.cfi_startproc
 4645              	.LVL598:
 4646 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 4647              		.cfi_def_cfa_offset 32
 4648              		.cfi_offset 0, -32
 4649              		.cfi_offset 1, -28
 4650              		.cfi_offset 2, -24
 4651              		.cfi_offset 4, -20
 4652              		.cfi_offset 5, -16
 4653              		.cfi_offset 6, -12
 4654              		.cfi_offset 7, -8
 4655              		.cfi_offset 14, -4
 4656              		.loc 1 2808 0
 4657 0002 041C     		mov	r4, r0
 4658 0004 0D1C     		mov	r5, r1
2809:.\sd/ff.c     **** 	FRESULT res;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 141


2810:.\sd/ff.c     **** 
2811:.\sd/ff.c     **** 
2812:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 4659              		.loc 1 2812 0
 4660 0006 8188     		ldrh	r1, [r0, #4]
 4661              	.LVL599:
 4662 0008 0068     		ldr	r0, [r0]
 4663              	.LVL600:
 4664 000a FFF7FEFF 		bl	validate
 4665              	.LVL601:
2813:.\sd/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4666              		.loc 1 2813 0
 4667 000e 0028     		cmp	r0, #0
 4668 0010 00D0     		beq	.LCB5130
 4669 0012 89E0     		b	.L531	@long jump
 4670              	.LCB5130:
2814:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)			/* Check abort flag */
 4671              		.loc 1 2814 0
 4672 0014 A279     		ldrb	r2, [r4, #6]
2815:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
 4673              		.loc 1 2815 0
 4674 0016 0230     		add	r0, r0, #2
 4675              	.LVL602:
2814:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)			/* Check abort flag */
 4676              		.loc 1 2814 0
 4677 0018 53B2     		sxtb	r3, r2
 4678 001a 002B     		cmp	r3, #0
 4679 001c 00DA     		bge	.LCB5136
 4680 001e 83E0     		b	.L531	@long jump
 4681              	.LCB5136:
 4682              	.LBB98:
2816:.\sd/ff.c     **** 
2817:.\sd/ff.c     **** #if _USE_FASTSEEK
2818:.\sd/ff.c     **** 	if (fp->cltbl) {	/* Fast seek */
2819:.\sd/ff.c     **** 		DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
2820:.\sd/ff.c     **** 
2821:.\sd/ff.c     **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
2822:.\sd/ff.c     **** 			tbl = fp->cltbl;
2823:.\sd/ff.c     **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
2824:.\sd/ff.c     **** 			cl = fp->sclust;			/* Top of the chain */
2825:.\sd/ff.c     **** 			if (cl) {
2826:.\sd/ff.c     **** 				do {
2827:.\sd/ff.c     **** 					/* Get a fragment */
2828:.\sd/ff.c     **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
2829:.\sd/ff.c     **** 					do {
2830:.\sd/ff.c     **** 						pcl = cl; ncl++;
2831:.\sd/ff.c     **** 						cl = get_fat(fp->fs, cl);
2832:.\sd/ff.c     **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
2833:.\sd/ff.c     **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2834:.\sd/ff.c     **** 					} while (cl == pcl + 1);
2835:.\sd/ff.c     **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
2836:.\sd/ff.c     **** 						*tbl++ = ncl; *tbl++ = tcl;
2837:.\sd/ff.c     **** 					}
2838:.\sd/ff.c     **** 				} while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
2839:.\sd/ff.c     **** 			}
2840:.\sd/ff.c     **** 			*fp->cltbl = ulen;	/* Number of items used */
2841:.\sd/ff.c     **** 			if (ulen <= tlen)
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 142


2842:.\sd/ff.c     **** 				*tbl = 0;		/* Terminate table */
2843:.\sd/ff.c     **** 			else
2844:.\sd/ff.c     **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
2845:.\sd/ff.c     **** 
2846:.\sd/ff.c     **** 		} else {						/* Fast seek */
2847:.\sd/ff.c     **** 			if (ofs > fp->fsize)		/* Clip offset at the file size */
2848:.\sd/ff.c     **** 				ofs = fp->fsize;
2849:.\sd/ff.c     **** 			fp->fptr = ofs;				/* Set file pointer */
2850:.\sd/ff.c     **** 			if (ofs) {
2851:.\sd/ff.c     **** 				fp->clust = clmt_clust(fp, ofs - 1);
2852:.\sd/ff.c     **** 				dsc = clust2sect(fp->fs, fp->clust);
2853:.\sd/ff.c     **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
2854:.\sd/ff.c     **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
2855:.\sd/ff.c     **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
2856:.\sd/ff.c     **** #if !_FS_TINY
2857:.\sd/ff.c     **** #if !_FS_READONLY
2858:.\sd/ff.c     **** 					if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2859:.\sd/ff.c     **** 						if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2860:.\sd/ff.c     **** 							ABORT(fp->fs, FR_DISK_ERR);
2861:.\sd/ff.c     **** 						fp->flag &= ~FA__DIRTY;
2862:.\sd/ff.c     **** 					}
2863:.\sd/ff.c     **** #endif
2864:.\sd/ff.c     **** 					if (disk_read(fp->fs->drv, fp->buf, dsc, 1) != RES_OK)	/* Load current sector */
2865:.\sd/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2866:.\sd/ff.c     **** #endif
2867:.\sd/ff.c     **** 					fp->dsect = dsc;
2868:.\sd/ff.c     **** 				}
2869:.\sd/ff.c     **** 			}
2870:.\sd/ff.c     **** 		}
2871:.\sd/ff.c     **** 	} else
2872:.\sd/ff.c     **** #endif
2873:.\sd/ff.c     **** 
2874:.\sd/ff.c     **** 	/* Normal Seek */
2875:.\sd/ff.c     **** 	{
2876:.\sd/ff.c     **** 		DWORD clst, bcs, nsect, ifptr;
2877:.\sd/ff.c     **** 
2878:.\sd/ff.c     **** 		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
 4683              		.loc 1 2878 0
 4684 0020 E368     		ldr	r3, [r4, #12]
 4685 0022 9D42     		cmp	r5, r3
 4686 0024 02D9     		bls	.L532
2879:.\sd/ff.c     **** #if !_FS_READONLY
2880:.\sd/ff.c     **** 			 && !(fp->flag & FA_WRITE)
 4687              		.loc 1 2880 0
 4688 0026 0242     		tst	r2, r0
 4689 0028 00D1     		bne	.L532
 4690 002a 1D1C     		mov	r5, r3
 4691              	.LVL603:
 4692              	.L532:
2881:.\sd/ff.c     **** #endif
2882:.\sd/ff.c     **** 			) ofs = fp->fsize;
2883:.\sd/ff.c     **** 
2884:.\sd/ff.c     **** 		ifptr = fp->fptr;
2885:.\sd/ff.c     **** 		fp->fptr = nsect = 0;
 4693              		.loc 1 2885 0
 4694 002c 0022     		mov	r2, #0
2884:.\sd/ff.c     **** 		fp->fptr = nsect = 0;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 143


 4695              		.loc 1 2884 0
 4696 002e A368     		ldr	r3, [r4, #8]
 4697              	.LVL604:
 4698              		.loc 1 2885 0
 4699 0030 A260     		str	r2, [r4, #8]
2886:.\sd/ff.c     **** 		if (ofs) {
 4700              		.loc 1 2886 0
 4701 0032 9542     		cmp	r5, r2
 4702 0034 01D1     		bne	.L533
 4703              	.LVL605:
 4704              	.L540:
2885:.\sd/ff.c     **** 		if (ofs) {
 4705              		.loc 1 2885 0
 4706 0036 0020     		mov	r0, #0
 4707 0038 66E0     		b	.L534
 4708              	.LVL606:
 4709              	.L533:
2887:.\sd/ff.c     **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
 4710              		.loc 1 2887 0
 4711 003a 2768     		ldr	r7, [r4]
 4712 003c BE78     		ldrb	r6, [r7, #2]
 4713 003e 7602     		lsl	r6, r6, #9
 4714              	.LVL607:
2888:.\sd/ff.c     **** 			if (ifptr > 0 &&
 4715              		.loc 1 2888 0
 4716 0040 002B     		cmp	r3, #0
 4717 0042 14D0     		beq	.L535
2889:.\sd/ff.c     **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 4718              		.loc 1 2889 0 discriminator 1
 4719 0044 013B     		sub	r3, r3, #1
 4720              	.LVL608:
 4721 0046 311C     		mov	r1, r6
 4722 0048 681E     		sub	r0, r5, #1
 4723 004a 0093     		str	r3, [sp]
 4724 004c FFF7FEFF 		bl	__aeabi_uidiv
 4725              	.LVL609:
 4726 0050 311C     		mov	r1, r6
 4727 0052 0190     		str	r0, [sp, #4]
 4728 0054 0098     		ldr	r0, [sp]
 4729 0056 FFF7FEFF 		bl	__aeabi_uidiv
 4730              	.LVL610:
2888:.\sd/ff.c     **** 			if (ifptr > 0 &&
 4731              		.loc 1 2888 0 discriminator 1
 4732 005a 019B     		ldr	r3, [sp, #4]
 4733 005c 8342     		cmp	r3, r0
 4734 005e 06D3     		bcc	.L535
2890:.\sd/ff.c     **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
 4735              		.loc 1 2890 0
 4736 0060 009A     		ldr	r2, [sp]
 4737 0062 7342     		neg	r3, r6
 4738 0064 1A40     		and	r2, r3
 4739 0066 A260     		str	r2, [r4, #8]
2891:.\sd/ff.c     **** 				ofs -= fp->fptr;
 4740              		.loc 1 2891 0
 4741 0068 AD1A     		sub	r5, r5, r2
 4742              	.LVL611:
2892:.\sd/ff.c     **** 				clst = fp->clust;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 144


 4743              		.loc 1 2892 0
 4744 006a 6169     		ldr	r1, [r4, #20]
 4745              	.LVL612:
 4746 006c 0CE0     		b	.L536
 4747              	.LVL613:
 4748              	.L535:
2893:.\sd/ff.c     **** 			} else {									/* When seek to back cluster, */
2894:.\sd/ff.c     **** 				clst = fp->sclust;						/* start from the first cluster */
 4749              		.loc 1 2894 0
 4750 006e 2169     		ldr	r1, [r4, #16]
 4751              	.LVL614:
2895:.\sd/ff.c     **** #if !_FS_READONLY
2896:.\sd/ff.c     **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
 4752              		.loc 1 2896 0
 4753 0070 0029     		cmp	r1, #0
 4754 0072 08D1     		bne	.L537
2897:.\sd/ff.c     **** 					clst = create_chain(fp->fs, 0);
 4755              		.loc 1 2897 0
 4756 0074 381C     		mov	r0, r7
 4757 0076 FFF7FEFF 		bl	create_chain
 4758              	.LVL615:
 4759 007a 011E     		sub	r1, r0, #0
 4760              	.LVL616:
2898:.\sd/ff.c     **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 4761              		.loc 1 2898 0
 4762 007c 0129     		cmp	r1, #1
 4763 007e 24D0     		beq	.L546
2899:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4764              		.loc 1 2899 0
 4765 0080 431C     		add	r3, r0, #1
 4766 0082 1BD0     		beq	.L567
2900:.\sd/ff.c     **** 					fp->sclust = clst;
 4767              		.loc 1 2900 0
 4768 0084 2061     		str	r0, [r4, #16]
 4769              	.LVL617:
 4770              	.L537:
2901:.\sd/ff.c     **** 				}
2902:.\sd/ff.c     **** #endif
2903:.\sd/ff.c     **** 				fp->clust = clst;
 4771              		.loc 1 2903 0
 4772 0086 6161     		str	r1, [r4, #20]
 4773              	.L536:
2904:.\sd/ff.c     **** 			}
2905:.\sd/ff.c     **** 			if (clst != 0) {
 4774              		.loc 1 2905 0
 4775 0088 0029     		cmp	r1, #0
 4776 008a D4D0     		beq	.L540
 4777 008c 0AE0     		b	.L541
 4778              	.LVL618:
 4779              	.L545:
2906:.\sd/ff.c     **** 				while (ofs > bcs) {						/* Cluster following loop */
2907:.\sd/ff.c     **** #if !_FS_READONLY
2908:.\sd/ff.c     **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
2909:.\sd/ff.c     **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
2910:.\sd/ff.c     **** 						if (clst == 0) {				/* When disk gets full, clip file size */
2911:.\sd/ff.c     **** 							ofs = bcs; break;
2912:.\sd/ff.c     **** 						}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 145


2913:.\sd/ff.c     **** 					} else
2914:.\sd/ff.c     **** #endif
2915:.\sd/ff.c     **** 						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
2916:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2917:.\sd/ff.c     **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 4780              		.loc 1 2917 0
 4781 008e 0129     		cmp	r1, #1
 4782 0090 1BD9     		bls	.L546
 4783              		.loc 1 2917 0 is_stmt 0 discriminator 2
 4784 0092 2368     		ldr	r3, [r4]
 4785 0094 9B69     		ldr	r3, [r3, #24]
 4786 0096 9942     		cmp	r1, r3
 4787 0098 17D2     		bcs	.L546
2918:.\sd/ff.c     **** 					fp->clust = clst;
2919:.\sd/ff.c     **** 					fp->fptr += bcs;
 4788              		.loc 1 2919 0 is_stmt 1
 4789 009a A368     		ldr	r3, [r4, #8]
2918:.\sd/ff.c     **** 					fp->clust = clst;
 4790              		.loc 1 2918 0
 4791 009c 6161     		str	r1, [r4, #20]
 4792              		.loc 1 2919 0
 4793 009e 9B19     		add	r3, r3, r6
 4794 00a0 A360     		str	r3, [r4, #8]
2920:.\sd/ff.c     **** 					ofs -= bcs;
 4795              		.loc 1 2920 0
 4796 00a2 AD1B     		sub	r5, r5, r6
 4797              	.LVL619:
 4798              	.L541:
2906:.\sd/ff.c     **** 				while (ofs > bcs) {						/* Cluster following loop */
 4799              		.loc 1 2906 0
 4800 00a4 B542     		cmp	r5, r6
 4801 00a6 1CD9     		bls	.L543
2908:.\sd/ff.c     **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 4802              		.loc 1 2908 0
 4803 00a8 A379     		ldrb	r3, [r4, #6]
2909:.\sd/ff.c     **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 4804              		.loc 1 2909 0
 4805 00aa 2068     		ldr	r0, [r4]
2908:.\sd/ff.c     **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 4806              		.loc 1 2908 0
 4807 00ac 9B07     		lsl	r3, r3, #30
 4808 00ae 13D5     		bpl	.L542
2909:.\sd/ff.c     **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 4809              		.loc 1 2909 0
 4810 00b0 FFF7FEFF 		bl	create_chain
 4811              	.LVL620:
 4812 00b4 011E     		sub	r1, r0, #0
 4813              	.LVL621:
2910:.\sd/ff.c     **** 							ofs = bcs; break;
 4814              		.loc 1 2910 0
 4815 00b6 13D0     		beq	.L568
 4816              	.L544:
2916:.\sd/ff.c     **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 4817              		.loc 1 2916 0
 4818 00b8 4B1C     		add	r3, r1, #1
 4819 00ba E8D1     		bne	.L545
 4820              	.L567:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 146


2916:.\sd/ff.c     **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 4821              		.loc 1 2916 0 is_stmt 0 discriminator 1
 4822 00bc 8022     		mov	r2, #128
 4823 00be A379     		ldrb	r3, [r4, #6]
 4824 00c0 5242     		neg	r2, r2
 4825 00c2 1343     		orr	r3, r2
 4826 00c4 A371     		strb	r3, [r4, #6]
 4827 00c6 0120     		mov	r0, #1
 4828              	.LVL622:
 4829 00c8 2EE0     		b	.L531
 4830              	.LVL623:
 4831              	.L546:
2917:.\sd/ff.c     **** 					fp->clust = clst;
 4832              		.loc 1 2917 0 is_stmt 1 discriminator 3
 4833 00ca 8022     		mov	r2, #128
 4834 00cc A379     		ldrb	r3, [r4, #6]
 4835 00ce 5242     		neg	r2, r2
 4836 00d0 1343     		orr	r3, r2
 4837 00d2 A371     		strb	r3, [r4, #6]
 4838 00d4 0220     		mov	r0, #2
 4839              	.LVL624:
 4840 00d6 27E0     		b	.L531
 4841              	.L542:
2915:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4842              		.loc 1 2915 0
 4843 00d8 FFF7FEFF 		bl	get_fat
 4844              	.LVL625:
 4845 00dc 011C     		mov	r1, r0
 4846              	.LVL626:
 4847 00de EBE7     		b	.L544
 4848              	.L568:
 4849 00e0 351C     		mov	r5, r6
 4850              	.LVL627:
 4851              	.L543:
2921:.\sd/ff.c     **** 				}
2922:.\sd/ff.c     **** 				fp->fptr += ofs;
 4852              		.loc 1 2922 0
 4853 00e2 A368     		ldr	r3, [r4, #8]
 4854 00e4 5B19     		add	r3, r3, r5
 4855 00e6 A360     		str	r3, [r4, #8]
2923:.\sd/ff.c     **** 				if (ofs % SS(fp->fs)) {
 4856              		.loc 1 2923 0
 4857 00e8 EB05     		lsl	r3, r5, #23
 4858 00ea A4D0     		beq	.L540
2924:.\sd/ff.c     **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
 4859              		.loc 1 2924 0
 4860 00ec 2068     		ldr	r0, [r4]
 4861 00ee FFF7FEFF 		bl	clust2sect
 4862              	.LVL628:
2925:.\sd/ff.c     **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
 4863              		.loc 1 2925 0
 4864 00f2 0028     		cmp	r0, #0
 4865 00f4 06D1     		bne	.L549
 4866              		.loc 1 2925 0 is_stmt 0 discriminator 1
 4867 00f6 8022     		mov	r2, #128
 4868 00f8 A379     		ldrb	r3, [r4, #6]
 4869 00fa 5242     		neg	r2, r2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 147


 4870 00fc 1343     		orr	r3, r2
 4871 00fe A371     		strb	r3, [r4, #6]
 4872 0100 0230     		add	r0, r0, #2
 4873              	.LVL629:
 4874 0102 11E0     		b	.L531
 4875              	.LVL630:
 4876              	.L549:
2926:.\sd/ff.c     **** 					nsect += ofs / SS(fp->fs);
 4877              		.loc 1 2926 0 is_stmt 1
 4878 0104 6D0A     		lsr	r5, r5, #9
 4879              	.LVL631:
 4880 0106 4019     		add	r0, r0, r5
 4881              	.LVL632:
 4882              	.L534:
2927:.\sd/ff.c     **** 				}
2928:.\sd/ff.c     **** 			}
2929:.\sd/ff.c     **** 		}
2930:.\sd/ff.c     **** 		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
 4883              		.loc 1 2930 0
 4884 0108 A368     		ldr	r3, [r4, #8]
 4885 010a DA05     		lsl	r2, r3, #23
 4886 010c 03D0     		beq	.L550
 4887              		.loc 1 2930 0 is_stmt 0 discriminator 1
 4888 010e A269     		ldr	r2, [r4, #24]
 4889 0110 9042     		cmp	r0, r2
 4890 0112 00D0     		beq	.L550
2931:.\sd/ff.c     **** #if !_FS_TINY
2932:.\sd/ff.c     **** #if !_FS_READONLY
2933:.\sd/ff.c     **** 			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
2934:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2935:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2936:.\sd/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2937:.\sd/ff.c     **** 			}
2938:.\sd/ff.c     **** #endif
2939:.\sd/ff.c     **** 			if (disk_read(fp->fs->drv, fp->buf, nsect, 1) != RES_OK)	/* Fill sector cache */
2940:.\sd/ff.c     **** 				ABORT(fp->fs, FR_DISK_ERR);
2941:.\sd/ff.c     **** #endif
2942:.\sd/ff.c     **** 			fp->dsect = nsect;
 4891              		.loc 1 2942 0 is_stmt 1
 4892 0114 A061     		str	r0, [r4, #24]
 4893              	.L550:
2943:.\sd/ff.c     **** 		}
2944:.\sd/ff.c     **** #if !_FS_READONLY
2945:.\sd/ff.c     **** 		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
 4894              		.loc 1 2945 0
 4895 0116 E268     		ldr	r2, [r4, #12]
 4896 0118 0020     		mov	r0, #0
 4897              	.LVL633:
 4898 011a 9342     		cmp	r3, r2
 4899 011c 04D9     		bls	.L531
2946:.\sd/ff.c     **** 			fp->fsize = fp->fptr;
2947:.\sd/ff.c     **** 			fp->flag |= FA__WRITTEN;
 4900              		.loc 1 2947 0
 4901 011e 2022     		mov	r2, #32
2946:.\sd/ff.c     **** 			fp->fsize = fp->fptr;
 4902              		.loc 1 2946 0
 4903 0120 E360     		str	r3, [r4, #12]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 148


 4904              		.loc 1 2947 0
 4905 0122 A379     		ldrb	r3, [r4, #6]
 4906 0124 1343     		orr	r3, r2
 4907 0126 A371     		strb	r3, [r4, #6]
 4908              	.L531:
 4909              	.LBE98:
2948:.\sd/ff.c     **** 		}
2949:.\sd/ff.c     **** #endif
2950:.\sd/ff.c     **** 	}
2951:.\sd/ff.c     **** 
2952:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, res);
2953:.\sd/ff.c     **** }
 4910              		.loc 1 2953 0
 4911              		@ sp needed
 4912              	.LVL634:
 4913 0128 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 4914              		.cfi_endproc
 4915              	.LFE34:
 4916              		.size	f_lseek, .-f_lseek
 4917              		.section	.text.f_opendir,"ax",%progbits
 4918              		.align	1
 4919              		.global	f_opendir
 4920              		.code	16
 4921              		.thumb_func
 4922              		.type	f_opendir, %function
 4923              	f_opendir:
 4924              	.LFB35:
2954:.\sd/ff.c     **** 
2955:.\sd/ff.c     **** 
2956:.\sd/ff.c     **** 
2957:.\sd/ff.c     **** #if _FS_MINIMIZE <= 1
2958:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2959:.\sd/ff.c     **** /* Create a Directroy Object                                             */
2960:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2961:.\sd/ff.c     **** 
2962:.\sd/ff.c     **** FRESULT f_opendir (
2963:.\sd/ff.c     **** 	DIR *dj,			/* Pointer to directory object to create */
2964:.\sd/ff.c     **** 	const TCHAR *path	/* Pointer to the directory path */
2965:.\sd/ff.c     **** )
2966:.\sd/ff.c     **** {
 4925              		.loc 1 2966 0
 4926              		.cfi_startproc
 4927              	.LVL635:
 4928 0000 10B5     		push	{r4, lr}
 4929              		.cfi_def_cfa_offset 8
 4930              		.cfi_offset 4, -8
 4931              		.cfi_offset 14, -4
 4932 0002 041C     		mov	r4, r0
 4933 0004 86B0     		sub	sp, sp, #24
 4934              		.cfi_def_cfa_offset 32
 4935              		.loc 1 2966 0
 4936 0006 0191     		str	r1, [sp, #4]
2967:.\sd/ff.c     **** 	FRESULT res;
2968:.\sd/ff.c     **** 	DEF_NAMEBUF;
2969:.\sd/ff.c     **** 
2970:.\sd/ff.c     **** 
2971:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj->fs, 0);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 149


 4937              		.loc 1 2971 0
 4938 0008 01A8     		add	r0, sp, #4
 4939              	.LVL636:
 4940 000a 211C     		mov	r1, r4
 4941              	.LVL637:
 4942 000c 0022     		mov	r2, #0
 4943 000e FFF7FEFF 		bl	chk_mounted
 4944              	.LVL638:
2972:.\sd/ff.c     **** 	if (res == FR_OK) {
 4945              		.loc 1 2972 0
 4946 0012 0028     		cmp	r0, #0
 4947 0014 23D1     		bne	.L577
2973:.\sd/ff.c     **** 		INIT_BUF(*dj);
 4948              		.loc 1 2973 0
 4949 0016 03AB     		add	r3, sp, #12
 4950 0018 A361     		str	r3, [r4, #24]
2974:.\sd/ff.c     **** 		res = follow_path(dj, path);			/* Follow the path to the directory */
 4951              		.loc 1 2974 0
 4952 001a 201C     		mov	r0, r4
 4953              	.LVL639:
 4954 001c 0199     		ldr	r1, [sp, #4]
 4955 001e FFF7FEFF 		bl	follow_path
 4956              	.LVL640:
2975:.\sd/ff.c     **** 		FREE_BUF();
2976:.\sd/ff.c     **** 		if (res == FR_OK) {						/* Follow completed */
 4957              		.loc 1 2976 0
 4958 0022 0028     		cmp	r0, #0
 4959 0024 19D1     		bne	.L571
2977:.\sd/ff.c     **** 			if (dj->dir) {						/* It is not the root dir */
 4960              		.loc 1 2977 0
 4961 0026 6069     		ldr	r0, [r4, #20]
 4962              	.LVL641:
 4963 0028 0028     		cmp	r0, #0
 4964 002a 0FD0     		beq	.L572
2978:.\sd/ff.c     **** 				if (dj->dir[DIR_Attr] & AM_DIR) {	/* The object is a directory */
 4965              		.loc 1 2978 0
 4966 002c C37A     		ldrb	r3, [r0, #11]
 4967 002e DB06     		lsl	r3, r3, #27
 4968 0030 01D4     		bmi	.L573
 4969              	.L574:
2979:.\sd/ff.c     **** 					dj->sclust = LD_CLUST(dj->dir);
2980:.\sd/ff.c     **** 				} else {						/* The object is not a directory */
2981:.\sd/ff.c     **** 					res = FR_NO_PATH;
 4970              		.loc 1 2981 0
 4971 0032 0520     		mov	r0, #5
 4972 0034 13E0     		b	.L577
 4973              	.L573:
2979:.\sd/ff.c     **** 					dj->sclust = LD_CLUST(dj->dir);
 4974              		.loc 1 2979 0
 4975 0036 437D     		ldrb	r3, [r0, #21]
 4976 0038 017D     		ldrb	r1, [r0, #20]
 4977 003a 1B02     		lsl	r3, r3, #8
 4978 003c 0B43     		orr	r3, r1
 4979 003e C27E     		ldrb	r2, [r0, #27]
 4980 0040 1904     		lsl	r1, r3, #16
 4981 0042 837E     		ldrb	r3, [r0, #26]
 4982 0044 1202     		lsl	r2, r2, #8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 150


 4983 0046 1343     		orr	r3, r2
 4984 0048 0B43     		orr	r3, r1
 4985 004a A360     		str	r3, [r4, #8]
 4986              	.L572:
 4987              	.LVL642:
2982:.\sd/ff.c     **** 				}
2983:.\sd/ff.c     **** 			}
2984:.\sd/ff.c     **** 			if (res == FR_OK) {
2985:.\sd/ff.c     **** 				dj->id = dj->fs->id;
 4988              		.loc 1 2985 0
 4989 004c 2368     		ldr	r3, [r4]
2986:.\sd/ff.c     **** 				res = dir_sdi(dj, 0);			/* Rewind dir */
 4990              		.loc 1 2986 0
 4991 004e 201C     		mov	r0, r4
2985:.\sd/ff.c     **** 				res = dir_sdi(dj, 0);			/* Rewind dir */
 4992              		.loc 1 2985 0
 4993 0050 DB88     		ldrh	r3, [r3, #6]
 4994              		.loc 1 2986 0
 4995 0052 0021     		mov	r1, #0
2985:.\sd/ff.c     **** 				res = dir_sdi(dj, 0);			/* Rewind dir */
 4996              		.loc 1 2985 0
 4997 0054 A380     		strh	r3, [r4, #4]
 4998              		.loc 1 2986 0
 4999 0056 FFF7FEFF 		bl	dir_sdi
 5000              	.LVL643:
 5001              	.L571:
2987:.\sd/ff.c     **** 			}
2988:.\sd/ff.c     **** 		}
2989:.\sd/ff.c     **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 5002              		.loc 1 2989 0
 5003 005a 0428     		cmp	r0, #4
 5004 005c E9D0     		beq	.L574
 5005              	.LVL644:
 5006              	.L577:
2990:.\sd/ff.c     **** 	}
2991:.\sd/ff.c     **** 
2992:.\sd/ff.c     **** 	LEAVE_FF(dj->fs, res);
2993:.\sd/ff.c     **** }
 5007              		.loc 1 2993 0
 5008 005e 06B0     		add	sp, sp, #24
 5009              		@ sp needed
 5010              	.LVL645:
 5011 0060 10BD     		pop	{r4, pc}
 5012              		.cfi_endproc
 5013              	.LFE35:
 5014              		.size	f_opendir, .-f_opendir
 5015              		.section	.text.f_readdir,"ax",%progbits
 5016              		.align	1
 5017              		.global	f_readdir
 5018              		.code	16
 5019              		.thumb_func
 5020              		.type	f_readdir, %function
 5021              	f_readdir:
 5022              	.LFB36:
2994:.\sd/ff.c     **** 
2995:.\sd/ff.c     **** 
2996:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 151


2997:.\sd/ff.c     **** 
2998:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2999:.\sd/ff.c     **** /* Read Directory Entry in Sequense                                      */
3000:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3001:.\sd/ff.c     **** 
3002:.\sd/ff.c     **** FRESULT f_readdir (
3003:.\sd/ff.c     **** 	DIR *dj,			/* Pointer to the open directory object */
3004:.\sd/ff.c     **** 	FILINFO *fno		/* Pointer to file information to return */
3005:.\sd/ff.c     **** )
3006:.\sd/ff.c     **** {
 5023              		.loc 1 3006 0
 5024              		.cfi_startproc
 5025              	.LVL646:
 5026 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 5027              		.cfi_def_cfa_offset 32
 5028              		.cfi_offset 0, -32
 5029              		.cfi_offset 1, -28
 5030              		.cfi_offset 2, -24
 5031              		.cfi_offset 3, -20
 5032              		.cfi_offset 4, -16
 5033              		.cfi_offset 5, -12
 5034              		.cfi_offset 6, -8
 5035              		.cfi_offset 14, -4
 5036              		.loc 1 3006 0
 5037 0002 041C     		mov	r4, r0
 5038 0004 0E1C     		mov	r6, r1
3007:.\sd/ff.c     **** 	FRESULT res;
3008:.\sd/ff.c     **** 	DEF_NAMEBUF;
3009:.\sd/ff.c     **** 
3010:.\sd/ff.c     **** 
3011:.\sd/ff.c     **** 	res = validate(dj->fs, dj->id);			/* Check validity of the object */
 5039              		.loc 1 3011 0
 5040 0006 8188     		ldrh	r1, [r0, #4]
 5041              	.LVL647:
 5042 0008 0068     		ldr	r0, [r0]
 5043              	.LVL648:
 5044 000a FFF7FEFF 		bl	validate
 5045              	.LVL649:
 5046 000e 051E     		sub	r5, r0, #0
 5047              	.LVL650:
3012:.\sd/ff.c     **** 	if (res == FR_OK) {
 5048              		.loc 1 3012 0
 5049 0010 1FD1     		bne	.L583
3013:.\sd/ff.c     **** 		if (!fno) {
 5050              		.loc 1 3013 0
 5051 0012 002E     		cmp	r6, #0
 5052 0014 04D1     		bne	.L584
3014:.\sd/ff.c     **** 			res = dir_sdi(dj, 0);			/* Rewind the directory object */
 5053              		.loc 1 3014 0
 5054 0016 201C     		mov	r0, r4
 5055              	.LVL651:
 5056 0018 291C     		mov	r1, r5
 5057 001a FFF7FEFF 		bl	dir_sdi
 5058              	.LVL652:
 5059 001e 17E0     		b	.L588
 5060              	.LVL653:
 5061              	.L584:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 152


3015:.\sd/ff.c     **** 		} else {
3016:.\sd/ff.c     **** 			INIT_BUF(*dj);
 5062              		.loc 1 3016 0
 5063 0020 01AB     		add	r3, sp, #4
 5064 0022 A361     		str	r3, [r4, #24]
3017:.\sd/ff.c     **** 			res = dir_read(dj);				/* Read an directory item */
 5065              		.loc 1 3017 0
 5066 0024 201C     		mov	r0, r4
 5067              	.LVL654:
 5068 0026 FFF7FEFF 		bl	dir_read
 5069              	.LVL655:
3018:.\sd/ff.c     **** 			if (res == FR_NO_FILE) {		/* Reached end of dir */
 5070              		.loc 1 3018 0
 5071 002a 0428     		cmp	r0, #4
 5072 002c 01D1     		bne	.L585
3019:.\sd/ff.c     **** 				dj->sect = 0;
 5073              		.loc 1 3019 0
 5074 002e 2561     		str	r5, [r4, #16]
 5075              	.LVL656:
 5076 0030 01E0     		b	.L586
 5077              	.LVL657:
 5078              	.L585:
3020:.\sd/ff.c     **** 				res = FR_OK;
3021:.\sd/ff.c     **** 			}
3022:.\sd/ff.c     **** 			if (res == FR_OK) {				/* A valid entry is found */
 5079              		.loc 1 3022 0
 5080 0032 0028     		cmp	r0, #0
 5081 0034 0CD1     		bne	.L588
 5082              	.LVL658:
 5083              	.L586:
3023:.\sd/ff.c     **** 				get_fileinfo(dj, fno);		/* Get the object information */
 5084              		.loc 1 3023 0
 5085 0036 201C     		mov	r0, r4
 5086 0038 311C     		mov	r1, r6
 5087 003a FFF7FEFF 		bl	get_fileinfo
 5088              	.LVL659:
3024:.\sd/ff.c     **** 				res = dir_next(dj, 0);		/* Increment index for next */
 5089              		.loc 1 3024 0
 5090 003e 201C     		mov	r0, r4
 5091 0040 0021     		mov	r1, #0
 5092 0042 FFF7FEFF 		bl	dir_next
 5093              	.LVL660:
3025:.\sd/ff.c     **** 				if (res == FR_NO_FILE) {
 5094              		.loc 1 3025 0
 5095 0046 0428     		cmp	r0, #4
 5096 0048 02D1     		bne	.L588
3026:.\sd/ff.c     **** 					dj->sect = 0;
 5097              		.loc 1 3026 0
 5098 004a 0023     		mov	r3, #0
 5099 004c 2361     		str	r3, [r4, #16]
 5100              	.LVL661:
 5101 004e 00E0     		b	.L583
 5102              	.LVL662:
 5103              	.L588:
 5104 0050 051C     		mov	r5, r0
 5105              	.L583:
 5106              	.LVL663:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 153


3027:.\sd/ff.c     **** 					res = FR_OK;
3028:.\sd/ff.c     **** 				}
3029:.\sd/ff.c     **** 			}
3030:.\sd/ff.c     **** 			FREE_BUF();
3031:.\sd/ff.c     **** 		}
3032:.\sd/ff.c     **** 	}
3033:.\sd/ff.c     **** 
3034:.\sd/ff.c     **** 	LEAVE_FF(dj->fs, res);
3035:.\sd/ff.c     **** }
 5107              		.loc 1 3035 0
 5108 0052 281C     		mov	r0, r5
 5109 0054 04B0     		add	sp, sp, #16
 5110              		@ sp needed
 5111              	.LVL664:
 5112              	.LVL665:
 5113              	.LVL666:
 5114 0056 70BD     		pop	{r4, r5, r6, pc}
 5115              		.cfi_endproc
 5116              	.LFE36:
 5117              		.size	f_readdir, .-f_readdir
 5118              		.section	.text.f_stat,"ax",%progbits
 5119              		.align	1
 5120              		.global	f_stat
 5121              		.code	16
 5122              		.thumb_func
 5123              		.type	f_stat, %function
 5124              	f_stat:
 5125              	.LFB37:
3036:.\sd/ff.c     **** 
3037:.\sd/ff.c     **** 
3038:.\sd/ff.c     **** 
3039:.\sd/ff.c     **** #if _FS_MINIMIZE == 0
3040:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3041:.\sd/ff.c     **** /* Get File Status                                                       */
3042:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3043:.\sd/ff.c     **** 
3044:.\sd/ff.c     **** FRESULT f_stat (
3045:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the file path */
3046:.\sd/ff.c     **** 	FILINFO *fno		/* Pointer to file information to return */
3047:.\sd/ff.c     **** )
3048:.\sd/ff.c     **** {
 5126              		.loc 1 3048 0
 5127              		.cfi_startproc
 5128              	.LVL667:
 5129 0000 30B5     		push	{r4, r5, lr}
 5130              		.cfi_def_cfa_offset 12
 5131              		.cfi_offset 4, -12
 5132              		.cfi_offset 5, -8
 5133              		.cfi_offset 14, -4
 5134 0002 8DB0     		sub	sp, sp, #52
 5135              		.cfi_def_cfa_offset 64
 5136              		.loc 1 3048 0
 5137 0004 0190     		str	r0, [sp, #4]
 5138 0006 0D1C     		mov	r5, r1
3049:.\sd/ff.c     **** 	FRESULT res;
3050:.\sd/ff.c     **** 	DIR dj;
3051:.\sd/ff.c     **** 	DEF_NAMEBUF;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 154


3052:.\sd/ff.c     **** 
3053:.\sd/ff.c     **** 
3054:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
 5139              		.loc 1 3054 0
 5140 0008 01A8     		add	r0, sp, #4
 5141              	.LVL668:
 5142 000a 05A9     		add	r1, sp, #20
 5143              	.LVL669:
 5144 000c 0022     		mov	r2, #0
 5145 000e FFF7FEFF 		bl	chk_mounted
 5146              	.LVL670:
 5147 0012 041E     		sub	r4, r0, #0
 5148              	.LVL671:
3055:.\sd/ff.c     **** 	if (res == FR_OK) {
 5149              		.loc 1 3055 0
 5150 0014 11D1     		bne	.L590
3056:.\sd/ff.c     **** 		INIT_BUF(dj);
 5151              		.loc 1 3056 0
 5152 0016 02AB     		add	r3, sp, #8
3057:.\sd/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 5153              		.loc 1 3057 0
 5154 0018 05A8     		add	r0, sp, #20
 5155              	.LVL672:
 5156 001a 0199     		ldr	r1, [sp, #4]
3056:.\sd/ff.c     **** 		INIT_BUF(dj);
 5157              		.loc 1 3056 0
 5158 001c 0B93     		str	r3, [sp, #44]
 5159              		.loc 1 3057 0
 5160 001e FFF7FEFF 		bl	follow_path
 5161              	.LVL673:
 5162 0022 041E     		sub	r4, r0, #0
 5163              	.LVL674:
3058:.\sd/ff.c     **** 		if (res == FR_OK) {				/* Follow completed */
 5164              		.loc 1 3058 0
 5165 0024 09D1     		bne	.L590
3059:.\sd/ff.c     **** 			if (dj.dir)		/* Found an object */
 5166              		.loc 1 3059 0
 5167 0026 0A9B     		ldr	r3, [sp, #40]
 5168 0028 0093     		str	r3, [sp]
 5169 002a 002B     		cmp	r3, #0
 5170 002c 04D0     		beq	.L591
3060:.\sd/ff.c     **** 				get_fileinfo(&dj, fno);
 5171              		.loc 1 3060 0
 5172 002e 05A8     		add	r0, sp, #20
 5173              	.LVL675:
 5174 0030 291C     		mov	r1, r5
 5175 0032 FFF7FEFF 		bl	get_fileinfo
 5176              	.LVL676:
 5177 0036 00E0     		b	.L590
 5178              	.LVL677:
 5179              	.L591:
3061:.\sd/ff.c     **** 			else			/* It is root dir */
3062:.\sd/ff.c     **** 				res = FR_INVALID_NAME;
 5180              		.loc 1 3062 0
 5181 0038 0624     		mov	r4, #6
 5182              	.LVL678:
 5183              	.L590:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 155


3063:.\sd/ff.c     **** 		}
3064:.\sd/ff.c     **** 		FREE_BUF();
3065:.\sd/ff.c     **** 	}
3066:.\sd/ff.c     **** 
3067:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3068:.\sd/ff.c     **** }
 5184              		.loc 1 3068 0
 5185 003a 201C     		mov	r0, r4
 5186 003c 0DB0     		add	sp, sp, #52
 5187              		@ sp needed
 5188              	.LVL679:
 5189              	.LVL680:
 5190 003e 30BD     		pop	{r4, r5, pc}
 5191              		.cfi_endproc
 5192              	.LFE37:
 5193              		.size	f_stat, .-f_stat
 5194              		.section	.text.f_getfree,"ax",%progbits
 5195              		.align	1
 5196              		.global	f_getfree
 5197              		.code	16
 5198              		.thumb_func
 5199              		.type	f_getfree, %function
 5200              	f_getfree:
 5201              	.LFB38:
3069:.\sd/ff.c     **** 
3070:.\sd/ff.c     **** 
3071:.\sd/ff.c     **** 
3072:.\sd/ff.c     **** #if !_FS_READONLY
3073:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3074:.\sd/ff.c     **** /* Get Number of Free Clusters                                           */
3075:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3076:.\sd/ff.c     **** 
3077:.\sd/ff.c     **** FRESULT f_getfree (
3078:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the logical drive number (root dir) */
3079:.\sd/ff.c     **** 	DWORD *nclst,		/* Pointer to the variable to return number of free clusters */
3080:.\sd/ff.c     **** 	FATFS **fatfs		/* Pointer to pointer to corresponding file system object to return */
3081:.\sd/ff.c     **** )
3082:.\sd/ff.c     **** {
 5202              		.loc 1 3082 0
 5203              		.cfi_startproc
 5204              	.LVL681:
 5205 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5206              		.cfi_def_cfa_offset 20
 5207              		.cfi_offset 4, -20
 5208              		.cfi_offset 5, -16
 5209              		.cfi_offset 6, -12
 5210              		.cfi_offset 7, -8
 5211              		.cfi_offset 14, -4
 5212 0002 87B0     		sub	sp, sp, #28
 5213              		.cfi_def_cfa_offset 48
 5214              		.loc 1 3082 0
 5215 0004 0590     		str	r0, [sp, #20]
 5216 0006 0391     		str	r1, [sp, #12]
 5217 0008 161C     		mov	r6, r2
3083:.\sd/ff.c     **** 	FRESULT res;
3084:.\sd/ff.c     **** 	DWORD n, clst, sect, stat;
3085:.\sd/ff.c     **** 	UINT i;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 156


3086:.\sd/ff.c     **** 	BYTE fat, *p;
3087:.\sd/ff.c     **** 
3088:.\sd/ff.c     **** 
3089:.\sd/ff.c     **** 	/* Get drive number */
3090:.\sd/ff.c     **** 	res = chk_mounted(&path, fatfs, 0);
 5218              		.loc 1 3090 0
 5219 000a 111C     		mov	r1, r2
 5220              	.LVL682:
 5221 000c 05A8     		add	r0, sp, #20
 5222              	.LVL683:
 5223 000e 0022     		mov	r2, #0
 5224              	.LVL684:
 5225 0010 FFF7FEFF 		bl	chk_mounted
 5226              	.LVL685:
 5227 0014 041E     		sub	r4, r0, #0
 5228              	.LVL686:
3091:.\sd/ff.c     **** 	if (res == FR_OK) {
 5229              		.loc 1 3091 0
 5230 0016 66D1     		bne	.L593
3092:.\sd/ff.c     **** 		/* If free_clust is valid, return it without full cluster scan */
3093:.\sd/ff.c     **** 		if ((*fatfs)->free_clust <= (*fatfs)->n_fatent - 2) {
 5231              		.loc 1 3093 0
 5232 0018 3368     		ldr	r3, [r6]
 5233 001a 9969     		ldr	r1, [r3, #24]
 5234 001c 1A69     		ldr	r2, [r3, #16]
 5235 001e 0191     		str	r1, [sp, #4]
 5236 0020 0239     		sub	r1, r1, #2
 5237 0022 8A42     		cmp	r2, r1
 5238 0024 02D8     		bhi	.L594
3094:.\sd/ff.c     **** 			*nclst = (*fatfs)->free_clust;
 5239              		.loc 1 3094 0
 5240 0026 039B     		ldr	r3, [sp, #12]
 5241 0028 1A60     		str	r2, [r3]
 5242 002a 5CE0     		b	.L593
 5243              	.L594:
3095:.\sd/ff.c     **** 		} else {
3096:.\sd/ff.c     **** 			/* Get number of free clusters */
3097:.\sd/ff.c     **** 			fat = (*fatfs)->fs_type;
 5244              		.loc 1 3097 0
 5245 002c 1A78     		ldrb	r2, [r3]
 5246 002e 0292     		str	r2, [sp, #8]
 5247              	.LVL687:
3098:.\sd/ff.c     **** 			n = 0;
3099:.\sd/ff.c     **** 			if (fat == FS_FAT12) {
 5248              		.loc 1 3099 0
 5249 0030 012A     		cmp	r2, #1
 5250 0032 12D1     		bne	.L595
 5251 0034 0227     		mov	r7, #2
 5252 0036 051C     		mov	r5, r0
 5253              	.LVL688:
 5254              	.L598:
3100:.\sd/ff.c     **** 				clst = 2;
3101:.\sd/ff.c     **** 				do {
3102:.\sd/ff.c     **** 					stat = get_fat(*fatfs, clst);
 5255              		.loc 1 3102 0
 5256 0038 3068     		ldr	r0, [r6]
 5257 003a 391C     		mov	r1, r7
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 157


 5258 003c FFF7FEFF 		bl	get_fat
 5259              	.LVL689:
3103:.\sd/ff.c     **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 5260              		.loc 1 3103 0
 5261 0040 431C     		add	r3, r0, #1
 5262 0042 42D0     		beq	.L606
3104:.\sd/ff.c     **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 5263              		.loc 1 3104 0
 5264 0044 0128     		cmp	r0, #1
 5265 0046 42D0     		beq	.L607
3105:.\sd/ff.c     **** 					if (stat == 0) n++;
 5266              		.loc 1 3105 0
 5267 0048 4342     		neg	r3, r0
 5268 004a 4341     		adc	r3, r3, r0
 5269              	.LVL690:
 5270 004c ED18     		add	r5, r5, r3
 5271              	.LVL691:
3106:.\sd/ff.c     **** 				} while (++clst < (*fatfs)->n_fatent);
 5272              		.loc 1 3106 0
 5273 004e 3368     		ldr	r3, [r6]
 5274 0050 0137     		add	r7, r7, #1
 5275              	.LVL692:
 5276 0052 9B69     		ldr	r3, [r3, #24]
 5277 0054 9F42     		cmp	r7, r3
 5278 0056 EFD3     		bcc	.L598
 5279 0058 3CE0     		b	.L596
 5280              	.LVL693:
 5281              	.L595:
3107:.\sd/ff.c     **** 			} else {
3108:.\sd/ff.c     **** 				clst = (*fatfs)->n_fatent;
3109:.\sd/ff.c     **** 				sect = (*fatfs)->fatbase;
 5282              		.loc 1 3109 0
 5283 005a 1B6A     		ldr	r3, [r3, #32]
3110:.\sd/ff.c     **** 				i = 0; p = 0;
 5284              		.loc 1 3110 0
 5285 005c 011C     		mov	r1, r0
3109:.\sd/ff.c     **** 				i = 0; p = 0;
 5286              		.loc 1 3109 0
 5287 005e 9C46     		mov	ip, r3
 5288              	.LVL694:
3098:.\sd/ff.c     **** 			if (fat == FS_FAT12) {
 5289              		.loc 1 3098 0
 5290 0060 051C     		mov	r5, r0
 5291              		.loc 1 3110 0
 5292 0062 031C     		mov	r3, r0
 5293              	.LVL695:
 5294              	.L604:
3111:.\sd/ff.c     **** 				do {
3112:.\sd/ff.c     **** 					if (!i) {
 5295              		.loc 1 3112 0
 5296 0064 0029     		cmp	r1, #0
 5297 0066 0CD1     		bne	.L599
 5298              	.LVL696:
3113:.\sd/ff.c     **** 						res = move_window(*fatfs, sect++);
 5299              		.loc 1 3113 0
 5300 0068 6346     		mov	r3, ip
 5301 006a 3068     		ldr	r0, [r6]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 158


 5302 006c 6146     		mov	r1, ip
 5303 006e 5F1C     		add	r7, r3, #1
 5304              	.LVL697:
 5305 0070 FFF7FEFF 		bl	move_window
 5306              	.LVL698:
3114:.\sd/ff.c     **** 						if (res != FR_OK) break;
 5307              		.loc 1 3114 0
 5308 0074 0028     		cmp	r0, #0
 5309 0076 2CD1     		bne	.L608
 5310              	.LVL699:
3115:.\sd/ff.c     **** 						p = (*fatfs)->win;
3116:.\sd/ff.c     **** 						i = SS(*fatfs);
 5311              		.loc 1 3116 0
 5312 0078 8021     		mov	r1, #128
3113:.\sd/ff.c     **** 						if (res != FR_OK) break;
 5313              		.loc 1 3113 0
 5314 007a BC46     		mov	ip, r7
3115:.\sd/ff.c     **** 						p = (*fatfs)->win;
 5315              		.loc 1 3115 0
 5316 007c 3368     		ldr	r3, [r6]
 5317              		.loc 1 3116 0
 5318 007e 8900     		lsl	r1, r1, #2
3115:.\sd/ff.c     **** 						p = (*fatfs)->win;
 5319              		.loc 1 3115 0
 5320 0080 3033     		add	r3, r3, #48
 5321              	.LVL700:
 5322              	.L599:
 5323 0082 5A78     		ldrb	r2, [r3, #1]
 5324 0084 1F78     		ldrb	r7, [r3]
 5325 0086 0492     		str	r2, [sp, #16]
3117:.\sd/ff.c     **** 					}
3118:.\sd/ff.c     **** 					if (fat == FS_FAT16) {
 5326              		.loc 1 3118 0
 5327 0088 029A     		ldr	r2, [sp, #8]
 5328 008a 022A     		cmp	r2, #2
 5329 008c 08D1     		bne	.L600
3119:.\sd/ff.c     **** 						if (LD_WORD(p) == 0) n++;
 5330              		.loc 1 3119 0
 5331 008e 049A     		ldr	r2, [sp, #16]
3120:.\sd/ff.c     **** 						p += 2; i -= 2;
 5332              		.loc 1 3120 0
 5333 0090 0233     		add	r3, r3, #2
3119:.\sd/ff.c     **** 						if (LD_WORD(p) == 0) n++;
 5334              		.loc 1 3119 0
 5335 0092 1202     		lsl	r2, r2, #8
 5336 0094 1743     		orr	r7, r2
 5337 0096 7A42     		neg	r2, r7
 5338 0098 7A41     		adc	r2, r2, r7
 5339              		.loc 1 3120 0
 5340 009a 0239     		sub	r1, r1, #2
 5341              	.LVL701:
3119:.\sd/ff.c     **** 						if (LD_WORD(p) == 0) n++;
 5342              		.loc 1 3119 0
 5343 009c AD18     		add	r5, r5, r2
 5344              	.LVL702:
 5345 009e 0EE0     		b	.L602
 5346              	.L600:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 159


3121:.\sd/ff.c     **** 					} else {
3122:.\sd/ff.c     **** 						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
 5347              		.loc 1 3122 0
 5348 00a0 D878     		ldrb	r0, [r3, #3]
 5349 00a2 9A78     		ldrb	r2, [r3, #2]
 5350 00a4 0006     		lsl	r0, r0, #24
 5351 00a6 1204     		lsl	r2, r2, #16
 5352 00a8 0243     		orr	r2, r0
 5353 00aa 0498     		ldr	r0, [sp, #16]
 5354 00ac 3A43     		orr	r2, r7
 5355 00ae 0702     		lsl	r7, r0, #8
 5356 00b0 3A43     		orr	r2, r7
 5357 00b2 1001     		lsl	r0, r2, #4
 5358 00b4 4242     		neg	r2, r0
 5359 00b6 4241     		adc	r2, r2, r0
3123:.\sd/ff.c     **** 						p += 4; i -= 4;
 5360              		.loc 1 3123 0
 5361 00b8 0433     		add	r3, r3, #4
3122:.\sd/ff.c     **** 						p += 4; i -= 4;
 5362              		.loc 1 3122 0
 5363 00ba AD18     		add	r5, r5, r2
 5364              	.LVL703:
 5365              		.loc 1 3123 0
 5366 00bc 0439     		sub	r1, r1, #4
 5367              	.LVL704:
 5368              	.L602:
3124:.\sd/ff.c     **** 					}
3125:.\sd/ff.c     **** 				} while (--clst);
 5369              		.loc 1 3125 0
 5370 00be 019A     		ldr	r2, [sp, #4]
 5371 00c0 013A     		sub	r2, r2, #1
 5372 00c2 0192     		str	r2, [sp, #4]
 5373              	.LVL705:
 5374 00c4 002A     		cmp	r2, #0
 5375 00c6 CDD1     		bne	.L604
 5376 00c8 04E0     		b	.L596
 5377              	.LVL706:
 5378              	.L606:
3103:.\sd/ff.c     **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 5379              		.loc 1 3103 0
 5380 00ca 0124     		mov	r4, #1
 5381 00cc 02E0     		b	.L596
 5382              	.L607:
3104:.\sd/ff.c     **** 					if (stat == 0) n++;
 5383              		.loc 1 3104 0
 5384 00ce 0224     		mov	r4, #2
 5385 00d0 00E0     		b	.L596
 5386              	.LVL707:
 5387              	.L608:
 5388 00d2 041C     		mov	r4, r0
 5389              	.LVL708:
 5390              	.L596:
3126:.\sd/ff.c     **** 			}
3127:.\sd/ff.c     **** 			(*fatfs)->free_clust = n;
 5391              		.loc 1 3127 0
 5392 00d4 3368     		ldr	r3, [r6]
3128:.\sd/ff.c     **** 			if (fat == FS_FAT32) (*fatfs)->fsi_flag = 1;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 160


 5393              		.loc 1 3128 0
 5394 00d6 029A     		ldr	r2, [sp, #8]
3127:.\sd/ff.c     **** 			if (fat == FS_FAT32) (*fatfs)->fsi_flag = 1;
 5395              		.loc 1 3127 0
 5396 00d8 1D61     		str	r5, [r3, #16]
 5397              		.loc 1 3128 0
 5398 00da 032A     		cmp	r2, #3
 5399 00dc 01D1     		bne	.L605
 5400              		.loc 1 3128 0 is_stmt 0 discriminator 1
 5401 00de 023A     		sub	r2, r2, #2
 5402 00e0 5A71     		strb	r2, [r3, #5]
 5403              	.L605:
3129:.\sd/ff.c     **** 			*nclst = n;
 5404              		.loc 1 3129 0 is_stmt 1
 5405 00e2 039B     		ldr	r3, [sp, #12]
 5406 00e4 1D60     		str	r5, [r3]
 5407              	.LVL709:
 5408              	.L593:
3130:.\sd/ff.c     **** 		}
3131:.\sd/ff.c     **** 	}
3132:.\sd/ff.c     **** 	LEAVE_FF(*fatfs, res);
3133:.\sd/ff.c     **** }
 5409              		.loc 1 3133 0
 5410 00e6 201C     		mov	r0, r4
 5411 00e8 07B0     		add	sp, sp, #28
 5412              		@ sp needed
 5413              	.LVL710:
 5414              	.LVL711:
 5415 00ea F0BD     		pop	{r4, r5, r6, r7, pc}
 5416              		.cfi_endproc
 5417              	.LFE38:
 5418              		.size	f_getfree, .-f_getfree
 5419              		.section	.text.f_truncate,"ax",%progbits
 5420              		.align	1
 5421              		.global	f_truncate
 5422              		.code	16
 5423              		.thumb_func
 5424              		.type	f_truncate, %function
 5425              	f_truncate:
 5426              	.LFB39:
3134:.\sd/ff.c     **** 
3135:.\sd/ff.c     **** 
3136:.\sd/ff.c     **** 
3137:.\sd/ff.c     **** 
3138:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3139:.\sd/ff.c     **** /* Truncate File                                                         */
3140:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3141:.\sd/ff.c     **** 
3142:.\sd/ff.c     **** FRESULT f_truncate (
3143:.\sd/ff.c     **** 	FIL *fp		/* Pointer to the file object */
3144:.\sd/ff.c     **** )
3145:.\sd/ff.c     **** {
 5427              		.loc 1 3145 0
 5428              		.cfi_startproc
 5429              	.LVL712:
 5430 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5431              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 161


 5432              		.cfi_offset 3, -24
 5433              		.cfi_offset 4, -20
 5434              		.cfi_offset 5, -16
 5435              		.cfi_offset 6, -12
 5436              		.cfi_offset 7, -8
 5437              		.cfi_offset 14, -4
 5438              		.loc 1 3145 0
 5439 0002 041C     		mov	r4, r0
3146:.\sd/ff.c     **** 	FRESULT res;
3147:.\sd/ff.c     **** 	DWORD ncl;
3148:.\sd/ff.c     **** 
3149:.\sd/ff.c     **** 
3150:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 5440              		.loc 1 3150 0
 5441 0004 8188     		ldrh	r1, [r0, #4]
 5442 0006 0068     		ldr	r0, [r0]
 5443              	.LVL713:
 5444 0008 FFF7FEFF 		bl	validate
 5445              	.LVL714:
 5446 000c 051E     		sub	r5, r0, #0
 5447              	.LVL715:
3151:.\sd/ff.c     **** 	if (res == FR_OK) {
 5448              		.loc 1 3151 0
 5449 000e 3ED1     		bne	.L626
3152:.\sd/ff.c     **** 		if (fp->flag & FA__ERROR) {			/* Check abort flag */
 5450              		.loc 1 3152 0
 5451 0010 A379     		ldrb	r3, [r4, #6]
 5452 0012 0227     		mov	r7, #2
 5453 0014 5AB2     		sxtb	r2, r3
 5454 0016 002A     		cmp	r2, #0
 5455 0018 33DB     		blt	.L621
3153:.\sd/ff.c     **** 			res = FR_INT_ERR;
3154:.\sd/ff.c     **** 		} else {
3155:.\sd/ff.c     **** 			if (!(fp->flag & FA_WRITE))		/* Check access mode */
 5456              		.loc 1 3155 0
 5457 001a 3B42     		tst	r3, r7
 5458 001c 33D0     		beq	.L622
 5459              	.LVL716:
3156:.\sd/ff.c     **** 				res = FR_DENIED;
3157:.\sd/ff.c     **** 		}
3158:.\sd/ff.c     **** 	}
3159:.\sd/ff.c     **** 	if (res == FR_OK) {
3160:.\sd/ff.c     **** 		if (fp->fsize > fp->fptr) {
 5460              		.loc 1 3160 0
 5461 001e A668     		ldr	r6, [r4, #8]
 5462 0020 E268     		ldr	r2, [r4, #12]
 5463 0022 B242     		cmp	r2, r6
 5464 0024 33D9     		bls	.L626
3161:.\sd/ff.c     **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
3162:.\sd/ff.c     **** 			fp->flag |= FA__WRITTEN;
 5465              		.loc 1 3162 0
 5466 0026 2022     		mov	r2, #32
 5467 0028 1343     		orr	r3, r2
3161:.\sd/ff.c     **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
 5468              		.loc 1 3161 0
 5469 002a E660     		str	r6, [r4, #12]
 5470              		.loc 1 3162 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 162


 5471 002c A371     		strb	r3, [r4, #6]
3163:.\sd/ff.c     **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
3164:.\sd/ff.c     **** 				res = remove_chain(fp->fs, fp->sclust);
 5472              		.loc 1 3164 0
 5473 002e 2068     		ldr	r0, [r4]
3163:.\sd/ff.c     **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 5474              		.loc 1 3163 0
 5475 0030 002E     		cmp	r6, #0
 5476 0032 05D1     		bne	.L612
 5477              		.loc 1 3164 0
 5478 0034 2169     		ldr	r1, [r4, #16]
 5479 0036 FFF7FEFF 		bl	remove_chain
 5480              	.LVL717:
3165:.\sd/ff.c     **** 				fp->sclust = 0;
 5481              		.loc 1 3165 0
 5482 003a 2661     		str	r6, [r4, #16]
3164:.\sd/ff.c     **** 				fp->sclust = 0;
 5483              		.loc 1 3164 0
 5484 003c 051C     		mov	r5, r0
 5485              	.LVL718:
 5486 003e 18E0     		b	.L613
 5487              	.LVL719:
 5488              	.L612:
3166:.\sd/ff.c     **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
3167:.\sd/ff.c     **** 				ncl = get_fat(fp->fs, fp->clust);
 5489              		.loc 1 3167 0
 5490 0040 6169     		ldr	r1, [r4, #20]
 5491 0042 FFF7FEFF 		bl	get_fat
 5492              	.LVL720:
 5493 0046 061C     		mov	r6, r0
 5494              	.LVL721:
3168:.\sd/ff.c     **** 				res = FR_OK;
3169:.\sd/ff.c     **** 				if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
 5495              		.loc 1 3169 0
 5496 0048 431C     		add	r3, r0, #1
 5497 004a 1ED0     		beq	.L623
3170:.\sd/ff.c     **** 				if (ncl == 1) res = FR_INT_ERR;
 5498              		.loc 1 3170 0
 5499 004c 0128     		cmp	r0, #1
 5500 004e 01D1     		bne	.L630
 5501 0050 3D1C     		mov	r5, r7
 5502 0052 10E0     		b	.L619
 5503              	.L630:
3171:.\sd/ff.c     **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 5504              		.loc 1 3171 0
 5505 0054 2068     		ldr	r0, [r4]
 5506              	.LVL722:
 5507 0056 8369     		ldr	r3, [r0, #24]
 5508 0058 9E42     		cmp	r6, r3
 5509 005a 18D2     		bcs	.L626
3172:.\sd/ff.c     **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 5510              		.loc 1 3172 0
 5511 005c 6169     		ldr	r1, [r4, #20]
 5512 005e 0D4A     		ldr	r2, .L631
 5513 0060 FFF7FEFF 		bl	put_fat
 5514              	.LVL723:
 5515 0064 051E     		sub	r5, r0, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 163


 5516              	.LVL724:
3173:.\sd/ff.c     **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 5517              		.loc 1 3173 0
 5518 0066 06D1     		bne	.L619
 5519              		.loc 1 3173 0 is_stmt 0 discriminator 1
 5520 0068 2068     		ldr	r0, [r4]
 5521              	.LVL725:
 5522 006a 311C     		mov	r1, r6
 5523 006c FFF7FEFF 		bl	remove_chain
 5524              	.LVL726:
 5525 0070 051C     		mov	r5, r0
 5526              	.LVL727:
 5527              	.L613:
3174:.\sd/ff.c     **** 				}
3175:.\sd/ff.c     **** 			}
3176:.\sd/ff.c     **** 		}
3177:.\sd/ff.c     **** 		if (res != FR_OK) fp->flag |= FA__ERROR;
 5528              		.loc 1 3177 0 is_stmt 1
 5529 0072 002D     		cmp	r5, #0
 5530 0074 0BD0     		beq	.L626
 5531              	.LVL728:
 5532              	.L619:
 5533              		.loc 1 3177 0 is_stmt 0 discriminator 1
 5534 0076 8022     		mov	r2, #128
 5535 0078 A379     		ldrb	r3, [r4, #6]
 5536 007a 5242     		neg	r2, r2
 5537 007c 1343     		orr	r3, r2
 5538 007e A371     		strb	r3, [r4, #6]
 5539 0080 05E0     		b	.L626
 5540              	.LVL729:
 5541              	.L621:
3153:.\sd/ff.c     **** 		} else {
 5542              		.loc 1 3153 0 is_stmt 1
 5543 0082 3D1C     		mov	r5, r7
 5544 0084 03E0     		b	.L626
 5545              	.L622:
3156:.\sd/ff.c     **** 		}
 5546              		.loc 1 3156 0
 5547 0086 0725     		mov	r5, #7
 5548              	.LVL730:
 5549 0088 01E0     		b	.L626
 5550              	.LVL731:
 5551              	.L623:
3169:.\sd/ff.c     **** 				if (ncl == 1) res = FR_INT_ERR;
 5552              		.loc 1 3169 0
 5553 008a 0125     		mov	r5, #1
 5554 008c F3E7     		b	.L619
 5555              	.LVL732:
 5556              	.L626:
3178:.\sd/ff.c     **** 	}
3179:.\sd/ff.c     **** 
3180:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, res);
3181:.\sd/ff.c     **** }
 5557              		.loc 1 3181 0
 5558 008e 281C     		mov	r0, r5
 5559              		@ sp needed
 5560              	.LVL733:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 164


 5561 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5562              	.L632:
 5563 0092 C046     		.align	2
 5564              	.L631:
 5565 0094 FFFFFF0F 		.word	268435455
 5566              		.cfi_endproc
 5567              	.LFE39:
 5568              		.size	f_truncate, .-f_truncate
 5569              		.section	.text.f_unlink,"ax",%progbits
 5570              		.align	1
 5571              		.global	f_unlink
 5572              		.code	16
 5573              		.thumb_func
 5574              		.type	f_unlink, %function
 5575              	f_unlink:
 5576              	.LFB40:
3182:.\sd/ff.c     **** 
3183:.\sd/ff.c     **** 
3184:.\sd/ff.c     **** 
3185:.\sd/ff.c     **** 
3186:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3187:.\sd/ff.c     **** /* Delete a File or Directory                                            */
3188:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3189:.\sd/ff.c     **** 
3190:.\sd/ff.c     **** FRESULT f_unlink (
3191:.\sd/ff.c     **** 	const TCHAR *path		/* Pointer to the file or directory path */
3192:.\sd/ff.c     **** )
3193:.\sd/ff.c     **** {
 5577              		.loc 1 3193 0
 5578              		.cfi_startproc
 5579              	.LVL734:
 5580 0000 30B5     		push	{r4, r5, lr}
 5581              		.cfi_def_cfa_offset 12
 5582              		.cfi_offset 4, -12
 5583              		.cfi_offset 5, -8
 5584              		.cfi_offset 14, -4
 5585 0002 95B0     		sub	sp, sp, #84
 5586              		.cfi_def_cfa_offset 96
 5587              		.loc 1 3193 0
 5588 0004 0190     		str	r0, [sp, #4]
3194:.\sd/ff.c     **** 	FRESULT res;
3195:.\sd/ff.c     **** 	DIR dj, sdj;
3196:.\sd/ff.c     **** 	BYTE *dir;
3197:.\sd/ff.c     **** 	DWORD dclst;
3198:.\sd/ff.c     **** 	DEF_NAMEBUF;
3199:.\sd/ff.c     **** 
3200:.\sd/ff.c     **** 
3201:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 5589              		.loc 1 3201 0
 5590 0006 06A9     		add	r1, sp, #24
 5591 0008 01A8     		add	r0, sp, #4
 5592              	.LVL735:
 5593 000a 0122     		mov	r2, #1
 5594 000c FFF7FEFF 		bl	chk_mounted
 5595              	.LVL736:
 5596 0010 041E     		sub	r4, r0, #0
 5597              	.LVL737:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 165


3202:.\sd/ff.c     **** 	if (res == FR_OK) {
 5598              		.loc 1 3202 0
 5599 0012 4FD1     		bne	.L648
3203:.\sd/ff.c     **** 		INIT_BUF(dj);
 5600              		.loc 1 3203 0
 5601 0014 03AB     		add	r3, sp, #12
3204:.\sd/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the file path */
 5602              		.loc 1 3204 0
 5603 0016 06A8     		add	r0, sp, #24
 5604              	.LVL738:
 5605 0018 0199     		ldr	r1, [sp, #4]
3203:.\sd/ff.c     **** 		INIT_BUF(dj);
 5606              		.loc 1 3203 0
 5607 001a 0C93     		str	r3, [sp, #48]
 5608              		.loc 1 3204 0
 5609 001c FFF7FEFF 		bl	follow_path
 5610              	.LVL739:
 5611 0020 041E     		sub	r4, r0, #0
 5612              	.LVL740:
3205:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3206:.\sd/ff.c     **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
3207:.\sd/ff.c     **** #if _FS_SHARE
3208:.\sd/ff.c     **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open file */
 5613              		.loc 1 3208 0
 5614 0022 47D1     		bne	.L648
 5615              		.loc 1 3208 0 is_stmt 0 discriminator 1
 5616 0024 06A8     		add	r0, sp, #24
 5617              	.LVL741:
 5618 0026 0221     		mov	r1, #2
 5619 0028 FFF7FEFF 		bl	chk_lock
 5620              	.LVL742:
 5621 002c 041E     		sub	r4, r0, #0
 5622              	.LVL743:
3209:.\sd/ff.c     **** #endif
3210:.\sd/ff.c     **** 		if (res == FR_OK) {					/* The object is accessible */
 5623              		.loc 1 3210 0 is_stmt 1 discriminator 1
 5624 002e 41D1     		bne	.L648
3211:.\sd/ff.c     **** 			dir = dj.dir;
 5625              		.loc 1 3211 0
 5626 0030 0B9A     		ldr	r2, [sp, #44]
 5627              	.LVL744:
3212:.\sd/ff.c     **** 			if (!dir) {
 5628              		.loc 1 3212 0
 5629 0032 002A     		cmp	r2, #0
 5630 0034 04D0     		beq	.L641
3213:.\sd/ff.c     **** 				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
3214:.\sd/ff.c     **** 			} else {
3215:.\sd/ff.c     **** 				if (dir[DIR_Attr] & AM_RDO)
 5631              		.loc 1 3215 0
 5632 0036 D37A     		ldrb	r3, [r2, #11]
 5633 0038 DB07     		lsl	r3, r3, #31
 5634 003a 02D5     		bpl	.L635
3216:.\sd/ff.c     **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 5635              		.loc 1 3216 0
 5636 003c 0734     		add	r4, r4, #7
 5637 003e 00E0     		b	.L635
 5638              	.L641:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 166


3213:.\sd/ff.c     **** 				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
 5639              		.loc 1 3213 0
 5640 0040 0624     		mov	r4, #6
 5641              	.L635:
 5642              	.LVL745:
3217:.\sd/ff.c     **** 			}
3218:.\sd/ff.c     **** 			dclst = LD_CLUST(dir);
 5643              		.loc 1 3218 0
 5644 0042 517D     		ldrb	r1, [r2, #21]
 5645 0044 107D     		ldrb	r0, [r2, #20]
 5646 0046 D57E     		ldrb	r5, [r2, #27]
 5647 0048 937E     		ldrb	r3, [r2, #26]
 5648              	.LVL746:
3219:.\sd/ff.c     **** 			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
 5649              		.loc 1 3219 0
 5650 004a 002C     		cmp	r4, #0
 5651 004c 32D1     		bne	.L648
 5652              	.LVL747:
3218:.\sd/ff.c     **** 			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
 5653              		.loc 1 3218 0 discriminator 1
 5654 004e 0902     		lsl	r1, r1, #8
 5655              	.LVL748:
 5656 0050 2D02     		lsl	r5, r5, #8
 5657              	.LVL749:
 5658 0052 1D43     		orr	r5, r3
 5659 0054 0143     		orr	r1, r0
 5660              		.loc 1 3219 0 discriminator 1
 5661 0056 D37A     		ldrb	r3, [r2, #11]
 5662              	.LVL750:
3218:.\sd/ff.c     **** 			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
 5663              		.loc 1 3218 0 discriminator 1
 5664 0058 0904     		lsl	r1, r1, #16
 5665 005a 0D43     		orr	r5, r1
 5666              		.loc 1 3219 0 discriminator 1
 5667 005c DB06     		lsl	r3, r3, #27
 5668 005e 15D5     		bpl	.L637
3220:.\sd/ff.c     **** 				if (dclst < 2) {
3221:.\sd/ff.c     **** 					res = FR_INT_ERR;
 5669              		.loc 1 3221 0
 5670 0060 0234     		add	r4, r4, #2
3220:.\sd/ff.c     **** 				if (dclst < 2) {
 5671              		.loc 1 3220 0
 5672 0062 012D     		cmp	r5, #1
 5673 0064 26D9     		bls	.L648
3222:.\sd/ff.c     **** 				} else {
3223:.\sd/ff.c     **** 					mem_cpy(&sdj, &dj, sizeof(DIR));	/* Check if the sub-dir is empty or not */
 5674              		.loc 1 3223 0
 5675 0066 0DA8     		add	r0, sp, #52
 5676              	.LVL751:
 5677 0068 06A9     		add	r1, sp, #24
 5678 006a 1C22     		mov	r2, #28
 5679              	.LVL752:
 5680 006c FFF7FEFF 		bl	mem_cpy
 5681              	.LVL753:
3224:.\sd/ff.c     **** 					sdj.sclust = dclst;
3225:.\sd/ff.c     **** 					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
 5682              		.loc 1 3225 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 167


 5683 0070 211C     		mov	r1, r4
 5684 0072 0DA8     		add	r0, sp, #52
3224:.\sd/ff.c     **** 					sdj.sclust = dclst;
 5685              		.loc 1 3224 0
 5686 0074 0F95     		str	r5, [sp, #60]
 5687              		.loc 1 3225 0
 5688 0076 FFF7FEFF 		bl	dir_sdi
 5689              	.LVL754:
 5690 007a 041E     		sub	r4, r0, #0
 5691              	.LVL755:
3226:.\sd/ff.c     **** 					if (res == FR_OK) {
 5692              		.loc 1 3226 0
 5693 007c 1AD1     		bne	.L648
3227:.\sd/ff.c     **** 						res = dir_read(&sdj);
 5694              		.loc 1 3227 0
 5695 007e 0DA8     		add	r0, sp, #52
 5696              	.LVL756:
 5697 0080 FFF7FEFF 		bl	dir_read
 5698              	.LVL757:
 5699 0084 041E     		sub	r4, r0, #0
 5700              	.LVL758:
3228:.\sd/ff.c     **** 						if (res == FR_OK			/* Not empty dir */
 5701              		.loc 1 3228 0
 5702 0086 14D0     		beq	.L643
3229:.\sd/ff.c     **** #if _FS_RPATH
3230:.\sd/ff.c     **** 						|| dclst == sdj.fs->cdir	/* Current dir */
3231:.\sd/ff.c     **** #endif
3232:.\sd/ff.c     **** 						) res = FR_DENIED;
3233:.\sd/ff.c     **** 						if (res == FR_NO_FILE) res = FR_OK;	/* Empty */
 5703              		.loc 1 3233 0
 5704 0088 0428     		cmp	r0, #4
 5705 008a 13D1     		bne	.L648
 5706              	.LVL759:
 5707              	.L637:
3234:.\sd/ff.c     **** 					}
3235:.\sd/ff.c     **** 				}
3236:.\sd/ff.c     **** 			}
3237:.\sd/ff.c     **** 			if (res == FR_OK) {
3238:.\sd/ff.c     **** 				res = dir_remove(&dj);		/* Remove the directory entry */
 5708              		.loc 1 3238 0
 5709 008c 06A8     		add	r0, sp, #24
 5710 008e FFF7FEFF 		bl	dir_remove
 5711              	.LVL760:
 5712 0092 041E     		sub	r4, r0, #0
 5713              	.LVL761:
3239:.\sd/ff.c     **** 				if (res == FR_OK) {
 5714              		.loc 1 3239 0
 5715 0094 0ED1     		bne	.L648
3240:.\sd/ff.c     **** 					if (dclst)				/* Remove the cluster chain if exist */
 5716              		.loc 1 3240 0
 5717 0096 002D     		cmp	r5, #0
 5718 0098 04D1     		bne	.L638
 5719              	.LVL762:
 5720              	.L639:
3241:.\sd/ff.c     **** 						res = remove_chain(dj.fs, dclst);
3242:.\sd/ff.c     **** 					if (res == FR_OK) res = sync(dj.fs);
 5721              		.loc 1 3242 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 168


 5722 009a 0698     		ldr	r0, [sp, #24]
 5723 009c FFF7FEFF 		bl	sync
 5724              	.LVL763:
 5725 00a0 041C     		mov	r4, r0
 5726              	.LVL764:
 5727 00a2 07E0     		b	.L648
 5728              	.L638:
3241:.\sd/ff.c     **** 						res = remove_chain(dj.fs, dclst);
 5729              		.loc 1 3241 0
 5730 00a4 0698     		ldr	r0, [sp, #24]
 5731              	.LVL765:
 5732 00a6 291C     		mov	r1, r5
 5733 00a8 FFF7FEFF 		bl	remove_chain
 5734              	.LVL766:
 5735 00ac 041E     		sub	r4, r0, #0
 5736              	.LVL767:
 5737              		.loc 1 3242 0
 5738 00ae 01D1     		bne	.L648
 5739 00b0 F3E7     		b	.L639
 5740              	.L643:
3232:.\sd/ff.c     **** 						if (res == FR_NO_FILE) res = FR_OK;	/* Empty */
 5741              		.loc 1 3232 0
 5742 00b2 0724     		mov	r4, #7
 5743              	.LVL768:
 5744              	.L648:
3243:.\sd/ff.c     **** 				}
3244:.\sd/ff.c     **** 			}
3245:.\sd/ff.c     **** 		}
3246:.\sd/ff.c     **** 		FREE_BUF();
3247:.\sd/ff.c     **** 	}
3248:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3249:.\sd/ff.c     **** }
 5745              		.loc 1 3249 0
 5746 00b4 201C     		mov	r0, r4
 5747 00b6 15B0     		add	sp, sp, #84
 5748              		@ sp needed
 5749 00b8 30BD     		pop	{r4, r5, pc}
 5750              		.cfi_endproc
 5751              	.LFE40:
 5752              		.size	f_unlink, .-f_unlink
 5753              		.section	.text.f_mkdir,"ax",%progbits
 5754              		.align	1
 5755              		.global	f_mkdir
 5756              		.code	16
 5757              		.thumb_func
 5758              		.type	f_mkdir, %function
 5759              	f_mkdir:
 5760              	.LFB41:
3250:.\sd/ff.c     **** 
3251:.\sd/ff.c     **** 
3252:.\sd/ff.c     **** 
3253:.\sd/ff.c     **** 
3254:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3255:.\sd/ff.c     **** /* Create a Directory                                                    */
3256:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3257:.\sd/ff.c     **** 
3258:.\sd/ff.c     **** FRESULT f_mkdir (
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 169


3259:.\sd/ff.c     **** 	const TCHAR *path		/* Pointer to the directory path */
3260:.\sd/ff.c     **** )
3261:.\sd/ff.c     **** {
 5761              		.loc 1 3261 0
 5762              		.cfi_startproc
 5763              	.LVL769:
 5764 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5765              		.cfi_def_cfa_offset 20
 5766              		.cfi_offset 4, -20
 5767              		.cfi_offset 5, -16
 5768              		.cfi_offset 6, -12
 5769              		.cfi_offset 7, -8
 5770              		.cfi_offset 14, -4
 5771 0002 97B0     		sub	sp, sp, #92
 5772              		.cfi_def_cfa_offset 112
 5773              		.loc 1 3261 0
 5774 0004 0B90     		str	r0, [sp, #44]
3262:.\sd/ff.c     **** 	FRESULT res;
3263:.\sd/ff.c     **** 	DIR dj;
3264:.\sd/ff.c     **** 	BYTE *dir, n;
3265:.\sd/ff.c     **** 	DWORD dsc, dcl, pcl, tim = get_fattime();
 5775              		.loc 1 3265 0
 5776 0006 FFF7FEFF 		bl	get_fattime
 5777              	.LVL770:
3266:.\sd/ff.c     **** 	DEF_NAMEBUF;
3267:.\sd/ff.c     **** 
3268:.\sd/ff.c     **** 
3269:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 5778              		.loc 1 3269 0
 5779 000a 0FA9     		add	r1, sp, #60
3265:.\sd/ff.c     **** 	DEF_NAMEBUF;
 5780              		.loc 1 3265 0
 5781 000c 061C     		mov	r6, r0
 5782              	.LVL771:
 5783              		.loc 1 3269 0
 5784 000e 0122     		mov	r2, #1
 5785 0010 0BA8     		add	r0, sp, #44
 5786              	.LVL772:
 5787 0012 FFF7FEFF 		bl	chk_mounted
 5788              	.LVL773:
 5789 0016 041E     		sub	r4, r0, #0
 5790              	.LVL774:
3270:.\sd/ff.c     **** 	if (res == FR_OK) {
 5791              		.loc 1 3270 0
 5792 0018 00D0     		beq	.LCB6374
 5793 001a E3E0     		b	.L679	@long jump
 5794              	.LCB6374:
3271:.\sd/ff.c     **** 		INIT_BUF(dj);
 5795              		.loc 1 3271 0
 5796 001c 0CAB     		add	r3, sp, #48
3272:.\sd/ff.c     **** 		res = follow_path(&dj, path);			/* Follow the file path */
 5797              		.loc 1 3272 0
 5798 001e 0FA8     		add	r0, sp, #60
 5799              	.LVL775:
 5800 0020 0B99     		ldr	r1, [sp, #44]
3271:.\sd/ff.c     **** 		INIT_BUF(dj);
 5801              		.loc 1 3271 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 170


 5802 0022 1593     		str	r3, [sp, #84]
 5803              		.loc 1 3272 0
 5804 0024 FFF7FEFF 		bl	follow_path
 5805              	.LVL776:
 5806 0028 041E     		sub	r4, r0, #0
 5807              	.LVL777:
3273:.\sd/ff.c     **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 5808              		.loc 1 3273 0
 5809 002a 12D0     		beq	.L675
3274:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NS] & NS_DOT))
3275:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
3276:.\sd/ff.c     **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
 5810              		.loc 1 3276 0
 5811 002c 0428     		cmp	r0, #4
 5812 002e 00D0     		beq	.LCB6388
 5813 0030 D8E0     		b	.L679	@long jump
 5814              	.LCB6388:
3277:.\sd/ff.c     **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
 5815              		.loc 1 3277 0
 5816 0032 0F98     		ldr	r0, [sp, #60]
 5817              	.LVL778:
 5818 0034 0021     		mov	r1, #0
 5819 0036 FFF7FEFF 		bl	create_chain
 5820              	.LVL779:
 5821 003a 051E     		sub	r5, r0, #0
 5822              	.LVL780:
3278:.\sd/ff.c     **** 			res = FR_OK;
3279:.\sd/ff.c     **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
 5823              		.loc 1 3279 0
 5824 003c 03D0     		beq	.L676
3280:.\sd/ff.c     **** 			if (dcl == 1) res = FR_INT_ERR;
 5825              		.loc 1 3280 0
 5826 003e 023C     		sub	r4, r4, #2
 5827 0040 0128     		cmp	r0, #1
 5828 0042 01D0     		beq	.L672
 5829 0044 07E0     		b	.L686
 5830              	.L676:
3279:.\sd/ff.c     **** 			if (dcl == 1) res = FR_INT_ERR;
 5831              		.loc 1 3279 0
 5832 0046 0724     		mov	r4, #7
 5833              	.LVL781:
 5834              	.L672:
3281:.\sd/ff.c     **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
3282:.\sd/ff.c     **** 			if (res == FR_OK)					/* Flush FAT */
3283:.\sd/ff.c     **** 				res = move_window(dj.fs, 0);
3284:.\sd/ff.c     **** 			if (res == FR_OK) {					/* Initialize the new directory table */
3285:.\sd/ff.c     **** 				dsc = clust2sect(dj.fs, dcl);
3286:.\sd/ff.c     **** 				dir = dj.fs->win;
3287:.\sd/ff.c     **** 				mem_set(dir, 0, SS(dj.fs));
3288:.\sd/ff.c     **** 				mem_set(dir+DIR_Name, ' ', 8+3);	/* Create "." entry */
3289:.\sd/ff.c     **** 				dir[DIR_Name] = '.';
3290:.\sd/ff.c     **** 				dir[DIR_Attr] = AM_DIR;
3291:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);
3292:.\sd/ff.c     **** 				ST_CLUST(dir, dcl);
3293:.\sd/ff.c     **** 				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
3294:.\sd/ff.c     **** 				dir[33] = '.'; pcl = dj.sclust;
3295:.\sd/ff.c     **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 171


3296:.\sd/ff.c     **** 					pcl = 0;
3297:.\sd/ff.c     **** 				ST_CLUST(dir+SZ_DIR, pcl);
3298:.\sd/ff.c     **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
3299:.\sd/ff.c     **** 					dj.fs->winsect = dsc++;
3300:.\sd/ff.c     **** 					dj.fs->wflag = 1;
3301:.\sd/ff.c     **** 					res = move_window(dj.fs, 0);
3302:.\sd/ff.c     **** 					if (res != FR_OK) break;
3303:.\sd/ff.c     **** 					mem_set(dir, 0, SS(dj.fs));
3304:.\sd/ff.c     **** 				}
3305:.\sd/ff.c     **** 			}
3306:.\sd/ff.c     **** 			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
3307:.\sd/ff.c     **** 			if (res != FR_OK) {
3308:.\sd/ff.c     **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
 5835              		.loc 1 3308 0
 5836 0048 0F98     		ldr	r0, [sp, #60]
 5837 004a 291C     		mov	r1, r5
 5838 004c FFF7FEFF 		bl	remove_chain
 5839              	.LVL782:
 5840 0050 C8E0     		b	.L679
 5841              	.LVL783:
 5842              	.L675:
3273:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NS] & NS_DOT))
 5843              		.loc 1 3273 0
 5844 0052 0824     		mov	r4, #8
 5845              	.LVL784:
 5846 0054 C6E0     		b	.L679
 5847              	.LVL785:
 5848              	.L686:
3281:.\sd/ff.c     **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 5849              		.loc 1 3281 0
 5850 0056 0124     		mov	r4, #1
 5851 0058 431C     		add	r3, r0, #1
 5852 005a F5D0     		beq	.L672
3283:.\sd/ff.c     **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 5853              		.loc 1 3283 0
 5854 005c 0F98     		ldr	r0, [sp, #60]
 5855              	.LVL786:
 5856 005e 0021     		mov	r1, #0
 5857 0060 FFF7FEFF 		bl	move_window
 5858              	.LVL787:
 5859 0064 041E     		sub	r4, r0, #0
 5860              	.LVL788:
3284:.\sd/ff.c     **** 				dsc = clust2sect(dj.fs, dcl);
 5861              		.loc 1 3284 0
 5862 0066 EFD1     		bne	.L672
3285:.\sd/ff.c     **** 				dir = dj.fs->win;
 5863              		.loc 1 3285 0
 5864 0068 0F9C     		ldr	r4, [sp, #60]
 5865 006a 291C     		mov	r1, r5
 5866 006c 201C     		mov	r0, r4
 5867              	.LVL789:
 5868 006e FFF7FEFF 		bl	clust2sect
 5869              	.LVL790:
3286:.\sd/ff.c     **** 				mem_set(dir, 0, SS(dj.fs));
 5870              		.loc 1 3286 0
 5871 0072 231C     		mov	r3, r4
 5872 0074 3033     		add	r3, r3, #48
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 172


 5873 0076 0093     		str	r3, [sp]
 5874 0078 8C23     		mov	r3, #140
3285:.\sd/ff.c     **** 				dir = dj.fs->win;
 5875              		.loc 1 3285 0
 5876 007a 071C     		mov	r7, r0
 5877              	.LVL791:
 5878 007c 9B00     		lsl	r3, r3, #2
 5879 007e E318     		add	r3, r4, r3
 5880 0080 0893     		str	r3, [sp, #32]
3286:.\sd/ff.c     **** 				mem_set(dir, 0, SS(dj.fs));
 5881              		.loc 1 3286 0
 5882 0082 009B     		ldr	r3, [sp]
 5883              	.LVL792:
 5884              	.L662:
 5885              	.LBB105:
 5886              	.LBB106:
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 5887              		.loc 1 549 0
 5888 0084 089A     		ldr	r2, [sp, #32]
 5889 0086 9342     		cmp	r3, r2
 5890 0088 03D0     		beq	.L687
 5891              	.LVL793:
 550:.\sd/ff.c     **** }
 5892              		.loc 1 550 0
 5893 008a 0022     		mov	r2, #0
 5894 008c 1A70     		strb	r2, [r3]
 5895 008e 0133     		add	r3, r3, #1
 5896              	.LVL794:
 5897 0090 F8E7     		b	.L662
 5898              	.LVL795:
 5899              	.L687:
 5900 0092 221C     		mov	r2, r4
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 5901              		.loc 1 549 0
 5902 0094 009B     		ldr	r3, [sp]
 5903              	.LVL796:
 5904 0096 3B32     		add	r2, r2, #59
 5905              	.L664:
 5906              	.LVL797:
 5907              	.LBE106:
 5908              	.LBE105:
 5909              	.LBB107:
 5910              	.LBB108:
 5911 0098 9342     		cmp	r3, r2
 5912 009a 03D0     		beq	.L688
 5913              	.LVL798:
 550:.\sd/ff.c     **** }
 5914              		.loc 1 550 0
 5915 009c 2021     		mov	r1, #32
 5916 009e 1970     		strb	r1, [r3]
 5917 00a0 0133     		add	r3, r3, #1
 5918              	.LVL799:
 5919 00a2 F9E7     		b	.L664
 5920              	.LVL800:
 5921              	.L688:
 5922              	.LBE108:
 5923              	.LBE107:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 173


3289:.\sd/ff.c     **** 				dir[DIR_Attr] = AM_DIR;
 5924              		.loc 1 3289 0
 5925 00a4 2E23     		mov	r3, #46
 5926              	.LVL801:
 5927 00a6 009A     		ldr	r2, [sp]
3292:.\sd/ff.c     **** 				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
 5928              		.loc 1 3292 0
 5929 00a8 6946     		mov	r1, sp
3289:.\sd/ff.c     **** 				dir[DIR_Attr] = AM_DIR;
 5930              		.loc 1 3289 0
 5931 00aa 1370     		strb	r3, [r2]
3290:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);
 5932              		.loc 1 3290 0
 5933 00ac 231C     		mov	r3, r4
 5934 00ae 1022     		mov	r2, #16
 5935 00b0 3B33     		add	r3, r3, #59
 5936 00b2 1A70     		strb	r2, [r3]
3291:.\sd/ff.c     **** 				ST_CLUST(dir, dcl);
 5937              		.loc 1 3291 0
 5938 00b4 F3B2     		uxtb	r3, r6
 5939 00b6 6A46     		mov	r2, sp
 5940 00b8 0193     		str	r3, [sp, #4]
 5941 00ba 231C     		mov	r3, r4
 5942 00bc 1279     		ldrb	r2, [r2, #4]
 5943 00be 4633     		add	r3, r3, #70
 5944 00c0 1A70     		strb	r2, [r3]
 5945 00c2 B3B2     		uxth	r3, r6
 5946 00c4 1B0A     		lsr	r3, r3, #8
 5947 00c6 6A46     		mov	r2, sp
 5948 00c8 0293     		str	r3, [sp, #8]
 5949 00ca 231C     		mov	r3, r4
 5950 00cc 127A     		ldrb	r2, [r2, #8]
 5951 00ce 4733     		add	r3, r3, #71
 5952 00d0 1A70     		strb	r2, [r3]
 5953 00d2 330C     		lsr	r3, r6, #16
 5954 00d4 DBB2     		uxtb	r3, r3
 5955 00d6 6A46     		mov	r2, sp
 5956 00d8 0393     		str	r3, [sp, #12]
 5957 00da 231C     		mov	r3, r4
 5958 00dc 127B     		ldrb	r2, [r2, #12]
 5959 00de 4833     		add	r3, r3, #72
 5960 00e0 360E     		lsr	r6, r6, #24
 5961              	.LVL802:
 5962 00e2 1A70     		strb	r2, [r3]
 5963 00e4 5E70     		strb	r6, [r3, #1]
3292:.\sd/ff.c     **** 				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
 5964              		.loc 1 3292 0
 5965 00e6 6A46     		mov	r2, sp
 5966 00e8 EBB2     		uxtb	r3, r5
 5967 00ea 0493     		str	r3, [sp, #16]
 5968 00ec 231C     		mov	r3, r4
 5969 00ee 127C     		ldrb	r2, [r2, #16]
 5970 00f0 4A33     		add	r3, r3, #74
 5971 00f2 1A70     		strb	r2, [r3]
 5972 00f4 ABB2     		uxth	r3, r5
 5973 00f6 1B0A     		lsr	r3, r3, #8
 5974 00f8 6A46     		mov	r2, sp
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 174


 5975 00fa 0593     		str	r3, [sp, #20]
 5976 00fc 231C     		mov	r3, r4
 5977 00fe 127D     		ldrb	r2, [r2, #20]
 5978 0100 4B33     		add	r3, r3, #75
 5979 0102 1A70     		strb	r2, [r3]
 5980 0104 2B0C     		lsr	r3, r5, #16
 5981 0106 DAB2     		uxtb	r2, r3
 5982 0108 0692     		str	r2, [sp, #24]
 5983 010a 221C     		mov	r2, r4
 5984 010c 097E     		ldrb	r1, [r1, #24]
 5985 010e 4432     		add	r2, r2, #68
 5986 0110 1170     		strb	r1, [r2]
 5987 0112 1B0A     		lsr	r3, r3, #8
 5988 0114 6A46     		mov	r2, sp
 5989 0116 0793     		str	r3, [sp, #28]
 5990 0118 231C     		mov	r3, r4
3293:.\sd/ff.c     **** 				dir[33] = '.'; pcl = dj.sclust;
 5991              		.loc 1 3293 0
 5992 011a 201C     		mov	r0, r4
 5993              	.LVL803:
3292:.\sd/ff.c     **** 				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
 5994              		.loc 1 3292 0
 5995 011c 127F     		ldrb	r2, [r2, #28]
 5996 011e 4533     		add	r3, r3, #69
 5997 0120 1A70     		strb	r2, [r3]
3293:.\sd/ff.c     **** 				dir[33] = '.'; pcl = dj.sclust;
 5998              		.loc 1 3293 0
 5999 0122 0099     		ldr	r1, [sp]
 6000 0124 2022     		mov	r2, #32
 6001 0126 5030     		add	r0, r0, #80
 6002 0128 FFF7FEFF 		bl	mem_cpy
 6003              	.LVL804:
3294:.\sd/ff.c     **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 6004              		.loc 1 3294 0
 6005 012c 231C     		mov	r3, r4
 6006 012e 2E22     		mov	r2, #46
 6007 0130 5133     		add	r3, r3, #81
 6008 0132 1A70     		strb	r2, [r3]
3295:.\sd/ff.c     **** 					pcl = 0;
 6009              		.loc 1 3295 0
 6010 0134 0F9A     		ldr	r2, [sp, #60]
3294:.\sd/ff.c     **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 6011              		.loc 1 3294 0
 6012 0136 119B     		ldr	r3, [sp, #68]
 6013              	.LVL805:
3295:.\sd/ff.c     **** 					pcl = 0;
 6014              		.loc 1 3295 0
 6015 0138 1178     		ldrb	r1, [r2]
 6016 013a 0329     		cmp	r1, #3
 6017 013c 05D1     		bne	.L666
3296:.\sd/ff.c     **** 				ST_CLUST(dir+SZ_DIR, pcl);
 6018              		.loc 1 3296 0 discriminator 1
 6019 013e 516A     		ldr	r1, [r2, #36]
 6020 0140 591A     		sub	r1, r3, r1
 6021 0142 481E     		sub	r0, r1, #1
 6022 0144 8141     		sbc	r1, r1, r0
 6023 0146 4942     		neg	r1, r1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 175


 6024 0148 0B40     		and	r3, r1
 6025              	.LVL806:
 6026              	.L666:
3297:.\sd/ff.c     **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 6027              		.loc 1 3297 0
 6028 014a 211C     		mov	r1, r4
 6029 014c 180A     		lsr	r0, r3, #8
 6030 014e 6A31     		add	r1, r1, #106
 6031 0150 0B70     		strb	r3, [r1]
 6032 0152 4870     		strb	r0, [r1, #1]
 6033 0154 1B0C     		lsr	r3, r3, #16
 6034              	.LVL807:
 6035 0156 0639     		sub	r1, r1, #6
 6036 0158 0B70     		strb	r3, [r1]
 6037 015a 6534     		add	r4, r4, #101
 6038 015c 1B0A     		lsr	r3, r3, #8
 6039 015e 2370     		strb	r3, [r4]
 6040              	.LVL808:
 6041 0160 9378     		ldrb	r3, [r2, #2]
 6042 0162 FB18     		add	r3, r7, r3
 6043 0164 0993     		str	r3, [sp, #36]
 6044              	.LVL809:
 6045              	.L667:
3298:.\sd/ff.c     **** 					dj.fs->winsect = dsc++;
 6046              		.loc 1 3298 0 discriminator 1
 6047 0166 099B     		ldr	r3, [sp, #36]
 6048 0168 9F42     		cmp	r7, r3
 6049 016a 15D0     		beq	.L689
3299:.\sd/ff.c     **** 					dj.fs->wflag = 1;
 6050              		.loc 1 3299 0
 6051 016c 7B1C     		add	r3, r7, #1
 6052 016e 0A93     		str	r3, [sp, #40]
 6053              	.LVL810:
3300:.\sd/ff.c     **** 					res = move_window(dj.fs, 0);
 6054              		.loc 1 3300 0
 6055 0170 0123     		mov	r3, #1
 6056              	.LVL811:
3299:.\sd/ff.c     **** 					dj.fs->wflag = 1;
 6057              		.loc 1 3299 0
 6058 0172 0F98     		ldr	r0, [sp, #60]
3301:.\sd/ff.c     **** 					if (res != FR_OK) break;
 6059              		.loc 1 3301 0
 6060 0174 0021     		mov	r1, #0
3299:.\sd/ff.c     **** 					dj.fs->wflag = 1;
 6061              		.loc 1 3299 0
 6062 0176 C762     		str	r7, [r0, #44]
3300:.\sd/ff.c     **** 					res = move_window(dj.fs, 0);
 6063              		.loc 1 3300 0
 6064 0178 0371     		strb	r3, [r0, #4]
3301:.\sd/ff.c     **** 					if (res != FR_OK) break;
 6065              		.loc 1 3301 0
 6066 017a FFF7FEFF 		bl	move_window
 6067              	.LVL812:
 6068 017e 041E     		sub	r4, r0, #0
 6069              	.LVL813:
3302:.\sd/ff.c     **** 					mem_set(dir, 0, SS(dj.fs));
 6070              		.loc 1 3302 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 176


 6071 0180 00D0     		beq	.LCB6667
 6072 0182 61E7     		b	.L672	@long jump
 6073              	.LCB6667:
 6074 0184 009B     		ldr	r3, [sp]
 6075              	.L668:
 6076              	.LVL814:
 6077              	.LBB109:
 6078              	.LBB110:
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
 6079              		.loc 1 549 0
 6080 0186 089A     		ldr	r2, [sp, #32]
 6081 0188 9342     		cmp	r3, r2
 6082 018a 03D0     		beq	.L690
 6083              	.LVL815:
 550:.\sd/ff.c     **** }
 6084              		.loc 1 550 0
 6085 018c 0022     		mov	r2, #0
 6086 018e 1A70     		strb	r2, [r3]
 6087 0190 0133     		add	r3, r3, #1
 6088              	.LVL816:
 6089 0192 F8E7     		b	.L668
 6090              	.LVL817:
 6091              	.L690:
 6092              	.LBE110:
 6093              	.LBE109:
3299:.\sd/ff.c     **** 					dj.fs->wflag = 1;
 6094              		.loc 1 3299 0
 6095 0194 0A9F     		ldr	r7, [sp, #40]
 6096 0196 E6E7     		b	.L667
 6097              	.LVL818:
 6098              	.L689:
3306:.\sd/ff.c     **** 			if (res != FR_OK) {
 6099              		.loc 1 3306 0
 6100 0198 0FA8     		add	r0, sp, #60
 6101 019a FFF7FEFF 		bl	dir_register
 6102              	.LVL819:
 6103 019e 041E     		sub	r4, r0, #0
 6104              	.LVL820:
3307:.\sd/ff.c     **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
 6105              		.loc 1 3307 0
 6106 01a0 00D0     		beq	.LCB6709
 6107 01a2 51E7     		b	.L672	@long jump
 6108              	.LCB6709:
3309:.\sd/ff.c     **** 			} else {
3310:.\sd/ff.c     **** 				dir = dj.dir;
3311:.\sd/ff.c     **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 6109              		.loc 1 3311 0
 6110 01a4 1022     		mov	r2, #16
3310:.\sd/ff.c     **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 6111              		.loc 1 3310 0
 6112 01a6 149B     		ldr	r3, [sp, #80]
 6113              	.LVL821:
 6114              		.loc 1 3311 0
 6115 01a8 DA72     		strb	r2, [r3, #11]
3312:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);		/* Created time */
 6116              		.loc 1 3312 0
 6117 01aa 6A46     		mov	r2, sp
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 177


 6118 01ac 1279     		ldrb	r2, [r2, #4]
 6119 01ae 5E76     		strb	r6, [r3, #25]
 6120 01b0 9A75     		strb	r2, [r3, #22]
 6121 01b2 6A46     		mov	r2, sp
 6122 01b4 127A     		ldrb	r2, [r2, #8]
 6123 01b6 DA75     		strb	r2, [r3, #23]
 6124 01b8 6A46     		mov	r2, sp
 6125 01ba 127B     		ldrb	r2, [r2, #12]
 6126 01bc 1A76     		strb	r2, [r3, #24]
3313:.\sd/ff.c     **** 				ST_CLUST(dir, dcl);					/* Table start cluster */
 6127              		.loc 1 3313 0
 6128 01be 6A46     		mov	r2, sp
 6129 01c0 127C     		ldrb	r2, [r2, #16]
 6130 01c2 9A76     		strb	r2, [r3, #26]
 6131 01c4 6A46     		mov	r2, sp
 6132 01c6 127D     		ldrb	r2, [r2, #20]
 6133 01c8 DA76     		strb	r2, [r3, #27]
 6134 01ca 6A46     		mov	r2, sp
 6135 01cc 127E     		ldrb	r2, [r2, #24]
 6136 01ce 1A75     		strb	r2, [r3, #20]
 6137 01d0 6A46     		mov	r2, sp
 6138 01d2 127F     		ldrb	r2, [r2, #28]
 6139 01d4 5A75     		strb	r2, [r3, #21]
3314:.\sd/ff.c     **** 				dj.fs->wflag = 1;
 6140              		.loc 1 3314 0
 6141 01d6 0123     		mov	r3, #1
 6142              	.LVL822:
 6143 01d8 0F9A     		ldr	r2, [sp, #60]
 6144 01da 1371     		strb	r3, [r2, #4]
3315:.\sd/ff.c     **** 				res = sync(dj.fs);
 6145              		.loc 1 3315 0
 6146 01dc 101C     		mov	r0, r2
 6147              	.LVL823:
 6148 01de FFF7FEFF 		bl	sync
 6149              	.LVL824:
 6150 01e2 041C     		mov	r4, r0
 6151              	.LVL825:
 6152              	.L679:
3316:.\sd/ff.c     **** 			}
3317:.\sd/ff.c     **** 		}
3318:.\sd/ff.c     **** 		FREE_BUF();
3319:.\sd/ff.c     **** 	}
3320:.\sd/ff.c     **** 
3321:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3322:.\sd/ff.c     **** }
 6153              		.loc 1 3322 0
 6154 01e4 201C     		mov	r0, r4
 6155 01e6 17B0     		add	sp, sp, #92
 6156              		@ sp needed
 6157 01e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 6158              		.cfi_endproc
 6159              	.LFE41:
 6160              		.size	f_mkdir, .-f_mkdir
 6161              		.section	.text.f_chmod,"ax",%progbits
 6162              		.align	1
 6163              		.global	f_chmod
 6164              		.code	16
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 178


 6165              		.thumb_func
 6166              		.type	f_chmod, %function
 6167              	f_chmod:
 6168              	.LFB42:
3323:.\sd/ff.c     **** 
3324:.\sd/ff.c     **** 
3325:.\sd/ff.c     **** 
3326:.\sd/ff.c     **** 
3327:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3328:.\sd/ff.c     **** /* Change Attribute                                                      */
3329:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3330:.\sd/ff.c     **** 
3331:.\sd/ff.c     **** FRESULT f_chmod (
3332:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the file path */
3333:.\sd/ff.c     **** 	BYTE value,			/* Attribute bits */
3334:.\sd/ff.c     **** 	BYTE mask			/* Attribute mask to change */
3335:.\sd/ff.c     **** )
3336:.\sd/ff.c     **** {
 6169              		.loc 1 3336 0
 6170              		.cfi_startproc
 6171              	.LVL826:
 6172 0000 30B5     		push	{r4, r5, lr}
 6173              		.cfi_def_cfa_offset 12
 6174              		.cfi_offset 4, -12
 6175              		.cfi_offset 5, -8
 6176              		.cfi_offset 14, -4
 6177 0002 8DB0     		sub	sp, sp, #52
 6178              		.cfi_def_cfa_offset 64
 6179              		.loc 1 3336 0
 6180 0004 0190     		str	r0, [sp, #4]
 6181 0006 0C1C     		mov	r4, r1
 6182 0008 151C     		mov	r5, r2
3337:.\sd/ff.c     **** 	FRESULT res;
3338:.\sd/ff.c     **** 	DIR dj;
3339:.\sd/ff.c     **** 	BYTE *dir;
3340:.\sd/ff.c     **** 	DEF_NAMEBUF;
3341:.\sd/ff.c     **** 
3342:.\sd/ff.c     **** 
3343:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 6183              		.loc 1 3343 0
 6184 000a 01A8     		add	r0, sp, #4
 6185              	.LVL827:
 6186 000c 05A9     		add	r1, sp, #20
 6187              	.LVL828:
 6188 000e 0122     		mov	r2, #1
 6189              	.LVL829:
 6190 0010 FFF7FEFF 		bl	chk_mounted
 6191              	.LVL830:
3344:.\sd/ff.c     **** 	if (res == FR_OK) {
 6192              		.loc 1 3344 0
 6193 0014 0028     		cmp	r0, #0
 6194 0016 17D1     		bne	.L692
3345:.\sd/ff.c     **** 		INIT_BUF(dj);
 6195              		.loc 1 3345 0
 6196 0018 02AB     		add	r3, sp, #8
3346:.\sd/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the file path */
 6197              		.loc 1 3346 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 179


 6198 001a 05A8     		add	r0, sp, #20
 6199              	.LVL831:
 6200 001c 0199     		ldr	r1, [sp, #4]
3345:.\sd/ff.c     **** 		INIT_BUF(dj);
 6201              		.loc 1 3345 0
 6202 001e 0B93     		str	r3, [sp, #44]
 6203              		.loc 1 3346 0
 6204 0020 FFF7FEFF 		bl	follow_path
 6205              	.LVL832:
3347:.\sd/ff.c     **** 		FREE_BUF();
3348:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3349:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
3350:.\sd/ff.c     **** 		if (res == FR_OK) {
 6206              		.loc 1 3350 0
 6207 0024 0028     		cmp	r0, #0
 6208 0026 0FD1     		bne	.L692
3351:.\sd/ff.c     **** 			dir = dj.dir;
 6209              		.loc 1 3351 0
 6210 0028 0A9B     		ldr	r3, [sp, #40]
 6211              	.LVL833:
3352:.\sd/ff.c     **** 			if (!dir) {						/* Is it a root directory? */
3353:.\sd/ff.c     **** 				res = FR_INVALID_NAME;
 6212              		.loc 1 3353 0
 6213 002a 0630     		add	r0, r0, #6
 6214              	.LVL834:
3352:.\sd/ff.c     **** 			if (!dir) {						/* Is it a root directory? */
 6215              		.loc 1 3352 0
 6216 002c 002B     		cmp	r3, #0
 6217 002e 0BD0     		beq	.L692
3354:.\sd/ff.c     **** 			} else {						/* File or sub directory */
3355:.\sd/ff.c     **** 				mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
 6218              		.loc 1 3355 0
 6219 0030 2722     		mov	r2, #39
3356:.\sd/ff.c     **** 				dir[DIR_Attr] = (value & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
 6220              		.loc 1 3356 0
 6221 0032 D97A     		ldrb	r1, [r3, #11]
3355:.\sd/ff.c     **** 				dir[DIR_Attr] = (value & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
 6222              		.loc 1 3355 0
 6223 0034 2A40     		and	r2, r5
 6224              	.LVL835:
 6225              		.loc 1 3356 0
 6226 0036 9143     		bic	r1, r2
 6227 0038 2240     		and	r2, r4
 6228              	.LVL836:
 6229 003a 0A43     		orr	r2, r1
 6230 003c DA72     		strb	r2, [r3, #11]
3357:.\sd/ff.c     **** 				dj.fs->wflag = 1;
 6231              		.loc 1 3357 0
 6232 003e 0123     		mov	r3, #1
 6233              	.LVL837:
 6234 0040 0598     		ldr	r0, [sp, #20]
 6235              	.LVL838:
 6236 0042 0371     		strb	r3, [r0, #4]
3358:.\sd/ff.c     **** 				res = sync(dj.fs);
 6237              		.loc 1 3358 0
 6238 0044 FFF7FEFF 		bl	sync
 6239              	.LVL839:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 180


 6240              	.L692:
3359:.\sd/ff.c     **** 			}
3360:.\sd/ff.c     **** 		}
3361:.\sd/ff.c     **** 	}
3362:.\sd/ff.c     **** 
3363:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3364:.\sd/ff.c     **** }
 6241              		.loc 1 3364 0
 6242 0048 0DB0     		add	sp, sp, #52
 6243              		@ sp needed
 6244 004a 30BD     		pop	{r4, r5, pc}
 6245              		.cfi_endproc
 6246              	.LFE42:
 6247              		.size	f_chmod, .-f_chmod
 6248              		.section	.text.f_utime,"ax",%progbits
 6249              		.align	1
 6250              		.global	f_utime
 6251              		.code	16
 6252              		.thumb_func
 6253              		.type	f_utime, %function
 6254              	f_utime:
 6255              	.LFB43:
3365:.\sd/ff.c     **** 
3366:.\sd/ff.c     **** 
3367:.\sd/ff.c     **** 
3368:.\sd/ff.c     **** 
3369:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3370:.\sd/ff.c     **** /* Change Timestamp                                                      */
3371:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3372:.\sd/ff.c     **** 
3373:.\sd/ff.c     **** FRESULT f_utime (
3374:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the file/directory name */
3375:.\sd/ff.c     **** 	const FILINFO *fno	/* Pointer to the time stamp to be set */
3376:.\sd/ff.c     **** )
3377:.\sd/ff.c     **** {
 6256              		.loc 1 3377 0
 6257              		.cfi_startproc
 6258              	.LVL840:
 6259 0000 10B5     		push	{r4, lr}
 6260              		.cfi_def_cfa_offset 8
 6261              		.cfi_offset 4, -8
 6262              		.cfi_offset 14, -4
 6263 0002 8CB0     		sub	sp, sp, #48
 6264              		.cfi_def_cfa_offset 56
 6265              		.loc 1 3377 0
 6266 0004 0190     		str	r0, [sp, #4]
 6267 0006 0C1C     		mov	r4, r1
3378:.\sd/ff.c     **** 	FRESULT res;
3379:.\sd/ff.c     **** 	DIR dj;
3380:.\sd/ff.c     **** 	BYTE *dir;
3381:.\sd/ff.c     **** 	DEF_NAMEBUF;
3382:.\sd/ff.c     **** 
3383:.\sd/ff.c     **** 
3384:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 6268              		.loc 1 3384 0
 6269 0008 01A8     		add	r0, sp, #4
 6270              	.LVL841:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 181


 6271 000a 05A9     		add	r1, sp, #20
 6272              	.LVL842:
 6273 000c 0122     		mov	r2, #1
 6274 000e FFF7FEFF 		bl	chk_mounted
 6275              	.LVL843:
3385:.\sd/ff.c     **** 	if (res == FR_OK) {
 6276              		.loc 1 3385 0
 6277 0012 0028     		cmp	r0, #0
 6278 0014 1AD1     		bne	.L696
3386:.\sd/ff.c     **** 		INIT_BUF(dj);
 6279              		.loc 1 3386 0
 6280 0016 02AB     		add	r3, sp, #8
3387:.\sd/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6281              		.loc 1 3387 0
 6282 0018 05A8     		add	r0, sp, #20
 6283              	.LVL844:
 6284 001a 0199     		ldr	r1, [sp, #4]
3386:.\sd/ff.c     **** 		INIT_BUF(dj);
 6285              		.loc 1 3386 0
 6286 001c 0B93     		str	r3, [sp, #44]
 6287              		.loc 1 3387 0
 6288 001e FFF7FEFF 		bl	follow_path
 6289              	.LVL845:
3388:.\sd/ff.c     **** 		FREE_BUF();
3389:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3390:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
3391:.\sd/ff.c     **** 		if (res == FR_OK) {
 6290              		.loc 1 3391 0
 6291 0022 0028     		cmp	r0, #0
 6292 0024 12D1     		bne	.L696
3392:.\sd/ff.c     **** 			dir = dj.dir;
 6293              		.loc 1 3392 0
 6294 0026 0A9B     		ldr	r3, [sp, #40]
 6295              	.LVL846:
3393:.\sd/ff.c     **** 			if (!dir) {					/* Root directory */
3394:.\sd/ff.c     **** 				res = FR_INVALID_NAME;
 6296              		.loc 1 3394 0
 6297 0028 0630     		add	r0, r0, #6
 6298              	.LVL847:
3393:.\sd/ff.c     **** 			if (!dir) {					/* Root directory */
 6299              		.loc 1 3393 0
 6300 002a 002B     		cmp	r3, #0
 6301 002c 0ED0     		beq	.L696
3395:.\sd/ff.c     **** 			} else {					/* File or sub-directory */
3396:.\sd/ff.c     **** 				ST_WORD(dir+DIR_WrtTime, fno->ftime);
 6302              		.loc 1 3396 0
 6303 002e E288     		ldrh	r2, [r4, #6]
3397:.\sd/ff.c     **** 				ST_WORD(dir+DIR_WrtDate, fno->fdate);
3398:.\sd/ff.c     **** 				dj.fs->wflag = 1;
 6304              		.loc 1 3398 0
 6305 0030 0598     		ldr	r0, [sp, #20]
 6306              	.LVL848:
3396:.\sd/ff.c     **** 				ST_WORD(dir+DIR_WrtDate, fno->fdate);
 6307              		.loc 1 3396 0
 6308 0032 9A75     		strb	r2, [r3, #22]
 6309 0034 E288     		ldrh	r2, [r4, #6]
 6310 0036 120A     		lsr	r2, r2, #8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 182


 6311 0038 DA75     		strb	r2, [r3, #23]
3397:.\sd/ff.c     **** 				ST_WORD(dir+DIR_WrtDate, fno->fdate);
 6312              		.loc 1 3397 0
 6313 003a A288     		ldrh	r2, [r4, #4]
 6314 003c 1A76     		strb	r2, [r3, #24]
 6315 003e A288     		ldrh	r2, [r4, #4]
 6316 0040 120A     		lsr	r2, r2, #8
 6317 0042 5A76     		strb	r2, [r3, #25]
 6318              		.loc 1 3398 0
 6319 0044 0123     		mov	r3, #1
 6320              	.LVL849:
 6321 0046 0371     		strb	r3, [r0, #4]
3399:.\sd/ff.c     **** 				res = sync(dj.fs);
 6322              		.loc 1 3399 0
 6323 0048 FFF7FEFF 		bl	sync
 6324              	.LVL850:
 6325              	.L696:
3400:.\sd/ff.c     **** 			}
3401:.\sd/ff.c     **** 		}
3402:.\sd/ff.c     **** 	}
3403:.\sd/ff.c     **** 
3404:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3405:.\sd/ff.c     **** }
 6326              		.loc 1 3405 0
 6327 004c 0CB0     		add	sp, sp, #48
 6328              		@ sp needed
 6329              	.LVL851:
 6330 004e 10BD     		pop	{r4, pc}
 6331              		.cfi_endproc
 6332              	.LFE43:
 6333              		.size	f_utime, .-f_utime
 6334              		.section	.text.f_rename,"ax",%progbits
 6335              		.align	1
 6336              		.global	f_rename
 6337              		.code	16
 6338              		.thumb_func
 6339              		.type	f_rename, %function
 6340              	f_rename:
 6341              	.LFB44:
3406:.\sd/ff.c     **** 
3407:.\sd/ff.c     **** 
3408:.\sd/ff.c     **** 
3409:.\sd/ff.c     **** 
3410:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3411:.\sd/ff.c     **** /* Rename File/Directory                                                 */
3412:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3413:.\sd/ff.c     **** 
3414:.\sd/ff.c     **** FRESULT f_rename (
3415:.\sd/ff.c     **** 	const TCHAR *path_old,	/* Pointer to the old name */
3416:.\sd/ff.c     **** 	const TCHAR *path_new	/* Pointer to the new name */
3417:.\sd/ff.c     **** )
3418:.\sd/ff.c     **** {
 6342              		.loc 1 3418 0
 6343              		.cfi_startproc
 6344              	.LVL852:
 6345 0000 30B5     		push	{r4, r5, lr}
 6346              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 183


 6347              		.cfi_offset 4, -12
 6348              		.cfi_offset 5, -8
 6349              		.cfi_offset 14, -4
 6350 0002 9DB0     		sub	sp, sp, #116
 6351              		.cfi_def_cfa_offset 128
 6352              		.loc 1 3418 0
 6353 0004 0390     		str	r0, [sp, #12]
 6354 0006 0D1C     		mov	r5, r1
3419:.\sd/ff.c     **** 	FRESULT res;
3420:.\sd/ff.c     **** 	DIR djo, djn;
3421:.\sd/ff.c     **** 	BYTE buf[21], *dir;
3422:.\sd/ff.c     **** 	DWORD dw;
3423:.\sd/ff.c     **** 	DEF_NAMEBUF;
3424:.\sd/ff.c     **** 
3425:.\sd/ff.c     **** 
3426:.\sd/ff.c     **** 	res = chk_mounted(&path_old, &djo.fs, 1);
 6355              		.loc 1 3426 0
 6356 0008 03A8     		add	r0, sp, #12
 6357              	.LVL853:
 6358 000a 0EA9     		add	r1, sp, #56
 6359              	.LVL854:
 6360 000c 0122     		mov	r2, #1
 6361 000e FFF7FEFF 		bl	chk_mounted
 6362              	.LVL855:
3427:.\sd/ff.c     **** 	if (res == FR_OK) {
 6363              		.loc 1 3427 0
 6364 0012 0028     		cmp	r0, #0
 6365 0014 00D0     		beq	.LCB6958
 6366 0016 85E0     		b	.L712	@long jump
 6367              	.LCB6958:
3428:.\sd/ff.c     **** 		djn.fs = djo.fs;
 6368              		.loc 1 3428 0
 6369 0018 0E9B     		ldr	r3, [sp, #56]
3429:.\sd/ff.c     **** 		INIT_BUF(djo);
3430:.\sd/ff.c     **** 		res = follow_path(&djo, path_old);		/* Check old object */
 6370              		.loc 1 3430 0
 6371 001a 0EA8     		add	r0, sp, #56
 6372              	.LVL856:
3428:.\sd/ff.c     **** 		djn.fs = djo.fs;
 6373              		.loc 1 3428 0
 6374 001c 1593     		str	r3, [sp, #84]
 6375              		.loc 1 3430 0
 6376 001e 0399     		ldr	r1, [sp, #12]
3429:.\sd/ff.c     **** 		INIT_BUF(djo);
 6377              		.loc 1 3429 0
 6378 0020 05AB     		add	r3, sp, #20
 6379 0022 1493     		str	r3, [sp, #80]
 6380              		.loc 1 3430 0
 6381 0024 FFF7FEFF 		bl	follow_path
 6382              	.LVL857:
3431:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NS] & NS_DOT))
3432:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
3433:.\sd/ff.c     **** #if _FS_SHARE
3434:.\sd/ff.c     **** 		if (res == FR_OK) res = chk_lock(&djo, 2);
 6383              		.loc 1 3434 0
 6384 0028 0028     		cmp	r0, #0
 6385 002a 7BD1     		bne	.L712
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 184


 6386              		.loc 1 3434 0 is_stmt 0 discriminator 1
 6387 002c 0EA8     		add	r0, sp, #56
 6388              	.LVL858:
 6389 002e 0221     		mov	r1, #2
 6390 0030 FFF7FEFF 		bl	chk_lock
 6391              	.LVL859:
3435:.\sd/ff.c     **** #endif
3436:.\sd/ff.c     **** 		if (res == FR_OK) {						/* Old object is found */
 6392              		.loc 1 3436 0 is_stmt 1 discriminator 1
 6393 0034 0028     		cmp	r0, #0
 6394 0036 75D1     		bne	.L712
3437:.\sd/ff.c     **** 			if (!djo.dir) {						/* Is root dir? */
 6395              		.loc 1 3437 0
 6396 0038 1399     		ldr	r1, [sp, #76]
3438:.\sd/ff.c     **** 				res = FR_NO_FILE;
 6397              		.loc 1 3438 0
 6398 003a 0430     		add	r0, r0, #4
 6399              	.LVL860:
3437:.\sd/ff.c     **** 			if (!djo.dir) {						/* Is root dir? */
 6400              		.loc 1 3437 0
 6401 003c 0029     		cmp	r1, #0
 6402 003e 71D0     		beq	.L712
3439:.\sd/ff.c     **** 			} else {
3440:.\sd/ff.c     **** 				mem_cpy(buf, djo.dir+DIR_Attr, 21);		/* Save the object information except for name */
 6403              		.loc 1 3440 0
 6404 0040 08AC     		add	r4, sp, #32
 6405 0042 0B31     		add	r1, r1, #11
 6406 0044 201C     		mov	r0, r4
 6407 0046 1522     		mov	r2, #21
 6408 0048 FFF7FEFF 		bl	mem_cpy
 6409              	.LVL861:
3441:.\sd/ff.c     **** 				mem_cpy(&djn, &djo, sizeof(DIR));		/* Check new object */
 6410              		.loc 1 3441 0
 6411 004c 15A8     		add	r0, sp, #84
 6412 004e 0EA9     		add	r1, sp, #56
 6413 0050 1C22     		mov	r2, #28
 6414 0052 FFF7FEFF 		bl	mem_cpy
 6415              	.LVL862:
3442:.\sd/ff.c     **** 				res = follow_path(&djn, path_new);
 6416              		.loc 1 3442 0
 6417 0056 15A8     		add	r0, sp, #84
 6418 0058 291C     		mov	r1, r5
 6419 005a FFF7FEFF 		bl	follow_path
 6420              	.LVL863:
3443:.\sd/ff.c     **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
 6421              		.loc 1 3443 0
 6422 005e 0028     		cmp	r0, #0
 6423 0060 56D0     		beq	.L708
3444:.\sd/ff.c     **** 				if (res == FR_NO_FILE) { 				/* Is it a valid path and no name collision? */
 6424              		.loc 1 3444 0
 6425 0062 0428     		cmp	r0, #4
 6426 0064 5ED1     		bne	.L712
3445:.\sd/ff.c     **** /* Start critical section that any interruption or error can cause cross-link */
3446:.\sd/ff.c     **** 					res = dir_register(&djn);			/* Register the new entry */
 6427              		.loc 1 3446 0
 6428 0066 15A8     		add	r0, sp, #84
 6429              	.LVL864:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 185


 6430 0068 FFF7FEFF 		bl	dir_register
 6431              	.LVL865:
3447:.\sd/ff.c     **** 					if (res == FR_OK) {
 6432              		.loc 1 3447 0
 6433 006c 0028     		cmp	r0, #0
 6434 006e 59D1     		bne	.L712
3448:.\sd/ff.c     **** 						dir = djn.dir;					/* Copy object information except for name */
 6435              		.loc 1 3448 0
 6436 0070 1A9D     		ldr	r5, [sp, #104]
 6437              	.LVL866:
3449:.\sd/ff.c     **** 						mem_cpy(dir+13, buf+2, 19);
 6438              		.loc 1 3449 0
 6439 0072 1A21     		mov	r1, #26
 6440 0074 281C     		mov	r0, r5
 6441              	.LVL867:
 6442 0076 02AB     		add	r3, sp, #8
 6443 0078 C918     		add	r1, r1, r3
 6444 007a 1322     		mov	r2, #19
 6445 007c 0D30     		add	r0, r0, #13
 6446 007e FFF7FEFF 		bl	mem_cpy
 6447              	.LVL868:
3450:.\sd/ff.c     **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 6448              		.loc 1 3450 0
 6449 0082 2022     		mov	r2, #32
 6450 0084 2378     		ldrb	r3, [r4]
 6451 0086 1343     		orr	r3, r2
 6452 0088 EB72     		strb	r3, [r5, #11]
3451:.\sd/ff.c     **** 						djo.fs->wflag = 1;
 6453              		.loc 1 3451 0
 6454 008a 0E9B     		ldr	r3, [sp, #56]
 6455 008c 0193     		str	r3, [sp, #4]
 6456 008e 0123     		mov	r3, #1
 6457 0090 019A     		ldr	r2, [sp, #4]
 6458 0092 1371     		strb	r3, [r2, #4]
3452:.\sd/ff.c     **** 						if (djo.sclust != djn.sclust && (dir[DIR_Attr] & AM_DIR)) {		/* Update .. entry in the direct
 6459              		.loc 1 3452 0
 6460 0094 109B     		ldr	r3, [sp, #64]
 6461 0096 0193     		str	r3, [sp, #4]
 6462 0098 179B     		ldr	r3, [sp, #92]
 6463 009a 0293     		str	r3, [sp, #8]
 6464 009c 029A     		ldr	r2, [sp, #8]
 6465 009e 019B     		ldr	r3, [sp, #4]
 6466 00a0 9342     		cmp	r3, r2
 6467 00a2 37D0     		beq	.L705
 6468              		.loc 1 3452 0 is_stmt 0 discriminator 1
 6469 00a4 EB7A     		ldrb	r3, [r5, #11]
 6470 00a6 DB06     		lsl	r3, r3, #27
 6471 00a8 34D5     		bpl	.L705
3453:.\sd/ff.c     **** 							dw = clust2sect(djn.fs, LD_CLUST(dir));
 6472              		.loc 1 3453 0 is_stmt 1
 6473 00aa 697D     		ldrb	r1, [r5, #21]
 6474 00ac 2A7D     		ldrb	r2, [r5, #20]
 6475 00ae 0902     		lsl	r1, r1, #8
 6476 00b0 1143     		orr	r1, r2
 6477 00b2 EB7E     		ldrb	r3, [r5, #27]
 6478 00b4 0A04     		lsl	r2, r1, #16
 6479 00b6 A97E     		ldrb	r1, [r5, #26]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 186


 6480 00b8 1B02     		lsl	r3, r3, #8
 6481 00ba 159C     		ldr	r4, [sp, #84]
 6482 00bc 1943     		orr	r1, r3
 6483 00be 1143     		orr	r1, r2
 6484 00c0 201C     		mov	r0, r4
 6485 00c2 FFF7FEFF 		bl	clust2sect
 6486              	.LVL869:
 6487 00c6 011C     		mov	r1, r0
 6488              	.LVL870:
3454:.\sd/ff.c     **** 							if (!dw) {
3455:.\sd/ff.c     **** 								res = FR_INT_ERR;
 6489              		.loc 1 3455 0
 6490 00c8 0220     		mov	r0, #2
 6491              	.LVL871:
3454:.\sd/ff.c     **** 							if (!dw) {
 6492              		.loc 1 3454 0
 6493 00ca 0029     		cmp	r1, #0
 6494 00cc 2AD0     		beq	.L712
3456:.\sd/ff.c     **** 							} else {
3457:.\sd/ff.c     **** 								res = move_window(djn.fs, dw);
 6495              		.loc 1 3457 0
 6496 00ce 201C     		mov	r0, r4
 6497 00d0 FFF7FEFF 		bl	move_window
 6498              	.LVL872:
3458:.\sd/ff.c     **** 								dir = djn.fs->win+SZ_DIR;	/* .. entry */
 6499              		.loc 1 3458 0
 6500 00d4 159B     		ldr	r3, [sp, #84]
 6501              	.LVL873:
3459:.\sd/ff.c     **** 								if (res == FR_OK && dir[1] == '.') {
 6502              		.loc 1 3459 0
 6503 00d6 0028     		cmp	r0, #0
 6504 00d8 24D1     		bne	.L712
 6505              		.loc 1 3459 0 is_stmt 0 discriminator 1
 6506 00da 1A1C     		mov	r2, r3
 6507 00dc 5132     		add	r2, r2, #81
 6508 00de 1278     		ldrb	r2, [r2]
 6509 00e0 2E2A     		cmp	r2, #46
 6510 00e2 17D1     		bne	.L705
3460:.\sd/ff.c     **** 									dw = (djn.fs->fs_type == FS_FAT32 && djn.sclust == djn.fs->dirbase) ? 0 : djn.sclust;
 6511              		.loc 1 3460 0 is_stmt 1
 6512 00e4 1A78     		ldrb	r2, [r3]
 6513 00e6 032A     		cmp	r2, #3
 6514 00e8 04D1     		bne	.L703
 6515              		.loc 1 3460 0 is_stmt 0 discriminator 2
 6516 00ea 179A     		ldr	r2, [sp, #92]
 6517 00ec 596A     		ldr	r1, [r3, #36]
 6518 00ee 0192     		str	r2, [sp, #4]
 6519 00f0 8A42     		cmp	r2, r1
 6520 00f2 00D0     		beq	.L704
 6521              	.L703:
 6522              		.loc 1 3460 0 discriminator 3
 6523 00f4 1798     		ldr	r0, [sp, #92]
 6524              	.LVL874:
 6525              	.L704:
3461:.\sd/ff.c     **** 									ST_CLUST(dir, dw);
 6526              		.loc 1 3461 0 is_stmt 1 discriminator 6
 6527 00f6 1A1C     		mov	r2, r3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 187


 6528 00f8 010A     		lsr	r1, r0, #8
 6529 00fa 6A32     		add	r2, r2, #106
 6530 00fc 1070     		strb	r0, [r2]
 6531 00fe 5170     		strb	r1, [r2, #1]
 6532 0100 000C     		lsr	r0, r0, #16
 6533              	.LVL875:
 6534 0102 063A     		sub	r2, r2, #6
 6535 0104 1070     		strb	r0, [r2]
 6536 0106 000A     		lsr	r0, r0, #8
 6537 0108 5070     		strb	r0, [r2, #1]
3462:.\sd/ff.c     **** 									djn.fs->wflag = 1;
 6538              		.loc 1 3462 0 discriminator 6
 6539 010a 0122     		mov	r2, #1
 6540 010c 1A71     		strb	r2, [r3, #4]
 6541 010e 01E0     		b	.L705
 6542              	.LVL876:
 6543              	.L708:
3443:.\sd/ff.c     **** 				if (res == FR_NO_FILE) { 				/* Is it a valid path and no name collision? */
 6544              		.loc 1 3443 0
 6545 0110 0820     		mov	r0, #8
 6546              	.LVL877:
 6547 0112 07E0     		b	.L712
 6548              	.LVL878:
 6549              	.L705:
3463:.\sd/ff.c     **** 								}
3464:.\sd/ff.c     **** 							}
3465:.\sd/ff.c     **** 						}
3466:.\sd/ff.c     **** 						if (res == FR_OK) {
3467:.\sd/ff.c     **** 							res = dir_remove(&djo);		/* Remove old entry */
 6550              		.loc 1 3467 0
 6551 0114 0EA8     		add	r0, sp, #56
 6552 0116 FFF7FEFF 		bl	dir_remove
 6553              	.LVL879:
3468:.\sd/ff.c     **** 							if (res == FR_OK)
 6554              		.loc 1 3468 0
 6555 011a 0028     		cmp	r0, #0
 6556 011c 02D1     		bne	.L712
3469:.\sd/ff.c     **** 								res = sync(djo.fs);
 6557              		.loc 1 3469 0
 6558 011e 0E98     		ldr	r0, [sp, #56]
 6559              	.LVL880:
 6560 0120 FFF7FEFF 		bl	sync
 6561              	.LVL881:
 6562              	.L712:
3470:.\sd/ff.c     **** 						}
3471:.\sd/ff.c     **** 					}
3472:.\sd/ff.c     **** /* End critical section */
3473:.\sd/ff.c     **** 				}
3474:.\sd/ff.c     **** 			}
3475:.\sd/ff.c     **** 		}
3476:.\sd/ff.c     **** 		FREE_BUF();
3477:.\sd/ff.c     **** 	}
3478:.\sd/ff.c     **** 	LEAVE_FF(djo.fs, res);
3479:.\sd/ff.c     **** }
 6563              		.loc 1 3479 0
 6564 0124 1DB0     		add	sp, sp, #116
 6565              		@ sp needed
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 188


 6566 0126 30BD     		pop	{r4, r5, pc}
 6567              		.cfi_endproc
 6568              	.LFE44:
 6569              		.size	f_rename, .-f_rename
 6570              		.section	.rodata
 6571              		.set	.LANCHOR1,. + 0
 6572              		.type	excvt.4520, %object
 6573              		.size	excvt.4520, 128
 6574              	excvt.4520:
 6575 0000 80       		.byte	-128
 6576 0001 81       		.byte	-127
 6577 0002 82       		.byte	-126
 6578 0003 82       		.byte	-126
 6579 0004 84       		.byte	-124
 6580 0005 85       		.byte	-123
 6581 0006 86       		.byte	-122
 6582 0007 87       		.byte	-121
 6583 0008 88       		.byte	-120
 6584 0009 89       		.byte	-119
 6585 000a 8A       		.byte	-118
 6586 000b 8B       		.byte	-117
 6587 000c 8C       		.byte	-116
 6588 000d 8D       		.byte	-115
 6589 000e 8E       		.byte	-114
 6590 000f 8F       		.byte	-113
 6591 0010 80       		.byte	-128
 6592 0011 91       		.byte	-111
 6593 0012 92       		.byte	-110
 6594 0013 93       		.byte	-109
 6595 0014 94       		.byte	-108
 6596 0015 95       		.byte	-107
 6597 0016 96       		.byte	-106
 6598 0017 97       		.byte	-105
 6599 0018 98       		.byte	-104
 6600 0019 99       		.byte	-103
 6601 001a 8A       		.byte	-118
 6602 001b 9B       		.byte	-101
 6603 001c 8C       		.byte	-116
 6604 001d 8D       		.byte	-115
 6605 001e 8E       		.byte	-114
 6606 001f 8F       		.byte	-113
 6607 0020 A0       		.byte	-96
 6608 0021 A2       		.byte	-94
 6609 0022 A2       		.byte	-94
 6610 0023 A3       		.byte	-93
 6611 0024 A4       		.byte	-92
 6612 0025 A5       		.byte	-91
 6613 0026 A6       		.byte	-90
 6614 0027 A7       		.byte	-89
 6615 0028 A8       		.byte	-88
 6616 0029 A9       		.byte	-87
 6617 002a AA       		.byte	-86
 6618 002b AB       		.byte	-85
 6619 002c AC       		.byte	-84
 6620 002d AD       		.byte	-83
 6621 002e AE       		.byte	-82
 6622 002f AF       		.byte	-81
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 189


 6623 0030 B0       		.byte	-80
 6624 0031 B1       		.byte	-79
 6625 0032 B2       		.byte	-78
 6626 0033 B2       		.byte	-78
 6627 0034 A5       		.byte	-91
 6628 0035 B5       		.byte	-75
 6629 0036 B6       		.byte	-74
 6630 0037 B7       		.byte	-73
 6631 0038 A8       		.byte	-88
 6632 0039 B9       		.byte	-71
 6633 003a AA       		.byte	-86
 6634 003b BB       		.byte	-69
 6635 003c A3       		.byte	-93
 6636 003d BD       		.byte	-67
 6637 003e BD       		.byte	-67
 6638 003f AF       		.byte	-81
 6639 0040 C0       		.byte	-64
 6640 0041 C1       		.byte	-63
 6641 0042 C2       		.byte	-62
 6642 0043 C3       		.byte	-61
 6643 0044 C4       		.byte	-60
 6644 0045 C5       		.byte	-59
 6645 0046 C6       		.byte	-58
 6646 0047 C7       		.byte	-57
 6647 0048 C8       		.byte	-56
 6648 0049 C9       		.byte	-55
 6649 004a CA       		.byte	-54
 6650 004b CB       		.byte	-53
 6651 004c CC       		.byte	-52
 6652 004d CD       		.byte	-51
 6653 004e CE       		.byte	-50
 6654 004f CF       		.byte	-49
 6655 0050 D0       		.byte	-48
 6656 0051 D1       		.byte	-47
 6657 0052 D2       		.byte	-46
 6658 0053 D3       		.byte	-45
 6659 0054 D4       		.byte	-44
 6660 0055 D5       		.byte	-43
 6661 0056 D6       		.byte	-42
 6662 0057 D7       		.byte	-41
 6663 0058 D8       		.byte	-40
 6664 0059 D9       		.byte	-39
 6665 005a DA       		.byte	-38
 6666 005b DB       		.byte	-37
 6667 005c DC       		.byte	-36
 6668 005d DD       		.byte	-35
 6669 005e DE       		.byte	-34
 6670 005f DF       		.byte	-33
 6671 0060 C0       		.byte	-64
 6672 0061 C1       		.byte	-63
 6673 0062 C2       		.byte	-62
 6674 0063 C3       		.byte	-61
 6675 0064 C4       		.byte	-60
 6676 0065 C5       		.byte	-59
 6677 0066 C6       		.byte	-58
 6678 0067 C7       		.byte	-57
 6679 0068 C8       		.byte	-56
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 190


 6680 0069 C9       		.byte	-55
 6681 006a CA       		.byte	-54
 6682 006b CB       		.byte	-53
 6683 006c CC       		.byte	-52
 6684 006d CD       		.byte	-51
 6685 006e CE       		.byte	-50
 6686 006f CF       		.byte	-49
 6687 0070 D0       		.byte	-48
 6688 0071 D1       		.byte	-47
 6689 0072 D2       		.byte	-46
 6690 0073 D3       		.byte	-45
 6691 0074 D4       		.byte	-44
 6692 0075 D5       		.byte	-43
 6693 0076 D6       		.byte	-42
 6694 0077 D7       		.byte	-41
 6695 0078 D8       		.byte	-40
 6696 0079 D9       		.byte	-39
 6697 007a DA       		.byte	-38
 6698 007b DB       		.byte	-37
 6699 007c DC       		.byte	-36
 6700 007d DD       		.byte	-35
 6701 007e DE       		.byte	-34
 6702 007f DF       		.byte	-33
 6703              		.section	.rodata.str1.1,"aMS",%progbits,1
 6704              	.LC8:
 6705 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 6705      3A3B3C3D 
 6705      3E3F5B5D 
 6705      7C7F00
 6706              		.bss
 6707              		.align	2
 6708              		.set	.LANCHOR0,. + 0
 6709              		.type	Files, %object
 6710              		.size	Files, 36
 6711              	Files:
 6712 0000 00000000 		.space	36
 6712      00000000 
 6712      00000000 
 6712      00000000 
 6712      00000000 
 6713              		.type	FatFs, %object
 6714              		.size	FatFs, 4
 6715              	FatFs:
 6716 0024 00000000 		.space	4
 6717              		.type	Fsid, %object
 6718              		.size	Fsid, 2
 6719              	Fsid:
 6720 0028 0000     		.space	2
 6721 002a 0000     		.text
 6722              	.Letext0:
 6723              		.file 2 "c:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 6724              		.file 3 "c:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 6725              		.file 4 "./sd/integer.h"
 6726              		.file 5 "./sd/ff.h"
 6727              		.file 6 "./sd/diskio.h"
 6728              		.section	.debug_info,"",%progbits
 6729              	.Ldebug_info0:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 191


 6730 0000 CC290000 		.4byte	0x29cc
 6731 0004 0400     		.2byte	0x4
 6732 0006 00000000 		.4byte	.Ldebug_abbrev0
 6733 000a 04       		.byte	0x4
 6734 000b 01       		.uleb128 0x1
 6735 000c 17000000 		.4byte	.LASF167
 6736 0010 01       		.byte	0x1
 6737 0011 C4050000 		.4byte	.LASF168
 6738 0015 40050000 		.4byte	.LASF169
 6739 0019 50000000 		.4byte	.Ldebug_ranges0+0x50
 6740 001d 00000000 		.4byte	0
 6741 0021 00000000 		.4byte	.Ldebug_line0
 6742 0025 02       		.uleb128 0x2
 6743 0026 01       		.byte	0x1
 6744 0027 06       		.byte	0x6
 6745 0028 AD010000 		.4byte	.LASF0
 6746 002c 03       		.uleb128 0x3
 6747 002d ED000000 		.4byte	.LASF3
 6748 0031 02       		.byte	0x2
 6749 0032 1D       		.byte	0x1d
 6750 0033 37000000 		.4byte	0x37
 6751 0037 02       		.uleb128 0x2
 6752 0038 01       		.byte	0x1
 6753 0039 08       		.byte	0x8
 6754 003a 95040000 		.4byte	.LASF1
 6755 003e 02       		.uleb128 0x2
 6756 003f 02       		.byte	0x2
 6757 0040 05       		.byte	0x5
 6758 0041 B8040000 		.4byte	.LASF2
 6759 0045 03       		.uleb128 0x3
 6760 0046 91050000 		.4byte	.LASF4
 6761 004a 02       		.byte	0x2
 6762 004b 2B       		.byte	0x2b
 6763 004c 50000000 		.4byte	0x50
 6764 0050 02       		.uleb128 0x2
 6765 0051 02       		.byte	0x2
 6766 0052 07       		.byte	0x7
 6767 0053 07030000 		.4byte	.LASF5
 6768 0057 02       		.uleb128 0x2
 6769 0058 04       		.byte	0x4
 6770 0059 05       		.byte	0x5
 6771 005a ED010000 		.4byte	.LASF6
 6772 005e 03       		.uleb128 0x3
 6773 005f 7E020000 		.4byte	.LASF7
 6774 0063 02       		.byte	0x2
 6775 0064 41       		.byte	0x41
 6776 0065 69000000 		.4byte	0x69
 6777 0069 02       		.uleb128 0x2
 6778 006a 04       		.byte	0x4
 6779 006b 07       		.byte	0x7
 6780 006c D4020000 		.4byte	.LASF8
 6781 0070 02       		.uleb128 0x2
 6782 0071 08       		.byte	0x8
 6783 0072 05       		.byte	0x5
 6784 0073 9F010000 		.4byte	.LASF9
 6785 0077 02       		.uleb128 0x2
 6786 0078 08       		.byte	0x8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 192


 6787 0079 07       		.byte	0x7
 6788 007a 25010000 		.4byte	.LASF10
 6789 007e 04       		.uleb128 0x4
 6790 007f 04       		.byte	0x4
 6791 0080 05       		.byte	0x5
 6792 0081 696E7400 		.ascii	"int\000"
 6793 0085 02       		.uleb128 0x2
 6794 0086 04       		.byte	0x4
 6795 0087 07       		.byte	0x7
 6796 0088 BC020000 		.4byte	.LASF11
 6797 008c 03       		.uleb128 0x3
 6798 008d 4D060000 		.4byte	.LASF12
 6799 0091 03       		.byte	0x3
 6800 0092 15       		.byte	0x15
 6801 0093 2C000000 		.4byte	0x2c
 6802 0097 03       		.uleb128 0x3
 6803 0098 33020000 		.4byte	.LASF13
 6804 009c 03       		.byte	0x3
 6805 009d 21       		.byte	0x21
 6806 009e 45000000 		.4byte	0x45
 6807 00a2 03       		.uleb128 0x3
 6808 00a3 37050000 		.4byte	.LASF14
 6809 00a7 03       		.byte	0x3
 6810 00a8 2D       		.byte	0x2d
 6811 00a9 5E000000 		.4byte	0x5e
 6812 00ad 03       		.uleb128 0x3
 6813 00ae C9020000 		.4byte	.LASF15
 6814 00b2 04       		.byte	0x4
 6815 00b3 0A       		.byte	0xa
 6816 00b4 A2000000 		.4byte	0xa2
 6817 00b8 03       		.uleb128 0x3
 6818 00b9 A7020000 		.4byte	.LASF16
 6819 00bd 04       		.byte	0x4
 6820 00be 0D       		.byte	0xd
 6821 00bf 8C000000 		.4byte	0x8c
 6822 00c3 03       		.uleb128 0x3
 6823 00c4 08040000 		.4byte	.LASF17
 6824 00c8 04       		.byte	0x4
 6825 00c9 10       		.byte	0x10
 6826 00ca 97000000 		.4byte	0x97
 6827 00ce 03       		.uleb128 0x3
 6828 00cf 60020000 		.4byte	.LASF18
 6829 00d3 04       		.byte	0x4
 6830 00d4 14       		.byte	0x14
 6831 00d5 A2000000 		.4byte	0xa2
 6832 00d9 03       		.uleb128 0x3
 6833 00da 3F040000 		.4byte	.LASF19
 6834 00de 05       		.byte	0x5
 6835 00df 42       		.byte	0x42
 6836 00e0 E4000000 		.4byte	0xe4
 6837 00e4 02       		.uleb128 0x2
 6838 00e5 01       		.byte	0x1
 6839 00e6 08       		.byte	0x8
 6840 00e7 7B050000 		.4byte	.LASF20
 6841 00eb 05       		.uleb128 0x5
 6842 00ec 3002     		.2byte	0x230
 6843 00ee 05       		.byte	0x5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 193


 6844 00ef 4D       		.byte	0x4d
 6845 00f0 CC010000 		.4byte	0x1cc
 6846 00f4 06       		.uleb128 0x6
 6847 00f5 D0000000 		.4byte	.LASF21
 6848 00f9 05       		.byte	0x5
 6849 00fa 4E       		.byte	0x4e
 6850 00fb B8000000 		.4byte	0xb8
 6851 00ff 00       		.byte	0
 6852 0100 07       		.uleb128 0x7
 6853 0101 64727600 		.ascii	"drv\000"
 6854 0105 05       		.byte	0x5
 6855 0106 4F       		.byte	0x4f
 6856 0107 B8000000 		.4byte	0xb8
 6857 010b 01       		.byte	0x1
 6858 010c 06       		.uleb128 0x6
 6859 010d 89020000 		.4byte	.LASF22
 6860 0111 05       		.byte	0x5
 6861 0112 50       		.byte	0x50
 6862 0113 B8000000 		.4byte	0xb8
 6863 0117 02       		.byte	0x2
 6864 0118 06       		.uleb128 0x6
 6865 0119 0C020000 		.4byte	.LASF23
 6866 011d 05       		.byte	0x5
 6867 011e 51       		.byte	0x51
 6868 011f B8000000 		.4byte	0xb8
 6869 0123 03       		.byte	0x3
 6870 0124 06       		.uleb128 0x6
 6871 0125 31050000 		.4byte	.LASF24
 6872 0129 05       		.byte	0x5
 6873 012a 52       		.byte	0x52
 6874 012b B8000000 		.4byte	0xb8
 6875 012f 04       		.byte	0x4
 6876 0130 06       		.uleb128 0x6
 6877 0131 04060000 		.4byte	.LASF25
 6878 0135 05       		.byte	0x5
 6879 0136 53       		.byte	0x53
 6880 0137 B8000000 		.4byte	0xb8
 6881 013b 05       		.byte	0x5
 6882 013c 07       		.uleb128 0x7
 6883 013d 696400   		.ascii	"id\000"
 6884 0140 05       		.byte	0x5
 6885 0141 54       		.byte	0x54
 6886 0142 C3000000 		.4byte	0xc3
 6887 0146 06       		.byte	0x6
 6888 0147 06       		.uleb128 0x6
 6889 0148 09010000 		.4byte	.LASF26
 6890 014c 05       		.byte	0x5
 6891 014d 55       		.byte	0x55
 6892 014e C3000000 		.4byte	0xc3
 6893 0152 08       		.byte	0x8
 6894 0153 06       		.uleb128 0x6
 6895 0154 7A010000 		.4byte	.LASF27
 6896 0158 05       		.byte	0x5
 6897 0159 5D       		.byte	0x5d
 6898 015a CE000000 		.4byte	0xce
 6899 015e 0C       		.byte	0xc
 6900 015f 06       		.uleb128 0x6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 194


 6901 0160 1B040000 		.4byte	.LASF28
 6902 0164 05       		.byte	0x5
 6903 0165 5E       		.byte	0x5e
 6904 0166 CE000000 		.4byte	0xce
 6905 016a 10       		.byte	0x10
 6906 016b 06       		.uleb128 0x6
 6907 016c 5F060000 		.4byte	.LASF29
 6908 0170 05       		.byte	0x5
 6909 0171 5F       		.byte	0x5f
 6910 0172 CE000000 		.4byte	0xce
 6911 0176 14       		.byte	0x14
 6912 0177 06       		.uleb128 0x6
 6913 0178 E4010000 		.4byte	.LASF30
 6914 017c 05       		.byte	0x5
 6915 017d 64       		.byte	0x64
 6916 017e CE000000 		.4byte	0xce
 6917 0182 18       		.byte	0x18
 6918 0183 06       		.uleb128 0x6
 6919 0184 DE010000 		.4byte	.LASF31
 6920 0188 05       		.byte	0x5
 6921 0189 65       		.byte	0x65
 6922 018a CE000000 		.4byte	0xce
 6923 018e 1C       		.byte	0x1c
 6924 018f 06       		.uleb128 0x6
 6925 0190 58020000 		.4byte	.LASF32
 6926 0194 05       		.byte	0x5
 6927 0195 66       		.byte	0x66
 6928 0196 CE000000 		.4byte	0xce
 6929 019a 20       		.byte	0x20
 6930 019b 06       		.uleb128 0x6
 6931 019c 97010000 		.4byte	.LASF33
 6932 01a0 05       		.byte	0x5
 6933 01a1 67       		.byte	0x67
 6934 01a2 CE000000 		.4byte	0xce
 6935 01a6 24       		.byte	0x24
 6936 01a7 06       		.uleb128 0x6
 6937 01a8 1A030000 		.4byte	.LASF34
 6938 01ac 05       		.byte	0x5
 6939 01ad 68       		.byte	0x68
 6940 01ae CE000000 		.4byte	0xce
 6941 01b2 28       		.byte	0x28
 6942 01b3 06       		.uleb128 0x6
 6943 01b4 50030000 		.4byte	.LASF35
 6944 01b8 05       		.byte	0x5
 6945 01b9 69       		.byte	0x69
 6946 01ba CE000000 		.4byte	0xce
 6947 01be 2C       		.byte	0x2c
 6948 01bf 07       		.uleb128 0x7
 6949 01c0 77696E00 		.ascii	"win\000"
 6950 01c4 05       		.byte	0x5
 6951 01c5 6A       		.byte	0x6a
 6952 01c6 CC010000 		.4byte	0x1cc
 6953 01ca 30       		.byte	0x30
 6954 01cb 00       		.byte	0
 6955 01cc 08       		.uleb128 0x8
 6956 01cd B8000000 		.4byte	0xb8
 6957 01d1 DD010000 		.4byte	0x1dd
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 195


 6958 01d5 09       		.uleb128 0x9
 6959 01d6 DD010000 		.4byte	0x1dd
 6960 01da FF01     		.2byte	0x1ff
 6961 01dc 00       		.byte	0
 6962 01dd 02       		.uleb128 0x2
 6963 01de 04       		.byte	0x4
 6964 01df 07       		.byte	0x7
 6965 01e0 D5030000 		.4byte	.LASF36
 6966 01e4 03       		.uleb128 0x3
 6967 01e5 9B030000 		.4byte	.LASF37
 6968 01e9 05       		.byte	0x5
 6969 01ea 6B       		.byte	0x6b
 6970 01eb EB000000 		.4byte	0xeb
 6971 01ef 0A       		.uleb128 0xa
 6972 01f0 28       		.byte	0x28
 6973 01f1 05       		.byte	0x5
 6974 01f2 71       		.byte	0x71
 6975 01f3 86020000 		.4byte	0x286
 6976 01f7 07       		.uleb128 0x7
 6977 01f8 667300   		.ascii	"fs\000"
 6978 01fb 05       		.byte	0x5
 6979 01fc 72       		.byte	0x72
 6980 01fd 86020000 		.4byte	0x286
 6981 0201 00       		.byte	0
 6982 0202 07       		.uleb128 0x7
 6983 0203 696400   		.ascii	"id\000"
 6984 0206 05       		.byte	0x5
 6985 0207 73       		.byte	0x73
 6986 0208 C3000000 		.4byte	0xc3
 6987 020c 04       		.byte	0x4
 6988 020d 06       		.uleb128 0x6
 6989 020e C2040000 		.4byte	.LASF38
 6990 0212 05       		.byte	0x5
 6991 0213 74       		.byte	0x74
 6992 0214 B8000000 		.4byte	0xb8
 6993 0218 06       		.byte	0x6
 6994 0219 06       		.uleb128 0x6
 6995 021a 1C060000 		.4byte	.LASF39
 6996 021e 05       		.byte	0x5
 6997 021f 75       		.byte	0x75
 6998 0220 B8000000 		.4byte	0xb8
 6999 0224 07       		.byte	0x7
 7000 0225 06       		.uleb128 0x6
 7001 0226 B4030000 		.4byte	.LASF40
 7002 022a 05       		.byte	0x5
 7003 022b 76       		.byte	0x76
 7004 022c CE000000 		.4byte	0xce
 7005 0230 08       		.byte	0x8
 7006 0231 06       		.uleb128 0x6
 7007 0232 DE010000 		.4byte	.LASF31
 7008 0236 05       		.byte	0x5
 7009 0237 77       		.byte	0x77
 7010 0238 CE000000 		.4byte	0xce
 7011 023c 0C       		.byte	0xc
 7012 023d 06       		.uleb128 0x6
 7013 023e 0D040000 		.4byte	.LASF41
 7014 0242 05       		.byte	0x5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 196


 7015 0243 78       		.byte	0x78
 7016 0244 CE000000 		.4byte	0xce
 7017 0248 10       		.byte	0x10
 7018 0249 06       		.uleb128 0x6
 7019 024a BC060000 		.4byte	.LASF42
 7020 024e 05       		.byte	0x5
 7021 024f 79       		.byte	0x79
 7022 0250 CE000000 		.4byte	0xce
 7023 0254 14       		.byte	0x14
 7024 0255 06       		.uleb128 0x6
 7025 0256 8F040000 		.4byte	.LASF43
 7026 025a 05       		.byte	0x5
 7027 025b 7A       		.byte	0x7a
 7028 025c CE000000 		.4byte	0xce
 7029 0260 18       		.byte	0x18
 7030 0261 06       		.uleb128 0x6
 7031 0262 85010000 		.4byte	.LASF44
 7032 0266 05       		.byte	0x5
 7033 0267 7C       		.byte	0x7c
 7034 0268 CE000000 		.4byte	0xce
 7035 026c 1C       		.byte	0x1c
 7036 026d 06       		.uleb128 0x6
 7037 026e AC020000 		.4byte	.LASF45
 7038 0272 05       		.byte	0x5
 7039 0273 7D       		.byte	0x7d
 7040 0274 8C020000 		.4byte	0x28c
 7041 0278 20       		.byte	0x20
 7042 0279 06       		.uleb128 0x6
 7043 027a 13010000 		.4byte	.LASF46
 7044 027e 05       		.byte	0x5
 7045 027f 83       		.byte	0x83
 7046 0280 AD000000 		.4byte	0xad
 7047 0284 24       		.byte	0x24
 7048 0285 00       		.byte	0
 7049 0286 0B       		.uleb128 0xb
 7050 0287 04       		.byte	0x4
 7051 0288 E4010000 		.4byte	0x1e4
 7052 028c 0B       		.uleb128 0xb
 7053 028d 04       		.byte	0x4
 7054 028e B8000000 		.4byte	0xb8
 7055 0292 0C       		.uleb128 0xc
 7056 0293 46494C00 		.ascii	"FIL\000"
 7057 0297 05       		.byte	0x5
 7058 0298 88       		.byte	0x88
 7059 0299 EF010000 		.4byte	0x1ef
 7060 029d 0A       		.uleb128 0xa
 7061 029e 1C       		.byte	0x1c
 7062 029f 05       		.byte	0x5
 7063 02a0 8E       		.byte	0x8e
 7064 02a1 03030000 		.4byte	0x303
 7065 02a5 07       		.uleb128 0x7
 7066 02a6 667300   		.ascii	"fs\000"
 7067 02a9 05       		.byte	0x5
 7068 02aa 8F       		.byte	0x8f
 7069 02ab 86020000 		.4byte	0x286
 7070 02af 00       		.byte	0
 7071 02b0 07       		.uleb128 0x7
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 197


 7072 02b1 696400   		.ascii	"id\000"
 7073 02b4 05       		.byte	0x5
 7074 02b5 90       		.byte	0x90
 7075 02b6 C3000000 		.4byte	0xc3
 7076 02ba 04       		.byte	0x4
 7077 02bb 06       		.uleb128 0x6
 7078 02bc A2050000 		.4byte	.LASF47
 7079 02c0 05       		.byte	0x5
 7080 02c1 91       		.byte	0x91
 7081 02c2 C3000000 		.4byte	0xc3
 7082 02c6 06       		.byte	0x6
 7083 02c7 06       		.uleb128 0x6
 7084 02c8 0D040000 		.4byte	.LASF41
 7085 02cc 05       		.byte	0x5
 7086 02cd 92       		.byte	0x92
 7087 02ce CE000000 		.4byte	0xce
 7088 02d2 08       		.byte	0x8
 7089 02d3 06       		.uleb128 0x6
 7090 02d4 BC060000 		.4byte	.LASF42
 7091 02d8 05       		.byte	0x5
 7092 02d9 93       		.byte	0x93
 7093 02da CE000000 		.4byte	0xce
 7094 02de 0C       		.byte	0xc
 7095 02df 06       		.uleb128 0x6
 7096 02e0 56010000 		.4byte	.LASF48
 7097 02e4 05       		.byte	0x5
 7098 02e5 94       		.byte	0x94
 7099 02e6 CE000000 		.4byte	0xce
 7100 02ea 10       		.byte	0x10
 7101 02eb 07       		.uleb128 0x7
 7102 02ec 64697200 		.ascii	"dir\000"
 7103 02f0 05       		.byte	0x5
 7104 02f1 95       		.byte	0x95
 7105 02f2 8C020000 		.4byte	0x28c
 7106 02f6 14       		.byte	0x14
 7107 02f7 07       		.uleb128 0x7
 7108 02f8 666E00   		.ascii	"fn\000"
 7109 02fb 05       		.byte	0x5
 7110 02fc 96       		.byte	0x96
 7111 02fd 8C020000 		.4byte	0x28c
 7112 0301 18       		.byte	0x18
 7113 0302 00       		.byte	0
 7114 0303 0C       		.uleb128 0xc
 7115 0304 44495200 		.ascii	"DIR\000"
 7116 0308 05       		.byte	0x5
 7117 0309 9B       		.byte	0x9b
 7118 030a 9D020000 		.4byte	0x29d
 7119 030e 0A       		.uleb128 0xa
 7120 030f 18       		.byte	0x18
 7121 0310 05       		.byte	0x5
 7122 0311 A1       		.byte	0xa1
 7123 0312 53030000 		.4byte	0x353
 7124 0316 06       		.uleb128 0x6
 7125 0317 DE010000 		.4byte	.LASF31
 7126 031b 05       		.byte	0x5
 7127 031c A2       		.byte	0xa2
 7128 031d CE000000 		.4byte	0xce
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 198


 7129 0321 00       		.byte	0
 7130 0322 06       		.uleb128 0x6
 7131 0323 A9030000 		.4byte	.LASF49
 7132 0327 05       		.byte	0x5
 7133 0328 A3       		.byte	0xa3
 7134 0329 C3000000 		.4byte	0xc3
 7135 032d 04       		.byte	0x4
 7136 032e 06       		.uleb128 0x6
 7137 032f CE020000 		.4byte	.LASF50
 7138 0333 05       		.byte	0x5
 7139 0334 A4       		.byte	0xa4
 7140 0335 C3000000 		.4byte	0xc3
 7141 0339 06       		.byte	0x6
 7142 033a 06       		.uleb128 0x6
 7143 033b 21060000 		.4byte	.LASF51
 7144 033f 05       		.byte	0x5
 7145 0340 A5       		.byte	0xa5
 7146 0341 B8000000 		.4byte	0xb8
 7147 0345 08       		.byte	0x8
 7148 0346 06       		.uleb128 0x6
 7149 0347 77030000 		.4byte	.LASF52
 7150 034b 05       		.byte	0x5
 7151 034c A6       		.byte	0xa6
 7152 034d 53030000 		.4byte	0x353
 7153 0351 09       		.byte	0x9
 7154 0352 00       		.byte	0
 7155 0353 08       		.uleb128 0x8
 7156 0354 D9000000 		.4byte	0xd9
 7157 0358 63030000 		.4byte	0x363
 7158 035c 0D       		.uleb128 0xd
 7159 035d DD010000 		.4byte	0x1dd
 7160 0361 0C       		.byte	0xc
 7161 0362 00       		.byte	0
 7162 0363 03       		.uleb128 0x3
 7163 0364 45060000 		.4byte	.LASF53
 7164 0368 05       		.byte	0x5
 7165 0369 AB       		.byte	0xab
 7166 036a 0E030000 		.4byte	0x30e
 7167 036e 0E       		.uleb128 0xe
 7168 036f 01       		.byte	0x1
 7169 0370 05       		.byte	0x5
 7170 0371 B1       		.byte	0xb1
 7171 0372 EF030000 		.4byte	0x3ef
 7172 0376 0F       		.uleb128 0xf
 7173 0377 9C050000 		.4byte	.LASF54
 7174 037b 00       		.sleb128 0
 7175 037c 0F       		.uleb128 0xf
 7176 037d 44030000 		.4byte	.LASF55
 7177 0381 01       		.sleb128 1
 7178 0382 0F       		.uleb128 0xf
 7179 0383 31030000 		.4byte	.LASF56
 7180 0387 02       		.sleb128 2
 7181 0388 0F       		.uleb128 0xf
 7182 0389 00000000 		.4byte	.LASF57
 7183 038d 03       		.sleb128 3
 7184 038e 0F       		.uleb128 0xf
 7185 038f 2E040000 		.4byte	.LASF58
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 199


 7186 0393 04       		.sleb128 4
 7187 0394 0F       		.uleb128 0xf
 7188 0395 9A060000 		.4byte	.LASF59
 7189 0399 05       		.sleb128 5
 7190 039a 0F       		.uleb128 0xf
 7191 039b DD050000 		.4byte	.LASF60
 7192 039f 06       		.sleb128 6
 7193 03a0 0F       		.uleb128 0xf
 7194 03a1 ED040000 		.4byte	.LASF61
 7195 03a5 07       		.sleb128 7
 7196 03a6 0F       		.uleb128 0xf
 7197 03a7 4F020000 		.4byte	.LASF62
 7198 03ab 08       		.sleb128 8
 7199 03ac 0F       		.uleb128 0xf
 7200 03ad 61010000 		.4byte	.LASF63
 7201 03b1 09       		.sleb128 9
 7202 03b2 0F       		.uleb128 0xf
 7203 03b3 7D030000 		.4byte	.LASF64
 7204 03b7 0A       		.sleb128 10
 7205 03b8 0F       		.uleb128 0xf
 7206 03b9 DC040000 		.4byte	.LASF65
 7207 03bd 0B       		.sleb128 11
 7208 03be 0F       		.uleb128 0xf
 7209 03bf 45040000 		.4byte	.LASF66
 7210 03c3 0C       		.sleb128 12
 7211 03c4 0F       		.uleb128 0xf
 7212 03c5 22020000 		.4byte	.LASF67
 7213 03c9 0D       		.sleb128 13
 7214 03ca 0F       		.uleb128 0xf
 7215 03cb 0D050000 		.4byte	.LASF68
 7216 03cf 0E       		.sleb128 14
 7217 03d0 0F       		.uleb128 0xf
 7218 03d1 FD030000 		.4byte	.LASF69
 7219 03d5 0F       		.sleb128 15
 7220 03d6 0F       		.uleb128 0xf
 7221 03d7 27050000 		.4byte	.LASF70
 7222 03db 10       		.sleb128 16
 7223 03dc 0F       		.uleb128 0xf
 7224 03dd 3C020000 		.4byte	.LASF71
 7225 03e1 11       		.sleb128 17
 7226 03e2 0F       		.uleb128 0xf
 7227 03e3 B1000000 		.4byte	.LASF72
 7228 03e7 12       		.sleb128 18
 7229 03e8 0F       		.uleb128 0xf
 7230 03e9 C9010000 		.4byte	.LASF73
 7231 03ed 13       		.sleb128 19
 7232 03ee 00       		.byte	0
 7233 03ef 03       		.uleb128 0x3
 7234 03f0 6F060000 		.4byte	.LASF74
 7235 03f4 05       		.byte	0x5
 7236 03f5 C6       		.byte	0xc6
 7237 03f6 6E030000 		.4byte	0x36e
 7238 03fa 03       		.uleb128 0x3
 7239 03fb B5050000 		.4byte	.LASF75
 7240 03ff 06       		.byte	0x6
 7241 0400 10       		.byte	0x10
 7242 0401 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 200


 7243 0405 0E       		.uleb128 0xe
 7244 0406 01       		.byte	0x1
 7245 0407 06       		.byte	0x6
 7246 0408 13       		.byte	0x13
 7247 0409 2C040000 		.4byte	0x42c
 7248 040d 0F       		.uleb128 0xf
 7249 040e 14040000 		.4byte	.LASF76
 7250 0412 00       		.sleb128 0
 7251 0413 0F       		.uleb128 0xf
 7252 0414 77060000 		.4byte	.LASF77
 7253 0418 01       		.sleb128 1
 7254 0419 0F       		.uleb128 0xf
 7255 041a 0D000000 		.4byte	.LASF78
 7256 041e 02       		.sleb128 2
 7257 041f 0F       		.uleb128 0xf
 7258 0420 FE000000 		.4byte	.LASF79
 7259 0424 03       		.sleb128 3
 7260 0425 0F       		.uleb128 0xf
 7261 0426 01020000 		.4byte	.LASF80
 7262 042a 04       		.sleb128 4
 7263 042b 00       		.byte	0
 7264 042c 03       		.uleb128 0x3
 7265 042d 60040000 		.4byte	.LASF81
 7266 0431 06       		.byte	0x6
 7267 0432 19       		.byte	0x19
 7268 0433 05040000 		.4byte	0x405
 7269 0437 0A       		.uleb128 0xa
 7270 0438 0C       		.byte	0xc
 7271 0439 01       		.byte	0x1
 7272 043a 8D       		.byte	0x8d
 7273 043b 6F040000 		.4byte	0x46f
 7274 043f 07       		.uleb128 0x7
 7275 0440 667300   		.ascii	"fs\000"
 7276 0443 01       		.byte	0x1
 7277 0444 8E       		.byte	0x8e
 7278 0445 86020000 		.4byte	0x286
 7279 0449 00       		.byte	0
 7280 044a 07       		.uleb128 0x7
 7281 044b 636C7500 		.ascii	"clu\000"
 7282 044f 01       		.byte	0x1
 7283 0450 8F       		.byte	0x8f
 7284 0451 CE000000 		.4byte	0xce
 7285 0455 04       		.byte	0x4
 7286 0456 07       		.uleb128 0x7
 7287 0457 69647800 		.ascii	"idx\000"
 7288 045b 01       		.byte	0x1
 7289 045c 90       		.byte	0x90
 7290 045d C3000000 		.4byte	0xc3
 7291 0461 08       		.byte	0x8
 7292 0462 07       		.uleb128 0x7
 7293 0463 63747200 		.ascii	"ctr\000"
 7294 0467 01       		.byte	0x1
 7295 0468 91       		.byte	0x91
 7296 0469 C3000000 		.4byte	0xc3
 7297 046d 0A       		.byte	0xa
 7298 046e 00       		.byte	0
 7299 046f 03       		.uleb128 0x3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 201


 7300 0470 9F020000 		.4byte	.LASF82
 7301 0474 01       		.byte	0x1
 7302 0475 92       		.byte	0x92
 7303 0476 37040000 		.4byte	0x437
 7304 047a 10       		.uleb128 0x10
 7305 047b 85050000 		.4byte	.LASF84
 7306 047f 01       		.byte	0x1
 7307 0480 5706     		.2byte	0x657
 7308 0482 EF030000 		.4byte	0x3ef
 7309 0486 01       		.byte	0x1
 7310 0487 84050000 		.4byte	0x584
 7311 048b 11       		.uleb128 0x11
 7312 048c 646A00   		.ascii	"dj\000"
 7313 048f 01       		.byte	0x1
 7314 0490 5806     		.2byte	0x658
 7315 0492 84050000 		.4byte	0x584
 7316 0496 12       		.uleb128 0x12
 7317 0497 1A010000 		.4byte	.LASF83
 7318 049b 01       		.byte	0x1
 7319 049c 5906     		.2byte	0x659
 7320 049e 8A050000 		.4byte	0x58a
 7321 04a2 13       		.uleb128 0x13
 7322 04a3 5B010000 		.4byte	.LASF96
 7323 04a7 01       		.byte	0x1
 7324 04a8 5D06     		.2byte	0x65d
 7325 04aa AB050000 		.4byte	0x5ab
 7326 04ae 80       		.byte	0x80
 7327 04af 80       		.byte	0x80
 7328 04b0 81       		.byte	0x81
 7329 04b1 82       		.byte	0x82
 7330 04b2 82       		.byte	0x82
 7331 04b3 84       		.byte	0x84
 7332 04b4 85       		.byte	0x85
 7333 04b5 86       		.byte	0x86
 7334 04b6 87       		.byte	0x87
 7335 04b7 88       		.byte	0x88
 7336 04b8 89       		.byte	0x89
 7337 04b9 8A       		.byte	0x8a
 7338 04ba 8B       		.byte	0x8b
 7339 04bb 8C       		.byte	0x8c
 7340 04bc 8D       		.byte	0x8d
 7341 04bd 8E       		.byte	0x8e
 7342 04be 8F       		.byte	0x8f
 7343 04bf 80       		.byte	0x80
 7344 04c0 91       		.byte	0x91
 7345 04c1 92       		.byte	0x92
 7346 04c2 93       		.byte	0x93
 7347 04c3 94       		.byte	0x94
 7348 04c4 95       		.byte	0x95
 7349 04c5 96       		.byte	0x96
 7350 04c6 97       		.byte	0x97
 7351 04c7 98       		.byte	0x98
 7352 04c8 99       		.byte	0x99
 7353 04c9 8A       		.byte	0x8a
 7354 04ca 9B       		.byte	0x9b
 7355 04cb 8C       		.byte	0x8c
 7356 04cc 8D       		.byte	0x8d
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 202


 7357 04cd 8E       		.byte	0x8e
 7358 04ce 8F       		.byte	0x8f
 7359 04cf A0       		.byte	0xa0
 7360 04d0 A2       		.byte	0xa2
 7361 04d1 A2       		.byte	0xa2
 7362 04d2 A3       		.byte	0xa3
 7363 04d3 A4       		.byte	0xa4
 7364 04d4 A5       		.byte	0xa5
 7365 04d5 A6       		.byte	0xa6
 7366 04d6 A7       		.byte	0xa7
 7367 04d7 A8       		.byte	0xa8
 7368 04d8 A9       		.byte	0xa9
 7369 04d9 AA       		.byte	0xaa
 7370 04da AB       		.byte	0xab
 7371 04db AC       		.byte	0xac
 7372 04dc AD       		.byte	0xad
 7373 04dd AE       		.byte	0xae
 7374 04de AF       		.byte	0xaf
 7375 04df B0       		.byte	0xb0
 7376 04e0 B1       		.byte	0xb1
 7377 04e1 B2       		.byte	0xb2
 7378 04e2 B2       		.byte	0xb2
 7379 04e3 A5       		.byte	0xa5
 7380 04e4 B5       		.byte	0xb5
 7381 04e5 B6       		.byte	0xb6
 7382 04e6 B7       		.byte	0xb7
 7383 04e7 A8       		.byte	0xa8
 7384 04e8 B9       		.byte	0xb9
 7385 04e9 AA       		.byte	0xaa
 7386 04ea BB       		.byte	0xbb
 7387 04eb A3       		.byte	0xa3
 7388 04ec BD       		.byte	0xbd
 7389 04ed BD       		.byte	0xbd
 7390 04ee AF       		.byte	0xaf
 7391 04ef C0       		.byte	0xc0
 7392 04f0 C1       		.byte	0xc1
 7393 04f1 C2       		.byte	0xc2
 7394 04f2 C3       		.byte	0xc3
 7395 04f3 C4       		.byte	0xc4
 7396 04f4 C5       		.byte	0xc5
 7397 04f5 C6       		.byte	0xc6
 7398 04f6 C7       		.byte	0xc7
 7399 04f7 C8       		.byte	0xc8
 7400 04f8 C9       		.byte	0xc9
 7401 04f9 CA       		.byte	0xca
 7402 04fa CB       		.byte	0xcb
 7403 04fb CC       		.byte	0xcc
 7404 04fc CD       		.byte	0xcd
 7405 04fd CE       		.byte	0xce
 7406 04fe CF       		.byte	0xcf
 7407 04ff D0       		.byte	0xd0
 7408 0500 D1       		.byte	0xd1
 7409 0501 D2       		.byte	0xd2
 7410 0502 D3       		.byte	0xd3
 7411 0503 D4       		.byte	0xd4
 7412 0504 D5       		.byte	0xd5
 7413 0505 D6       		.byte	0xd6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 203


 7414 0506 D7       		.byte	0xd7
 7415 0507 D8       		.byte	0xd8
 7416 0508 D9       		.byte	0xd9
 7417 0509 DA       		.byte	0xda
 7418 050a DB       		.byte	0xdb
 7419 050b DC       		.byte	0xdc
 7420 050c DD       		.byte	0xdd
 7421 050d DE       		.byte	0xde
 7422 050e DF       		.byte	0xdf
 7423 050f C0       		.byte	0xc0
 7424 0510 C1       		.byte	0xc1
 7425 0511 C2       		.byte	0xc2
 7426 0512 C3       		.byte	0xc3
 7427 0513 C4       		.byte	0xc4
 7428 0514 C5       		.byte	0xc5
 7429 0515 C6       		.byte	0xc6
 7430 0516 C7       		.byte	0xc7
 7431 0517 C8       		.byte	0xc8
 7432 0518 C9       		.byte	0xc9
 7433 0519 CA       		.byte	0xca
 7434 051a CB       		.byte	0xcb
 7435 051b CC       		.byte	0xcc
 7436 051c CD       		.byte	0xcd
 7437 051d CE       		.byte	0xce
 7438 051e CF       		.byte	0xcf
 7439 051f D0       		.byte	0xd0
 7440 0520 D1       		.byte	0xd1
 7441 0521 D2       		.byte	0xd2
 7442 0522 D3       		.byte	0xd3
 7443 0523 D4       		.byte	0xd4
 7444 0524 D5       		.byte	0xd5
 7445 0525 D6       		.byte	0xd6
 7446 0526 D7       		.byte	0xd7
 7447 0527 D8       		.byte	0xd8
 7448 0528 D9       		.byte	0xd9
 7449 0529 DA       		.byte	0xda
 7450 052a DB       		.byte	0xdb
 7451 052b DC       		.byte	0xdc
 7452 052c DD       		.byte	0xdd
 7453 052d DE       		.byte	0xde
 7454 052e DF       		.byte	0xdf
 7455 052f 14       		.uleb128 0x14
 7456 0530 6200     		.ascii	"b\000"
 7457 0532 01       		.byte	0x1
 7458 0533 DA06     		.2byte	0x6da
 7459 0535 B8000000 		.4byte	0xb8
 7460 0539 14       		.uleb128 0x14
 7461 053a 6300     		.ascii	"c\000"
 7462 053c 01       		.byte	0x1
 7463 053d DA06     		.2byte	0x6da
 7464 053f B8000000 		.4byte	0xb8
 7465 0543 14       		.uleb128 0x14
 7466 0544 6400     		.ascii	"d\000"
 7467 0546 01       		.byte	0x1
 7468 0547 DA06     		.2byte	0x6da
 7469 0549 B8000000 		.4byte	0xb8
 7470 054d 14       		.uleb128 0x14
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 204


 7471 054e 73666E00 		.ascii	"sfn\000"
 7472 0552 01       		.byte	0x1
 7473 0553 DA06     		.2byte	0x6da
 7474 0555 8C020000 		.4byte	0x28c
 7475 0559 14       		.uleb128 0x14
 7476 055a 6E6900   		.ascii	"ni\000"
 7477 055d 01       		.byte	0x1
 7478 055e DB06     		.2byte	0x6db
 7479 0560 AD000000 		.4byte	0xad
 7480 0564 14       		.uleb128 0x14
 7481 0565 736900   		.ascii	"si\000"
 7482 0568 01       		.byte	0x1
 7483 0569 DB06     		.2byte	0x6db
 7484 056b AD000000 		.4byte	0xad
 7485 056f 14       		.uleb128 0x14
 7486 0570 6900     		.ascii	"i\000"
 7487 0572 01       		.byte	0x1
 7488 0573 DB06     		.2byte	0x6db
 7489 0575 AD000000 		.4byte	0xad
 7490 0579 14       		.uleb128 0x14
 7491 057a 7000     		.ascii	"p\000"
 7492 057c 01       		.byte	0x1
 7493 057d DC06     		.2byte	0x6dc
 7494 057f B0050000 		.4byte	0x5b0
 7495 0583 00       		.byte	0
 7496 0584 0B       		.uleb128 0xb
 7497 0585 04       		.byte	0x4
 7498 0586 03030000 		.4byte	0x303
 7499 058a 0B       		.uleb128 0xb
 7500 058b 04       		.byte	0x4
 7501 058c 90050000 		.4byte	0x590
 7502 0590 0B       		.uleb128 0xb
 7503 0591 04       		.byte	0x4
 7504 0592 96050000 		.4byte	0x596
 7505 0596 15       		.uleb128 0x15
 7506 0597 D9000000 		.4byte	0xd9
 7507 059b 08       		.uleb128 0x8
 7508 059c B8000000 		.4byte	0xb8
 7509 05a0 AB050000 		.4byte	0x5ab
 7510 05a4 0D       		.uleb128 0xd
 7511 05a5 DD010000 		.4byte	0x1dd
 7512 05a9 7F       		.byte	0x7f
 7513 05aa 00       		.byte	0
 7514 05ab 15       		.uleb128 0x15
 7515 05ac 9B050000 		.4byte	0x59b
 7516 05b0 0B       		.uleb128 0xb
 7517 05b1 04       		.byte	0x4
 7518 05b2 B6050000 		.4byte	0x5b6
 7519 05b6 15       		.uleb128 0x15
 7520 05b7 E4000000 		.4byte	0xe4
 7521 05bb 10       		.uleb128 0x10
 7522 05bc D3040000 		.4byte	.LASF85
 7523 05c0 01       		.byte	0x1
 7524 05c1 BE07     		.2byte	0x7be
 7525 05c3 B8000000 		.4byte	0xb8
 7526 05c7 01       		.byte	0x1
 7527 05c8 E4050000 		.4byte	0x5e4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 205


 7528 05cc 11       		.uleb128 0x11
 7529 05cd 667300   		.ascii	"fs\000"
 7530 05d0 01       		.byte	0x1
 7531 05d1 BF07     		.2byte	0x7bf
 7532 05d3 86020000 		.4byte	0x286
 7533 05d7 12       		.uleb128 0x12
 7534 05d8 56010000 		.4byte	.LASF48
 7535 05dc 01       		.byte	0x1
 7536 05dd C007     		.2byte	0x7c0
 7537 05df CE000000 		.4byte	0xce
 7538 05e3 00       		.byte	0
 7539 05e4 10       		.uleb128 0x10
 7540 05e5 F7040000 		.4byte	.LASF86
 7541 05e9 01       		.byte	0x1
 7542 05ea 7C08     		.2byte	0x87c
 7543 05ec EF030000 		.4byte	0x3ef
 7544 05f0 01       		.byte	0x1
 7545 05f1 0C060000 		.4byte	0x60c
 7546 05f5 11       		.uleb128 0x11
 7547 05f6 667300   		.ascii	"fs\000"
 7548 05f9 01       		.byte	0x1
 7549 05fa 7D08     		.2byte	0x87d
 7550 05fc 86020000 		.4byte	0x286
 7551 0600 11       		.uleb128 0x11
 7552 0601 696400   		.ascii	"id\000"
 7553 0604 01       		.byte	0x1
 7554 0605 7E08     		.2byte	0x87e
 7555 0607 C3000000 		.4byte	0xc3
 7556 060b 00       		.byte	0
 7557 060c 16       		.uleb128 0x16
 7558 060d 7A040000 		.4byte	.LASF89
 7559 0611 01       		.byte	0x1
 7560 0612 3303     		.2byte	0x333
 7561 0614 CE000000 		.4byte	0xce
 7562 0618 01       		.byte	0x1
 7563 0619 55060000 		.4byte	0x655
 7564 061d 11       		.uleb128 0x11
 7565 061e 667300   		.ascii	"fs\000"
 7566 0621 01       		.byte	0x1
 7567 0622 3403     		.2byte	0x334
 7568 0624 86020000 		.4byte	0x286
 7569 0628 12       		.uleb128 0x12
 7570 0629 2C030000 		.4byte	.LASF87
 7571 062d 01       		.byte	0x1
 7572 062e 3503     		.2byte	0x335
 7573 0630 CE000000 		.4byte	0xce
 7574 0634 14       		.uleb128 0x14
 7575 0635 776300   		.ascii	"wc\000"
 7576 0638 01       		.byte	0x1
 7577 0639 3803     		.2byte	0x338
 7578 063b AD000000 		.4byte	0xad
 7579 063f 14       		.uleb128 0x14
 7580 0640 626300   		.ascii	"bc\000"
 7581 0643 01       		.byte	0x1
 7582 0644 3803     		.2byte	0x338
 7583 0646 AD000000 		.4byte	0xad
 7584 064a 14       		.uleb128 0x14
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 206


 7585 064b 7000     		.ascii	"p\000"
 7586 064d 01       		.byte	0x1
 7587 064e 3903     		.2byte	0x339
 7588 0650 8C020000 		.4byte	0x28c
 7589 0654 00       		.byte	0
 7590 0655 10       		.uleb128 0x10
 7591 0656 F6010000 		.4byte	.LASF88
 7592 065a 01       		.byte	0x1
 7593 065b 2A06     		.2byte	0x62a
 7594 065d EF030000 		.4byte	0x3ef
 7595 0661 01       		.byte	0x1
 7596 0662 7E060000 		.4byte	0x67e
 7597 0666 11       		.uleb128 0x11
 7598 0667 646A00   		.ascii	"dj\000"
 7599 066a 01       		.byte	0x1
 7600 066b 2B06     		.2byte	0x62b
 7601 066d 84050000 		.4byte	0x584
 7602 0671 14       		.uleb128 0x14
 7603 0672 72657300 		.ascii	"res\000"
 7604 0676 01       		.byte	0x1
 7605 0677 2E06     		.2byte	0x62e
 7606 0679 EF030000 		.4byte	0x3ef
 7607 067d 00       		.byte	0
 7608 067e 16       		.uleb128 0x16
 7609 067f C8000000 		.4byte	.LASF90
 7610 0683 01       		.byte	0x1
 7611 0684 5E03     		.2byte	0x35e
 7612 0686 EF030000 		.4byte	0x3ef
 7613 068a 01       		.byte	0x1
 7614 068b D4060000 		.4byte	0x6d4
 7615 068f 11       		.uleb128 0x11
 7616 0690 667300   		.ascii	"fs\000"
 7617 0693 01       		.byte	0x1
 7618 0694 5F03     		.2byte	0x35f
 7619 0696 86020000 		.4byte	0x286
 7620 069a 12       		.uleb128 0x12
 7621 069b 2C030000 		.4byte	.LASF87
 7622 069f 01       		.byte	0x1
 7623 06a0 6003     		.2byte	0x360
 7624 06a2 CE000000 		.4byte	0xce
 7625 06a6 11       		.uleb128 0x11
 7626 06a7 76616C00 		.ascii	"val\000"
 7627 06ab 01       		.byte	0x1
 7628 06ac 6103     		.2byte	0x361
 7629 06ae CE000000 		.4byte	0xce
 7630 06b2 14       		.uleb128 0x14
 7631 06b3 626300   		.ascii	"bc\000"
 7632 06b6 01       		.byte	0x1
 7633 06b7 6403     		.2byte	0x364
 7634 06b9 AD000000 		.4byte	0xad
 7635 06bd 14       		.uleb128 0x14
 7636 06be 7000     		.ascii	"p\000"
 7637 06c0 01       		.byte	0x1
 7638 06c1 6503     		.2byte	0x365
 7639 06c3 8C020000 		.4byte	0x28c
 7640 06c7 14       		.uleb128 0x14
 7641 06c8 72657300 		.ascii	"res\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 207


 7642 06cc 01       		.byte	0x1
 7643 06cd 6603     		.2byte	0x366
 7644 06cf EF030000 		.4byte	0x3ef
 7645 06d3 00       		.byte	0
 7646 06d4 10       		.uleb128 0x10
 7647 06d5 00050000 		.4byte	.LASF91
 7648 06d9 01       		.byte	0x1
 7649 06da BF05     		.2byte	0x5bf
 7650 06dc EF030000 		.4byte	0x3ef
 7651 06e0 01       		.byte	0x1
 7652 06e1 13070000 		.4byte	0x713
 7653 06e5 11       		.uleb128 0x11
 7654 06e6 646A00   		.ascii	"dj\000"
 7655 06e9 01       		.byte	0x1
 7656 06ea C005     		.2byte	0x5c0
 7657 06ec 84050000 		.4byte	0x584
 7658 06f0 14       		.uleb128 0x14
 7659 06f1 72657300 		.ascii	"res\000"
 7660 06f5 01       		.byte	0x1
 7661 06f6 C305     		.2byte	0x5c3
 7662 06f8 EF030000 		.4byte	0x3ef
 7663 06fc 14       		.uleb128 0x14
 7664 06fd 6300     		.ascii	"c\000"
 7665 06ff 01       		.byte	0x1
 7666 0700 C405     		.2byte	0x5c4
 7667 0702 B8000000 		.4byte	0xb8
 7668 0706 14       		.uleb128 0x14
 7669 0707 64697200 		.ascii	"dir\000"
 7670 070b 01       		.byte	0x1
 7671 070c C405     		.2byte	0x5c4
 7672 070e 8C020000 		.4byte	0x28c
 7673 0712 00       		.byte	0
 7674 0713 10       		.uleb128 0x10
 7675 0714 A8050000 		.4byte	.LASF92
 7676 0718 01       		.byte	0x1
 7677 0719 9D03     		.2byte	0x39d
 7678 071b EF030000 		.4byte	0x3ef
 7679 071f 01       		.byte	0x1
 7680 0720 54070000 		.4byte	0x754
 7681 0724 11       		.uleb128 0x11
 7682 0725 667300   		.ascii	"fs\000"
 7683 0728 01       		.byte	0x1
 7684 0729 9E03     		.2byte	0x39e
 7685 072b 86020000 		.4byte	0x286
 7686 072f 12       		.uleb128 0x12
 7687 0730 2C030000 		.4byte	.LASF87
 7688 0734 01       		.byte	0x1
 7689 0735 9F03     		.2byte	0x39f
 7690 0737 CE000000 		.4byte	0xce
 7691 073b 14       		.uleb128 0x14
 7692 073c 72657300 		.ascii	"res\000"
 7693 0740 01       		.byte	0x1
 7694 0741 A203     		.2byte	0x3a2
 7695 0743 EF030000 		.4byte	0x3ef
 7696 0747 14       		.uleb128 0x14
 7697 0748 6E787400 		.ascii	"nxt\000"
 7698 074c 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 208


 7699 074d A303     		.2byte	0x3a3
 7700 074f CE000000 		.4byte	0xce
 7701 0753 00       		.byte	0
 7702 0754 16       		.uleb128 0x16
 7703 0755 E6000000 		.4byte	.LASF93
 7704 0759 01       		.byte	0x1
 7705 075a 210A     		.2byte	0xa21
 7706 075c EF030000 		.4byte	0x3ef
 7707 0760 01       		.byte	0x1
 7708 0761 95070000 		.4byte	0x795
 7709 0765 11       		.uleb128 0x11
 7710 0766 667000   		.ascii	"fp\000"
 7711 0769 01       		.byte	0x1
 7712 076a 220A     		.2byte	0xa22
 7713 076c 95070000 		.4byte	0x795
 7714 0770 14       		.uleb128 0x14
 7715 0771 72657300 		.ascii	"res\000"
 7716 0775 01       		.byte	0x1
 7717 0776 250A     		.2byte	0xa25
 7718 0778 EF030000 		.4byte	0x3ef
 7719 077c 14       		.uleb128 0x14
 7720 077d 74696D00 		.ascii	"tim\000"
 7721 0781 01       		.byte	0x1
 7722 0782 260A     		.2byte	0xa26
 7723 0784 CE000000 		.4byte	0xce
 7724 0788 14       		.uleb128 0x14
 7725 0789 64697200 		.ascii	"dir\000"
 7726 078d 01       		.byte	0x1
 7727 078e 270A     		.2byte	0xa27
 7728 0790 8C020000 		.4byte	0x28c
 7729 0794 00       		.byte	0
 7730 0795 0B       		.uleb128 0xb
 7731 0796 04       		.byte	0x4
 7732 0797 92020000 		.4byte	0x292
 7733 079b 10       		.uleb128 0x10
 7734 079c 58030000 		.4byte	.LASF94
 7735 07a0 01       		.byte	0x1
 7736 07a1 2B02     		.2byte	0x22b
 7737 07a3 7E000000 		.4byte	0x7e
 7738 07a7 01       		.byte	0x1
 7739 07a8 EF070000 		.4byte	0x7ef
 7740 07ac 11       		.uleb128 0x11
 7741 07ad 64737400 		.ascii	"dst\000"
 7742 07b1 01       		.byte	0x1
 7743 07b2 2B02     		.2byte	0x22b
 7744 07b4 EF070000 		.4byte	0x7ef
 7745 07b8 11       		.uleb128 0x11
 7746 07b9 73726300 		.ascii	"src\000"
 7747 07bd 01       		.byte	0x1
 7748 07be 2B02     		.2byte	0x22b
 7749 07c0 EF070000 		.4byte	0x7ef
 7750 07c4 11       		.uleb128 0x11
 7751 07c5 636E7400 		.ascii	"cnt\000"
 7752 07c9 01       		.byte	0x1
 7753 07ca 2B02     		.2byte	0x22b
 7754 07cc AD000000 		.4byte	0xad
 7755 07d0 14       		.uleb128 0x14
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 209


 7756 07d1 6400     		.ascii	"d\000"
 7757 07d3 01       		.byte	0x1
 7758 07d4 2C02     		.2byte	0x22c
 7759 07d6 F6070000 		.4byte	0x7f6
 7760 07da 14       		.uleb128 0x14
 7761 07db 7300     		.ascii	"s\000"
 7762 07dd 01       		.byte	0x1
 7763 07de 2C02     		.2byte	0x22c
 7764 07e0 F6070000 		.4byte	0x7f6
 7765 07e4 14       		.uleb128 0x14
 7766 07e5 7200     		.ascii	"r\000"
 7767 07e7 01       		.byte	0x1
 7768 07e8 2D02     		.2byte	0x22d
 7769 07ea 7E000000 		.4byte	0x7e
 7770 07ee 00       		.byte	0
 7771 07ef 0B       		.uleb128 0xb
 7772 07f0 04       		.byte	0x4
 7773 07f1 F5070000 		.4byte	0x7f5
 7774 07f5 17       		.uleb128 0x17
 7775 07f6 0B       		.uleb128 0xb
 7776 07f7 04       		.byte	0x4
 7777 07f8 FC070000 		.4byte	0x7fc
 7778 07fc 15       		.uleb128 0x15
 7779 07fd B8000000 		.4byte	0xb8
 7780 0801 10       		.uleb128 0x10
 7781 0802 DE000000 		.4byte	.LASF95
 7782 0806 01       		.byte	0x1
 7783 0807 3502     		.2byte	0x235
 7784 0809 7E000000 		.4byte	0x7e
 7785 080d 01       		.byte	0x1
 7786 080e 2B080000 		.4byte	0x82b
 7787 0812 11       		.uleb128 0x11
 7788 0813 73747200 		.ascii	"str\000"
 7789 0817 01       		.byte	0x1
 7790 0818 3502     		.2byte	0x235
 7791 081a B0050000 		.4byte	0x5b0
 7792 081e 11       		.uleb128 0x11
 7793 081f 63687200 		.ascii	"chr\000"
 7794 0823 01       		.byte	0x1
 7795 0824 3502     		.2byte	0x235
 7796 0826 7E000000 		.4byte	0x7e
 7797 082a 00       		.byte	0
 7798 082b 18       		.uleb128 0x18
 7799 082c 0D060000 		.4byte	.LASF97
 7800 0830 01       		.byte	0x1
 7801 0831 1102     		.2byte	0x211
 7802 0833 00000000 		.4byte	.LFB0
 7803 0837 12000000 		.4byte	.LFE0-.LFB0
 7804 083b 01       		.uleb128 0x1
 7805 083c 9C       		.byte	0x9c
 7806 083d 8A080000 		.4byte	0x88a
 7807 0841 19       		.uleb128 0x19
 7808 0842 64737400 		.ascii	"dst\000"
 7809 0846 01       		.byte	0x1
 7810 0847 1102     		.2byte	0x211
 7811 0849 8A080000 		.4byte	0x88a
 7812 084d 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 210


 7813 084e 50       		.byte	0x50
 7814 084f 19       		.uleb128 0x19
 7815 0850 73726300 		.ascii	"src\000"
 7816 0854 01       		.byte	0x1
 7817 0855 1102     		.2byte	0x211
 7818 0857 EF070000 		.4byte	0x7ef
 7819 085b 01       		.uleb128 0x1
 7820 085c 51       		.byte	0x51
 7821 085d 1A       		.uleb128 0x1a
 7822 085e 636E7400 		.ascii	"cnt\000"
 7823 0862 01       		.byte	0x1
 7824 0863 1102     		.2byte	0x211
 7825 0865 AD000000 		.4byte	0xad
 7826 0869 00000000 		.4byte	.LLST0
 7827 086d 1B       		.uleb128 0x1b
 7828 086e 6400     		.ascii	"d\000"
 7829 0870 01       		.byte	0x1
 7830 0871 1202     		.2byte	0x212
 7831 0873 8C020000 		.4byte	0x28c
 7832 0877 45000000 		.4byte	.LLST1
 7833 087b 1B       		.uleb128 0x1b
 7834 087c 7300     		.ascii	"s\000"
 7835 087e 01       		.byte	0x1
 7836 087f 1302     		.2byte	0x213
 7837 0881 F6070000 		.4byte	0x7f6
 7838 0885 8A000000 		.4byte	.LLST2
 7839 0889 00       		.byte	0
 7840 088a 1C       		.uleb128 0x1c
 7841 088b 04       		.byte	0x4
 7842 088c 1D       		.uleb128 0x1d
 7843 088d 45010000 		.4byte	.LASF99
 7844 0891 01       		.byte	0x1
 7845 0892 6102     		.2byte	0x261
 7846 0894 EF030000 		.4byte	0x3ef
 7847 0898 00000000 		.4byte	.LFB4
 7848 089c 64000000 		.4byte	.LFE4-.LFB4
 7849 08a0 01       		.uleb128 0x1
 7850 08a1 9C       		.byte	0x9c
 7851 08a2 E1080000 		.4byte	0x8e1
 7852 08a6 1A       		.uleb128 0x1a
 7853 08a7 646A00   		.ascii	"dj\000"
 7854 08aa 01       		.byte	0x1
 7855 08ab 6202     		.2byte	0x262
 7856 08ad 84050000 		.4byte	0x584
 7857 08b1 CF000000 		.4byte	.LLST3
 7858 08b5 19       		.uleb128 0x19
 7859 08b6 61636300 		.ascii	"acc\000"
 7860 08ba 01       		.byte	0x1
 7861 08bb 6302     		.2byte	0x263
 7862 08bd 7E000000 		.4byte	0x7e
 7863 08c1 01       		.uleb128 0x1
 7864 08c2 51       		.byte	0x51
 7865 08c3 1B       		.uleb128 0x1b
 7866 08c4 6900     		.ascii	"i\000"
 7867 08c6 01       		.byte	0x1
 7868 08c7 6602     		.2byte	0x266
 7869 08c9 AD000000 		.4byte	0xad
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 211


 7870 08cd 09010000 		.4byte	.LLST4
 7871 08d1 1B       		.uleb128 0x1b
 7872 08d2 626500   		.ascii	"be\000"
 7873 08d5 01       		.byte	0x1
 7874 08d6 6602     		.2byte	0x266
 7875 08d8 AD000000 		.4byte	0xad
 7876 08dc 33010000 		.4byte	.LLST5
 7877 08e0 00       		.byte	0
 7878 08e1 18       		.uleb128 0x18
 7879 08e2 DE030000 		.4byte	.LASF98
 7880 08e6 01       		.byte	0x1
 7881 08e7 2D07     		.2byte	0x72d
 7882 08e9 00000000 		.4byte	.LFB23
 7883 08ed 82000000 		.4byte	.LFE23-.LFB23
 7884 08f1 01       		.uleb128 0x1
 7885 08f2 9C       		.byte	0x9c
 7886 08f3 5E090000 		.4byte	0x95e
 7887 08f7 1A       		.uleb128 0x1a
 7888 08f8 646A00   		.ascii	"dj\000"
 7889 08fb 01       		.byte	0x1
 7890 08fc 2E07     		.2byte	0x72e
 7891 08fe 84050000 		.4byte	0x584
 7892 0902 52010000 		.4byte	.LLST6
 7893 0906 19       		.uleb128 0x19
 7894 0907 666E6F00 		.ascii	"fno\000"
 7895 090b 01       		.byte	0x1
 7896 090c 2F07     		.2byte	0x72f
 7897 090e 5E090000 		.4byte	0x95e
 7898 0912 01       		.uleb128 0x1
 7899 0913 51       		.byte	0x51
 7900 0914 1B       		.uleb128 0x1b
 7901 0915 6900     		.ascii	"i\000"
 7902 0917 01       		.byte	0x1
 7903 0918 3207     		.2byte	0x732
 7904 091a AD000000 		.4byte	0xad
 7905 091e 73010000 		.4byte	.LLST7
 7906 0922 1B       		.uleb128 0x1b
 7907 0923 6E7400   		.ascii	"nt\000"
 7908 0926 01       		.byte	0x1
 7909 0927 3307     		.2byte	0x733
 7910 0929 B8000000 		.4byte	0xb8
 7911 092d C2010000 		.4byte	.LLST8
 7912 0931 1B       		.uleb128 0x1b
 7913 0932 64697200 		.ascii	"dir\000"
 7914 0936 01       		.byte	0x1
 7915 0937 3307     		.2byte	0x733
 7916 0939 8C020000 		.4byte	0x28c
 7917 093d D6010000 		.4byte	.LLST9
 7918 0941 1B       		.uleb128 0x1b
 7919 0942 7000     		.ascii	"p\000"
 7920 0944 01       		.byte	0x1
 7921 0945 3407     		.2byte	0x734
 7922 0947 64090000 		.4byte	0x964
 7923 094b E9010000 		.4byte	.LLST10
 7924 094f 1B       		.uleb128 0x1b
 7925 0950 6300     		.ascii	"c\000"
 7926 0952 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 212


 7927 0953 3407     		.2byte	0x734
 7928 0955 D9000000 		.4byte	0xd9
 7929 0959 2A020000 		.4byte	.LLST11
 7930 095d 00       		.byte	0
 7931 095e 0B       		.uleb128 0xb
 7932 095f 04       		.byte	0x4
 7933 0960 63030000 		.4byte	0x363
 7934 0964 0B       		.uleb128 0xb
 7935 0965 04       		.byte	0x4
 7936 0966 D9000000 		.4byte	0xd9
 7937 096a 1D       		.uleb128 0x1d
 7938 096b F8050000 		.4byte	.LASF100
 7939 096f 01       		.byte	0x1
 7940 0970 CF02     		.2byte	0x2cf
 7941 0972 EF030000 		.4byte	0x3ef
 7942 0976 00000000 		.4byte	.LFB9
 7943 097a 74000000 		.4byte	.LFE9-.LFB9
 7944 097e 01       		.uleb128 0x1
 7945 097f 9C       		.byte	0x9c
 7946 0980 280A0000 		.4byte	0xa28
 7947 0984 1A       		.uleb128 0x1a
 7948 0985 667300   		.ascii	"fs\000"
 7949 0988 01       		.byte	0x1
 7950 0989 D002     		.2byte	0x2d0
 7951 098b 86020000 		.4byte	0x286
 7952 098f 48020000 		.4byte	.LLST12
 7953 0993 1E       		.uleb128 0x1e
 7954 0994 60030000 		.4byte	.LASF101
 7955 0998 01       		.byte	0x1
 7956 0999 D102     		.2byte	0x2d1
 7957 099b CE000000 		.4byte	0xce
 7958 099f A3020000 		.4byte	.LLST13
 7959 09a3 1F       		.uleb128 0x1f
 7960 09a4 34060000 		.4byte	.LASF102
 7961 09a8 01       		.byte	0x1
 7962 09a9 D402     		.2byte	0x2d4
 7963 09ab CE000000 		.4byte	0xce
 7964 09af FE020000 		.4byte	.LLST14
 7965 09b3 20       		.uleb128 0x20
 7966 09b4 42000000 		.4byte	.LBB2
 7967 09b8 1C000000 		.4byte	.LBE2-.LBB2
 7968 09bc EC090000 		.4byte	0x9ec
 7969 09c0 1B       		.uleb128 0x1b
 7970 09c1 6E6600   		.ascii	"nf\000"
 7971 09c4 01       		.byte	0x1
 7972 09c5 DF02     		.2byte	0x2df
 7973 09c7 B8000000 		.4byte	0xb8
 7974 09cb 11030000 		.4byte	.LLST15
 7975 09cf 21       		.uleb128 0x21
 7976 09d0 5A000000 		.4byte	.LVL46
 7977 09d4 33290000 		.4byte	0x2933
 7978 09d8 22       		.uleb128 0x22
 7979 09d9 01       		.uleb128 0x1
 7980 09da 53       		.byte	0x53
 7981 09db 01       		.uleb128 0x1
 7982 09dc 31       		.byte	0x31
 7983 09dd 22       		.uleb128 0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 213


 7984 09de 01       		.uleb128 0x1
 7985 09df 52       		.byte	0x52
 7986 09e0 02       		.uleb128 0x2
 7987 09e1 76       		.byte	0x76
 7988 09e2 00       		.sleb128 0
 7989 09e3 22       		.uleb128 0x22
 7990 09e4 01       		.uleb128 0x1
 7991 09e5 51       		.byte	0x51
 7992 09e6 03       		.uleb128 0x3
 7993 09e7 91       		.byte	0x91
 7994 09e8 64       		.sleb128 -28
 7995 09e9 06       		.byte	0x6
 7996 09ea 00       		.byte	0
 7997 09eb 00       		.byte	0
 7998 09ec 23       		.uleb128 0x23
 7999 09ed 2E000000 		.4byte	.LVL42
 8000 09f1 33290000 		.4byte	0x2933
 8001 09f5 0C0A0000 		.4byte	0xa0c
 8002 09f9 22       		.uleb128 0x22
 8003 09fa 01       		.uleb128 0x1
 8004 09fb 53       		.byte	0x53
 8005 09fc 01       		.uleb128 0x1
 8006 09fd 31       		.byte	0x31
 8007 09fe 22       		.uleb128 0x22
 8008 09ff 01       		.uleb128 0x1
 8009 0a00 52       		.byte	0x52
 8010 0a01 02       		.uleb128 0x2
 8011 0a02 76       		.byte	0x76
 8012 0a03 00       		.sleb128 0
 8013 0a04 22       		.uleb128 0x22
 8014 0a05 01       		.uleb128 0x1
 8015 0a06 51       		.byte	0x51
 8016 0a07 03       		.uleb128 0x3
 8017 0a08 91       		.byte	0x91
 8018 0a09 64       		.sleb128 -28
 8019 0a0a 06       		.byte	0x6
 8020 0a0b 00       		.byte	0
 8021 0a0c 21       		.uleb128 0x21
 8022 0a0d 6C000000 		.4byte	.LVL49
 8023 0a11 57290000 		.4byte	0x2957
 8024 0a15 22       		.uleb128 0x22
 8025 0a16 01       		.uleb128 0x1
 8026 0a17 53       		.byte	0x53
 8027 0a18 01       		.uleb128 0x1
 8028 0a19 31       		.byte	0x31
 8029 0a1a 22       		.uleb128 0x22
 8030 0a1b 01       		.uleb128 0x1
 8031 0a1c 52       		.byte	0x52
 8032 0a1d 02       		.uleb128 0x2
 8033 0a1e 75       		.byte	0x75
 8034 0a1f 00       		.sleb128 0
 8035 0a20 22       		.uleb128 0x22
 8036 0a21 01       		.uleb128 0x1
 8037 0a22 51       		.byte	0x51
 8038 0a23 02       		.uleb128 0x2
 8039 0a24 74       		.byte	0x74
 8040 0a25 30       		.sleb128 48
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 214


 8041 0a26 00       		.byte	0
 8042 0a27 00       		.byte	0
 8043 0a28 24       		.uleb128 0x24
 8044 0a29 BB050000 		.4byte	0x5bb
 8045 0a2d 00000000 		.4byte	.LFB25
 8046 0a31 A4000000 		.4byte	.LFE25-.LFB25
 8047 0a35 01       		.uleb128 0x1
 8048 0a36 9C       		.byte	0x9c
 8049 0a37 8A0A0000 		.4byte	0xa8a
 8050 0a3b 25       		.uleb128 0x25
 8051 0a3c CC050000 		.4byte	0x5cc
 8052 0a40 2F030000 		.4byte	.LLST16
 8053 0a44 25       		.uleb128 0x25
 8054 0a45 D7050000 		.4byte	0x5d7
 8055 0a49 74030000 		.4byte	.LLST17
 8056 0a4d 20       		.uleb128 0x20
 8057 0a4e 60000000 		.4byte	.LBB5
 8058 0a52 2C000000 		.4byte	.LBE5-.LBB5
 8059 0a56 6D0A0000 		.4byte	0xa6d
 8060 0a5a 25       		.uleb128 0x25
 8061 0a5b D7050000 		.4byte	0x5d7
 8062 0a5f A0030000 		.4byte	.LLST18
 8063 0a63 25       		.uleb128 0x25
 8064 0a64 CC050000 		.4byte	0x5cc
 8065 0a68 B6030000 		.4byte	.LLST19
 8066 0a6c 00       		.byte	0
 8067 0a6d 21       		.uleb128 0x21
 8068 0a6e 12000000 		.4byte	.LVL56
 8069 0a72 57290000 		.4byte	0x2957
 8070 0a76 22       		.uleb128 0x22
 8071 0a77 01       		.uleb128 0x1
 8072 0a78 53       		.byte	0x53
 8073 0a79 01       		.uleb128 0x1
 8074 0a7a 31       		.byte	0x31
 8075 0a7b 22       		.uleb128 0x22
 8076 0a7c 01       		.uleb128 0x1
 8077 0a7d 52       		.byte	0x52
 8078 0a7e 03       		.uleb128 0x3
 8079 0a7f F3       		.byte	0xf3
 8080 0a80 01       		.uleb128 0x1
 8081 0a81 51       		.byte	0x51
 8082 0a82 22       		.uleb128 0x22
 8083 0a83 01       		.uleb128 0x1
 8084 0a84 51       		.byte	0x51
 8085 0a85 02       		.uleb128 0x2
 8086 0a86 74       		.byte	0x74
 8087 0a87 30       		.sleb128 48
 8088 0a88 00       		.byte	0
 8089 0a89 00       		.byte	0
 8090 0a8a 26       		.uleb128 0x26
 8091 0a8b B9010000 		.4byte	.LASF113
 8092 0a8f 01       		.byte	0x1
 8093 0a90 BC02     		.2byte	0x2bc
 8094 0a92 01       		.byte	0x1
 8095 0a93 AD0A0000 		.4byte	0xaad
 8096 0a97 11       		.uleb128 0x11
 8097 0a98 667300   		.ascii	"fs\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 215


 8098 0a9b 01       		.byte	0x1
 8099 0a9c BD02     		.2byte	0x2bd
 8100 0a9e 86020000 		.4byte	0x286
 8101 0aa2 14       		.uleb128 0x14
 8102 0aa3 6900     		.ascii	"i\000"
 8103 0aa5 01       		.byte	0x1
 8104 0aa6 C002     		.2byte	0x2c0
 8105 0aa8 AD000000 		.4byte	0xad
 8106 0aac 00       		.byte	0
 8107 0aad 27       		.uleb128 0x27
 8108 0aae EB030000 		.4byte	.LASF103
 8109 0ab2 01       		.byte	0x1
 8110 0ab3 D807     		.2byte	0x7d8
 8111 0ab5 EF030000 		.4byte	0x3ef
 8112 0ab9 00000000 		.4byte	.LFB26
 8113 0abd 80030000 		.4byte	.LFE26-.LFB26
 8114 0ac1 01       		.uleb128 0x1
 8115 0ac2 9C       		.byte	0x9c
 8116 0ac3 730C0000 		.4byte	0xc73
 8117 0ac7 1E       		.uleb128 0x1e
 8118 0ac8 1A010000 		.4byte	.LASF83
 8119 0acc 01       		.byte	0x1
 8120 0acd D907     		.2byte	0x7d9
 8121 0acf 8A050000 		.4byte	0x58a
 8122 0ad3 D7030000 		.4byte	.LLST20
 8123 0ad7 1A       		.uleb128 0x1a
 8124 0ad8 72667300 		.ascii	"rfs\000"
 8125 0adc 01       		.byte	0x1
 8126 0add DA07     		.2byte	0x7da
 8127 0adf 730C0000 		.4byte	0xc73
 8128 0ae3 F8030000 		.4byte	.LLST21
 8129 0ae7 1E       		.uleb128 0x1e
 8130 0ae8 BD050000 		.4byte	.LASF104
 8131 0aec 01       		.byte	0x1
 8132 0aed DB07     		.2byte	0x7db
 8133 0aef B8000000 		.4byte	0xb8
 8134 0af3 19040000 		.4byte	.LLST22
 8135 0af7 1B       		.uleb128 0x1b
 8136 0af8 666D7400 		.ascii	"fmt\000"
 8137 0afc 01       		.byte	0x1
 8138 0afd DE07     		.2byte	0x7de
 8139 0aff B8000000 		.4byte	0xb8
 8140 0b03 3A040000 		.4byte	.LLST23
 8141 0b07 1B       		.uleb128 0x1b
 8142 0b08 6200     		.ascii	"b\000"
 8143 0b0a 01       		.byte	0x1
 8144 0b0b DE07     		.2byte	0x7de
 8145 0b0d B8000000 		.4byte	0xb8
 8146 0b11 9D040000 		.4byte	.LLST24
 8147 0b15 1B       		.uleb128 0x1b
 8148 0b16 706900   		.ascii	"pi\000"
 8149 0b19 01       		.byte	0x1
 8150 0b1a DE07     		.2byte	0x7de
 8151 0b1c B8000000 		.4byte	0xb8
 8152 0b20 BB040000 		.4byte	.LLST25
 8153 0b24 1B       		.uleb128 0x1b
 8154 0b25 74626C00 		.ascii	"tbl\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 216


 8155 0b29 01       		.byte	0x1
 8156 0b2a DE07     		.2byte	0x7de
 8157 0b2c 8C020000 		.4byte	0x28c
 8158 0b30 DB040000 		.4byte	.LLST26
 8159 0b34 1B       		.uleb128 0x1b
 8160 0b35 766F6C00 		.ascii	"vol\000"
 8161 0b39 01       		.byte	0x1
 8162 0b3a DF07     		.2byte	0x7df
 8163 0b3c AD000000 		.4byte	0xad
 8164 0b40 FF040000 		.4byte	.LLST27
 8165 0b44 1F       		.uleb128 0x1f
 8166 0b45 6A060000 		.4byte	.LASF105
 8167 0b49 01       		.byte	0x1
 8168 0b4a E007     		.2byte	0x7e0
 8169 0b4c FA030000 		.4byte	0x3fa
 8170 0b50 1D050000 		.4byte	.LLST28
 8171 0b54 1F       		.uleb128 0x1f
 8172 0b55 FA020000 		.4byte	.LASF106
 8173 0b59 01       		.byte	0x1
 8174 0b5a E107     		.2byte	0x7e1
 8175 0b5c CE000000 		.4byte	0xce
 8176 0b60 3B050000 		.4byte	.LLST29
 8177 0b64 1F       		.uleb128 0x1f
 8178 0b65 73010000 		.4byte	.LASF107
 8179 0b69 01       		.byte	0x1
 8180 0b6a E107     		.2byte	0x7e1
 8181 0b6c CE000000 		.4byte	0xce
 8182 0b70 66050000 		.4byte	.LLST30
 8183 0b74 1F       		.uleb128 0x1f
 8184 0b75 C2060000 		.4byte	.LASF108
 8185 0b79 01       		.byte	0x1
 8186 0b7a E107     		.2byte	0x7e1
 8187 0b7c CE000000 		.4byte	0xce
 8188 0b80 16060000 		.4byte	.LLST31
 8189 0b84 1F       		.uleb128 0x1f
 8190 0b85 00030000 		.4byte	.LASF109
 8191 0b89 01       		.byte	0x1
 8192 0b8a E107     		.2byte	0x7e1
 8193 0b8c CE000000 		.4byte	0xce
 8194 0b90 52060000 		.4byte	.LLST32
 8195 0b94 1F       		.uleb128 0x1f
 8196 0b95 F7030000 		.4byte	.LASF110
 8197 0b99 01       		.byte	0x1
 8198 0b9a E107     		.2byte	0x7e1
 8199 0b9c CE000000 		.4byte	0xce
 8200 0ba0 71060000 		.4byte	.LLST33
 8201 0ba4 1F       		.uleb128 0x1f
 8202 0ba5 67030000 		.4byte	.LASF111
 8203 0ba9 01       		.byte	0x1
 8204 0baa E107     		.2byte	0x7e1
 8205 0bac CE000000 		.4byte	0xce
 8206 0bb0 DB060000 		.4byte	.LLST34
 8207 0bb4 1F       		.uleb128 0x1f
 8208 0bb5 D8050000 		.4byte	.LASF112
 8209 0bb9 01       		.byte	0x1
 8210 0bba E207     		.2byte	0x7e2
 8211 0bbc C3000000 		.4byte	0xc3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 217


 8212 0bc0 07070000 		.4byte	.LLST35
 8213 0bc4 1B       		.uleb128 0x1b
 8214 0bc5 7000     		.ascii	"p\000"
 8215 0bc7 01       		.byte	0x1
 8216 0bc8 E307     		.2byte	0x7e3
 8217 0bca 90050000 		.4byte	0x590
 8218 0bce 1B070000 		.4byte	.LLST36
 8219 0bd2 1B       		.uleb128 0x1b
 8220 0bd3 667300   		.ascii	"fs\000"
 8221 0bd6 01       		.byte	0x1
 8222 0bd7 E407     		.2byte	0x7e4
 8223 0bd9 86020000 		.4byte	0x286
 8224 0bdd 5D070000 		.4byte	.LLST37
 8225 0be1 28       		.uleb128 0x28
 8226 0be2 8A0A0000 		.4byte	0xa8a
 8227 0be6 1E030000 		.4byte	.LBB9
 8228 0bea 10000000 		.4byte	.LBE9-.LBB9
 8229 0bee 01       		.byte	0x1
 8230 0bef 6E08     		.2byte	0x86e
 8231 0bf1 0E0C0000 		.4byte	0xc0e
 8232 0bf5 25       		.uleb128 0x25
 8233 0bf6 970A0000 		.4byte	0xa97
 8234 0bfa 7B070000 		.4byte	.LLST38
 8235 0bfe 29       		.uleb128 0x29
 8236 0bff 1E030000 		.4byte	.LBB10
 8237 0c03 10000000 		.4byte	.LBE10-.LBB10
 8238 0c07 2A       		.uleb128 0x2a
 8239 0c08 A20A0000 		.4byte	0xaa2
 8240 0c0c 00       		.byte	0
 8241 0c0d 00       		.byte	0
 8242 0c0e 2B       		.uleb128 0x2b
 8243 0c0f 3E000000 		.4byte	.LVL71
 8244 0c13 7B290000 		.4byte	0x297b
 8245 0c17 23       		.uleb128 0x23
 8246 0c18 5E000000 		.4byte	.LVL73
 8247 0c1c 90290000 		.4byte	0x2990
 8248 0c20 2A0C0000 		.4byte	0xc2a
 8249 0c24 22       		.uleb128 0x22
 8250 0c25 01       		.uleb128 0x1
 8251 0c26 50       		.byte	0x50
 8252 0c27 01       		.uleb128 0x1
 8253 0c28 30       		.byte	0x30
 8254 0c29 00       		.byte	0
 8255 0c2a 23       		.uleb128 0x23
 8256 0c2b 76000000 		.4byte	.LVL76
 8257 0c2f BB050000 		.4byte	0x5bb
 8258 0c33 430C0000 		.4byte	0xc43
 8259 0c37 22       		.uleb128 0x22
 8260 0c38 01       		.uleb128 0x1
 8261 0c39 51       		.byte	0x51
 8262 0c3a 01       		.uleb128 0x1
 8263 0c3b 30       		.byte	0x30
 8264 0c3c 22       		.uleb128 0x22
 8265 0c3d 01       		.uleb128 0x1
 8266 0c3e 50       		.byte	0x50
 8267 0c3f 02       		.uleb128 0x2
 8268 0c40 74       		.byte	0x74
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 218


 8269 0c41 00       		.sleb128 0
 8270 0c42 00       		.byte	0
 8271 0c43 23       		.uleb128 0x23
 8272 0c44 B4000000 		.4byte	.LVL82
 8273 0c48 BB050000 		.4byte	0x5bb
 8274 0c4c 5D0C0000 		.4byte	0xc5d
 8275 0c50 22       		.uleb128 0x22
 8276 0c51 01       		.uleb128 0x1
 8277 0c52 51       		.byte	0x51
 8278 0c53 02       		.uleb128 0x2
 8279 0c54 76       		.byte	0x76
 8280 0c55 00       		.sleb128 0
 8281 0c56 22       		.uleb128 0x22
 8282 0c57 01       		.uleb128 0x1
 8283 0c58 50       		.byte	0x50
 8284 0c59 02       		.uleb128 0x2
 8285 0c5a 74       		.byte	0x74
 8286 0c5b 00       		.sleb128 0
 8287 0c5c 00       		.byte	0
 8288 0c5d 21       		.uleb128 0x21
 8289 0c5e 68020000 		.4byte	.LVL115
 8290 0c62 57290000 		.4byte	0x2957
 8291 0c66 22       		.uleb128 0x22
 8292 0c67 01       		.uleb128 0x1
 8293 0c68 53       		.byte	0x53
 8294 0c69 01       		.uleb128 0x1
 8295 0c6a 31       		.byte	0x31
 8296 0c6b 22       		.uleb128 0x22
 8297 0c6c 01       		.uleb128 0x1
 8298 0c6d 51       		.byte	0x51
 8299 0c6e 02       		.uleb128 0x2
 8300 0c6f 76       		.byte	0x76
 8301 0c70 00       		.sleb128 0
 8302 0c71 00       		.byte	0
 8303 0c72 00       		.byte	0
 8304 0c73 0B       		.uleb128 0xb
 8305 0c74 04       		.byte	0x4
 8306 0c75 86020000 		.4byte	0x286
 8307 0c79 24       		.uleb128 0x24
 8308 0c7a E4050000 		.4byte	0x5e4
 8309 0c7e 00000000 		.4byte	.LFB27
 8310 0c82 26000000 		.4byte	.LFE27-.LFB27
 8311 0c86 01       		.uleb128 0x1
 8312 0c87 9C       		.byte	0x9c
 8313 0c88 C40C0000 		.4byte	0xcc4
 8314 0c8c 25       		.uleb128 0x25
 8315 0c8d F5050000 		.4byte	0x5f5
 8316 0c91 8E070000 		.4byte	.LLST39
 8317 0c95 25       		.uleb128 0x25
 8318 0c96 00060000 		.4byte	0x600
 8319 0c9a AF070000 		.4byte	.LLST40
 8320 0c9e 29       		.uleb128 0x29
 8321 0c9f 14000000 		.4byte	.LBB13
 8322 0ca3 0E000000 		.4byte	.LBE13-.LBB13
 8323 0ca7 25       		.uleb128 0x25
 8324 0ca8 00060000 		.4byte	0x600
 8325 0cac D0070000 		.4byte	.LLST41
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 219


 8326 0cb0 25       		.uleb128 0x25
 8327 0cb1 F5050000 		.4byte	0x5f5
 8328 0cb5 EF070000 		.4byte	.LLST42
 8329 0cb9 2B       		.uleb128 0x2b
 8330 0cba 1A000000 		.4byte	.LVL121
 8331 0cbe 7B290000 		.4byte	0x297b
 8332 0cc2 00       		.byte	0
 8333 0cc3 00       		.byte	0
 8334 0cc4 26       		.uleb128 0x26
 8335 0cc5 CD030000 		.4byte	.LASF114
 8336 0cc9 01       		.byte	0x1
 8337 0cca 2202     		.2byte	0x222
 8338 0ccc 01       		.byte	0x1
 8339 0ccd 000D0000 		.4byte	0xd00
 8340 0cd1 11       		.uleb128 0x11
 8341 0cd2 64737400 		.ascii	"dst\000"
 8342 0cd6 01       		.byte	0x1
 8343 0cd7 2202     		.2byte	0x222
 8344 0cd9 8A080000 		.4byte	0x88a
 8345 0cdd 11       		.uleb128 0x11
 8346 0cde 76616C00 		.ascii	"val\000"
 8347 0ce2 01       		.byte	0x1
 8348 0ce3 2202     		.2byte	0x222
 8349 0ce5 7E000000 		.4byte	0x7e
 8350 0ce9 11       		.uleb128 0x11
 8351 0cea 636E7400 		.ascii	"cnt\000"
 8352 0cee 01       		.byte	0x1
 8353 0cef 2202     		.2byte	0x222
 8354 0cf1 AD000000 		.4byte	0xad
 8355 0cf5 14       		.uleb128 0x14
 8356 0cf6 6400     		.ascii	"d\000"
 8357 0cf8 01       		.byte	0x1
 8358 0cf9 2302     		.2byte	0x223
 8359 0cfb 8C020000 		.4byte	0x28c
 8360 0cff 00       		.byte	0
 8361 0d00 1D       		.uleb128 0x1d
 8362 0d01 5A060000 		.4byte	.LASF115
 8363 0d05 01       		.byte	0x1
 8364 0d06 F902     		.2byte	0x2f9
 8365 0d08 EF030000 		.4byte	0x3ef
 8366 0d0c 00000000 		.4byte	.LFB10
 8367 0d10 EC000000 		.4byte	.LFE10-.LFB10
 8368 0d14 01       		.uleb128 0x1
 8369 0d15 9C       		.byte	0x9c
 8370 0d16 C30D0000 		.4byte	0xdc3
 8371 0d1a 1A       		.uleb128 0x1a
 8372 0d1b 667300   		.ascii	"fs\000"
 8373 0d1e 01       		.byte	0x1
 8374 0d1f FA02     		.2byte	0x2fa
 8375 0d21 86020000 		.4byte	0x286
 8376 0d25 10080000 		.4byte	.LLST43
 8377 0d29 1B       		.uleb128 0x1b
 8378 0d2a 72657300 		.ascii	"res\000"
 8379 0d2e 01       		.byte	0x1
 8380 0d2f FD02     		.2byte	0x2fd
 8381 0d31 EF030000 		.4byte	0x3ef
 8382 0d35 3C080000 		.4byte	.LLST44
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 220


 8383 0d39 28       		.uleb128 0x28
 8384 0d3a C40C0000 		.4byte	0xcc4
 8385 0d3e 28000000 		.4byte	.LBB17
 8386 0d42 0C000000 		.4byte	.LBE17-.LBB17
 8387 0d46 01       		.byte	0x1
 8388 0d47 0603     		.2byte	0x306
 8389 0d49 7C0D0000 		.4byte	0xd7c
 8390 0d4d 25       		.uleb128 0x25
 8391 0d4e E90C0000 		.4byte	0xce9
 8392 0d52 5A080000 		.4byte	.LLST45
 8393 0d56 25       		.uleb128 0x25
 8394 0d57 DD0C0000 		.4byte	0xcdd
 8395 0d5b A9080000 		.4byte	.LLST46
 8396 0d5f 25       		.uleb128 0x25
 8397 0d60 D10C0000 		.4byte	0xcd1
 8398 0d64 BD080000 		.4byte	.LLST47
 8399 0d68 29       		.uleb128 0x29
 8400 0d69 28000000 		.4byte	.LBB18
 8401 0d6d 0C000000 		.4byte	.LBE18-.LBB18
 8402 0d71 2C       		.uleb128 0x2c
 8403 0d72 F50C0000 		.4byte	0xcf5
 8404 0d76 DD080000 		.4byte	.LLST48
 8405 0d7a 00       		.byte	0
 8406 0d7b 00       		.byte	0
 8407 0d7c 23       		.uleb128 0x23
 8408 0d7d 0A000000 		.4byte	.LVL124
 8409 0d81 6A090000 		.4byte	0x96a
 8410 0d85 950D0000 		.4byte	0xd95
 8411 0d89 22       		.uleb128 0x22
 8412 0d8a 01       		.uleb128 0x1
 8413 0d8b 51       		.byte	0x51
 8414 0d8c 01       		.uleb128 0x1
 8415 0d8d 30       		.byte	0x30
 8416 0d8e 22       		.uleb128 0x22
 8417 0d8f 01       		.uleb128 0x1
 8418 0d90 50       		.byte	0x50
 8419 0d91 02       		.uleb128 0x2
 8420 0d92 74       		.byte	0x74
 8421 0d93 00       		.sleb128 0
 8422 0d94 00       		.byte	0
 8423 0d95 23       		.uleb128 0x23
 8424 0d96 A8000000 		.4byte	.LVL133
 8425 0d9a 33290000 		.4byte	0x2933
 8426 0d9e AE0D0000 		.4byte	0xdae
 8427 0da2 22       		.uleb128 0x22
 8428 0da3 01       		.uleb128 0x1
 8429 0da4 53       		.byte	0x53
 8430 0da5 01       		.uleb128 0x1
 8431 0da6 31       		.byte	0x31
 8432 0da7 22       		.uleb128 0x22
 8433 0da8 01       		.uleb128 0x1
 8434 0da9 51       		.byte	0x51
 8435 0daa 02       		.uleb128 0x2
 8436 0dab 74       		.byte	0x74
 8437 0dac 30       		.sleb128 48
 8438 0dad 00       		.byte	0
 8439 0dae 21       		.uleb128 0x21
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 221


 8440 0daf B6000000 		.4byte	.LVL135
 8441 0db3 A5290000 		.4byte	0x29a5
 8442 0db7 22       		.uleb128 0x22
 8443 0db8 01       		.uleb128 0x1
 8444 0db9 52       		.byte	0x52
 8445 0dba 01       		.uleb128 0x1
 8446 0dbb 30       		.byte	0x30
 8447 0dbc 22       		.uleb128 0x22
 8448 0dbd 01       		.uleb128 0x1
 8449 0dbe 51       		.byte	0x51
 8450 0dbf 01       		.uleb128 0x1
 8451 0dc0 30       		.byte	0x30
 8452 0dc1 00       		.byte	0
 8453 0dc2 00       		.byte	0
 8454 0dc3 2D       		.uleb128 0x2d
 8455 0dc4 B9030000 		.4byte	.LASF123
 8456 0dc8 01       		.byte	0x1
 8457 0dc9 2103     		.2byte	0x321
 8458 0dcb CE000000 		.4byte	0xce
 8459 0dcf 00000000 		.4byte	.LFB11
 8460 0dd3 18000000 		.4byte	.LFE11-.LFB11
 8461 0dd7 01       		.uleb128 0x1
 8462 0dd8 9C       		.byte	0x9c
 8463 0dd9 FD0D0000 		.4byte	0xdfd
 8464 0ddd 1A       		.uleb128 0x1a
 8465 0dde 667300   		.ascii	"fs\000"
 8466 0de1 01       		.byte	0x1
 8467 0de2 2203     		.2byte	0x322
 8468 0de4 86020000 		.4byte	0x286
 8469 0de8 13090000 		.4byte	.LLST49
 8470 0dec 1E       		.uleb128 0x1e
 8471 0ded 2C030000 		.4byte	.LASF87
 8472 0df1 01       		.byte	0x1
 8473 0df2 2303     		.2byte	0x323
 8474 0df4 CE000000 		.4byte	0xce
 8475 0df8 34090000 		.4byte	.LLST50
 8476 0dfc 00       		.byte	0
 8477 0dfd 24       		.uleb128 0x24
 8478 0dfe 0C060000 		.4byte	0x60c
 8479 0e02 00000000 		.4byte	.LFB12
 8480 0e06 D8000000 		.4byte	.LFE12-.LFB12
 8481 0e0a 01       		.uleb128 0x1
 8482 0e0b 9C       		.byte	0x9c
 8483 0e0c BF0E0000 		.4byte	0xebf
 8484 0e10 25       		.uleb128 0x25
 8485 0e11 1D060000 		.4byte	0x61d
 8486 0e15 62090000 		.4byte	.LLST51
 8487 0e19 25       		.uleb128 0x25
 8488 0e1a 28060000 		.4byte	0x628
 8489 0e1e D6090000 		.4byte	.LLST52
 8490 0e22 2A       		.uleb128 0x2a
 8491 0e23 34060000 		.4byte	0x634
 8492 0e27 2A       		.uleb128 0x2a
 8493 0e28 3F060000 		.4byte	0x63f
 8494 0e2c 2A       		.uleb128 0x2a
 8495 0e2d 4A060000 		.4byte	0x64a
 8496 0e31 29       		.uleb128 0x29
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 222


 8497 0e32 0E000000 		.4byte	.LBB21
 8498 0e36 C6000000 		.4byte	.LBE21-.LBB21
 8499 0e3a 25       		.uleb128 0x25
 8500 0e3b 28060000 		.4byte	0x628
 8501 0e3f 550A0000 		.4byte	.LLST53
 8502 0e43 25       		.uleb128 0x25
 8503 0e44 1D060000 		.4byte	0x61d
 8504 0e48 C60A0000 		.4byte	.LLST54
 8505 0e4c 29       		.uleb128 0x29
 8506 0e4d 0E000000 		.4byte	.LBB22
 8507 0e51 C6000000 		.4byte	.LBE22-.LBB22
 8508 0e55 2C       		.uleb128 0x2c
 8509 0e56 34060000 		.4byte	0x634
 8510 0e5a 2C0B0000 		.4byte	.LLST55
 8511 0e5e 2C       		.uleb128 0x2c
 8512 0e5f 3F060000 		.4byte	0x63f
 8513 0e63 510B0000 		.4byte	.LLST56
 8514 0e67 2C       		.uleb128 0x2c
 8515 0e68 4A060000 		.4byte	0x64a
 8516 0e6c 9B0B0000 		.4byte	.LLST57
 8517 0e70 23       		.uleb128 0x23
 8518 0e71 2E000000 		.4byte	.LVL147
 8519 0e75 6A090000 		.4byte	0x96a
 8520 0e79 840E0000 		.4byte	0xe84
 8521 0e7d 22       		.uleb128 0x22
 8522 0e7e 01       		.uleb128 0x1
 8523 0e7f 50       		.byte	0x50
 8524 0e80 02       		.uleb128 0x2
 8525 0e81 75       		.byte	0x75
 8526 0e82 00       		.sleb128 0
 8527 0e83 00       		.byte	0
 8528 0e84 23       		.uleb128 0x23
 8529 0e85 4C000000 		.4byte	.LVL150
 8530 0e89 6A090000 		.4byte	0x96a
 8531 0e8d 980E0000 		.4byte	0xe98
 8532 0e91 22       		.uleb128 0x22
 8533 0e92 01       		.uleb128 0x1
 8534 0e93 50       		.byte	0x50
 8535 0e94 02       		.uleb128 0x2
 8536 0e95 75       		.byte	0x75
 8537 0e96 00       		.sleb128 0
 8538 0e97 00       		.byte	0
 8539 0e98 23       		.uleb128 0x23
 8540 0e99 78000000 		.4byte	.LVL156
 8541 0e9d 6A090000 		.4byte	0x96a
 8542 0ea1 AC0E0000 		.4byte	0xeac
 8543 0ea5 22       		.uleb128 0x22
 8544 0ea6 01       		.uleb128 0x1
 8545 0ea7 50       		.byte	0x50
 8546 0ea8 02       		.uleb128 0x2
 8547 0ea9 75       		.byte	0x75
 8548 0eaa 00       		.sleb128 0
 8549 0eab 00       		.byte	0
 8550 0eac 21       		.uleb128 0x21
 8551 0ead A0000000 		.4byte	.LVL165
 8552 0eb1 6A090000 		.4byte	0x96a
 8553 0eb5 22       		.uleb128 0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 223


 8554 0eb6 01       		.uleb128 0x1
 8555 0eb7 50       		.byte	0x50
 8556 0eb8 02       		.uleb128 0x2
 8557 0eb9 75       		.byte	0x75
 8558 0eba 00       		.sleb128 0
 8559 0ebb 00       		.byte	0
 8560 0ebc 00       		.byte	0
 8561 0ebd 00       		.byte	0
 8562 0ebe 00       		.byte	0
 8563 0ebf 1D       		.uleb128 0x1d
 8564 0ec0 AF060000 		.4byte	.LASF116
 8565 0ec4 01       		.byte	0x1
 8566 0ec5 2904     		.2byte	0x429
 8567 0ec7 EF030000 		.4byte	0x3ef
 8568 0ecb 00000000 		.4byte	.LFB16
 8569 0ecf 88000000 		.4byte	.LFE16-.LFB16
 8570 0ed3 01       		.uleb128 0x1
 8571 0ed4 9C       		.byte	0x9c
 8572 0ed5 2A0F0000 		.4byte	0xf2a
 8573 0ed9 1A       		.uleb128 0x1a
 8574 0eda 646A00   		.ascii	"dj\000"
 8575 0edd 01       		.byte	0x1
 8576 0ede 2A04     		.2byte	0x42a
 8577 0ee0 84050000 		.4byte	0x584
 8578 0ee4 FD0B0000 		.4byte	.LLST58
 8579 0ee8 1A       		.uleb128 0x1a
 8580 0ee9 69647800 		.ascii	"idx\000"
 8581 0eed 01       		.byte	0x1
 8582 0eee 2B04     		.2byte	0x42b
 8583 0ef0 C3000000 		.4byte	0xc3
 8584 0ef4 3F0C0000 		.4byte	.LLST59
 8585 0ef8 1F       		.uleb128 0x1f
 8586 0ef9 2C030000 		.4byte	.LASF87
 8587 0efd 01       		.byte	0x1
 8588 0efe 2E04     		.2byte	0x42e
 8589 0f00 CE000000 		.4byte	0xce
 8590 0f04 8B0C0000 		.4byte	.LLST60
 8591 0f08 1B       		.uleb128 0x1b
 8592 0f09 696300   		.ascii	"ic\000"
 8593 0f0c 01       		.byte	0x1
 8594 0f0d 2F04     		.2byte	0x42f
 8595 0f0f C3000000 		.4byte	0xc3
 8596 0f13 D50C0000 		.4byte	.LLST61
 8597 0f17 2B       		.uleb128 0x2b
 8598 0f18 4C000000 		.4byte	.LVL178
 8599 0f1c 0C060000 		.4byte	0x60c
 8600 0f20 2B       		.uleb128 0x2b
 8601 0f21 6C000000 		.4byte	.LVL183
 8602 0f25 C30D0000 		.4byte	0xdc3
 8603 0f29 00       		.byte	0
 8604 0f2a 24       		.uleb128 0x24
 8605 0f2b 55060000 		.4byte	0x655
 8606 0f2f 00000000 		.4byte	.LFB21
 8607 0f33 28000000 		.4byte	.LFE21-.LFB21
 8608 0f37 01       		.uleb128 0x1
 8609 0f38 9C       		.byte	0x9c
 8610 0f39 930F0000 		.4byte	0xf93
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 224


 8611 0f3d 25       		.uleb128 0x25
 8612 0f3e 66060000 		.4byte	0x666
 8613 0f42 F30C0000 		.4byte	.LLST62
 8614 0f46 2C       		.uleb128 0x2c
 8615 0f47 71060000 		.4byte	0x671
 8616 0f4b 1F0D0000 		.4byte	.LLST63
 8617 0f4f 20       		.uleb128 0x20
 8618 0f50 0E000000 		.4byte	.LBB25
 8619 0f54 18000000 		.4byte	.LBE25-.LBB25
 8620 0f58 820F0000 		.4byte	0xf82
 8621 0f5c 25       		.uleb128 0x25
 8622 0f5d 66060000 		.4byte	0x666
 8623 0f61 3D0D0000 		.4byte	.LLST64
 8624 0f65 29       		.uleb128 0x29
 8625 0f66 0E000000 		.4byte	.LBB26
 8626 0f6a 18000000 		.4byte	.LBE26-.LBB26
 8627 0f6e 2C       		.uleb128 0x2c
 8628 0f6f 71060000 		.4byte	0x671
 8629 0f73 500D0000 		.4byte	.LLST65
 8630 0f77 2B       		.uleb128 0x2b
 8631 0f78 16000000 		.4byte	.LVL193
 8632 0f7c 6A090000 		.4byte	0x96a
 8633 0f80 00       		.byte	0
 8634 0f81 00       		.byte	0
 8635 0f82 21       		.uleb128 0x21
 8636 0f83 0A000000 		.4byte	.LVL190
 8637 0f87 BF0E0000 		.4byte	0xebf
 8638 0f8b 22       		.uleb128 0x22
 8639 0f8c 01       		.uleb128 0x1
 8640 0f8d 50       		.byte	0x50
 8641 0f8e 02       		.uleb128 0x2
 8642 0f8f 74       		.byte	0x74
 8643 0f90 00       		.sleb128 0
 8644 0f91 00       		.byte	0
 8645 0f92 00       		.byte	0
 8646 0f93 24       		.uleb128 0x24
 8647 0f94 7E060000 		.4byte	0x67e
 8648 0f98 00000000 		.4byte	.LFB13
 8649 0f9c 04010000 		.4byte	.LFE13-.LFB13
 8650 0fa0 01       		.uleb128 0x1
 8651 0fa1 9C       		.byte	0x9c
 8652 0fa2 69100000 		.4byte	0x1069
 8653 0fa6 25       		.uleb128 0x25
 8654 0fa7 8F060000 		.4byte	0x68f
 8655 0fab 630D0000 		.4byte	.LLST66
 8656 0faf 25       		.uleb128 0x25
 8657 0fb0 9A060000 		.4byte	0x69a
 8658 0fb4 8F0D0000 		.4byte	.LLST67
 8659 0fb8 25       		.uleb128 0x25
 8660 0fb9 A6060000 		.4byte	0x6a6
 8661 0fbd 030E0000 		.4byte	.LLST68
 8662 0fc1 2A       		.uleb128 0x2a
 8663 0fc2 B2060000 		.4byte	0x6b2
 8664 0fc6 2A       		.uleb128 0x2a
 8665 0fc7 BD060000 		.4byte	0x6bd
 8666 0fcb 2E       		.uleb128 0x2e
 8667 0fcc C7060000 		.4byte	0x6c7
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 225


 8668 0fd0 01       		.uleb128 0x1
 8669 0fd1 50       		.byte	0x50
 8670 0fd2 29       		.uleb128 0x29
 8671 0fd3 14000000 		.4byte	.LBB29
 8672 0fd7 EE000000 		.4byte	.LBE29-.LBB29
 8673 0fdb 25       		.uleb128 0x25
 8674 0fdc A6060000 		.4byte	0x6a6
 8675 0fe0 900E0000 		.4byte	.LLST69
 8676 0fe4 25       		.uleb128 0x25
 8677 0fe5 9A060000 		.4byte	0x69a
 8678 0fe9 290F0000 		.4byte	.LLST70
 8679 0fed 25       		.uleb128 0x25
 8680 0fee 8F060000 		.4byte	0x68f
 8681 0ff2 9D0F0000 		.4byte	.LLST71
 8682 0ff6 29       		.uleb128 0x29
 8683 0ff7 14000000 		.4byte	.LBB30
 8684 0ffb EE000000 		.4byte	.LBE30-.LBB30
 8685 0fff 2C       		.uleb128 0x2c
 8686 1000 B2060000 		.4byte	0x6b2
 8687 1004 B00F0000 		.4byte	.LLST72
 8688 1008 2C       		.uleb128 0x2c
 8689 1009 BD060000 		.4byte	0x6bd
 8690 100d 00100000 		.4byte	.LLST73
 8691 1011 2C       		.uleb128 0x2c
 8692 1012 C7060000 		.4byte	0x6c7
 8693 1016 A6100000 		.4byte	.LLST74
 8694 101a 23       		.uleb128 0x23
 8695 101b 34000000 		.4byte	.LVL203
 8696 101f 6A090000 		.4byte	0x96a
 8697 1023 2E100000 		.4byte	0x102e
 8698 1027 22       		.uleb128 0x22
 8699 1028 01       		.uleb128 0x1
 8700 1029 50       		.byte	0x50
 8701 102a 02       		.uleb128 0x2
 8702 102b 74       		.byte	0x74
 8703 102c 00       		.sleb128 0
 8704 102d 00       		.byte	0
 8705 102e 23       		.uleb128 0x23
 8706 102f 72000000 		.4byte	.LVL211
 8707 1033 6A090000 		.4byte	0x96a
 8708 1037 42100000 		.4byte	0x1042
 8709 103b 22       		.uleb128 0x22
 8710 103c 01       		.uleb128 0x1
 8711 103d 50       		.byte	0x50
 8712 103e 02       		.uleb128 0x2
 8713 103f 74       		.byte	0x74
 8714 1040 00       		.sleb128 0
 8715 1041 00       		.byte	0
 8716 1042 23       		.uleb128 0x23
 8717 1043 AA000000 		.4byte	.LVL221
 8718 1047 6A090000 		.4byte	0x96a
 8719 104b 56100000 		.4byte	0x1056
 8720 104f 22       		.uleb128 0x22
 8721 1050 01       		.uleb128 0x1
 8722 1051 50       		.byte	0x50
 8723 1052 02       		.uleb128 0x2
 8724 1053 74       		.byte	0x74
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 226


 8725 1054 00       		.sleb128 0
 8726 1055 00       		.byte	0
 8727 1056 21       		.uleb128 0x21
 8728 1057 D2000000 		.4byte	.LVL228
 8729 105b 6A090000 		.4byte	0x96a
 8730 105f 22       		.uleb128 0x22
 8731 1060 01       		.uleb128 0x1
 8732 1061 50       		.byte	0x50
 8733 1062 02       		.uleb128 0x2
 8734 1063 74       		.byte	0x74
 8735 1064 00       		.sleb128 0
 8736 1065 00       		.byte	0
 8737 1066 00       		.byte	0
 8738 1067 00       		.byte	0
 8739 1068 00       		.byte	0
 8740 1069 1D       		.uleb128 0x1d
 8741 106a 82040000 		.4byte	.LASF117
 8742 106e 01       		.byte	0x1
 8743 106f D203     		.2byte	0x3d2
 8744 1071 CE000000 		.4byte	0xce
 8745 1075 00000000 		.4byte	.LFB15
 8746 1079 A8000000 		.4byte	.LFE15-.LFB15
 8747 107d 01       		.uleb128 0x1
 8748 107e 9C       		.byte	0x9c
 8749 107f 44110000 		.4byte	0x1144
 8750 1083 1A       		.uleb128 0x1a
 8751 1084 667300   		.ascii	"fs\000"
 8752 1087 01       		.byte	0x1
 8753 1088 D303     		.2byte	0x3d3
 8754 108a 86020000 		.4byte	0x286
 8755 108e DA100000 		.4byte	.LLST75
 8756 1092 1E       		.uleb128 0x1e
 8757 1093 2C030000 		.4byte	.LASF87
 8758 1097 01       		.byte	0x1
 8759 1098 D403     		.2byte	0x3d4
 8760 109a CE000000 		.4byte	0xce
 8761 109e 1C110000 		.4byte	.LLST76
 8762 10a2 1B       		.uleb128 0x1b
 8763 10a3 637300   		.ascii	"cs\000"
 8764 10a6 01       		.byte	0x1
 8765 10a7 D703     		.2byte	0x3d7
 8766 10a9 CE000000 		.4byte	0xce
 8767 10ad 5E110000 		.4byte	.LLST77
 8768 10b1 1B       		.uleb128 0x1b
 8769 10b2 6E636C00 		.ascii	"ncl\000"
 8770 10b6 01       		.byte	0x1
 8771 10b7 D703     		.2byte	0x3d7
 8772 10b9 CE000000 		.4byte	0xce
 8773 10bd 7C110000 		.4byte	.LLST78
 8774 10c1 1B       		.uleb128 0x1b
 8775 10c2 73636C00 		.ascii	"scl\000"
 8776 10c6 01       		.byte	0x1
 8777 10c7 D703     		.2byte	0x3d7
 8778 10c9 CE000000 		.4byte	0xce
 8779 10cd C8110000 		.4byte	.LLST79
 8780 10d1 1B       		.uleb128 0x1b
 8781 10d2 72657300 		.ascii	"res\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 227


 8782 10d6 01       		.byte	0x1
 8783 10d7 D803     		.2byte	0x3d8
 8784 10d9 EF030000 		.4byte	0x3ef
 8785 10dd E6110000 		.4byte	.LLST80
 8786 10e1 2B       		.uleb128 0x2b
 8787 10e2 1A000000 		.4byte	.LVL239
 8788 10e6 0C060000 		.4byte	0x60c
 8789 10ea 23       		.uleb128 0x23
 8790 10eb 4A000000 		.4byte	.LVL248
 8791 10ef 0C060000 		.4byte	0x60c
 8792 10f3 04110000 		.4byte	0x1104
 8793 10f7 22       		.uleb128 0x22
 8794 10f8 01       		.uleb128 0x1
 8795 10f9 51       		.byte	0x51
 8796 10fa 02       		.uleb128 0x2
 8797 10fb 74       		.byte	0x74
 8798 10fc 00       		.sleb128 0
 8799 10fd 22       		.uleb128 0x22
 8800 10fe 01       		.uleb128 0x1
 8801 10ff 50       		.byte	0x50
 8802 1100 02       		.uleb128 0x2
 8803 1101 75       		.byte	0x75
 8804 1102 00       		.sleb128 0
 8805 1103 00       		.byte	0
 8806 1104 23       		.uleb128 0x23
 8807 1105 6A000000 		.4byte	.LVL252
 8808 1109 7E060000 		.4byte	0x67e
 8809 110d 27110000 		.4byte	0x1127
 8810 1111 22       		.uleb128 0x22
 8811 1112 01       		.uleb128 0x1
 8812 1113 52       		.byte	0x52
 8813 1114 05       		.uleb128 0x5
 8814 1115 0C       		.byte	0xc
 8815 1116 FFFFFF0F 		.4byte	0xfffffff
 8816 111a 22       		.uleb128 0x22
 8817 111b 01       		.uleb128 0x1
 8818 111c 51       		.byte	0x51
 8819 111d 02       		.uleb128 0x2
 8820 111e 74       		.byte	0x74
 8821 111f 00       		.sleb128 0
 8822 1120 22       		.uleb128 0x22
 8823 1121 01       		.uleb128 0x1
 8824 1122 50       		.byte	0x50
 8825 1123 02       		.uleb128 0x2
 8826 1124 75       		.byte	0x75
 8827 1125 00       		.sleb128 0
 8828 1126 00       		.byte	0
 8829 1127 21       		.uleb128 0x21
 8830 1128 8E000000 		.4byte	.LVL256
 8831 112c 7E060000 		.4byte	0x67e
 8832 1130 22       		.uleb128 0x22
 8833 1131 01       		.uleb128 0x1
 8834 1132 52       		.byte	0x52
 8835 1133 02       		.uleb128 0x2
 8836 1134 74       		.byte	0x74
 8837 1135 00       		.sleb128 0
 8838 1136 22       		.uleb128 0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 228


 8839 1137 01       		.uleb128 0x1
 8840 1138 51       		.byte	0x51
 8841 1139 02       		.uleb128 0x2
 8842 113a 76       		.byte	0x76
 8843 113b 00       		.sleb128 0
 8844 113c 22       		.uleb128 0x22
 8845 113d 01       		.uleb128 0x1
 8846 113e 50       		.byte	0x50
 8847 113f 02       		.uleb128 0x2
 8848 1140 75       		.byte	0x75
 8849 1141 00       		.sleb128 0
 8850 1142 00       		.byte	0
 8851 1143 00       		.byte	0
 8852 1144 1D       		.uleb128 0x1d
 8853 1145 6E030000 		.4byte	.LASF118
 8854 1149 01       		.byte	0x1
 8855 114a 5904     		.2byte	0x459
 8856 114c EF030000 		.4byte	0x3ef
 8857 1150 00000000 		.4byte	.LFB17
 8858 1154 F6000000 		.4byte	.LFE17-.LFB17
 8859 1158 01       		.uleb128 0x1
 8860 1159 9C       		.byte	0x9c
 8861 115a 59120000 		.4byte	0x1259
 8862 115e 1A       		.uleb128 0x1a
 8863 115f 646A00   		.ascii	"dj\000"
 8864 1162 01       		.byte	0x1
 8865 1163 5A04     		.2byte	0x45a
 8866 1165 84050000 		.4byte	0x584
 8867 1169 0F120000 		.4byte	.LLST81
 8868 116d 1E       		.uleb128 0x1e
 8869 116e B4020000 		.4byte	.LASF119
 8870 1172 01       		.byte	0x1
 8871 1173 5B04     		.2byte	0x45b
 8872 1175 7E000000 		.4byte	0x7e
 8873 1179 54120000 		.4byte	.LLST82
 8874 117d 1F       		.uleb128 0x1f
 8875 117e 2C030000 		.4byte	.LASF87
 8876 1182 01       		.byte	0x1
 8877 1183 5E04     		.2byte	0x45e
 8878 1185 CE000000 		.4byte	0xce
 8879 1189 B2120000 		.4byte	.LLST83
 8880 118d 1B       		.uleb128 0x1b
 8881 118e 6900     		.ascii	"i\000"
 8882 1190 01       		.byte	0x1
 8883 1191 5F04     		.2byte	0x45f
 8884 1193 C3000000 		.4byte	0xc3
 8885 1197 12130000 		.4byte	.LLST84
 8886 119b 20       		.uleb128 0x20
 8887 119c 60000000 		.4byte	.LBB34
 8888 11a0 78000000 		.4byte	.LBE34-.LBB34
 8889 11a4 3F120000 		.4byte	0x123f
 8890 11a8 1B       		.uleb128 0x1b
 8891 11a9 6300     		.ascii	"c\000"
 8892 11ab 01       		.byte	0x1
 8893 11ac 7504     		.2byte	0x475
 8894 11ae B8000000 		.4byte	0xb8
 8895 11b2 25130000 		.4byte	.LLST85
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 229


 8896 11b6 28       		.uleb128 0x28
 8897 11b7 C40C0000 		.4byte	0xcc4
 8898 11bb 92000000 		.4byte	.LBB35
 8899 11bf 0C000000 		.4byte	.LBE35-.LBB35
 8900 11c3 01       		.byte	0x1
 8901 11c4 7D04     		.2byte	0x47d
 8902 11c6 F9110000 		.4byte	0x11f9
 8903 11ca 25       		.uleb128 0x25
 8904 11cb E90C0000 		.4byte	0xce9
 8905 11cf 4F130000 		.4byte	.LLST86
 8906 11d3 25       		.uleb128 0x25
 8907 11d4 DD0C0000 		.4byte	0xcdd
 8908 11d8 97130000 		.4byte	.LLST87
 8909 11dc 25       		.uleb128 0x25
 8910 11dd D10C0000 		.4byte	0xcd1
 8911 11e1 AB130000 		.4byte	.LLST88
 8912 11e5 29       		.uleb128 0x29
 8913 11e6 92000000 		.4byte	.LBB36
 8914 11ea 0C000000 		.4byte	.LBE36-.LBB36
 8915 11ee 2C       		.uleb128 0x2c
 8916 11ef F50C0000 		.4byte	0xcf5
 8917 11f3 D9130000 		.4byte	.LLST89
 8918 11f7 00       		.byte	0
 8919 11f8 00       		.byte	0
 8920 11f9 2B       		.uleb128 0x2b
 8921 11fa 6A000000 		.4byte	.LVL276
 8922 11fe 69100000 		.4byte	0x1069
 8923 1202 23       		.uleb128 0x23
 8924 1203 82000000 		.4byte	.LVL279
 8925 1207 6A090000 		.4byte	0x96a
 8926 120b 15120000 		.4byte	0x1215
 8927 120f 22       		.uleb128 0x22
 8928 1210 01       		.uleb128 0x1
 8929 1211 51       		.byte	0x51
 8930 1212 01       		.uleb128 0x1
 8931 1213 30       		.byte	0x30
 8932 1214 00       		.byte	0
 8933 1215 23       		.uleb128 0x23
 8934 1216 A8000000 		.4byte	.LVL287
 8935 121a C30D0000 		.4byte	0xdc3
 8936 121e 2F120000 		.4byte	0x122f
 8937 1222 22       		.uleb128 0x22
 8938 1223 01       		.uleb128 0x1
 8939 1224 51       		.byte	0x51
 8940 1225 02       		.uleb128 0x2
 8941 1226 75       		.byte	0x75
 8942 1227 00       		.sleb128 0
 8943 1228 22       		.uleb128 0x22
 8944 1229 01       		.uleb128 0x1
 8945 122a 50       		.byte	0x50
 8946 122b 02       		.uleb128 0x2
 8947 122c 77       		.byte	0x77
 8948 122d 00       		.sleb128 0
 8949 122e 00       		.byte	0
 8950 122f 21       		.uleb128 0x21
 8951 1230 C0000000 		.4byte	.LVL290
 8952 1234 6A090000 		.4byte	0x96a
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 230


 8953 1238 22       		.uleb128 0x22
 8954 1239 01       		.uleb128 0x1
 8955 123a 51       		.byte	0x51
 8956 123b 01       		.uleb128 0x1
 8957 123c 30       		.byte	0x30
 8958 123d 00       		.byte	0
 8959 123e 00       		.byte	0
 8960 123f 2B       		.uleb128 0x2b
 8961 1240 46000000 		.4byte	.LVL269
 8962 1244 0C060000 		.4byte	0x60c
 8963 1248 21       		.uleb128 0x21
 8964 1249 E2000000 		.4byte	.LVL295
 8965 124d C30D0000 		.4byte	0xdc3
 8966 1251 22       		.uleb128 0x22
 8967 1252 01       		.uleb128 0x1
 8968 1253 51       		.byte	0x51
 8969 1254 02       		.uleb128 0x2
 8970 1255 75       		.byte	0x75
 8971 1256 00       		.sleb128 0
 8972 1257 00       		.byte	0
 8973 1258 00       		.byte	0
 8974 1259 10       		.uleb128 0x10
 8975 125a 6E020000 		.4byte	.LASF120
 8976 125e 01       		.byte	0x1
 8977 125f 4905     		.2byte	0x549
 8978 1261 EF030000 		.4byte	0x3ef
 8979 1265 01       		.byte	0x1
 8980 1266 98120000 		.4byte	0x1298
 8981 126a 11       		.uleb128 0x11
 8982 126b 646A00   		.ascii	"dj\000"
 8983 126e 01       		.byte	0x1
 8984 126f 4A05     		.2byte	0x54a
 8985 1271 84050000 		.4byte	0x584
 8986 1275 14       		.uleb128 0x14
 8987 1276 72657300 		.ascii	"res\000"
 8988 127a 01       		.byte	0x1
 8989 127b 4D05     		.2byte	0x54d
 8990 127d EF030000 		.4byte	0x3ef
 8991 1281 14       		.uleb128 0x14
 8992 1282 6300     		.ascii	"c\000"
 8993 1284 01       		.byte	0x1
 8994 1285 4E05     		.2byte	0x54e
 8995 1287 B8000000 		.4byte	0xb8
 8996 128b 14       		.uleb128 0x14
 8997 128c 64697200 		.ascii	"dir\000"
 8998 1290 01       		.byte	0x1
 8999 1291 4E05     		.2byte	0x54e
 9000 1293 8C020000 		.4byte	0x28c
 9001 1297 00       		.byte	0
 9002 1298 1D       		.uleb128 0x1d
 9003 1299 C7040000 		.4byte	.LASF121
 9004 129d 01       		.byte	0x1
 9005 129e 7F07     		.2byte	0x77f
 9006 12a0 EF030000 		.4byte	0x3ef
 9007 12a4 00000000 		.4byte	.LFB24
 9008 12a8 9C010000 		.4byte	.LFE24-.LFB24
 9009 12ac 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 231


 9010 12ad 9C       		.byte	0x9c
 9011 12ae C8140000 		.4byte	0x14c8
 9012 12b2 1A       		.uleb128 0x1a
 9013 12b3 646A00   		.ascii	"dj\000"
 9014 12b6 01       		.byte	0x1
 9015 12b7 8007     		.2byte	0x780
 9016 12b9 84050000 		.4byte	0x584
 9017 12bd 11140000 		.4byte	.LLST90
 9018 12c1 1E       		.uleb128 0x1e
 9019 12c2 1A010000 		.4byte	.LASF83
 9020 12c6 01       		.byte	0x1
 9021 12c7 8107     		.2byte	0x781
 9022 12c9 90050000 		.4byte	0x590
 9023 12cd 3D140000 		.4byte	.LLST91
 9024 12d1 1B       		.uleb128 0x1b
 9025 12d2 72657300 		.ascii	"res\000"
 9026 12d6 01       		.byte	0x1
 9027 12d7 8407     		.2byte	0x784
 9028 12d9 EF030000 		.4byte	0x3ef
 9029 12dd 66140000 		.4byte	.LLST92
 9030 12e1 1B       		.uleb128 0x1b
 9031 12e2 64697200 		.ascii	"dir\000"
 9032 12e6 01       		.byte	0x1
 9033 12e7 8507     		.2byte	0x785
 9034 12e9 8C020000 		.4byte	0x28c
 9035 12ed 84140000 		.4byte	.LLST93
 9036 12f1 1B       		.uleb128 0x1b
 9037 12f2 6E7300   		.ascii	"ns\000"
 9038 12f5 01       		.byte	0x1
 9039 12f6 8507     		.2byte	0x785
 9040 12f8 B8000000 		.4byte	0xb8
 9041 12fc A3140000 		.4byte	.LLST94
 9042 1300 2F       		.uleb128 0x2f
 9043 1301 7A040000 		.4byte	0x47a
 9044 1305 28000000 		.4byte	.LBB47
 9045 1309 00000000 		.4byte	.Ldebug_ranges0+0
 9046 130d 01       		.byte	0x1
 9047 130e 9A07     		.2byte	0x79a
 9048 1310 E2130000 		.4byte	0x13e2
 9049 1314 25       		.uleb128 0x25
 9050 1315 8B040000 		.4byte	0x48b
 9051 1319 D4140000 		.4byte	.LLST95
 9052 131d 25       		.uleb128 0x25
 9053 131e 96040000 		.4byte	0x496
 9054 1322 E7140000 		.4byte	.LLST96
 9055 1326 30       		.uleb128 0x30
 9056 1327 00000000 		.4byte	.Ldebug_ranges0+0
 9057 132b 2C       		.uleb128 0x2c
 9058 132c 2F050000 		.4byte	0x52f
 9059 1330 FF140000 		.4byte	.LLST97
 9060 1334 2C       		.uleb128 0x2c
 9061 1335 39050000 		.4byte	0x539
 9062 1339 33150000 		.4byte	.LLST98
 9063 133d 2A       		.uleb128 0x2a
 9064 133e 43050000 		.4byte	0x543
 9065 1342 2C       		.uleb128 0x2c
 9066 1343 4D050000 		.4byte	0x54d
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 232


 9067 1347 B6150000 		.4byte	.LLST99
 9068 134b 2C       		.uleb128 0x2c
 9069 134c 59050000 		.4byte	0x559
 9070 1350 DF150000 		.4byte	.LLST100
 9071 1354 2C       		.uleb128 0x2c
 9072 1355 64050000 		.4byte	0x564
 9073 1359 0B160000 		.4byte	.LLST101
 9074 135d 2C       		.uleb128 0x2c
 9075 135e 6F050000 		.4byte	0x56f
 9076 1362 70160000 		.4byte	.LLST102
 9077 1366 2C       		.uleb128 0x2c
 9078 1367 79050000 		.4byte	0x579
 9079 136b BD160000 		.4byte	.LLST103
 9080 136f 2E       		.uleb128 0x2e
 9081 1370 A2040000 		.4byte	0x4a2
 9082 1374 05       		.uleb128 0x5
 9083 1375 03       		.byte	0x3
 9084 1376 00000000 		.4byte	excvt.4520
 9085 137a 28       		.uleb128 0x28
 9086 137b C40C0000 		.4byte	0xcc4
 9087 137f 3C000000 		.4byte	.LBB49
 9088 1383 16000000 		.4byte	.LBE49-.LBB49
 9089 1387 01       		.byte	0x1
 9090 1388 E106     		.2byte	0x6e1
 9091 138a BD130000 		.4byte	0x13bd
 9092 138e 25       		.uleb128 0x25
 9093 138f E90C0000 		.4byte	0xce9
 9094 1393 E6160000 		.4byte	.LLST104
 9095 1397 25       		.uleb128 0x25
 9096 1398 DD0C0000 		.4byte	0xcdd
 9097 139c 30170000 		.4byte	.LLST105
 9098 13a0 25       		.uleb128 0x25
 9099 13a1 D10C0000 		.4byte	0xcd1
 9100 13a5 B6150000 		.4byte	.LLST99
 9101 13a9 29       		.uleb128 0x29
 9102 13aa 3C000000 		.4byte	.LBB50
 9103 13ae 16000000 		.4byte	.LBE50-.LBB50
 9104 13b2 2C       		.uleb128 0x2c
 9105 13b3 F50C0000 		.4byte	0xcf5
 9106 13b7 45170000 		.4byte	.LLST107
 9107 13bb 00       		.byte	0
 9108 13bc 00       		.byte	0
 9109 13bd 31       		.uleb128 0x31
 9110 13be 01080000 		.4byte	0x801
 9111 13c2 80000000 		.4byte	.LBB51
 9112 13c6 10000000 		.4byte	.LBE51-.LBB51
 9113 13ca 01       		.byte	0x1
 9114 13cb 0907     		.2byte	0x709
 9115 13cd 25       		.uleb128 0x25
 9116 13ce 12080000 		.4byte	0x812
 9117 13d2 7B170000 		.4byte	.LLST108
 9118 13d6 25       		.uleb128 0x25
 9119 13d7 1E080000 		.4byte	0x81e
 9120 13db CC170000 		.4byte	.LLST109
 9121 13df 00       		.byte	0
 9122 13e0 00       		.byte	0
 9123 13e1 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 233


 9124 13e2 28       		.uleb128 0x28
 9125 13e3 59120000 		.4byte	0x1259
 9126 13e7 D4000000 		.4byte	.LBB54
 9127 13eb 46000000 		.4byte	.LBE54-.LBB54
 9128 13ef 01       		.byte	0x1
 9129 13f0 9C07     		.2byte	0x79c
 9130 13f2 B1140000 		.4byte	0x14b1
 9131 13f6 25       		.uleb128 0x25
 9132 13f7 6A120000 		.4byte	0x126a
 9133 13fb F7170000 		.4byte	.LLST110
 9134 13ff 29       		.uleb128 0x29
 9135 1400 D4000000 		.4byte	.LBB55
 9136 1404 46000000 		.4byte	.LBE55-.LBB55
 9137 1408 2C       		.uleb128 0x2c
 9138 1409 75120000 		.4byte	0x1275
 9139 140d 0A180000 		.4byte	.LLST111
 9140 1411 2C       		.uleb128 0x2c
 9141 1412 81120000 		.4byte	0x1281
 9142 1416 33180000 		.4byte	.LLST112
 9143 141a 2C       		.uleb128 0x2c
 9144 141b 8B120000 		.4byte	0x128b
 9145 141f 60180000 		.4byte	.LLST113
 9146 1423 28       		.uleb128 0x28
 9147 1424 9B070000 		.4byte	0x79b
 9148 1428 FE000000 		.4byte	.LBB56
 9149 142c 10000000 		.4byte	.LBE56-.LBB56
 9150 1430 01       		.byte	0x1
 9151 1431 7505     		.2byte	0x575
 9152 1433 78140000 		.4byte	0x1478
 9153 1437 25       		.uleb128 0x25
 9154 1438 C4070000 		.4byte	0x7c4
 9155 143c 8A180000 		.4byte	.LLST114
 9156 1440 25       		.uleb128 0x25
 9157 1441 B8070000 		.4byte	0x7b8
 9158 1445 BF180000 		.4byte	.LLST115
 9159 1449 25       		.uleb128 0x25
 9160 144a AC070000 		.4byte	0x7ac
 9161 144e D2180000 		.4byte	.LLST116
 9162 1452 29       		.uleb128 0x29
 9163 1453 FE000000 		.4byte	.LBB57
 9164 1457 10000000 		.4byte	.LBE57-.LBB57
 9165 145b 2C       		.uleb128 0x2c
 9166 145c D0070000 		.4byte	0x7d0
 9167 1460 E5180000 		.4byte	.LLST117
 9168 1464 2C       		.uleb128 0x2c
 9169 1465 DA070000 		.4byte	0x7da
 9170 1469 0F190000 		.4byte	.LLST118
 9171 146d 2C       		.uleb128 0x2c
 9172 146e E4070000 		.4byte	0x7e4
 9173 1472 39190000 		.4byte	.LLST119
 9174 1476 00       		.byte	0
 9175 1477 00       		.byte	0
 9176 1478 23       		.uleb128 0x23
 9177 1479 DC000000 		.4byte	.LVL334
 9178 147d BF0E0000 		.4byte	0xebf
 9179 1481 91140000 		.4byte	0x1491
 9180 1485 22       		.uleb128 0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 234


 9181 1486 01       		.uleb128 0x1
 9182 1487 51       		.byte	0x51
 9183 1488 01       		.uleb128 0x1
 9184 1489 30       		.byte	0x30
 9185 148a 22       		.uleb128 0x22
 9186 148b 01       		.uleb128 0x1
 9187 148c 50       		.byte	0x50
 9188 148d 02       		.uleb128 0x2
 9189 148e 74       		.byte	0x74
 9190 148f 00       		.sleb128 0
 9191 1490 00       		.byte	0
 9192 1491 2B       		.uleb128 0x2b
 9193 1492 E8000000 		.4byte	.LVL336
 9194 1496 6A090000 		.4byte	0x96a
 9195 149a 21       		.uleb128 0x21
 9196 149b 16010000 		.4byte	.LVL344
 9197 149f 44110000 		.4byte	0x1144
 9198 14a3 22       		.uleb128 0x22
 9199 14a4 01       		.uleb128 0x1
 9200 14a5 51       		.byte	0x51
 9201 14a6 01       		.uleb128 0x1
 9202 14a7 30       		.byte	0x30
 9203 14a8 22       		.uleb128 0x22
 9204 14a9 01       		.uleb128 0x1
 9205 14aa 50       		.byte	0x50
 9206 14ab 02       		.uleb128 0x2
 9207 14ac 74       		.byte	0x74
 9208 14ad 00       		.sleb128 0
 9209 14ae 00       		.byte	0
 9210 14af 00       		.byte	0
 9211 14b0 00       		.byte	0
 9212 14b1 21       		.uleb128 0x21
 9213 14b2 24000000 		.4byte	.LVL302
 9214 14b6 BF0E0000 		.4byte	0xebf
 9215 14ba 22       		.uleb128 0x22
 9216 14bb 01       		.uleb128 0x1
 9217 14bc 51       		.byte	0x51
 9218 14bd 02       		.uleb128 0x2
 9219 14be 76       		.byte	0x76
 9220 14bf 00       		.sleb128 0
 9221 14c0 22       		.uleb128 0x22
 9222 14c1 01       		.uleb128 0x1
 9223 14c2 50       		.byte	0x50
 9224 14c3 02       		.uleb128 0x2
 9225 14c4 74       		.byte	0x74
 9226 14c5 00       		.sleb128 0
 9227 14c6 00       		.byte	0
 9228 14c7 00       		.byte	0
 9229 14c8 24       		.uleb128 0x24
 9230 14c9 D4060000 		.4byte	0x6d4
 9231 14cd 00000000 		.4byte	.LFB20
 9232 14d1 62000000 		.4byte	.LFE20-.LFB20
 9233 14d5 01       		.uleb128 0x1
 9234 14d6 9C       		.byte	0x9c
 9235 14d7 C6150000 		.4byte	0x15c6
 9236 14db 25       		.uleb128 0x25
 9237 14dc E5060000 		.4byte	0x6e5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 235


 9238 14e0 64190000 		.4byte	.LLST120
 9239 14e4 2C       		.uleb128 0x2c
 9240 14e5 F0060000 		.4byte	0x6f0
 9241 14e9 90190000 		.4byte	.LLST121
 9242 14ed 2C       		.uleb128 0x2c
 9243 14ee FC060000 		.4byte	0x6fc
 9244 14f2 D0190000 		.4byte	.LLST122
 9245 14f6 2A       		.uleb128 0x2a
 9246 14f7 06070000 		.4byte	0x706
 9247 14fb 20       		.uleb128 0x20
 9248 14fc 30000000 		.4byte	.LBB63
 9249 1500 2E000000 		.4byte	.LBE63-.LBB63
 9250 1504 8E150000 		.4byte	0x158e
 9251 1508 25       		.uleb128 0x25
 9252 1509 E5060000 		.4byte	0x6e5
 9253 150d EE190000 		.4byte	.LLST123
 9254 1511 29       		.uleb128 0x29
 9255 1512 30000000 		.4byte	.LBB64
 9256 1516 2E000000 		.4byte	.LBE64-.LBB64
 9257 151a 2C       		.uleb128 0x2c
 9258 151b F0060000 		.4byte	0x6f0
 9259 151f 011A0000 		.4byte	.LLST124
 9260 1523 2A       		.uleb128 0x2a
 9261 1524 FC060000 		.4byte	0x6fc
 9262 1528 2C       		.uleb128 0x2c
 9263 1529 06070000 		.4byte	0x706
 9264 152d 1F1A0000 		.4byte	.LLST125
 9265 1531 28       		.uleb128 0x28
 9266 1532 C40C0000 		.4byte	0xcc4
 9267 1536 44000000 		.4byte	.LBB65
 9268 153a 0C000000 		.4byte	.LBE65-.LBB65
 9269 153e 01       		.byte	0x1
 9270 153f 1506     		.2byte	0x615
 9271 1541 74150000 		.4byte	0x1574
 9272 1545 25       		.uleb128 0x25
 9273 1546 E90C0000 		.4byte	0xce9
 9274 154a 321A0000 		.4byte	.LLST126
 9275 154e 25       		.uleb128 0x25
 9276 154f DD0C0000 		.4byte	0xcdd
 9277 1553 7D1A0000 		.4byte	.LLST127
 9278 1557 25       		.uleb128 0x25
 9279 1558 D10C0000 		.4byte	0xcd1
 9280 155c 1F1A0000 		.4byte	.LLST125
 9281 1560 29       		.uleb128 0x29
 9282 1561 44000000 		.4byte	.LBB66
 9283 1565 0C000000 		.4byte	.LBE66-.LBB66
 9284 1569 2C       		.uleb128 0x2c
 9285 156a F50C0000 		.4byte	0xcf5
 9286 156e 911A0000 		.4byte	.LLST129
 9287 1572 00       		.byte	0
 9288 1573 00       		.byte	0
 9289 1574 2B       		.uleb128 0x2b
 9290 1575 38000000 		.4byte	.LVL380
 9291 1579 6A090000 		.4byte	0x96a
 9292 157d 21       		.uleb128 0x21
 9293 157e 58000000 		.4byte	.LVL387
 9294 1582 2B080000 		.4byte	0x82b
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 236


 9295 1586 22       		.uleb128 0x22
 9296 1587 01       		.uleb128 0x1
 9297 1588 52       		.byte	0x52
 9298 1589 01       		.uleb128 0x1
 9299 158a 3B       		.byte	0x3b
 9300 158b 00       		.byte	0
 9301 158c 00       		.byte	0
 9302 158d 00       		.byte	0
 9303 158e 23       		.uleb128 0x23
 9304 158f 0A000000 		.4byte	.LVL371
 9305 1593 BF0E0000 		.4byte	0xebf
 9306 1597 A7150000 		.4byte	0x15a7
 9307 159b 22       		.uleb128 0x22
 9308 159c 01       		.uleb128 0x1
 9309 159d 51       		.byte	0x51
 9310 159e 01       		.uleb128 0x1
 9311 159f 30       		.byte	0x30
 9312 15a0 22       		.uleb128 0x22
 9313 15a1 01       		.uleb128 0x1
 9314 15a2 50       		.byte	0x50
 9315 15a3 02       		.uleb128 0x2
 9316 15a4 74       		.byte	0x74
 9317 15a5 00       		.sleb128 0
 9318 15a6 00       		.byte	0
 9319 15a7 2B       		.uleb128 0x2b
 9320 15a8 16000000 		.4byte	.LVL374
 9321 15ac 6A090000 		.4byte	0x96a
 9322 15b0 21       		.uleb128 0x21
 9323 15b1 2E000000 		.4byte	.LVL378
 9324 15b5 44110000 		.4byte	0x1144
 9325 15b9 22       		.uleb128 0x22
 9326 15ba 01       		.uleb128 0x1
 9327 15bb 51       		.byte	0x51
 9328 15bc 01       		.uleb128 0x1
 9329 15bd 31       		.byte	0x31
 9330 15be 22       		.uleb128 0x22
 9331 15bf 01       		.uleb128 0x1
 9332 15c0 50       		.byte	0x50
 9333 15c1 02       		.uleb128 0x2
 9334 15c2 74       		.byte	0x74
 9335 15c3 00       		.sleb128 0
 9336 15c4 00       		.byte	0
 9337 15c5 00       		.byte	0
 9338 15c6 1D       		.uleb128 0x1d
 9339 15c7 8A060000 		.4byte	.LASF122
 9340 15cb 01       		.byte	0x1
 9341 15cc 8605     		.2byte	0x586
 9342 15ce EF030000 		.4byte	0x3ef
 9343 15d2 00000000 		.4byte	.LFB19
 9344 15d6 4E000000 		.4byte	.LFE19-.LFB19
 9345 15da 01       		.uleb128 0x1
 9346 15db 9C       		.byte	0x9c
 9347 15dc 3C160000 		.4byte	0x163c
 9348 15e0 1A       		.uleb128 0x1a
 9349 15e1 646A00   		.ascii	"dj\000"
 9350 15e4 01       		.byte	0x1
 9351 15e5 8705     		.2byte	0x587
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 237


 9352 15e7 84050000 		.4byte	0x584
 9353 15eb C71A0000 		.4byte	.LLST130
 9354 15ef 1B       		.uleb128 0x1b
 9355 15f0 72657300 		.ascii	"res\000"
 9356 15f4 01       		.byte	0x1
 9357 15f5 8A05     		.2byte	0x58a
 9358 15f7 EF030000 		.4byte	0x3ef
 9359 15fb F31A0000 		.4byte	.LLST131
 9360 15ff 1B       		.uleb128 0x1b
 9361 1600 6300     		.ascii	"c\000"
 9362 1602 01       		.byte	0x1
 9363 1603 8B05     		.2byte	0x58b
 9364 1605 B8000000 		.4byte	0xb8
 9365 1609 3F1B0000 		.4byte	.LLST132
 9366 160d 1B       		.uleb128 0x1b
 9367 160e 64697200 		.ascii	"dir\000"
 9368 1612 01       		.byte	0x1
 9369 1613 8B05     		.2byte	0x58b
 9370 1615 8C020000 		.4byte	0x28c
 9371 1619 751B0000 		.4byte	.LLST133
 9372 161d 2B       		.uleb128 0x2b
 9373 161e 12000000 		.4byte	.LVL392
 9374 1622 6A090000 		.4byte	0x96a
 9375 1626 21       		.uleb128 0x21
 9376 1627 38000000 		.4byte	.LVL399
 9377 162b 44110000 		.4byte	0x1144
 9378 162f 22       		.uleb128 0x22
 9379 1630 01       		.uleb128 0x1
 9380 1631 51       		.byte	0x51
 9381 1632 01       		.uleb128 0x1
 9382 1633 30       		.byte	0x30
 9383 1634 22       		.uleb128 0x22
 9384 1635 01       		.uleb128 0x1
 9385 1636 50       		.byte	0x50
 9386 1637 02       		.uleb128 0x2
 9387 1638 74       		.byte	0x74
 9388 1639 00       		.sleb128 0
 9389 163a 00       		.byte	0
 9390 163b 00       		.byte	0
 9391 163c 24       		.uleb128 0x24
 9392 163d 13070000 		.4byte	0x713
 9393 1641 00000000 		.4byte	.LFB14
 9394 1645 56000000 		.4byte	.LFE14-.LFB14
 9395 1649 01       		.uleb128 0x1
 9396 164a 9C       		.byte	0x9c
 9397 164b CF160000 		.4byte	0x16cf
 9398 164f 25       		.uleb128 0x25
 9399 1650 24070000 		.4byte	0x724
 9400 1654 9E1B0000 		.4byte	.LLST134
 9401 1658 25       		.uleb128 0x25
 9402 1659 2F070000 		.4byte	0x72f
 9403 165d E01B0000 		.4byte	.LLST135
 9404 1661 2E       		.uleb128 0x2e
 9405 1662 3B070000 		.4byte	0x73b
 9406 1666 01       		.uleb128 0x1
 9407 1667 50       		.byte	0x50
 9408 1668 2A       		.uleb128 0x2a
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 238


 9409 1669 47070000 		.4byte	0x747
 9410 166d 30       		.uleb128 0x30
 9411 166e 18000000 		.4byte	.Ldebug_ranges0+0x18
 9412 1672 25       		.uleb128 0x25
 9413 1673 2F070000 		.4byte	0x72f
 9414 1677 1A1C0000 		.4byte	.LLST136
 9415 167b 32       		.uleb128 0x32
 9416 167c 24070000 		.4byte	0x724
 9417 1680 30       		.uleb128 0x30
 9418 1681 18000000 		.4byte	.Ldebug_ranges0+0x18
 9419 1685 2C       		.uleb128 0x2c
 9420 1686 3B070000 		.4byte	0x73b
 9421 168a 381C0000 		.4byte	.LLST137
 9422 168e 2C       		.uleb128 0x2c
 9423 168f 47070000 		.4byte	0x747
 9424 1693 631C0000 		.4byte	.LLST138
 9425 1697 23       		.uleb128 0x23
 9426 1698 22000000 		.4byte	.LVL409
 9427 169c 0C060000 		.4byte	0x60c
 9428 16a0 B1160000 		.4byte	0x16b1
 9429 16a4 22       		.uleb128 0x22
 9430 16a5 01       		.uleb128 0x1
 9431 16a6 51       		.byte	0x51
 9432 16a7 02       		.uleb128 0x2
 9433 16a8 75       		.byte	0x75
 9434 16a9 00       		.sleb128 0
 9435 16aa 22       		.uleb128 0x22
 9436 16ab 01       		.uleb128 0x1
 9437 16ac 50       		.byte	0x50
 9438 16ad 02       		.uleb128 0x2
 9439 16ae 74       		.byte	0x74
 9440 16af 00       		.sleb128 0
 9441 16b0 00       		.byte	0
 9442 16b1 21       		.uleb128 0x21
 9443 16b2 3C000000 		.4byte	.LVL414
 9444 16b6 7E060000 		.4byte	0x67e
 9445 16ba 22       		.uleb128 0x22
 9446 16bb 01       		.uleb128 0x1
 9447 16bc 52       		.byte	0x52
 9448 16bd 01       		.uleb128 0x1
 9449 16be 30       		.byte	0x30
 9450 16bf 22       		.uleb128 0x22
 9451 16c0 01       		.uleb128 0x1
 9452 16c1 51       		.byte	0x51
 9453 16c2 02       		.uleb128 0x2
 9454 16c3 75       		.byte	0x75
 9455 16c4 00       		.sleb128 0
 9456 16c5 22       		.uleb128 0x22
 9457 16c6 01       		.uleb128 0x1
 9458 16c7 50       		.byte	0x50
 9459 16c8 02       		.uleb128 0x2
 9460 16c9 74       		.byte	0x74
 9461 16ca 00       		.sleb128 0
 9462 16cb 00       		.byte	0
 9463 16cc 00       		.byte	0
 9464 16cd 00       		.byte	0
 9465 16ce 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 239


 9466 16cf 2D       		.uleb128 0x2d
 9467 16d0 72040000 		.4byte	.LASF124
 9468 16d4 01       		.byte	0x1
 9469 16d5 9B08     		.2byte	0x89b
 9470 16d7 EF030000 		.4byte	0x3ef
 9471 16db 00000000 		.4byte	.LFB28
 9472 16df 38000000 		.4byte	.LFE28-.LFB28
 9473 16e3 01       		.uleb128 0x1
 9474 16e4 9C       		.byte	0x9c
 9475 16e5 3C170000 		.4byte	0x173c
 9476 16e9 1A       		.uleb128 0x1a
 9477 16ea 766F6C00 		.ascii	"vol\000"
 9478 16ee 01       		.byte	0x1
 9479 16ef 9C08     		.2byte	0x89c
 9480 16f1 B8000000 		.4byte	0xb8
 9481 16f5 971C0000 		.4byte	.LLST139
 9482 16f9 19       		.uleb128 0x19
 9483 16fa 667300   		.ascii	"fs\000"
 9484 16fd 01       		.byte	0x1
 9485 16fe 9D08     		.2byte	0x89d
 9486 1700 86020000 		.4byte	0x286
 9487 1704 01       		.uleb128 0x1
 9488 1705 51       		.byte	0x51
 9489 1706 1B       		.uleb128 0x1b
 9490 1707 72667300 		.ascii	"rfs\000"
 9491 170b 01       		.byte	0x1
 9492 170c A008     		.2byte	0x8a0
 9493 170e 86020000 		.4byte	0x286
 9494 1712 B81C0000 		.4byte	.LLST140
 9495 1716 31       		.uleb128 0x31
 9496 1717 8A0A0000 		.4byte	0xa8a
 9497 171b 10000000 		.4byte	.LBB77
 9498 171f 10000000 		.4byte	.LBE77-.LBB77
 9499 1723 01       		.byte	0x1
 9500 1724 A908     		.2byte	0x8a9
 9501 1726 32       		.uleb128 0x32
 9502 1727 970A0000 		.4byte	0xa97
 9503 172b 29       		.uleb128 0x29
 9504 172c 10000000 		.4byte	.LBB78
 9505 1730 10000000 		.4byte	.LBE78-.LBB78
 9506 1734 2A       		.uleb128 0x2a
 9507 1735 A20A0000 		.4byte	0xaa2
 9508 1739 00       		.byte	0
 9509 173a 00       		.byte	0
 9510 173b 00       		.byte	0
 9511 173c 10       		.uleb128 0x10
 9512 173d 13020000 		.4byte	.LASF125
 9513 1741 01       		.byte	0x1
 9514 1742 7B02     		.2byte	0x27b
 9515 1744 7E000000 		.4byte	0x7e
 9516 1748 01       		.byte	0x1
 9517 1749 58170000 		.4byte	0x1758
 9518 174d 14       		.uleb128 0x14
 9519 174e 6900     		.ascii	"i\000"
 9520 1750 01       		.byte	0x1
 9521 1751 7D02     		.2byte	0x27d
 9522 1753 AD000000 		.4byte	0xad
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 240


 9523 1757 00       		.byte	0
 9524 1758 10       		.uleb128 0x10
 9525 1759 3C010000 		.4byte	.LASF126
 9526 175d 01       		.byte	0x1
 9527 175e 8502     		.2byte	0x285
 9528 1760 AD000000 		.4byte	0xad
 9529 1764 01       		.byte	0x1
 9530 1765 8B170000 		.4byte	0x178b
 9531 1769 11       		.uleb128 0x11
 9532 176a 646A00   		.ascii	"dj\000"
 9533 176d 01       		.byte	0x1
 9534 176e 8602     		.2byte	0x286
 9535 1770 84050000 		.4byte	0x584
 9536 1774 11       		.uleb128 0x11
 9537 1775 61636300 		.ascii	"acc\000"
 9538 1779 01       		.byte	0x1
 9539 177a 8702     		.2byte	0x287
 9540 177c 7E000000 		.4byte	0x7e
 9541 1780 14       		.uleb128 0x14
 9542 1781 6900     		.ascii	"i\000"
 9543 1783 01       		.byte	0x1
 9544 1784 8A02     		.2byte	0x28a
 9545 1786 AD000000 		.4byte	0xad
 9546 178a 00       		.byte	0
 9547 178b 2D       		.uleb128 0x2d
 9548 178c 93060000 		.4byte	.LASF127
 9549 1790 01       		.byte	0x1
 9550 1791 C308     		.2byte	0x8c3
 9551 1793 EF030000 		.4byte	0x3ef
 9552 1797 00000000 		.4byte	.LFB29
 9553 179b 34020000 		.4byte	.LFE29-.LFB29
 9554 179f 01       		.uleb128 0x1
 9555 17a0 9C       		.byte	0x9c
 9556 17a1 32190000 		.4byte	0x1932
 9557 17a5 1A       		.uleb128 0x1a
 9558 17a6 667000   		.ascii	"fp\000"
 9559 17a9 01       		.byte	0x1
 9560 17aa C408     		.2byte	0x8c4
 9561 17ac 95070000 		.4byte	0x795
 9562 17b0 DA1C0000 		.4byte	.LLST141
 9563 17b4 1E       		.uleb128 0x1e
 9564 17b5 1A010000 		.4byte	.LASF83
 9565 17b9 01       		.byte	0x1
 9566 17ba C508     		.2byte	0x8c5
 9567 17bc 90050000 		.4byte	0x590
 9568 17c0 061D0000 		.4byte	.LLST142
 9569 17c4 1E       		.uleb128 0x1e
 9570 17c5 80050000 		.4byte	.LASF128
 9571 17c9 01       		.byte	0x1
 9572 17ca C608     		.2byte	0x8c6
 9573 17cc B8000000 		.4byte	0xb8
 9574 17d0 321D0000 		.4byte	.LLST143
 9575 17d4 1B       		.uleb128 0x1b
 9576 17d5 72657300 		.ascii	"res\000"
 9577 17d9 01       		.byte	0x1
 9578 17da C908     		.2byte	0x8c9
 9579 17dc EF030000 		.4byte	0x3ef
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 241


 9580 17e0 C61D0000 		.4byte	.LLST144
 9581 17e4 33       		.uleb128 0x33
 9582 17e5 646A00   		.ascii	"dj\000"
 9583 17e8 01       		.byte	0x1
 9584 17e9 CA08     		.2byte	0x8ca
 9585 17eb 03030000 		.4byte	0x303
 9586 17ef 02       		.uleb128 0x2
 9587 17f0 91       		.byte	0x91
 9588 17f1 4C       		.sleb128 -52
 9589 17f2 1B       		.uleb128 0x1b
 9590 17f3 64697200 		.ascii	"dir\000"
 9591 17f7 01       		.byte	0x1
 9592 17f8 CB08     		.2byte	0x8cb
 9593 17fa 8C020000 		.4byte	0x28c
 9594 17fe 1C1E0000 		.4byte	.LLST145
 9595 1802 33       		.uleb128 0x33
 9596 1803 73666E00 		.ascii	"sfn\000"
 9597 1807 01       		.byte	0x1
 9598 1808 CC08     		.2byte	0x8cc
 9599 180a 32190000 		.4byte	0x1932
 9600 180e 02       		.uleb128 0x2
 9601 180f 91       		.byte	0x91
 9602 1810 40       		.sleb128 -64
 9603 1811 34       		.uleb128 0x34
 9604 1812 38000000 		.4byte	.Ldebug_ranges0+0x38
 9605 1816 A4180000 		.4byte	0x18a4
 9606 181a 1B       		.uleb128 0x1b
 9607 181b 647700   		.ascii	"dw\000"
 9608 181e 01       		.byte	0x1
 9609 181f E808     		.2byte	0x8e8
 9610 1821 CE000000 		.4byte	0xce
 9611 1825 3A1E0000 		.4byte	.LLST146
 9612 1829 1B       		.uleb128 0x1b
 9613 182a 636C00   		.ascii	"cl\000"
 9614 182d 01       		.byte	0x1
 9615 182e E808     		.2byte	0x8e8
 9616 1830 CE000000 		.4byte	0xce
 9617 1834 651E0000 		.4byte	.LLST147
 9618 1838 28       		.uleb128 0x28
 9619 1839 3C170000 		.4byte	0x173c
 9620 183d 5C000000 		.4byte	.LBB85
 9621 1841 1A000000 		.4byte	.LBE85-.LBB85
 9622 1845 01       		.byte	0x1
 9623 1846 ED08     		.2byte	0x8ed
 9624 1848 60180000 		.4byte	0x1860
 9625 184c 29       		.uleb128 0x29
 9626 184d 5C000000 		.4byte	.LBB86
 9627 1851 1A000000 		.4byte	.LBE86-.LBB86
 9628 1855 2C       		.uleb128 0x2c
 9629 1856 4D170000 		.4byte	0x174d
 9630 185a 851E0000 		.4byte	.LLST148
 9631 185e 00       		.byte	0
 9632 185f 00       		.byte	0
 9633 1860 2B       		.uleb128 0x2b
 9634 1861 A6000000 		.4byte	.LVL446
 9635 1865 C4290000 		.4byte	0x29c4
 9636 1869 23       		.uleb128 0x23
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 242


 9637 186a EE000000 		.4byte	.LVL450
 9638 186e 13070000 		.4byte	0x713
 9639 1872 7D180000 		.4byte	0x187d
 9640 1876 22       		.uleb128 0x22
 9641 1877 01       		.uleb128 0x1
 9642 1878 51       		.byte	0x51
 9643 1879 02       		.uleb128 0x2
 9644 187a 75       		.byte	0x75
 9645 187b 00       		.sleb128 0
 9646 187c 00       		.byte	0
 9647 187d 23       		.uleb128 0x23
 9648 187e 00010000 		.4byte	.LVL453
 9649 1882 6A090000 		.4byte	0x96a
 9650 1886 93180000 		.4byte	0x1893
 9651 188a 22       		.uleb128 0x22
 9652 188b 01       		.uleb128 0x1
 9653 188c 51       		.byte	0x51
 9654 188d 04       		.uleb128 0x4
 9655 188e 91       		.byte	0x91
 9656 188f B47F     		.sleb128 -76
 9657 1891 06       		.byte	0x6
 9658 1892 00       		.byte	0
 9659 1893 21       		.uleb128 0x21
 9660 1894 2A020000 		.4byte	.LVL475
 9661 1898 D4060000 		.4byte	0x6d4
 9662 189c 22       		.uleb128 0x22
 9663 189d 01       		.uleb128 0x1
 9664 189e 50       		.byte	0x50
 9665 189f 02       		.uleb128 0x2
 9666 18a0 76       		.byte	0x76
 9667 18a1 00       		.sleb128 0
 9668 18a2 00       		.byte	0
 9669 18a3 00       		.byte	0
 9670 18a4 28       		.uleb128 0x28
 9671 18a5 58170000 		.4byte	0x1758
 9672 18a9 3E010000 		.4byte	.LBB87
 9673 18ad 9E000000 		.4byte	.LBE87-.LBB87
 9674 18b1 01       		.byte	0x1
 9675 18b2 1E09     		.2byte	0x91e
 9676 18b4 DE180000 		.4byte	0x18de
 9677 18b8 25       		.uleb128 0x25
 9678 18b9 74170000 		.4byte	0x1774
 9679 18bd B11E0000 		.4byte	.LLST149
 9680 18c1 25       		.uleb128 0x25
 9681 18c2 69170000 		.4byte	0x1769
 9682 18c6 E11E0000 		.4byte	.LLST150
 9683 18ca 29       		.uleb128 0x29
 9684 18cb 3E010000 		.4byte	.LBB88
 9685 18cf 9E000000 		.4byte	.LBE88-.LBB88
 9686 18d3 2C       		.uleb128 0x2c
 9687 18d4 80170000 		.4byte	0x1780
 9688 18d8 011F0000 		.4byte	.LLST151
 9689 18dc 00       		.byte	0
 9690 18dd 00       		.byte	0
 9691 18de 23       		.uleb128 0x23
 9692 18df 22000000 		.4byte	.LVL430
 9693 18e3 AD0A0000 		.4byte	0xaad
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 243


 9694 18e7 01190000 		.4byte	0x1901
 9695 18eb 22       		.uleb128 0x22
 9696 18ec 01       		.uleb128 0x1
 9697 18ed 52       		.byte	0x52
 9698 18ee 04       		.uleb128 0x4
 9699 18ef 75       		.byte	0x75
 9700 18f0 00       		.sleb128 0
 9701 18f1 4E       		.byte	0x4e
 9702 18f2 1A       		.byte	0x1a
 9703 18f3 22       		.uleb128 0x22
 9704 18f4 01       		.uleb128 0x1
 9705 18f5 51       		.byte	0x51
 9706 18f6 02       		.uleb128 0x2
 9707 18f7 76       		.byte	0x76
 9708 18f8 00       		.sleb128 0
 9709 18f9 22       		.uleb128 0x22
 9710 18fa 01       		.uleb128 0x1
 9711 18fb 50       		.byte	0x50
 9712 18fc 03       		.uleb128 0x3
 9713 18fd 91       		.byte	0x91
 9714 18fe BC7F     		.sleb128 -68
 9715 1900 00       		.byte	0
 9716 1901 23       		.uleb128 0x23
 9717 1902 32000000 		.4byte	.LVL432
 9718 1906 98120000 		.4byte	0x1298
 9719 190a 15190000 		.4byte	0x1915
 9720 190e 22       		.uleb128 0x22
 9721 190f 01       		.uleb128 0x1
 9722 1910 50       		.byte	0x50
 9723 1911 02       		.uleb128 0x2
 9724 1912 76       		.byte	0x76
 9725 1913 00       		.sleb128 0
 9726 1914 00       		.byte	0
 9727 1915 21       		.uleb128 0x21
 9728 1916 4E000000 		.4byte	.LVL435
 9729 191a 8C080000 		.4byte	0x88c
 9730 191e 22       		.uleb128 0x22
 9731 191f 01       		.uleb128 0x1
 9732 1920 51       		.byte	0x51
 9733 1921 08       		.uleb128 0x8
 9734 1922 7D       		.byte	0x7d
 9735 1923 00       		.sleb128 0
 9736 1924 06       		.byte	0x6
 9737 1925 09       		.byte	0x9
 9738 1926 FE       		.byte	0xfe
 9739 1927 1A       		.byte	0x1a
 9740 1928 30       		.byte	0x30
 9741 1929 2E       		.byte	0x2e
 9742 192a 22       		.uleb128 0x22
 9743 192b 01       		.uleb128 0x1
 9744 192c 50       		.byte	0x50
 9745 192d 02       		.uleb128 0x2
 9746 192e 76       		.byte	0x76
 9747 192f 00       		.sleb128 0
 9748 1930 00       		.byte	0
 9749 1931 00       		.byte	0
 9750 1932 08       		.uleb128 0x8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 244


 9751 1933 B8000000 		.4byte	0xb8
 9752 1937 42190000 		.4byte	0x1942
 9753 193b 0D       		.uleb128 0xd
 9754 193c DD010000 		.4byte	0x1dd
 9755 1940 0B       		.byte	0xb
 9756 1941 00       		.byte	0
 9757 1942 2D       		.uleb128 0x2d
 9758 1943 F7000000 		.4byte	.LASF129
 9759 1947 01       		.byte	0x1
 9760 1948 4509     		.2byte	0x945
 9761 194a EF030000 		.4byte	0x3ef
 9762 194e 00000000 		.4byte	.LFB30
 9763 1952 5C010000 		.4byte	.LFE30-.LFB30
 9764 1956 01       		.uleb128 0x1
 9765 1957 9C       		.byte	0x9c
 9766 1958 9B1A0000 		.4byte	0x1a9b
 9767 195c 1A       		.uleb128 0x1a
 9768 195d 667000   		.ascii	"fp\000"
 9769 1960 01       		.byte	0x1
 9770 1961 4609     		.2byte	0x946
 9771 1963 95070000 		.4byte	0x795
 9772 1967 661F0000 		.4byte	.LLST152
 9773 196b 1E       		.uleb128 0x1e
 9774 196c C4010000 		.4byte	.LASF130
 9775 1970 01       		.byte	0x1
 9776 1971 4709     		.2byte	0x947
 9777 1973 8A080000 		.4byte	0x88a
 9778 1977 921F0000 		.4byte	.LLST153
 9779 197b 1A       		.uleb128 0x1a
 9780 197c 62747200 		.ascii	"btr\000"
 9781 1980 01       		.byte	0x1
 9782 1981 4809     		.2byte	0x948
 9783 1983 AD000000 		.4byte	0xad
 9784 1987 BF1F0000 		.4byte	.LLST154
 9785 198b 1A       		.uleb128 0x1a
 9786 198c 627200   		.ascii	"br\000"
 9787 198f 01       		.byte	0x1
 9788 1990 4909     		.2byte	0x949
 9789 1992 9B1A0000 		.4byte	0x1a9b
 9790 1996 09200000 		.4byte	.LLST155
 9791 199a 1B       		.uleb128 0x1b
 9792 199b 72657300 		.ascii	"res\000"
 9793 199f 01       		.byte	0x1
 9794 19a0 4C09     		.2byte	0x94c
 9795 19a2 EF030000 		.4byte	0x3ef
 9796 19a6 35200000 		.4byte	.LLST156
 9797 19aa 1F       		.uleb128 0x1f
 9798 19ab 2C030000 		.4byte	.LASF87
 9799 19af 01       		.byte	0x1
 9800 19b0 4D09     		.2byte	0x94d
 9801 19b2 CE000000 		.4byte	0xce
 9802 19b6 48200000 		.4byte	.LLST157
 9803 19ba 1F       		.uleb128 0x1f
 9804 19bb 56010000 		.4byte	.LASF48
 9805 19bf 01       		.byte	0x1
 9806 19c0 4D09     		.2byte	0x94d
 9807 19c2 CE000000 		.4byte	0xce
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 245


 9808 19c6 71200000 		.4byte	.LLST158
 9809 19ca 1F       		.uleb128 0x1f
 9810 19cb 15060000 		.4byte	.LASF131
 9811 19cf 01       		.byte	0x1
 9812 19d0 4D09     		.2byte	0x94d
 9813 19d2 CE000000 		.4byte	0xce
 9814 19d6 BE200000 		.4byte	.LLST159
 9815 19da 1F       		.uleb128 0x1f
 9816 19db 55060000 		.4byte	.LASF132
 9817 19df 01       		.byte	0x1
 9818 19e0 4E09     		.2byte	0x94e
 9819 19e2 AD000000 		.4byte	0xad
 9820 19e6 D1200000 		.4byte	.LLST160
 9821 19ea 1B       		.uleb128 0x1b
 9822 19eb 636300   		.ascii	"cc\000"
 9823 19ee 01       		.byte	0x1
 9824 19ef 4E09     		.2byte	0x94e
 9825 19f1 AD000000 		.4byte	0xad
 9826 19f5 05210000 		.4byte	.LLST161
 9827 19f9 1F       		.uleb128 0x1f
 9828 19fa D8000000 		.4byte	.LASF133
 9829 19fe 01       		.byte	0x1
 9830 19ff 4F09     		.2byte	0x94f
 9831 1a01 B8000000 		.4byte	0xb8
 9832 1a05 23210000 		.4byte	.LLST162
 9833 1a09 1F       		.uleb128 0x1f
 9834 1a0a 1F010000 		.4byte	.LASF134
 9835 1a0e 01       		.byte	0x1
 9836 1a0f 4F09     		.2byte	0x94f
 9837 1a11 8C020000 		.4byte	0x28c
 9838 1a15 43210000 		.4byte	.LLST163
 9839 1a19 2B       		.uleb128 0x2b
 9840 1a1a 18000000 		.4byte	.LVL485
 9841 1a1e E4050000 		.4byte	0x5e4
 9842 1a22 23       		.uleb128 0x23
 9843 1a23 66000000 		.4byte	.LVL490
 9844 1a27 C30D0000 		.4byte	0xdc3
 9845 1a2b 371A0000 		.4byte	0x1a37
 9846 1a2f 22       		.uleb128 0x22
 9847 1a30 01       		.uleb128 0x1
 9848 1a31 50       		.byte	0x50
 9849 1a32 03       		.uleb128 0x3
 9850 1a33 91       		.byte	0x91
 9851 1a34 60       		.sleb128 -32
 9852 1a35 06       		.byte	0x6
 9853 1a36 00       		.byte	0
 9854 1a37 23       		.uleb128 0x23
 9855 1a38 94000000 		.4byte	.LVL494
 9856 1a3c 57290000 		.4byte	0x2957
 9857 1a40 5C1A0000 		.4byte	0x1a5c
 9858 1a44 22       		.uleb128 0x22
 9859 1a45 01       		.uleb128 0x1
 9860 1a46 53       		.byte	0x53
 9861 1a47 05       		.uleb128 0x5
 9862 1a48 75       		.byte	0x75
 9863 1a49 00       		.sleb128 0
 9864 1a4a 08       		.byte	0x8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 246


 9865 1a4b FF       		.byte	0xff
 9866 1a4c 1A       		.byte	0x1a
 9867 1a4d 22       		.uleb128 0x22
 9868 1a4e 01       		.uleb128 0x1
 9869 1a4f 52       		.byte	0x52
 9870 1a50 03       		.uleb128 0x3
 9871 1a51 91       		.byte	0x91
 9872 1a52 64       		.sleb128 -28
 9873 1a53 06       		.byte	0x6
 9874 1a54 22       		.uleb128 0x22
 9875 1a55 01       		.uleb128 0x1
 9876 1a56 51       		.byte	0x51
 9877 1a57 03       		.uleb128 0x3
 9878 1a58 7D       		.byte	0x7d
 9879 1a59 00       		.sleb128 0
 9880 1a5a 06       		.byte	0x6
 9881 1a5b 00       		.byte	0
 9882 1a5c 2B       		.uleb128 0x2b
 9883 1a5d CA000000 		.4byte	.LVL503
 9884 1a61 0C060000 		.4byte	0x60c
 9885 1a65 23       		.uleb128 0x23
 9886 1a66 0C010000 		.4byte	.LVL508
 9887 1a6a 2B080000 		.4byte	0x82b
 9888 1a6e 7A1A0000 		.4byte	0x1a7a
 9889 1a72 22       		.uleb128 0x22
 9890 1a73 01       		.uleb128 0x1
 9891 1a74 52       		.byte	0x52
 9892 1a75 03       		.uleb128 0x3
 9893 1a76 0A       		.byte	0xa
 9894 1a77 0002     		.2byte	0x200
 9895 1a79 00       		.byte	0
 9896 1a7a 2B       		.uleb128 0x2b
 9897 1a7b 2E010000 		.4byte	.LVL515
 9898 1a7f 6A090000 		.4byte	0x96a
 9899 1a83 21       		.uleb128 0x21
 9900 1a84 54010000 		.4byte	.LVL518
 9901 1a88 2B080000 		.4byte	0x82b
 9902 1a8c 22       		.uleb128 0x22
 9903 1a8d 01       		.uleb128 0x1
 9904 1a8e 52       		.byte	0x52
 9905 1a8f 02       		.uleb128 0x2
 9906 1a90 75       		.byte	0x75
 9907 1a91 00       		.sleb128 0
 9908 1a92 22       		.uleb128 0x22
 9909 1a93 01       		.uleb128 0x1
 9910 1a94 50       		.byte	0x50
 9911 1a95 03       		.uleb128 0x3
 9912 1a96 7D       		.byte	0x7d
 9913 1a97 00       		.sleb128 0
 9914 1a98 06       		.byte	0x6
 9915 1a99 00       		.byte	0
 9916 1a9a 00       		.byte	0
 9917 1a9b 0B       		.uleb128 0xb
 9918 1a9c 04       		.byte	0x4
 9919 1a9d AD000000 		.4byte	0xad
 9920 1aa1 2D       		.uleb128 0x2d
 9921 1aa2 66020000 		.4byte	.LASF135
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 247


 9922 1aa6 01       		.byte	0x1
 9923 1aa7 AA09     		.2byte	0x9aa
 9924 1aa9 EF030000 		.4byte	0x3ef
 9925 1aad 00000000 		.4byte	.LFB31
 9926 1ab1 A6010000 		.4byte	.LFE31-.LFB31
 9927 1ab5 01       		.uleb128 0x1
 9928 1ab6 9C       		.byte	0x9c
 9929 1ab7 241C0000 		.4byte	0x1c24
 9930 1abb 1A       		.uleb128 0x1a
 9931 1abc 667000   		.ascii	"fp\000"
 9932 1abf 01       		.byte	0x1
 9933 1ac0 AB09     		.2byte	0x9ab
 9934 1ac2 95070000 		.4byte	0x795
 9935 1ac6 7A210000 		.4byte	.LLST164
 9936 1aca 1E       		.uleb128 0x1e
 9937 1acb C4010000 		.4byte	.LASF130
 9938 1acf 01       		.byte	0x1
 9939 1ad0 AC09     		.2byte	0x9ac
 9940 1ad2 EF070000 		.4byte	0x7ef
 9941 1ad6 A6210000 		.4byte	.LLST165
 9942 1ada 1A       		.uleb128 0x1a
 9943 1adb 62747700 		.ascii	"btw\000"
 9944 1adf 01       		.byte	0x1
 9945 1ae0 AD09     		.2byte	0x9ad
 9946 1ae2 AD000000 		.4byte	0xad
 9947 1ae6 D3210000 		.4byte	.LLST166
 9948 1aea 1A       		.uleb128 0x1a
 9949 1aeb 627700   		.ascii	"bw\000"
 9950 1aee 01       		.byte	0x1
 9951 1aef AE09     		.2byte	0x9ae
 9952 1af1 9B1A0000 		.4byte	0x1a9b
 9953 1af5 12220000 		.4byte	.LLST167
 9954 1af9 1B       		.uleb128 0x1b
 9955 1afa 72657300 		.ascii	"res\000"
 9956 1afe 01       		.byte	0x1
 9957 1aff B109     		.2byte	0x9b1
 9958 1b01 EF030000 		.4byte	0x3ef
 9959 1b05 3E220000 		.4byte	.LLST168
 9960 1b09 1F       		.uleb128 0x1f
 9961 1b0a 2C030000 		.4byte	.LASF87
 9962 1b0e 01       		.byte	0x1
 9963 1b0f B209     		.2byte	0x9b2
 9964 1b11 CE000000 		.4byte	0xce
 9965 1b15 51220000 		.4byte	.LLST169
 9966 1b19 1F       		.uleb128 0x1f
 9967 1b1a 56010000 		.4byte	.LASF48
 9968 1b1e 01       		.byte	0x1
 9969 1b1f B209     		.2byte	0x9b2
 9970 1b21 CE000000 		.4byte	0xce
 9971 1b25 85220000 		.4byte	.LLST170
 9972 1b29 1F       		.uleb128 0x1f
 9973 1b2a AF030000 		.4byte	.LASF136
 9974 1b2e 01       		.byte	0x1
 9975 1b2f B309     		.2byte	0x9b3
 9976 1b31 AD000000 		.4byte	0xad
 9977 1b35 BA220000 		.4byte	.LLST171
 9978 1b39 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 248


 9979 1b3a 636300   		.ascii	"cc\000"
 9980 1b3d 01       		.byte	0x1
 9981 1b3e B309     		.2byte	0x9b3
 9982 1b40 AD000000 		.4byte	0xad
 9983 1b44 EE220000 		.4byte	.LLST172
 9984 1b48 1F       		.uleb128 0x1f
 9985 1b49 B2040000 		.4byte	.LASF137
 9986 1b4d 01       		.byte	0x1
 9987 1b4e B409     		.2byte	0x9b4
 9988 1b50 F6070000 		.4byte	0x7f6
 9989 1b54 24230000 		.4byte	.LLST173
 9990 1b58 1F       		.uleb128 0x1f
 9991 1b59 D8000000 		.4byte	.LASF133
 9992 1b5d 01       		.byte	0x1
 9993 1b5e B509     		.2byte	0x9b5
 9994 1b60 B8000000 		.4byte	0xb8
 9995 1b64 5B230000 		.4byte	.LLST174
 9996 1b68 2B       		.uleb128 0x2b
 9997 1b69 18000000 		.4byte	.LVL529
 9998 1b6d E4050000 		.4byte	0x5e4
 9999 1b71 2B       		.uleb128 0x2b
 10000 1b72 68000000 		.4byte	.LVL534
 10001 1b76 69100000 		.4byte	0x1069
 10002 1b7a 2B       		.uleb128 0x2b
 10003 1b7b 74000000 		.4byte	.LVL537
 10004 1b7f 69100000 		.4byte	0x1069
 10005 1b83 23       		.uleb128 0x23
 10006 1b84 A2000000 		.4byte	.LVL542
 10007 1b88 6A090000 		.4byte	0x96a
 10008 1b8c 961B0000 		.4byte	0x1b96
 10009 1b90 22       		.uleb128 0x22
 10010 1b91 01       		.uleb128 0x1
 10011 1b92 51       		.byte	0x51
 10012 1b93 01       		.uleb128 0x1
 10013 1b94 30       		.byte	0x30
 10014 1b95 00       		.byte	0
 10015 1b96 23       		.uleb128 0x23
 10016 1b97 B2000000 		.4byte	.LVL543
 10017 1b9b C30D0000 		.4byte	0xdc3
 10018 1b9f AB1B0000 		.4byte	0x1bab
 10019 1ba3 22       		.uleb128 0x22
 10020 1ba4 01       		.uleb128 0x1
 10021 1ba5 50       		.byte	0x50
 10022 1ba6 03       		.uleb128 0x3
 10023 1ba7 91       		.byte	0x91
 10024 1ba8 60       		.sleb128 -32
 10025 1ba9 06       		.byte	0x6
 10026 1baa 00       		.byte	0
 10027 1bab 23       		.uleb128 0x23
 10028 1bac EE000000 		.4byte	.LVL551
 10029 1bb0 33290000 		.4byte	0x2933
 10030 1bb4 D21B0000 		.4byte	0x1bd2
 10031 1bb8 22       		.uleb128 0x22
 10032 1bb9 01       		.uleb128 0x1
 10033 1bba 53       		.byte	0x53
 10034 1bbb 07       		.uleb128 0x7
 10035 1bbc 7D       		.byte	0x7d
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 249


 10036 1bbd 00       		.sleb128 0
 10037 1bbe 94       		.byte	0x94
 10038 1bbf 01       		.byte	0x1
 10039 1bc0 08       		.byte	0x8
 10040 1bc1 FF       		.byte	0xff
 10041 1bc2 1A       		.byte	0x1a
 10042 1bc3 22       		.uleb128 0x22
 10043 1bc4 01       		.uleb128 0x1
 10044 1bc5 52       		.byte	0x52
 10045 1bc6 03       		.uleb128 0x3
 10046 1bc7 91       		.byte	0x91
 10047 1bc8 64       		.sleb128 -28
 10048 1bc9 06       		.byte	0x6
 10049 1bca 22       		.uleb128 0x22
 10050 1bcb 01       		.uleb128 0x1
 10051 1bcc 51       		.byte	0x51
 10052 1bcd 03       		.uleb128 0x3
 10053 1bce 91       		.byte	0x91
 10054 1bcf 5C       		.sleb128 -36
 10055 1bd0 06       		.byte	0x6
 10056 1bd1 00       		.byte	0
 10057 1bd2 23       		.uleb128 0x23
 10058 1bd3 10010000 		.4byte	.LVL553
 10059 1bd7 2B080000 		.4byte	0x82b
 10060 1bdb E71B0000 		.4byte	0x1be7
 10061 1bdf 22       		.uleb128 0x22
 10062 1be0 01       		.uleb128 0x1
 10063 1be1 52       		.byte	0x52
 10064 1be2 03       		.uleb128 0x3
 10065 1be3 0A       		.byte	0xa
 10066 1be4 0002     		.2byte	0x200
 10067 1be6 00       		.byte	0
 10068 1be7 23       		.uleb128 0x23
 10069 1be8 2A010000 		.4byte	.LVL557
 10070 1bec 6A090000 		.4byte	0x96a
 10071 1bf0 031C0000 		.4byte	0x1c03
 10072 1bf4 22       		.uleb128 0x22
 10073 1bf5 01       		.uleb128 0x1
 10074 1bf6 51       		.byte	0x51
 10075 1bf7 03       		.uleb128 0x3
 10076 1bf8 7D       		.byte	0x7d
 10077 1bf9 00       		.sleb128 0
 10078 1bfa 06       		.byte	0x6
 10079 1bfb 22       		.uleb128 0x22
 10080 1bfc 01       		.uleb128 0x1
 10081 1bfd 50       		.byte	0x50
 10082 1bfe 03       		.uleb128 0x3
 10083 1bff 91       		.byte	0x91
 10084 1c00 60       		.sleb128 -32
 10085 1c01 06       		.byte	0x6
 10086 1c02 00       		.byte	0
 10087 1c03 2B       		.uleb128 0x2b
 10088 1c04 54010000 		.4byte	.LVL562
 10089 1c08 6A090000 		.4byte	0x96a
 10090 1c0c 21       		.uleb128 0x21
 10091 1c0d 7A010000 		.4byte	.LVL565
 10092 1c11 2B080000 		.4byte	0x82b
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 250


 10093 1c15 22       		.uleb128 0x22
 10094 1c16 01       		.uleb128 0x1
 10095 1c17 52       		.byte	0x52
 10096 1c18 02       		.uleb128 0x2
 10097 1c19 75       		.byte	0x75
 10098 1c1a 00       		.sleb128 0
 10099 1c1b 22       		.uleb128 0x22
 10100 1c1c 01       		.uleb128 0x1
 10101 1c1d 51       		.byte	0x51
 10102 1c1e 03       		.uleb128 0x3
 10103 1c1f 91       		.byte	0x91
 10104 1c20 5C       		.sleb128 -36
 10105 1c21 06       		.byte	0x6
 10106 1c22 00       		.byte	0
 10107 1c23 00       		.byte	0
 10108 1c24 24       		.uleb128 0x24
 10109 1c25 54070000 		.4byte	0x754
 10110 1c29 00000000 		.4byte	.LFB32
 10111 1c2d 7A000000 		.4byte	.LFE32-.LFB32
 10112 1c31 01       		.uleb128 0x1
 10113 1c32 9C       		.byte	0x9c
 10114 1c33 B01C0000 		.4byte	0x1cb0
 10115 1c37 25       		.uleb128 0x25
 10116 1c38 65070000 		.4byte	0x765
 10117 1c3c 84230000 		.4byte	.LLST175
 10118 1c40 2C       		.uleb128 0x2c
 10119 1c41 70070000 		.4byte	0x770
 10120 1c45 B0230000 		.4byte	.LLST176
 10121 1c49 2A       		.uleb128 0x2a
 10122 1c4a 7C070000 		.4byte	0x77c
 10123 1c4e 2A       		.uleb128 0x2a
 10124 1c4f 88070000 		.4byte	0x788
 10125 1c53 20       		.uleb128 0x20
 10126 1c54 24000000 		.4byte	.LBB92
 10127 1c58 54000000 		.4byte	.LBE92-.LBB92
 10128 1c5c 9D1C0000 		.4byte	0x1c9d
 10129 1c60 25       		.uleb128 0x25
 10130 1c61 65070000 		.4byte	0x765
 10131 1c65 D9230000 		.4byte	.LLST177
 10132 1c69 29       		.uleb128 0x29
 10133 1c6a 24000000 		.4byte	.LBB93
 10134 1c6e 54000000 		.4byte	.LBE93-.LBB93
 10135 1c72 2A       		.uleb128 0x2a
 10136 1c73 70070000 		.4byte	0x770
 10137 1c77 2C       		.uleb128 0x2c
 10138 1c78 7C070000 		.4byte	0x77c
 10139 1c7c EC230000 		.4byte	.LLST178
 10140 1c80 2C       		.uleb128 0x2c
 10141 1c81 88070000 		.4byte	0x788
 10142 1c85 FF230000 		.4byte	.LLST179
 10143 1c89 2B       		.uleb128 0x2b
 10144 1c8a 58000000 		.4byte	.LVL581
 10145 1c8e C4290000 		.4byte	0x29c4
 10146 1c92 2B       		.uleb128 0x2b
 10147 1c93 78000000 		.4byte	.LVL583
 10148 1c97 000D0000 		.4byte	0xd00
 10149 1c9b 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 251


 10150 1c9c 00       		.byte	0
 10151 1c9d 2B       		.uleb128 0x2b
 10152 1c9e 0C000000 		.4byte	.LVL576
 10153 1ca2 E4050000 		.4byte	0x5e4
 10154 1ca6 2B       		.uleb128 0x2b
 10155 1ca7 20000000 		.4byte	.LVL578
 10156 1cab 6A090000 		.4byte	0x96a
 10157 1caf 00       		.byte	0
 10158 1cb0 10       		.uleb128 0x10
 10159 1cb1 81060000 		.4byte	.LASF138
 10160 1cb5 01       		.byte	0x1
 10161 1cb6 A502     		.2byte	0x2a5
 10162 1cb8 EF030000 		.4byte	0x3ef
 10163 1cbc 01       		.byte	0x1
 10164 1cbd E21C0000 		.4byte	0x1ce2
 10165 1cc1 11       		.uleb128 0x11
 10166 1cc2 6900     		.ascii	"i\000"
 10167 1cc4 01       		.byte	0x1
 10168 1cc5 A602     		.2byte	0x2a6
 10169 1cc7 AD000000 		.4byte	0xad
 10170 1ccb 14       		.uleb128 0x14
 10171 1ccc 6E00     		.ascii	"n\000"
 10172 1cce 01       		.byte	0x1
 10173 1ccf A902     		.2byte	0x2a9
 10174 1cd1 C3000000 		.4byte	0xc3
 10175 1cd5 14       		.uleb128 0x14
 10176 1cd6 72657300 		.ascii	"res\000"
 10177 1cda 01       		.byte	0x1
 10178 1cdb AA02     		.2byte	0x2aa
 10179 1cdd EF030000 		.4byte	0x3ef
 10180 1ce1 00       		.byte	0
 10181 1ce2 2D       		.uleb128 0x2d
 10182 1ce3 F2020000 		.4byte	.LASF139
 10183 1ce7 01       		.byte	0x1
 10184 1ce8 500A     		.2byte	0xa50
 10185 1cea EF030000 		.4byte	0x3ef
 10186 1cee 00000000 		.4byte	.LFB33
 10187 1cf2 4C000000 		.4byte	.LFE33-.LFB33
 10188 1cf6 01       		.uleb128 0x1
 10189 1cf7 9C       		.byte	0x9c
 10190 1cf8 621D0000 		.4byte	0x1d62
 10191 1cfc 1A       		.uleb128 0x1a
 10192 1cfd 667000   		.ascii	"fp\000"
 10193 1d00 01       		.byte	0x1
 10194 1d01 510A     		.2byte	0xa51
 10195 1d03 95070000 		.4byte	0x795
 10196 1d07 12240000 		.4byte	.LLST180
 10197 1d0b 1B       		.uleb128 0x1b
 10198 1d0c 72657300 		.ascii	"res\000"
 10199 1d10 01       		.byte	0x1
 10200 1d11 540A     		.2byte	0xa54
 10201 1d13 EF030000 		.4byte	0x3ef
 10202 1d17 3E240000 		.4byte	.LLST181
 10203 1d1b 28       		.uleb128 0x28
 10204 1d1c B01C0000 		.4byte	0x1cb0
 10205 1d20 0C000000 		.4byte	.LBB96
 10206 1d24 32000000 		.4byte	.LBE96-.LBB96
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 252


 10207 1d28 01       		.byte	0x1
 10208 1d29 670A     		.2byte	0xa67
 10209 1d2b 511D0000 		.4byte	0x1d51
 10210 1d2f 25       		.uleb128 0x25
 10211 1d30 C11C0000 		.4byte	0x1cc1
 10212 1d34 69240000 		.4byte	.LLST182
 10213 1d38 29       		.uleb128 0x29
 10214 1d39 0C000000 		.4byte	.LBB97
 10215 1d3d 32000000 		.4byte	.LBE97-.LBB97
 10216 1d41 2C       		.uleb128 0x2c
 10217 1d42 CB1C0000 		.4byte	0x1ccb
 10218 1d46 B3240000 		.4byte	.LLST183
 10219 1d4a 2A       		.uleb128 0x2a
 10220 1d4b D51C0000 		.4byte	0x1cd5
 10221 1d4f 00       		.byte	0
 10222 1d50 00       		.byte	0
 10223 1d51 21       		.uleb128 0x21
 10224 1d52 08000000 		.4byte	.LVL586
 10225 1d56 54070000 		.4byte	0x754
 10226 1d5a 22       		.uleb128 0x22
 10227 1d5b 01       		.uleb128 0x1
 10228 1d5c 50       		.byte	0x50
 10229 1d5d 02       		.uleb128 0x2
 10230 1d5e 74       		.byte	0x74
 10231 1d5f 00       		.sleb128 0
 10232 1d60 00       		.byte	0
 10233 1d61 00       		.byte	0
 10234 1d62 35       		.uleb128 0x35
 10235 1d63 3C030000 		.4byte	.LASF140
 10236 1d67 01       		.byte	0x1
 10237 1d68 F40A     		.2byte	0xaf4
 10238 1d6a EF030000 		.4byte	0x3ef
 10239 1d6e 00000000 		.4byte	.LFB34
 10240 1d72 2A010000 		.4byte	.LFE34-.LFB34
 10241 1d76 01       		.uleb128 0x1
 10242 1d77 9C       		.byte	0x9c
 10243 1d78 321E0000 		.4byte	0x1e32
 10244 1d7c 1A       		.uleb128 0x1a
 10245 1d7d 667000   		.ascii	"fp\000"
 10246 1d80 01       		.byte	0x1
 10247 1d81 F50A     		.2byte	0xaf5
 10248 1d83 95070000 		.4byte	0x795
 10249 1d87 DD240000 		.4byte	.LLST184
 10250 1d8b 1A       		.uleb128 0x1a
 10251 1d8c 6F667300 		.ascii	"ofs\000"
 10252 1d90 01       		.byte	0x1
 10253 1d91 F60A     		.2byte	0xaf6
 10254 1d93 CE000000 		.4byte	0xce
 10255 1d97 09250000 		.4byte	.LLST185
 10256 1d9b 1B       		.uleb128 0x1b
 10257 1d9c 72657300 		.ascii	"res\000"
 10258 1da0 01       		.byte	0x1
 10259 1da1 F90A     		.2byte	0xaf9
 10260 1da3 EF030000 		.4byte	0x3ef
 10261 1da7 27250000 		.4byte	.LLST186
 10262 1dab 20       		.uleb128 0x20
 10263 1dac 20000000 		.4byte	.LBB98
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 253


 10264 1db0 08010000 		.4byte	.LBE98-.LBB98
 10265 1db4 281E0000 		.4byte	0x1e28
 10266 1db8 1F       		.uleb128 0x1f
 10267 1db9 2C030000 		.4byte	.LASF87
 10268 1dbd 01       		.byte	0x1
 10269 1dbe 3C0B     		.2byte	0xb3c
 10270 1dc0 CE000000 		.4byte	0xce
 10271 1dc4 3A250000 		.4byte	.LLST187
 10272 1dc8 1B       		.uleb128 0x1b
 10273 1dc9 62637300 		.ascii	"bcs\000"
 10274 1dcd 01       		.byte	0x1
 10275 1dce 3C0B     		.2byte	0xb3c
 10276 1dd0 CE000000 		.4byte	0xce
 10277 1dd4 C6250000 		.4byte	.LLST188
 10278 1dd8 1F       		.uleb128 0x1f
 10279 1dd9 75050000 		.4byte	.LASF141
 10280 1ddd 01       		.byte	0x1
 10281 1dde 3C0B     		.2byte	0xb3c
 10282 1de0 CE000000 		.4byte	0xce
 10283 1de4 D9250000 		.4byte	.LLST189
 10284 1de8 1F       		.uleb128 0x1f
 10285 1de9 AC040000 		.4byte	.LASF142
 10286 1ded 01       		.byte	0x1
 10287 1dee 3C0B     		.2byte	0xb3c
 10288 1df0 CE000000 		.4byte	0xce
 10289 1df4 10260000 		.4byte	.LLST190
 10290 1df8 23       		.uleb128 0x23
 10291 1df9 7A000000 		.4byte	.LVL615
 10292 1dfd 69100000 		.4byte	0x1069
 10293 1e01 0C1E0000 		.4byte	0x1e0c
 10294 1e05 22       		.uleb128 0x22
 10295 1e06 01       		.uleb128 0x1
 10296 1e07 50       		.byte	0x50
 10297 1e08 02       		.uleb128 0x2
 10298 1e09 77       		.byte	0x77
 10299 1e0a 00       		.sleb128 0
 10300 1e0b 00       		.byte	0
 10301 1e0c 2B       		.uleb128 0x2b
 10302 1e0d B4000000 		.4byte	.LVL620
 10303 1e11 69100000 		.4byte	0x1069
 10304 1e15 2B       		.uleb128 0x2b
 10305 1e16 DC000000 		.4byte	.LVL625
 10306 1e1a 0C060000 		.4byte	0x60c
 10307 1e1e 2B       		.uleb128 0x2b
 10308 1e1f F2000000 		.4byte	.LVL628
 10309 1e23 C30D0000 		.4byte	0xdc3
 10310 1e27 00       		.byte	0
 10311 1e28 2B       		.uleb128 0x2b
 10312 1e29 0E000000 		.4byte	.LVL601
 10313 1e2d E4050000 		.4byte	0x5e4
 10314 1e31 00       		.byte	0
 10315 1e32 2D       		.uleb128 0x2d
 10316 1e33 CE050000 		.4byte	.LASF143
 10317 1e37 01       		.byte	0x1
 10318 1e38 920B     		.2byte	0xb92
 10319 1e3a EF030000 		.4byte	0x3ef
 10320 1e3e 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 254


 10321 1e42 62000000 		.4byte	.LFE35-.LFB35
 10322 1e46 01       		.uleb128 0x1
 10323 1e47 9C       		.byte	0x9c
 10324 1e48 D31E0000 		.4byte	0x1ed3
 10325 1e4c 1A       		.uleb128 0x1a
 10326 1e4d 646A00   		.ascii	"dj\000"
 10327 1e50 01       		.byte	0x1
 10328 1e51 930B     		.2byte	0xb93
 10329 1e53 84050000 		.4byte	0x584
 10330 1e57 4B260000 		.4byte	.LLST191
 10331 1e5b 1E       		.uleb128 0x1e
 10332 1e5c 1A010000 		.4byte	.LASF83
 10333 1e60 01       		.byte	0x1
 10334 1e61 940B     		.2byte	0xb94
 10335 1e63 90050000 		.4byte	0x590
 10336 1e67 77260000 		.4byte	.LLST192
 10337 1e6b 1B       		.uleb128 0x1b
 10338 1e6c 72657300 		.ascii	"res\000"
 10339 1e70 01       		.byte	0x1
 10340 1e71 970B     		.2byte	0xb97
 10341 1e73 EF030000 		.4byte	0x3ef
 10342 1e77 A2260000 		.4byte	.LLST193
 10343 1e7b 33       		.uleb128 0x33
 10344 1e7c 73666E00 		.ascii	"sfn\000"
 10345 1e80 01       		.byte	0x1
 10346 1e81 980B     		.2byte	0xb98
 10347 1e83 32190000 		.4byte	0x1932
 10348 1e87 02       		.uleb128 0x2
 10349 1e88 91       		.byte	0x91
 10350 1e89 6C       		.sleb128 -20
 10351 1e8a 23       		.uleb128 0x23
 10352 1e8b 12000000 		.4byte	.LVL638
 10353 1e8f AD0A0000 		.4byte	0xaad
 10354 1e93 A91E0000 		.4byte	0x1ea9
 10355 1e97 22       		.uleb128 0x22
 10356 1e98 01       		.uleb128 0x1
 10357 1e99 52       		.byte	0x52
 10358 1e9a 01       		.uleb128 0x1
 10359 1e9b 30       		.byte	0x30
 10360 1e9c 22       		.uleb128 0x22
 10361 1e9d 01       		.uleb128 0x1
 10362 1e9e 51       		.byte	0x51
 10363 1e9f 02       		.uleb128 0x2
 10364 1ea0 74       		.byte	0x74
 10365 1ea1 00       		.sleb128 0
 10366 1ea2 22       		.uleb128 0x22
 10367 1ea3 01       		.uleb128 0x1
 10368 1ea4 50       		.byte	0x50
 10369 1ea5 02       		.uleb128 0x2
 10370 1ea6 91       		.byte	0x91
 10371 1ea7 64       		.sleb128 -28
 10372 1ea8 00       		.byte	0
 10373 1ea9 23       		.uleb128 0x23
 10374 1eaa 22000000 		.4byte	.LVL640
 10375 1eae 98120000 		.4byte	0x1298
 10376 1eb2 BD1E0000 		.4byte	0x1ebd
 10377 1eb6 22       		.uleb128 0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 255


 10378 1eb7 01       		.uleb128 0x1
 10379 1eb8 50       		.byte	0x50
 10380 1eb9 02       		.uleb128 0x2
 10381 1eba 74       		.byte	0x74
 10382 1ebb 00       		.sleb128 0
 10383 1ebc 00       		.byte	0
 10384 1ebd 21       		.uleb128 0x21
 10385 1ebe 5A000000 		.4byte	.LVL643
 10386 1ec2 BF0E0000 		.4byte	0xebf
 10387 1ec6 22       		.uleb128 0x22
 10388 1ec7 01       		.uleb128 0x1
 10389 1ec8 51       		.byte	0x51
 10390 1ec9 01       		.uleb128 0x1
 10391 1eca 30       		.byte	0x30
 10392 1ecb 22       		.uleb128 0x22
 10393 1ecc 01       		.uleb128 0x1
 10394 1ecd 50       		.byte	0x50
 10395 1ece 02       		.uleb128 0x2
 10396 1ecf 74       		.byte	0x74
 10397 1ed0 00       		.sleb128 0
 10398 1ed1 00       		.byte	0
 10399 1ed2 00       		.byte	0
 10400 1ed3 2D       		.uleb128 0x2d
 10401 1ed4 1D050000 		.4byte	.LASF144
 10402 1ed8 01       		.byte	0x1
 10403 1ed9 BA0B     		.2byte	0xbba
 10404 1edb EF030000 		.4byte	0x3ef
 10405 1edf 00000000 		.4byte	.LFB36
 10406 1ee3 58000000 		.4byte	.LFE36-.LFB36
 10407 1ee7 01       		.uleb128 0x1
 10408 1ee8 9C       		.byte	0x9c
 10409 1ee9 921F0000 		.4byte	0x1f92
 10410 1eed 1A       		.uleb128 0x1a
 10411 1eee 646A00   		.ascii	"dj\000"
 10412 1ef1 01       		.byte	0x1
 10413 1ef2 BB0B     		.2byte	0xbbb
 10414 1ef4 84050000 		.4byte	0x584
 10415 1ef8 D7260000 		.4byte	.LLST194
 10416 1efc 1A       		.uleb128 0x1a
 10417 1efd 666E6F00 		.ascii	"fno\000"
 10418 1f01 01       		.byte	0x1
 10419 1f02 BC0B     		.2byte	0xbbc
 10420 1f04 5E090000 		.4byte	0x95e
 10421 1f08 03270000 		.4byte	.LLST195
 10422 1f0c 1B       		.uleb128 0x1b
 10423 1f0d 72657300 		.ascii	"res\000"
 10424 1f11 01       		.byte	0x1
 10425 1f12 BF0B     		.2byte	0xbbf
 10426 1f14 EF030000 		.4byte	0x3ef
 10427 1f18 2F270000 		.4byte	.LLST196
 10428 1f1c 33       		.uleb128 0x33
 10429 1f1d 73666E00 		.ascii	"sfn\000"
 10430 1f21 01       		.byte	0x1
 10431 1f22 C00B     		.2byte	0xbc0
 10432 1f24 32190000 		.4byte	0x1932
 10433 1f28 02       		.uleb128 0x2
 10434 1f29 91       		.byte	0x91
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 256


 10435 1f2a 64       		.sleb128 -28
 10436 1f2b 2B       		.uleb128 0x2b
 10437 1f2c 0E000000 		.4byte	.LVL649
 10438 1f30 E4050000 		.4byte	0x5e4
 10439 1f34 23       		.uleb128 0x23
 10440 1f35 1E000000 		.4byte	.LVL652
 10441 1f39 BF0E0000 		.4byte	0xebf
 10442 1f3d 4E1F0000 		.4byte	0x1f4e
 10443 1f41 22       		.uleb128 0x22
 10444 1f42 01       		.uleb128 0x1
 10445 1f43 51       		.byte	0x51
 10446 1f44 02       		.uleb128 0x2
 10447 1f45 75       		.byte	0x75
 10448 1f46 00       		.sleb128 0
 10449 1f47 22       		.uleb128 0x22
 10450 1f48 01       		.uleb128 0x1
 10451 1f49 50       		.byte	0x50
 10452 1f4a 02       		.uleb128 0x2
 10453 1f4b 74       		.byte	0x74
 10454 1f4c 00       		.sleb128 0
 10455 1f4d 00       		.byte	0
 10456 1f4e 23       		.uleb128 0x23
 10457 1f4f 2A000000 		.4byte	.LVL655
 10458 1f53 C6150000 		.4byte	0x15c6
 10459 1f57 621F0000 		.4byte	0x1f62
 10460 1f5b 22       		.uleb128 0x22
 10461 1f5c 01       		.uleb128 0x1
 10462 1f5d 50       		.byte	0x50
 10463 1f5e 02       		.uleb128 0x2
 10464 1f5f 74       		.byte	0x74
 10465 1f60 00       		.sleb128 0
 10466 1f61 00       		.byte	0
 10467 1f62 23       		.uleb128 0x23
 10468 1f63 3E000000 		.4byte	.LVL659
 10469 1f67 E1080000 		.4byte	0x8e1
 10470 1f6b 7C1F0000 		.4byte	0x1f7c
 10471 1f6f 22       		.uleb128 0x22
 10472 1f70 01       		.uleb128 0x1
 10473 1f71 51       		.byte	0x51
 10474 1f72 02       		.uleb128 0x2
 10475 1f73 76       		.byte	0x76
 10476 1f74 00       		.sleb128 0
 10477 1f75 22       		.uleb128 0x22
 10478 1f76 01       		.uleb128 0x1
 10479 1f77 50       		.byte	0x50
 10480 1f78 02       		.uleb128 0x2
 10481 1f79 74       		.byte	0x74
 10482 1f7a 00       		.sleb128 0
 10483 1f7b 00       		.byte	0
 10484 1f7c 21       		.uleb128 0x21
 10485 1f7d 46000000 		.4byte	.LVL660
 10486 1f81 44110000 		.4byte	0x1144
 10487 1f85 22       		.uleb128 0x22
 10488 1f86 01       		.uleb128 0x1
 10489 1f87 51       		.byte	0x51
 10490 1f88 01       		.uleb128 0x1
 10491 1f89 30       		.byte	0x30
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 257


 10492 1f8a 22       		.uleb128 0x22
 10493 1f8b 01       		.uleb128 0x1
 10494 1f8c 50       		.byte	0x50
 10495 1f8d 02       		.uleb128 0x2
 10496 1f8e 74       		.byte	0x74
 10497 1f8f 00       		.sleb128 0
 10498 1f90 00       		.byte	0
 10499 1f91 00       		.byte	0
 10500 1f92 2D       		.uleb128 0x2d
 10501 1f93 77020000 		.4byte	.LASF145
 10502 1f97 01       		.byte	0x1
 10503 1f98 E40B     		.2byte	0xbe4
 10504 1f9a EF030000 		.4byte	0x3ef
 10505 1f9e 00000000 		.4byte	.LFB37
 10506 1fa2 40000000 		.4byte	.LFE37-.LFB37
 10507 1fa6 01       		.uleb128 0x1
 10508 1fa7 9C       		.byte	0x9c
 10509 1fa8 43200000 		.4byte	0x2043
 10510 1fac 1E       		.uleb128 0x1e
 10511 1fad 1A010000 		.4byte	.LASF83
 10512 1fb1 01       		.byte	0x1
 10513 1fb2 E50B     		.2byte	0xbe5
 10514 1fb4 90050000 		.4byte	0x590
 10515 1fb8 91270000 		.4byte	.LLST197
 10516 1fbc 1A       		.uleb128 0x1a
 10517 1fbd 666E6F00 		.ascii	"fno\000"
 10518 1fc1 01       		.byte	0x1
 10519 1fc2 E60B     		.2byte	0xbe6
 10520 1fc4 5E090000 		.4byte	0x95e
 10521 1fc8 BC270000 		.4byte	.LLST198
 10522 1fcc 1B       		.uleb128 0x1b
 10523 1fcd 72657300 		.ascii	"res\000"
 10524 1fd1 01       		.byte	0x1
 10525 1fd2 E90B     		.2byte	0xbe9
 10526 1fd4 EF030000 		.4byte	0x3ef
 10527 1fd8 E8270000 		.4byte	.LLST199
 10528 1fdc 33       		.uleb128 0x33
 10529 1fdd 646A00   		.ascii	"dj\000"
 10530 1fe0 01       		.byte	0x1
 10531 1fe1 EA0B     		.2byte	0xbea
 10532 1fe3 03030000 		.4byte	0x303
 10533 1fe7 02       		.uleb128 0x2
 10534 1fe8 91       		.byte	0x91
 10535 1fe9 54       		.sleb128 -44
 10536 1fea 33       		.uleb128 0x33
 10537 1feb 73666E00 		.ascii	"sfn\000"
 10538 1fef 01       		.byte	0x1
 10539 1ff0 EB0B     		.2byte	0xbeb
 10540 1ff2 32190000 		.4byte	0x1932
 10541 1ff6 02       		.uleb128 0x2
 10542 1ff7 91       		.byte	0x91
 10543 1ff8 48       		.sleb128 -56
 10544 1ff9 23       		.uleb128 0x23
 10545 1ffa 12000000 		.4byte	.LVL670
 10546 1ffe AD0A0000 		.4byte	0xaad
 10547 2002 18200000 		.4byte	0x2018
 10548 2006 22       		.uleb128 0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 258


 10549 2007 01       		.uleb128 0x1
 10550 2008 52       		.byte	0x52
 10551 2009 01       		.uleb128 0x1
 10552 200a 30       		.byte	0x30
 10553 200b 22       		.uleb128 0x22
 10554 200c 01       		.uleb128 0x1
 10555 200d 51       		.byte	0x51
 10556 200e 02       		.uleb128 0x2
 10557 200f 91       		.byte	0x91
 10558 2010 54       		.sleb128 -44
 10559 2011 22       		.uleb128 0x22
 10560 2012 01       		.uleb128 0x1
 10561 2013 50       		.byte	0x50
 10562 2014 02       		.uleb128 0x2
 10563 2015 91       		.byte	0x91
 10564 2016 44       		.sleb128 -60
 10565 2017 00       		.byte	0
 10566 2018 23       		.uleb128 0x23
 10567 2019 22000000 		.4byte	.LVL673
 10568 201d 98120000 		.4byte	0x1298
 10569 2021 2C200000 		.4byte	0x202c
 10570 2025 22       		.uleb128 0x22
 10571 2026 01       		.uleb128 0x1
 10572 2027 50       		.byte	0x50
 10573 2028 02       		.uleb128 0x2
 10574 2029 91       		.byte	0x91
 10575 202a 54       		.sleb128 -44
 10576 202b 00       		.byte	0
 10577 202c 21       		.uleb128 0x21
 10578 202d 36000000 		.4byte	.LVL676
 10579 2031 E1080000 		.4byte	0x8e1
 10580 2035 22       		.uleb128 0x22
 10581 2036 01       		.uleb128 0x1
 10582 2037 51       		.byte	0x51
 10583 2038 02       		.uleb128 0x2
 10584 2039 75       		.byte	0x75
 10585 203a 00       		.sleb128 0
 10586 203b 22       		.uleb128 0x22
 10587 203c 01       		.uleb128 0x1
 10588 203d 50       		.byte	0x50
 10589 203e 02       		.uleb128 0x2
 10590 203f 91       		.byte	0x91
 10591 2040 54       		.sleb128 -44
 10592 2041 00       		.byte	0
 10593 2042 00       		.byte	0
 10594 2043 2D       		.uleb128 0x2d
 10595 2044 68040000 		.4byte	.LASF146
 10596 2048 01       		.byte	0x1
 10597 2049 050C     		.2byte	0xc05
 10598 204b EF030000 		.4byte	0x3ef
 10599 204f 00000000 		.4byte	.LFB38
 10600 2053 EC000000 		.4byte	.LFE38-.LFB38
 10601 2057 01       		.uleb128 0x1
 10602 2058 9C       		.byte	0x9c
 10603 2059 4B210000 		.4byte	0x214b
 10604 205d 1E       		.uleb128 0x1e
 10605 205e 1A010000 		.4byte	.LASF83
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 259


 10606 2062 01       		.byte	0x1
 10607 2063 060C     		.2byte	0xc06
 10608 2065 90050000 		.4byte	0x590
 10609 2069 32280000 		.4byte	.LLST200
 10610 206d 1E       		.uleb128 0x1e
 10611 206e F7030000 		.4byte	.LASF110
 10612 2072 01       		.byte	0x1
 10613 2073 070C     		.2byte	0xc07
 10614 2075 4B210000 		.4byte	0x214b
 10615 2079 5D280000 		.4byte	.LLST201
 10616 207d 1E       		.uleb128 0x1e
 10617 207e 39040000 		.4byte	.LASF147
 10618 2082 01       		.byte	0x1
 10619 2083 080C     		.2byte	0xc08
 10620 2085 730C0000 		.4byte	0xc73
 10621 2089 7C280000 		.4byte	.LLST202
 10622 208d 1B       		.uleb128 0x1b
 10623 208e 72657300 		.ascii	"res\000"
 10624 2092 01       		.byte	0x1
 10625 2093 0B0C     		.2byte	0xc0b
 10626 2095 EF030000 		.4byte	0x3ef
 10627 2099 B3280000 		.4byte	.LLST203
 10628 209d 1B       		.uleb128 0x1b
 10629 209e 6E00     		.ascii	"n\000"
 10630 20a0 01       		.byte	0x1
 10631 20a1 0C0C     		.2byte	0xc0c
 10632 20a3 CE000000 		.4byte	0xce
 10633 20a7 0A290000 		.4byte	.LLST204
 10634 20ab 1F       		.uleb128 0x1f
 10635 20ac 2C030000 		.4byte	.LASF87
 10636 20b0 01       		.byte	0x1
 10637 20b1 0C0C     		.2byte	0xc0c
 10638 20b3 CE000000 		.4byte	0xce
 10639 20b7 40290000 		.4byte	.LLST205
 10640 20bb 1F       		.uleb128 0x1f
 10641 20bc 56010000 		.4byte	.LASF48
 10642 20c0 01       		.byte	0x1
 10643 20c1 0C0C     		.2byte	0xc0c
 10644 20c3 CE000000 		.4byte	0xce
 10645 20c7 81290000 		.4byte	.LLST206
 10646 20cb 1F       		.uleb128 0x1f
 10647 20cc 6A060000 		.4byte	.LASF105
 10648 20d0 01       		.byte	0x1
 10649 20d1 0C0C     		.2byte	0xc0c
 10650 20d3 CE000000 		.4byte	0xce
 10651 20d7 C0290000 		.4byte	.LLST207
 10652 20db 1B       		.uleb128 0x1b
 10653 20dc 6900     		.ascii	"i\000"
 10654 20de 01       		.byte	0x1
 10655 20df 0D0C     		.2byte	0xc0d
 10656 20e1 AD000000 		.4byte	0xad
 10657 20e5 DE290000 		.4byte	.LLST208
 10658 20e9 1B       		.uleb128 0x1b
 10659 20ea 66617400 		.ascii	"fat\000"
 10660 20ee 01       		.byte	0x1
 10661 20ef 0E0C     		.2byte	0xc0e
 10662 20f1 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 260


 10663 20f5 382A0000 		.4byte	.LLST209
 10664 20f9 1B       		.uleb128 0x1b
 10665 20fa 7000     		.ascii	"p\000"
 10666 20fc 01       		.byte	0x1
 10667 20fd 0E0C     		.2byte	0xc0e
 10668 20ff 8C020000 		.4byte	0x28c
 10669 2103 4C2A0000 		.4byte	.LLST210
 10670 2107 23       		.uleb128 0x23
 10671 2108 14000000 		.4byte	.LVL685
 10672 210c AD0A0000 		.4byte	0xaad
 10673 2110 26210000 		.4byte	0x2126
 10674 2114 22       		.uleb128 0x22
 10675 2115 01       		.uleb128 0x1
 10676 2116 52       		.byte	0x52
 10677 2117 01       		.uleb128 0x1
 10678 2118 30       		.byte	0x30
 10679 2119 22       		.uleb128 0x22
 10680 211a 01       		.uleb128 0x1
 10681 211b 51       		.byte	0x51
 10682 211c 02       		.uleb128 0x2
 10683 211d 76       		.byte	0x76
 10684 211e 00       		.sleb128 0
 10685 211f 22       		.uleb128 0x22
 10686 2120 01       		.uleb128 0x1
 10687 2121 50       		.byte	0x50
 10688 2122 02       		.uleb128 0x2
 10689 2123 91       		.byte	0x91
 10690 2124 64       		.sleb128 -28
 10691 2125 00       		.byte	0
 10692 2126 23       		.uleb128 0x23
 10693 2127 40000000 		.4byte	.LVL689
 10694 212b 0C060000 		.4byte	0x60c
 10695 212f 3A210000 		.4byte	0x213a
 10696 2133 22       		.uleb128 0x22
 10697 2134 01       		.uleb128 0x1
 10698 2135 51       		.byte	0x51
 10699 2136 02       		.uleb128 0x2
 10700 2137 77       		.byte	0x77
 10701 2138 00       		.sleb128 0
 10702 2139 00       		.byte	0
 10703 213a 21       		.uleb128 0x21
 10704 213b 74000000 		.4byte	.LVL698
 10705 213f 6A090000 		.4byte	0x96a
 10706 2143 22       		.uleb128 0x22
 10707 2144 01       		.uleb128 0x1
 10708 2145 51       		.byte	0x51
 10709 2146 02       		.uleb128 0x2
 10710 2147 77       		.byte	0x77
 10711 2148 7F       		.sleb128 -1
 10712 2149 00       		.byte	0
 10713 214a 00       		.byte	0
 10714 214b 0B       		.uleb128 0xb
 10715 214c 04       		.byte	0x4
 10716 214d CE000000 		.4byte	0xce
 10717 2151 2D       		.uleb128 0x2d
 10718 2152 3A060000 		.4byte	.LASF148
 10719 2156 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 261


 10720 2157 460C     		.2byte	0xc46
 10721 2159 EF030000 		.4byte	0x3ef
 10722 215d 00000000 		.4byte	.LFB39
 10723 2161 98000000 		.4byte	.LFE39-.LFB39
 10724 2165 01       		.uleb128 0x1
 10725 2166 9C       		.byte	0x9c
 10726 2167 DD210000 		.4byte	0x21dd
 10727 216b 1A       		.uleb128 0x1a
 10728 216c 667000   		.ascii	"fp\000"
 10729 216f 01       		.byte	0x1
 10730 2170 470C     		.2byte	0xc47
 10731 2172 95070000 		.4byte	0x795
 10732 2176 702A0000 		.4byte	.LLST211
 10733 217a 1B       		.uleb128 0x1b
 10734 217b 72657300 		.ascii	"res\000"
 10735 217f 01       		.byte	0x1
 10736 2180 4A0C     		.2byte	0xc4a
 10737 2182 EF030000 		.4byte	0x3ef
 10738 2186 9C2A0000 		.4byte	.LLST212
 10739 218a 1B       		.uleb128 0x1b
 10740 218b 6E636C00 		.ascii	"ncl\000"
 10741 218f 01       		.byte	0x1
 10742 2190 4B0C     		.2byte	0xc4b
 10743 2192 CE000000 		.4byte	0xce
 10744 2196 0B2B0000 		.4byte	.LLST213
 10745 219a 2B       		.uleb128 0x2b
 10746 219b 0C000000 		.4byte	.LVL714
 10747 219f E4050000 		.4byte	0x5e4
 10748 21a3 2B       		.uleb128 0x2b
 10749 21a4 3A000000 		.4byte	.LVL717
 10750 21a8 13070000 		.4byte	0x713
 10751 21ac 2B       		.uleb128 0x2b
 10752 21ad 46000000 		.4byte	.LVL720
 10753 21b1 0C060000 		.4byte	0x60c
 10754 21b5 23       		.uleb128 0x23
 10755 21b6 64000000 		.4byte	.LVL723
 10756 21ba 7E060000 		.4byte	0x67e
 10757 21be CC210000 		.4byte	0x21cc
 10758 21c2 22       		.uleb128 0x22
 10759 21c3 01       		.uleb128 0x1
 10760 21c4 52       		.byte	0x52
 10761 21c5 05       		.uleb128 0x5
 10762 21c6 0C       		.byte	0xc
 10763 21c7 FFFFFF0F 		.4byte	0xfffffff
 10764 21cb 00       		.byte	0
 10765 21cc 21       		.uleb128 0x21
 10766 21cd 70000000 		.4byte	.LVL726
 10767 21d1 13070000 		.4byte	0x713
 10768 21d5 22       		.uleb128 0x22
 10769 21d6 01       		.uleb128 0x1
 10770 21d7 51       		.byte	0x51
 10771 21d8 02       		.uleb128 0x2
 10772 21d9 76       		.byte	0x76
 10773 21da 00       		.sleb128 0
 10774 21db 00       		.byte	0
 10775 21dc 00       		.byte	0
 10776 21dd 2D       		.uleb128 0x2d
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 262


 10777 21de A3040000 		.4byte	.LASF149
 10778 21e2 01       		.byte	0x1
 10779 21e3 760C     		.2byte	0xc76
 10780 21e5 EF030000 		.4byte	0x3ef
 10781 21e9 00000000 		.4byte	.LFB40
 10782 21ed BA000000 		.4byte	.LFE40-.LFB40
 10783 21f1 01       		.uleb128 0x1
 10784 21f2 9C       		.byte	0x9c
 10785 21f3 32230000 		.4byte	0x2332
 10786 21f7 1E       		.uleb128 0x1e
 10787 21f8 1A010000 		.4byte	.LASF83
 10788 21fc 01       		.byte	0x1
 10789 21fd 770C     		.2byte	0xc77
 10790 21ff 90050000 		.4byte	0x590
 10791 2203 342B0000 		.4byte	.LLST214
 10792 2207 1B       		.uleb128 0x1b
 10793 2208 72657300 		.ascii	"res\000"
 10794 220c 01       		.byte	0x1
 10795 220d 7A0C     		.2byte	0xc7a
 10796 220f EF030000 		.4byte	0x3ef
 10797 2213 602B0000 		.4byte	.LLST215
 10798 2217 33       		.uleb128 0x33
 10799 2218 646A00   		.ascii	"dj\000"
 10800 221b 01       		.byte	0x1
 10801 221c 7B0C     		.2byte	0xc7b
 10802 221e 03030000 		.4byte	0x303
 10803 2222 03       		.uleb128 0x3
 10804 2223 91       		.byte	0x91
 10805 2224 B87F     		.sleb128 -72
 10806 2226 33       		.uleb128 0x33
 10807 2227 73646A00 		.ascii	"sdj\000"
 10808 222b 01       		.byte	0x1
 10809 222c 7B0C     		.2byte	0xc7b
 10810 222e 03030000 		.4byte	0x303
 10811 2232 02       		.uleb128 0x2
 10812 2233 91       		.byte	0x91
 10813 2234 54       		.sleb128 -44
 10814 2235 1B       		.uleb128 0x1b
 10815 2236 64697200 		.ascii	"dir\000"
 10816 223a 01       		.byte	0x1
 10817 223b 7C0C     		.2byte	0xc7c
 10818 223d 8C020000 		.4byte	0x28c
 10819 2241 0F2C0000 		.4byte	.LLST216
 10820 2245 1F       		.uleb128 0x1f
 10821 2246 A5000000 		.4byte	.LASF150
 10822 224a 01       		.byte	0x1
 10823 224b 7D0C     		.2byte	0xc7d
 10824 224d CE000000 		.4byte	0xce
 10825 2251 2E2C0000 		.4byte	.LLST217
 10826 2255 33       		.uleb128 0x33
 10827 2256 73666E00 		.ascii	"sfn\000"
 10828 225a 01       		.byte	0x1
 10829 225b 7E0C     		.2byte	0xc7e
 10830 225d 32190000 		.4byte	0x1932
 10831 2261 03       		.uleb128 0x3
 10832 2262 91       		.byte	0x91
 10833 2263 AC7F     		.sleb128 -84
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 263


 10834 2265 23       		.uleb128 0x23
 10835 2266 10000000 		.4byte	.LVL736
 10836 226a AD0A0000 		.4byte	0xaad
 10837 226e 86220000 		.4byte	0x2286
 10838 2272 22       		.uleb128 0x22
 10839 2273 01       		.uleb128 0x1
 10840 2274 52       		.byte	0x52
 10841 2275 01       		.uleb128 0x1
 10842 2276 31       		.byte	0x31
 10843 2277 22       		.uleb128 0x22
 10844 2278 01       		.uleb128 0x1
 10845 2279 51       		.byte	0x51
 10846 227a 03       		.uleb128 0x3
 10847 227b 91       		.byte	0x91
 10848 227c B87F     		.sleb128 -72
 10849 227e 22       		.uleb128 0x22
 10850 227f 01       		.uleb128 0x1
 10851 2280 50       		.byte	0x50
 10852 2281 03       		.uleb128 0x3
 10853 2282 91       		.byte	0x91
 10854 2283 A47F     		.sleb128 -92
 10855 2285 00       		.byte	0
 10856 2286 23       		.uleb128 0x23
 10857 2287 20000000 		.4byte	.LVL739
 10858 228b 98120000 		.4byte	0x1298
 10859 228f 9B220000 		.4byte	0x229b
 10860 2293 22       		.uleb128 0x22
 10861 2294 01       		.uleb128 0x1
 10862 2295 50       		.byte	0x50
 10863 2296 03       		.uleb128 0x3
 10864 2297 91       		.byte	0x91
 10865 2298 B87F     		.sleb128 -72
 10866 229a 00       		.byte	0
 10867 229b 23       		.uleb128 0x23
 10868 229c 2C000000 		.4byte	.LVL742
 10869 22a0 8C080000 		.4byte	0x88c
 10870 22a4 B5220000 		.4byte	0x22b5
 10871 22a8 22       		.uleb128 0x22
 10872 22a9 01       		.uleb128 0x1
 10873 22aa 51       		.byte	0x51
 10874 22ab 01       		.uleb128 0x1
 10875 22ac 32       		.byte	0x32
 10876 22ad 22       		.uleb128 0x22
 10877 22ae 01       		.uleb128 0x1
 10878 22af 50       		.byte	0x50
 10879 22b0 03       		.uleb128 0x3
 10880 22b1 91       		.byte	0x91
 10881 22b2 B87F     		.sleb128 -72
 10882 22b4 00       		.byte	0
 10883 22b5 23       		.uleb128 0x23
 10884 22b6 70000000 		.4byte	.LVL753
 10885 22ba 2B080000 		.4byte	0x82b
 10886 22be D5220000 		.4byte	0x22d5
 10887 22c2 22       		.uleb128 0x22
 10888 22c3 01       		.uleb128 0x1
 10889 22c4 52       		.byte	0x52
 10890 22c5 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 264


 10891 22c6 4C       		.byte	0x4c
 10892 22c7 22       		.uleb128 0x22
 10893 22c8 01       		.uleb128 0x1
 10894 22c9 51       		.byte	0x51
 10895 22ca 03       		.uleb128 0x3
 10896 22cb 91       		.byte	0x91
 10897 22cc B87F     		.sleb128 -72
 10898 22ce 22       		.uleb128 0x22
 10899 22cf 01       		.uleb128 0x1
 10900 22d0 50       		.byte	0x50
 10901 22d1 02       		.uleb128 0x2
 10902 22d2 91       		.byte	0x91
 10903 22d3 54       		.sleb128 -44
 10904 22d4 00       		.byte	0
 10905 22d5 23       		.uleb128 0x23
 10906 22d6 7A000000 		.4byte	.LVL754
 10907 22da BF0E0000 		.4byte	0xebf
 10908 22de EF220000 		.4byte	0x22ef
 10909 22e2 22       		.uleb128 0x22
 10910 22e3 01       		.uleb128 0x1
 10911 22e4 51       		.byte	0x51
 10912 22e5 02       		.uleb128 0x2
 10913 22e6 74       		.byte	0x74
 10914 22e7 00       		.sleb128 0
 10915 22e8 22       		.uleb128 0x22
 10916 22e9 01       		.uleb128 0x1
 10917 22ea 50       		.byte	0x50
 10918 22eb 02       		.uleb128 0x2
 10919 22ec 91       		.byte	0x91
 10920 22ed 54       		.sleb128 -44
 10921 22ee 00       		.byte	0
 10922 22ef 23       		.uleb128 0x23
 10923 22f0 84000000 		.4byte	.LVL757
 10924 22f4 C6150000 		.4byte	0x15c6
 10925 22f8 03230000 		.4byte	0x2303
 10926 22fc 22       		.uleb128 0x22
 10927 22fd 01       		.uleb128 0x1
 10928 22fe 50       		.byte	0x50
 10929 22ff 02       		.uleb128 0x2
 10930 2300 91       		.byte	0x91
 10931 2301 54       		.sleb128 -44
 10932 2302 00       		.byte	0
 10933 2303 23       		.uleb128 0x23
 10934 2304 92000000 		.4byte	.LVL760
 10935 2308 55060000 		.4byte	0x655
 10936 230c 18230000 		.4byte	0x2318
 10937 2310 22       		.uleb128 0x22
 10938 2311 01       		.uleb128 0x1
 10939 2312 50       		.byte	0x50
 10940 2313 03       		.uleb128 0x3
 10941 2314 91       		.byte	0x91
 10942 2315 B87F     		.sleb128 -72
 10943 2317 00       		.byte	0
 10944 2318 2B       		.uleb128 0x2b
 10945 2319 A0000000 		.4byte	.LVL763
 10946 231d 000D0000 		.4byte	0xd00
 10947 2321 21       		.uleb128 0x21
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 265


 10948 2322 AC000000 		.4byte	.LVL766
 10949 2326 13070000 		.4byte	0x713
 10950 232a 22       		.uleb128 0x22
 10951 232b 01       		.uleb128 0x1
 10952 232c 51       		.byte	0x51
 10953 232d 02       		.uleb128 0x2
 10954 232e 75       		.byte	0x75
 10955 232f 00       		.sleb128 0
 10956 2330 00       		.byte	0
 10957 2331 00       		.byte	0
 10958 2332 2D       		.uleb128 0x2d
 10959 2333 A1030000 		.4byte	.LASF151
 10960 2337 01       		.byte	0x1
 10961 2338 BA0C     		.2byte	0xcba
 10962 233a EF030000 		.4byte	0x3ef
 10963 233e 00000000 		.4byte	.LFB41
 10964 2342 EA010000 		.4byte	.LFE41-.LFB41
 10965 2346 01       		.uleb128 0x1
 10966 2347 9C       		.byte	0x9c
 10967 2348 84250000 		.4byte	0x2584
 10968 234c 1E       		.uleb128 0x1e
 10969 234d 1A010000 		.4byte	.LASF83
 10970 2351 01       		.byte	0x1
 10971 2352 BB0C     		.2byte	0xcbb
 10972 2354 90050000 		.4byte	0x590
 10973 2358 7E2D0000 		.4byte	.LLST218
 10974 235c 1B       		.uleb128 0x1b
 10975 235d 72657300 		.ascii	"res\000"
 10976 2361 01       		.byte	0x1
 10977 2362 BE0C     		.2byte	0xcbe
 10978 2364 EF030000 		.4byte	0x3ef
 10979 2368 B72D0000 		.4byte	.LLST219
 10980 236c 33       		.uleb128 0x33
 10981 236d 646A00   		.ascii	"dj\000"
 10982 2370 01       		.byte	0x1
 10983 2371 BF0C     		.2byte	0xcbf
 10984 2373 03030000 		.4byte	0x303
 10985 2377 02       		.uleb128 0x2
 10986 2378 91       		.byte	0x91
 10987 2379 4C       		.sleb128 -52
 10988 237a 1B       		.uleb128 0x1b
 10989 237b 64697200 		.ascii	"dir\000"
 10990 237f 01       		.byte	0x1
 10991 2380 C00C     		.2byte	0xcc0
 10992 2382 8C020000 		.4byte	0x28c
 10993 2386 522E0000 		.4byte	.LLST220
 10994 238a 1B       		.uleb128 0x1b
 10995 238b 6E00     		.ascii	"n\000"
 10996 238d 01       		.byte	0x1
 10997 238e C00C     		.2byte	0xcc0
 10998 2390 B8000000 		.4byte	0xb8
 10999 2394 712E0000 		.4byte	.LLST221
 11000 2398 1B       		.uleb128 0x1b
 11001 2399 64736300 		.ascii	"dsc\000"
 11002 239d 01       		.byte	0x1
 11003 239e C10C     		.2byte	0xcc1
 11004 23a0 CE000000 		.4byte	0xce
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 266


 11005 23a4 852E0000 		.4byte	.LLST222
 11006 23a8 1B       		.uleb128 0x1b
 11007 23a9 64636C00 		.ascii	"dcl\000"
 11008 23ad 01       		.byte	0x1
 11009 23ae C10C     		.2byte	0xcc1
 11010 23b0 CE000000 		.4byte	0xce
 11011 23b4 C62E0000 		.4byte	.LLST223
 11012 23b8 1B       		.uleb128 0x1b
 11013 23b9 70636C00 		.ascii	"pcl\000"
 11014 23bd 01       		.byte	0x1
 11015 23be C10C     		.2byte	0xcc1
 11016 23c0 CE000000 		.4byte	0xce
 11017 23c4 FA2E0000 		.4byte	.LLST224
 11018 23c8 1B       		.uleb128 0x1b
 11019 23c9 74696D00 		.ascii	"tim\000"
 11020 23cd 01       		.byte	0x1
 11021 23ce C10C     		.2byte	0xcc1
 11022 23d0 CE000000 		.4byte	0xce
 11023 23d4 0D2F0000 		.4byte	.LLST225
 11024 23d8 33       		.uleb128 0x33
 11025 23d9 73666E00 		.ascii	"sfn\000"
 11026 23dd 01       		.byte	0x1
 11027 23de C20C     		.2byte	0xcc2
 11028 23e0 32190000 		.4byte	0x1932
 11029 23e4 02       		.uleb128 0x2
 11030 23e5 91       		.byte	0x91
 11031 23e6 40       		.sleb128 -64
 11032 23e7 28       		.uleb128 0x28
 11033 23e8 C40C0000 		.4byte	0xcc4
 11034 23ec 84000000 		.4byte	.LBB105
 11035 23f0 14000000 		.4byte	.LBE105-.LBB105
 11036 23f4 01       		.byte	0x1
 11037 23f5 D70C     		.2byte	0xcd7
 11038 23f7 2A240000 		.4byte	0x242a
 11039 23fb 25       		.uleb128 0x25
 11040 23fc E90C0000 		.4byte	0xce9
 11041 2400 362F0000 		.4byte	.LLST226
 11042 2404 25       		.uleb128 0x25
 11043 2405 DD0C0000 		.4byte	0xcdd
 11044 2409 882F0000 		.4byte	.LLST227
 11045 240d 25       		.uleb128 0x25
 11046 240e D10C0000 		.4byte	0xcd1
 11047 2412 9C2F0000 		.4byte	.LLST228
 11048 2416 29       		.uleb128 0x29
 11049 2417 84000000 		.4byte	.LBB106
 11050 241b 14000000 		.4byte	.LBE106-.LBB106
 11051 241f 2C       		.uleb128 0x2c
 11052 2420 F50C0000 		.4byte	0xcf5
 11053 2424 B02F0000 		.4byte	.LLST229
 11054 2428 00       		.byte	0
 11055 2429 00       		.byte	0
 11056 242a 28       		.uleb128 0x28
 11057 242b C40C0000 		.4byte	0xcc4
 11058 242f 98000000 		.4byte	.LBB107
 11059 2433 0C000000 		.4byte	.LBE107-.LBB107
 11060 2437 01       		.byte	0x1
 11061 2438 D80C     		.2byte	0xcd8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 267


 11062 243a 65240000 		.4byte	0x2465
 11063 243e 25       		.uleb128 0x25
 11064 243f E90C0000 		.4byte	0xce9
 11065 2443 E72F0000 		.4byte	.LLST230
 11066 2447 32       		.uleb128 0x32
 11067 2448 DD0C0000 		.4byte	0xcdd
 11068 244c 32       		.uleb128 0x32
 11069 244d D10C0000 		.4byte	0xcd1
 11070 2451 29       		.uleb128 0x29
 11071 2452 98000000 		.4byte	.LBB108
 11072 2456 0C000000 		.4byte	.LBE108-.LBB108
 11073 245a 2C       		.uleb128 0x2c
 11074 245b F50C0000 		.4byte	0xcf5
 11075 245f 28300000 		.4byte	.LLST231
 11076 2463 00       		.byte	0
 11077 2464 00       		.byte	0
 11078 2465 28       		.uleb128 0x28
 11079 2466 C40C0000 		.4byte	0xcc4
 11080 246a 86010000 		.4byte	.LBB109
 11081 246e 0E000000 		.4byte	.LBE109-.LBB109
 11082 2472 01       		.byte	0x1
 11083 2473 E70C     		.2byte	0xce7
 11084 2475 A0240000 		.4byte	0x24a0
 11085 2479 25       		.uleb128 0x25
 11086 247a E90C0000 		.4byte	0xce9
 11087 247e 53300000 		.4byte	.LLST232
 11088 2482 32       		.uleb128 0x32
 11089 2483 DD0C0000 		.4byte	0xcdd
 11090 2487 32       		.uleb128 0x32
 11091 2488 D10C0000 		.4byte	0xcd1
 11092 248c 29       		.uleb128 0x29
 11093 248d 86010000 		.4byte	.LBB110
 11094 2491 0E000000 		.4byte	.LBE110-.LBB110
 11095 2495 2C       		.uleb128 0x2c
 11096 2496 F50C0000 		.4byte	0xcf5
 11097 249a 97300000 		.4byte	.LLST233
 11098 249e 00       		.byte	0
 11099 249f 00       		.byte	0
 11100 24a0 2B       		.uleb128 0x2b
 11101 24a1 0A000000 		.4byte	.LVL770
 11102 24a5 C4290000 		.4byte	0x29c4
 11103 24a9 23       		.uleb128 0x23
 11104 24aa 16000000 		.4byte	.LVL773
 11105 24ae AD0A0000 		.4byte	0xaad
 11106 24b2 C9240000 		.4byte	0x24c9
 11107 24b6 22       		.uleb128 0x22
 11108 24b7 01       		.uleb128 0x1
 11109 24b8 52       		.byte	0x52
 11110 24b9 01       		.uleb128 0x1
 11111 24ba 31       		.byte	0x31
 11112 24bb 22       		.uleb128 0x22
 11113 24bc 01       		.uleb128 0x1
 11114 24bd 51       		.byte	0x51
 11115 24be 02       		.uleb128 0x2
 11116 24bf 91       		.byte	0x91
 11117 24c0 4C       		.sleb128 -52
 11118 24c1 22       		.uleb128 0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 268


 11119 24c2 01       		.uleb128 0x1
 11120 24c3 50       		.byte	0x50
 11121 24c4 03       		.uleb128 0x3
 11122 24c5 91       		.byte	0x91
 11123 24c6 BC7F     		.sleb128 -68
 11124 24c8 00       		.byte	0
 11125 24c9 23       		.uleb128 0x23
 11126 24ca 28000000 		.4byte	.LVL776
 11127 24ce 98120000 		.4byte	0x1298
 11128 24d2 DD240000 		.4byte	0x24dd
 11129 24d6 22       		.uleb128 0x22
 11130 24d7 01       		.uleb128 0x1
 11131 24d8 50       		.byte	0x50
 11132 24d9 02       		.uleb128 0x2
 11133 24da 91       		.byte	0x91
 11134 24db 4C       		.sleb128 -52
 11135 24dc 00       		.byte	0
 11136 24dd 23       		.uleb128 0x23
 11137 24de 3A000000 		.4byte	.LVL779
 11138 24e2 69100000 		.4byte	0x1069
 11139 24e6 F0240000 		.4byte	0x24f0
 11140 24ea 22       		.uleb128 0x22
 11141 24eb 01       		.uleb128 0x1
 11142 24ec 51       		.byte	0x51
 11143 24ed 01       		.uleb128 0x1
 11144 24ee 30       		.byte	0x30
 11145 24ef 00       		.byte	0
 11146 24f0 23       		.uleb128 0x23
 11147 24f1 50000000 		.4byte	.LVL782
 11148 24f5 13070000 		.4byte	0x713
 11149 24f9 04250000 		.4byte	0x2504
 11150 24fd 22       		.uleb128 0x22
 11151 24fe 01       		.uleb128 0x1
 11152 24ff 51       		.byte	0x51
 11153 2500 02       		.uleb128 0x2
 11154 2501 75       		.byte	0x75
 11155 2502 00       		.sleb128 0
 11156 2503 00       		.byte	0
 11157 2504 23       		.uleb128 0x23
 11158 2505 64000000 		.4byte	.LVL787
 11159 2509 6A090000 		.4byte	0x96a
 11160 250d 17250000 		.4byte	0x2517
 11161 2511 22       		.uleb128 0x22
 11162 2512 01       		.uleb128 0x1
 11163 2513 51       		.byte	0x51
 11164 2514 01       		.uleb128 0x1
 11165 2515 30       		.byte	0x30
 11166 2516 00       		.byte	0
 11167 2517 23       		.uleb128 0x23
 11168 2518 72000000 		.4byte	.LVL790
 11169 251c C30D0000 		.4byte	0xdc3
 11170 2520 31250000 		.4byte	0x2531
 11171 2524 22       		.uleb128 0x22
 11172 2525 01       		.uleb128 0x1
 11173 2526 51       		.byte	0x51
 11174 2527 02       		.uleb128 0x2
 11175 2528 75       		.byte	0x75
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 269


 11176 2529 00       		.sleb128 0
 11177 252a 22       		.uleb128 0x22
 11178 252b 01       		.uleb128 0x1
 11179 252c 50       		.byte	0x50
 11180 252d 02       		.uleb128 0x2
 11181 252e 74       		.byte	0x74
 11182 252f 00       		.sleb128 0
 11183 2530 00       		.byte	0
 11184 2531 23       		.uleb128 0x23
 11185 2532 2C010000 		.4byte	.LVL804
 11186 2536 2B080000 		.4byte	0x82b
 11187 253a 53250000 		.4byte	0x2553
 11188 253e 22       		.uleb128 0x22
 11189 253f 01       		.uleb128 0x1
 11190 2540 52       		.byte	0x52
 11191 2541 02       		.uleb128 0x2
 11192 2542 08       		.byte	0x8
 11193 2543 20       		.byte	0x20
 11194 2544 22       		.uleb128 0x22
 11195 2545 01       		.uleb128 0x1
 11196 2546 51       		.byte	0x51
 11197 2547 03       		.uleb128 0x3
 11198 2548 7D       		.byte	0x7d
 11199 2549 00       		.sleb128 0
 11200 254a 06       		.byte	0x6
 11201 254b 22       		.uleb128 0x22
 11202 254c 01       		.uleb128 0x1
 11203 254d 50       		.byte	0x50
 11204 254e 03       		.uleb128 0x3
 11205 254f 74       		.byte	0x74
 11206 2550 D000     		.sleb128 80
 11207 2552 00       		.byte	0
 11208 2553 23       		.uleb128 0x23
 11209 2554 7E010000 		.4byte	.LVL812
 11210 2558 6A090000 		.4byte	0x96a
 11211 255c 66250000 		.4byte	0x2566
 11212 2560 22       		.uleb128 0x22
 11213 2561 01       		.uleb128 0x1
 11214 2562 51       		.byte	0x51
 11215 2563 01       		.uleb128 0x1
 11216 2564 30       		.byte	0x30
 11217 2565 00       		.byte	0
 11218 2566 23       		.uleb128 0x23
 11219 2567 9E010000 		.4byte	.LVL819
 11220 256b D4060000 		.4byte	0x6d4
 11221 256f 7A250000 		.4byte	0x257a
 11222 2573 22       		.uleb128 0x22
 11223 2574 01       		.uleb128 0x1
 11224 2575 50       		.byte	0x50
 11225 2576 02       		.uleb128 0x2
 11226 2577 91       		.byte	0x91
 11227 2578 4C       		.sleb128 -52
 11228 2579 00       		.byte	0
 11229 257a 2B       		.uleb128 0x2b
 11230 257b E2010000 		.4byte	.LVL824
 11231 257f 000D0000 		.4byte	0xd00
 11232 2583 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 270


 11233 2584 2D       		.uleb128 0x2d
 11234 2585 26040000 		.4byte	.LASF152
 11235 2589 01       		.byte	0x1
 11236 258a 030D     		.2byte	0xd03
 11237 258c EF030000 		.4byte	0x3ef
 11238 2590 00000000 		.4byte	.LFB42
 11239 2594 4C000000 		.4byte	.LFE42-.LFB42
 11240 2598 01       		.uleb128 0x1
 11241 2599 9C       		.byte	0x9c
 11242 259a 48260000 		.4byte	0x2648
 11243 259e 1E       		.uleb128 0x1e
 11244 259f 1A010000 		.4byte	.LASF83
 11245 25a3 01       		.byte	0x1
 11246 25a4 040D     		.2byte	0xd04
 11247 25a6 90050000 		.4byte	0x590
 11248 25aa C2300000 		.4byte	.LLST234
 11249 25ae 1E       		.uleb128 0x1e
 11250 25af AB000000 		.4byte	.LASF153
 11251 25b3 01       		.byte	0x1
 11252 25b4 050D     		.2byte	0xd05
 11253 25b6 B8000000 		.4byte	0xb8
 11254 25ba ED300000 		.4byte	.LLST235
 11255 25be 1E       		.uleb128 0x1e
 11256 25bf 2F060000 		.4byte	.LASF154
 11257 25c3 01       		.byte	0x1
 11258 25c4 060D     		.2byte	0xd06
 11259 25c6 B8000000 		.4byte	0xb8
 11260 25ca 0E310000 		.4byte	.LLST236
 11261 25ce 1B       		.uleb128 0x1b
 11262 25cf 72657300 		.ascii	"res\000"
 11263 25d3 01       		.byte	0x1
 11264 25d4 090D     		.2byte	0xd09
 11265 25d6 EF030000 		.4byte	0x3ef
 11266 25da 4A310000 		.4byte	.LLST237
 11267 25de 33       		.uleb128 0x33
 11268 25df 646A00   		.ascii	"dj\000"
 11269 25e2 01       		.byte	0x1
 11270 25e3 0A0D     		.2byte	0xd0a
 11271 25e5 03030000 		.4byte	0x303
 11272 25e9 02       		.uleb128 0x2
 11273 25ea 91       		.byte	0x91
 11274 25eb 54       		.sleb128 -44
 11275 25ec 1B       		.uleb128 0x1b
 11276 25ed 64697200 		.ascii	"dir\000"
 11277 25f1 01       		.byte	0x1
 11278 25f2 0B0D     		.2byte	0xd0b
 11279 25f4 8C020000 		.4byte	0x28c
 11280 25f8 80310000 		.4byte	.LLST238
 11281 25fc 33       		.uleb128 0x33
 11282 25fd 73666E00 		.ascii	"sfn\000"
 11283 2601 01       		.byte	0x1
 11284 2602 0C0D     		.2byte	0xd0c
 11285 2604 32190000 		.4byte	0x1932
 11286 2608 02       		.uleb128 0x2
 11287 2609 91       		.byte	0x91
 11288 260a 48       		.sleb128 -56
 11289 260b 23       		.uleb128 0x23
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 271


 11290 260c 14000000 		.4byte	.LVL830
 11291 2610 AD0A0000 		.4byte	0xaad
 11292 2614 2A260000 		.4byte	0x262a
 11293 2618 22       		.uleb128 0x22
 11294 2619 01       		.uleb128 0x1
 11295 261a 52       		.byte	0x52
 11296 261b 01       		.uleb128 0x1
 11297 261c 31       		.byte	0x31
 11298 261d 22       		.uleb128 0x22
 11299 261e 01       		.uleb128 0x1
 11300 261f 51       		.byte	0x51
 11301 2620 02       		.uleb128 0x2
 11302 2621 91       		.byte	0x91
 11303 2622 54       		.sleb128 -44
 11304 2623 22       		.uleb128 0x22
 11305 2624 01       		.uleb128 0x1
 11306 2625 50       		.byte	0x50
 11307 2626 02       		.uleb128 0x2
 11308 2627 91       		.byte	0x91
 11309 2628 44       		.sleb128 -60
 11310 2629 00       		.byte	0
 11311 262a 23       		.uleb128 0x23
 11312 262b 24000000 		.4byte	.LVL832
 11313 262f 98120000 		.4byte	0x1298
 11314 2633 3E260000 		.4byte	0x263e
 11315 2637 22       		.uleb128 0x22
 11316 2638 01       		.uleb128 0x1
 11317 2639 50       		.byte	0x50
 11318 263a 02       		.uleb128 0x2
 11319 263b 91       		.byte	0x91
 11320 263c 54       		.sleb128 -44
 11321 263d 00       		.byte	0
 11322 263e 2B       		.uleb128 0x2b
 11323 263f 48000000 		.4byte	.LVL839
 11324 2643 000D0000 		.4byte	0xd00
 11325 2647 00       		.byte	0
 11326 2648 2D       		.uleb128 0x2d
 11327 2649 4E010000 		.4byte	.LASF155
 11328 264d 01       		.byte	0x1
 11329 264e 2D0D     		.2byte	0xd2d
 11330 2650 EF030000 		.4byte	0x3ef
 11331 2654 00000000 		.4byte	.LFB43
 11332 2658 50000000 		.4byte	.LFE43-.LFB43
 11333 265c 01       		.uleb128 0x1
 11334 265d 9C       		.byte	0x9c
 11335 265e FC260000 		.4byte	0x26fc
 11336 2662 1E       		.uleb128 0x1e
 11337 2663 1A010000 		.4byte	.LASF83
 11338 2667 01       		.byte	0x1
 11339 2668 2E0D     		.2byte	0xd2e
 11340 266a 90050000 		.4byte	0x590
 11341 266e 93310000 		.4byte	.LLST239
 11342 2672 1A       		.uleb128 0x1a
 11343 2673 666E6F00 		.ascii	"fno\000"
 11344 2677 01       		.byte	0x1
 11345 2678 2F0D     		.2byte	0xd2f
 11346 267a FC260000 		.4byte	0x26fc
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 272


 11347 267e BE310000 		.4byte	.LLST240
 11348 2682 1B       		.uleb128 0x1b
 11349 2683 72657300 		.ascii	"res\000"
 11350 2687 01       		.byte	0x1
 11351 2688 320D     		.2byte	0xd32
 11352 268a EF030000 		.4byte	0x3ef
 11353 268e EA310000 		.4byte	.LLST241
 11354 2692 33       		.uleb128 0x33
 11355 2693 646A00   		.ascii	"dj\000"
 11356 2696 01       		.byte	0x1
 11357 2697 330D     		.2byte	0xd33
 11358 2699 03030000 		.4byte	0x303
 11359 269d 02       		.uleb128 0x2
 11360 269e 91       		.byte	0x91
 11361 269f 5C       		.sleb128 -36
 11362 26a0 1B       		.uleb128 0x1b
 11363 26a1 64697200 		.ascii	"dir\000"
 11364 26a5 01       		.byte	0x1
 11365 26a6 340D     		.2byte	0xd34
 11366 26a8 8C020000 		.4byte	0x28c
 11367 26ac 20320000 		.4byte	.LLST242
 11368 26b0 33       		.uleb128 0x33
 11369 26b1 73666E00 		.ascii	"sfn\000"
 11370 26b5 01       		.byte	0x1
 11371 26b6 350D     		.2byte	0xd35
 11372 26b8 32190000 		.4byte	0x1932
 11373 26bc 02       		.uleb128 0x2
 11374 26bd 91       		.byte	0x91
 11375 26be 50       		.sleb128 -48
 11376 26bf 23       		.uleb128 0x23
 11377 26c0 12000000 		.4byte	.LVL843
 11378 26c4 AD0A0000 		.4byte	0xaad
 11379 26c8 DE260000 		.4byte	0x26de
 11380 26cc 22       		.uleb128 0x22
 11381 26cd 01       		.uleb128 0x1
 11382 26ce 52       		.byte	0x52
 11383 26cf 01       		.uleb128 0x1
 11384 26d0 31       		.byte	0x31
 11385 26d1 22       		.uleb128 0x22
 11386 26d2 01       		.uleb128 0x1
 11387 26d3 51       		.byte	0x51
 11388 26d4 02       		.uleb128 0x2
 11389 26d5 91       		.byte	0x91
 11390 26d6 5C       		.sleb128 -36
 11391 26d7 22       		.uleb128 0x22
 11392 26d8 01       		.uleb128 0x1
 11393 26d9 50       		.byte	0x50
 11394 26da 02       		.uleb128 0x2
 11395 26db 91       		.byte	0x91
 11396 26dc 4C       		.sleb128 -52
 11397 26dd 00       		.byte	0
 11398 26de 23       		.uleb128 0x23
 11399 26df 22000000 		.4byte	.LVL845
 11400 26e3 98120000 		.4byte	0x1298
 11401 26e7 F2260000 		.4byte	0x26f2
 11402 26eb 22       		.uleb128 0x22
 11403 26ec 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 273


 11404 26ed 50       		.byte	0x50
 11405 26ee 02       		.uleb128 0x2
 11406 26ef 91       		.byte	0x91
 11407 26f0 5C       		.sleb128 -36
 11408 26f1 00       		.byte	0
 11409 26f2 2B       		.uleb128 0x2b
 11410 26f3 4C000000 		.4byte	.LVL850
 11411 26f7 000D0000 		.4byte	0xd00
 11412 26fb 00       		.byte	0
 11413 26fc 0B       		.uleb128 0xb
 11414 26fd 04       		.byte	0x4
 11415 26fe 02270000 		.4byte	0x2702
 11416 2702 15       		.uleb128 0x15
 11417 2703 63030000 		.4byte	0x363
 11418 2707 2D       		.uleb128 0x2d
 11419 2708 23030000 		.4byte	.LASF156
 11420 270c 01       		.byte	0x1
 11421 270d 560D     		.2byte	0xd56
 11422 270f EF030000 		.4byte	0x3ef
 11423 2713 00000000 		.4byte	.LFB44
 11424 2717 28010000 		.4byte	.LFE44-.LFB44
 11425 271b 01       		.uleb128 0x1
 11426 271c 9C       		.byte	0x9c
 11427 271d CD280000 		.4byte	0x28cd
 11428 2721 1E       		.uleb128 0x1e
 11429 2722 8E010000 		.4byte	.LASF157
 11430 2726 01       		.byte	0x1
 11431 2727 570D     		.2byte	0xd57
 11432 2729 90050000 		.4byte	0x590
 11433 272d 33320000 		.4byte	.LLST243
 11434 2731 1E       		.uleb128 0x1e
 11435 2732 C4030000 		.4byte	.LASF158
 11436 2736 01       		.byte	0x1
 11437 2737 580D     		.2byte	0xd58
 11438 2739 90050000 		.4byte	0x590
 11439 273d 5F320000 		.4byte	.LLST244
 11440 2741 1B       		.uleb128 0x1b
 11441 2742 72657300 		.ascii	"res\000"
 11442 2746 01       		.byte	0x1
 11443 2747 5B0D     		.2byte	0xd5b
 11444 2749 EF030000 		.4byte	0x3ef
 11445 274d A4320000 		.4byte	.LLST245
 11446 2751 33       		.uleb128 0x33
 11447 2752 646A6F00 		.ascii	"djo\000"
 11448 2756 01       		.byte	0x1
 11449 2757 5C0D     		.2byte	0xd5c
 11450 2759 03030000 		.4byte	0x303
 11451 275d 03       		.uleb128 0x3
 11452 275e 91       		.byte	0x91
 11453 275f B87F     		.sleb128 -72
 11454 2761 33       		.uleb128 0x33
 11455 2762 646A6E00 		.ascii	"djn\000"
 11456 2766 01       		.byte	0x1
 11457 2767 5C0D     		.2byte	0xd5c
 11458 2769 03030000 		.4byte	0x303
 11459 276d 02       		.uleb128 0x2
 11460 276e 91       		.byte	0x91
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 274


 11461 276f 54       		.sleb128 -44
 11462 2770 33       		.uleb128 0x33
 11463 2771 62756600 		.ascii	"buf\000"
 11464 2775 01       		.byte	0x1
 11465 2776 5D0D     		.2byte	0xd5d
 11466 2778 CD280000 		.4byte	0x28cd
 11467 277c 03       		.uleb128 0x3
 11468 277d 91       		.byte	0x91
 11469 277e A07F     		.sleb128 -96
 11470 2780 1B       		.uleb128 0x1b
 11471 2781 64697200 		.ascii	"dir\000"
 11472 2785 01       		.byte	0x1
 11473 2786 5D0D     		.2byte	0xd5d
 11474 2788 8C020000 		.4byte	0x28c
 11475 278c 10330000 		.4byte	.LLST246
 11476 2790 1B       		.uleb128 0x1b
 11477 2791 647700   		.ascii	"dw\000"
 11478 2794 01       		.byte	0x1
 11479 2795 5E0D     		.2byte	0xd5e
 11480 2797 CE000000 		.4byte	0xce
 11481 279b 31330000 		.4byte	.LLST247
 11482 279f 33       		.uleb128 0x33
 11483 27a0 73666E00 		.ascii	"sfn\000"
 11484 27a4 01       		.byte	0x1
 11485 27a5 5F0D     		.2byte	0xd5f
 11486 27a7 32190000 		.4byte	0x1932
 11487 27ab 03       		.uleb128 0x3
 11488 27ac 91       		.byte	0x91
 11489 27ad 947F     		.sleb128 -108
 11490 27af 23       		.uleb128 0x23
 11491 27b0 12000000 		.4byte	.LVL855
 11492 27b4 AD0A0000 		.4byte	0xaad
 11493 27b8 D0270000 		.4byte	0x27d0
 11494 27bc 22       		.uleb128 0x22
 11495 27bd 01       		.uleb128 0x1
 11496 27be 52       		.byte	0x52
 11497 27bf 01       		.uleb128 0x1
 11498 27c0 31       		.byte	0x31
 11499 27c1 22       		.uleb128 0x22
 11500 27c2 01       		.uleb128 0x1
 11501 27c3 51       		.byte	0x51
 11502 27c4 03       		.uleb128 0x3
 11503 27c5 91       		.byte	0x91
 11504 27c6 B87F     		.sleb128 -72
 11505 27c8 22       		.uleb128 0x22
 11506 27c9 01       		.uleb128 0x1
 11507 27ca 50       		.byte	0x50
 11508 27cb 03       		.uleb128 0x3
 11509 27cc 91       		.byte	0x91
 11510 27cd 8C7F     		.sleb128 -116
 11511 27cf 00       		.byte	0
 11512 27d0 23       		.uleb128 0x23
 11513 27d1 28000000 		.4byte	.LVL857
 11514 27d5 98120000 		.4byte	0x1298
 11515 27d9 E5270000 		.4byte	0x27e5
 11516 27dd 22       		.uleb128 0x22
 11517 27de 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 275


 11518 27df 50       		.byte	0x50
 11519 27e0 03       		.uleb128 0x3
 11520 27e1 91       		.byte	0x91
 11521 27e2 B87F     		.sleb128 -72
 11522 27e4 00       		.byte	0
 11523 27e5 23       		.uleb128 0x23
 11524 27e6 34000000 		.4byte	.LVL859
 11525 27ea 8C080000 		.4byte	0x88c
 11526 27ee FF270000 		.4byte	0x27ff
 11527 27f2 22       		.uleb128 0x22
 11528 27f3 01       		.uleb128 0x1
 11529 27f4 51       		.byte	0x51
 11530 27f5 01       		.uleb128 0x1
 11531 27f6 32       		.byte	0x32
 11532 27f7 22       		.uleb128 0x22
 11533 27f8 01       		.uleb128 0x1
 11534 27f9 50       		.byte	0x50
 11535 27fa 03       		.uleb128 0x3
 11536 27fb 91       		.byte	0x91
 11537 27fc B87F     		.sleb128 -72
 11538 27fe 00       		.byte	0
 11539 27ff 23       		.uleb128 0x23
 11540 2800 4C000000 		.4byte	.LVL861
 11541 2804 2B080000 		.4byte	0x82b
 11542 2808 18280000 		.4byte	0x2818
 11543 280c 22       		.uleb128 0x22
 11544 280d 01       		.uleb128 0x1
 11545 280e 52       		.byte	0x52
 11546 280f 01       		.uleb128 0x1
 11547 2810 45       		.byte	0x45
 11548 2811 22       		.uleb128 0x22
 11549 2812 01       		.uleb128 0x1
 11550 2813 50       		.byte	0x50
 11551 2814 02       		.uleb128 0x2
 11552 2815 74       		.byte	0x74
 11553 2816 00       		.sleb128 0
 11554 2817 00       		.byte	0
 11555 2818 23       		.uleb128 0x23
 11556 2819 56000000 		.4byte	.LVL862
 11557 281d 2B080000 		.4byte	0x82b
 11558 2821 38280000 		.4byte	0x2838
 11559 2825 22       		.uleb128 0x22
 11560 2826 01       		.uleb128 0x1
 11561 2827 52       		.byte	0x52
 11562 2828 01       		.uleb128 0x1
 11563 2829 4C       		.byte	0x4c
 11564 282a 22       		.uleb128 0x22
 11565 282b 01       		.uleb128 0x1
 11566 282c 51       		.byte	0x51
 11567 282d 03       		.uleb128 0x3
 11568 282e 91       		.byte	0x91
 11569 282f B87F     		.sleb128 -72
 11570 2831 22       		.uleb128 0x22
 11571 2832 01       		.uleb128 0x1
 11572 2833 50       		.byte	0x50
 11573 2834 02       		.uleb128 0x2
 11574 2835 91       		.byte	0x91
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 276


 11575 2836 54       		.sleb128 -44
 11576 2837 00       		.byte	0
 11577 2838 23       		.uleb128 0x23
 11578 2839 5E000000 		.4byte	.LVL863
 11579 283d 98120000 		.4byte	0x1298
 11580 2841 52280000 		.4byte	0x2852
 11581 2845 22       		.uleb128 0x22
 11582 2846 01       		.uleb128 0x1
 11583 2847 51       		.byte	0x51
 11584 2848 02       		.uleb128 0x2
 11585 2849 75       		.byte	0x75
 11586 284a 00       		.sleb128 0
 11587 284b 22       		.uleb128 0x22
 11588 284c 01       		.uleb128 0x1
 11589 284d 50       		.byte	0x50
 11590 284e 02       		.uleb128 0x2
 11591 284f 91       		.byte	0x91
 11592 2850 54       		.sleb128 -44
 11593 2851 00       		.byte	0
 11594 2852 23       		.uleb128 0x23
 11595 2853 6C000000 		.4byte	.LVL865
 11596 2857 D4060000 		.4byte	0x6d4
 11597 285b 66280000 		.4byte	0x2866
 11598 285f 22       		.uleb128 0x22
 11599 2860 01       		.uleb128 0x1
 11600 2861 50       		.byte	0x50
 11601 2862 02       		.uleb128 0x2
 11602 2863 91       		.byte	0x91
 11603 2864 54       		.sleb128 -44
 11604 2865 00       		.byte	0
 11605 2866 23       		.uleb128 0x23
 11606 2867 82000000 		.4byte	.LVL868
 11607 286b 2B080000 		.4byte	0x82b
 11608 286f 86280000 		.4byte	0x2886
 11609 2873 22       		.uleb128 0x22
 11610 2874 01       		.uleb128 0x1
 11611 2875 52       		.byte	0x52
 11612 2876 01       		.uleb128 0x1
 11613 2877 43       		.byte	0x43
 11614 2878 22       		.uleb128 0x22
 11615 2879 01       		.uleb128 0x1
 11616 287a 51       		.byte	0x51
 11617 287b 03       		.uleb128 0x3
 11618 287c 91       		.byte	0x91
 11619 287d A27F     		.sleb128 -94
 11620 287f 22       		.uleb128 0x22
 11621 2880 01       		.uleb128 0x1
 11622 2881 50       		.byte	0x50
 11623 2882 02       		.uleb128 0x2
 11624 2883 75       		.byte	0x75
 11625 2884 0D       		.sleb128 13
 11626 2885 00       		.byte	0
 11627 2886 23       		.uleb128 0x23
 11628 2887 C6000000 		.4byte	.LVL869
 11629 288b C30D0000 		.4byte	0xdc3
 11630 288f 9A280000 		.4byte	0x289a
 11631 2893 22       		.uleb128 0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 277


 11632 2894 01       		.uleb128 0x1
 11633 2895 50       		.byte	0x50
 11634 2896 02       		.uleb128 0x2
 11635 2897 74       		.byte	0x74
 11636 2898 00       		.sleb128 0
 11637 2899 00       		.byte	0
 11638 289a 23       		.uleb128 0x23
 11639 289b D4000000 		.4byte	.LVL872
 11640 289f 6A090000 		.4byte	0x96a
 11641 28a3 AE280000 		.4byte	0x28ae
 11642 28a7 22       		.uleb128 0x22
 11643 28a8 01       		.uleb128 0x1
 11644 28a9 50       		.byte	0x50
 11645 28aa 02       		.uleb128 0x2
 11646 28ab 74       		.byte	0x74
 11647 28ac 00       		.sleb128 0
 11648 28ad 00       		.byte	0
 11649 28ae 23       		.uleb128 0x23
 11650 28af 1A010000 		.4byte	.LVL879
 11651 28b3 55060000 		.4byte	0x655
 11652 28b7 C3280000 		.4byte	0x28c3
 11653 28bb 22       		.uleb128 0x22
 11654 28bc 01       		.uleb128 0x1
 11655 28bd 50       		.byte	0x50
 11656 28be 03       		.uleb128 0x3
 11657 28bf 91       		.byte	0x91
 11658 28c0 B87F     		.sleb128 -72
 11659 28c2 00       		.byte	0
 11660 28c3 2B       		.uleb128 0x2b
 11661 28c4 24010000 		.4byte	.LVL881
 11662 28c8 000D0000 		.4byte	0xd00
 11663 28cc 00       		.byte	0
 11664 28cd 08       		.uleb128 0x8
 11665 28ce B8000000 		.4byte	0xb8
 11666 28d2 DD280000 		.4byte	0x28dd
 11667 28d6 0D       		.uleb128 0xd
 11668 28d7 DD010000 		.4byte	0x1dd
 11669 28db 14       		.byte	0x14
 11670 28dc 00       		.byte	0
 11671 28dd 08       		.uleb128 0x8
 11672 28de 86020000 		.4byte	0x286
 11673 28e2 ED280000 		.4byte	0x28ed
 11674 28e6 0D       		.uleb128 0xd
 11675 28e7 DD010000 		.4byte	0x1dd
 11676 28eb 00       		.byte	0
 11677 28ec 00       		.byte	0
 11678 28ed 36       		.uleb128 0x36
 11679 28ee 1C020000 		.4byte	.LASF159
 11680 28f2 01       		.byte	0x1
 11681 28f3 D401     		.2byte	0x1d4
 11682 28f5 DD280000 		.4byte	0x28dd
 11683 28f9 05       		.uleb128 0x5
 11684 28fa 03       		.byte	0x3
 11685 28fb 24000000 		.4byte	FatFs
 11686 28ff 36       		.uleb128 0x36
 11687 2900 B7060000 		.4byte	.LASF160
 11688 2904 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 278


 11689 2905 DA01     		.2byte	0x1da
 11690 2907 C3000000 		.4byte	0xc3
 11691 290b 05       		.uleb128 0x5
 11692 290c 03       		.byte	0x3
 11693 290d 28000000 		.4byte	Fsid
 11694 2911 08       		.uleb128 0x8
 11695 2912 6F040000 		.4byte	0x46f
 11696 2916 21290000 		.4byte	0x2921
 11697 291a 0D       		.uleb128 0xd
 11698 291b DD010000 		.4byte	0x1dd
 11699 291f 02       		.byte	0x2
 11700 2920 00       		.byte	0
 11701 2921 36       		.uleb128 0x36
 11702 2922 29060000 		.4byte	.LASF161
 11703 2926 01       		.byte	0x1
 11704 2927 E301     		.2byte	0x1e3
 11705 2929 11290000 		.4byte	0x2911
 11706 292d 05       		.uleb128 0x5
 11707 292e 03       		.byte	0x3
 11708 292f 00000000 		.4byte	Files
 11709 2933 37       		.uleb128 0x37
 11710 2934 ED050000 		.4byte	.LASF162
 11711 2938 06       		.byte	0x6
 11712 2939 23       		.byte	0x23
 11713 293a 2C040000 		.4byte	0x42c
 11714 293e 57290000 		.4byte	0x2957
 11715 2942 38       		.uleb128 0x38
 11716 2943 B8000000 		.4byte	0xb8
 11717 2947 38       		.uleb128 0x38
 11718 2948 F6070000 		.4byte	0x7f6
 11719 294c 38       		.uleb128 0x38
 11720 294d CE000000 		.4byte	0xce
 11721 2951 38       		.uleb128 0x38
 11722 2952 AD000000 		.4byte	0xad
 11723 2956 00       		.byte	0
 11724 2957 37       		.uleb128 0x37
 11725 2958 A5060000 		.4byte	.LASF163
 11726 295c 06       		.byte	0x6
 11727 295d 22       		.byte	0x22
 11728 295e 2C040000 		.4byte	0x42c
 11729 2962 7B290000 		.4byte	0x297b
 11730 2966 38       		.uleb128 0x38
 11731 2967 B8000000 		.4byte	0xb8
 11732 296b 38       		.uleb128 0x38
 11733 296c 8C020000 		.4byte	0x28c
 11734 2970 38       		.uleb128 0x38
 11735 2971 CE000000 		.4byte	0xce
 11736 2975 38       		.uleb128 0x38
 11737 2976 AD000000 		.4byte	0xad
 11738 297a 00       		.byte	0
 11739 297b 37       		.uleb128 0x37
 11740 297c E6020000 		.4byte	.LASF164
 11741 2980 06       		.byte	0x6
 11742 2981 21       		.byte	0x21
 11743 2982 FA030000 		.4byte	0x3fa
 11744 2986 90290000 		.4byte	0x2990
 11745 298a 38       		.uleb128 0x38
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 279


 11746 298b B8000000 		.4byte	0xb8
 11747 298f 00       		.byte	0
 11748 2990 37       		.uleb128 0x37
 11749 2991 8F020000 		.4byte	.LASF165
 11750 2995 06       		.byte	0x6
 11751 2996 20       		.byte	0x20
 11752 2997 FA030000 		.4byte	0x3fa
 11753 299b A5290000 		.4byte	0x29a5
 11754 299f 38       		.uleb128 0x38
 11755 29a0 B8000000 		.4byte	0xb8
 11756 29a4 00       		.byte	0
 11757 29a5 37       		.uleb128 0x37
 11758 29a6 90030000 		.4byte	.LASF166
 11759 29aa 06       		.byte	0x6
 11760 29ab 24       		.byte	0x24
 11761 29ac 2C040000 		.4byte	0x42c
 11762 29b0 C4290000 		.4byte	0x29c4
 11763 29b4 38       		.uleb128 0x38
 11764 29b5 B8000000 		.4byte	0xb8
 11765 29b9 38       		.uleb128 0x38
 11766 29ba B8000000 		.4byte	0xb8
 11767 29be 38       		.uleb128 0x38
 11768 29bf 8A080000 		.4byte	0x88a
 11769 29c3 00       		.byte	0
 11770 29c4 39       		.uleb128 0x39
 11771 29c5 54040000 		.4byte	.LASF170
 11772 29c9 05       		.byte	0x5
 11773 29ca FA       		.byte	0xfa
 11774 29cb CE000000 		.4byte	0xce
 11775 29cf 00       		.byte	0
 11776              		.section	.debug_abbrev,"",%progbits
 11777              	.Ldebug_abbrev0:
 11778 0000 01       		.uleb128 0x1
 11779 0001 11       		.uleb128 0x11
 11780 0002 01       		.byte	0x1
 11781 0003 25       		.uleb128 0x25
 11782 0004 0E       		.uleb128 0xe
 11783 0005 13       		.uleb128 0x13
 11784 0006 0B       		.uleb128 0xb
 11785 0007 03       		.uleb128 0x3
 11786 0008 0E       		.uleb128 0xe
 11787 0009 1B       		.uleb128 0x1b
 11788 000a 0E       		.uleb128 0xe
 11789 000b 55       		.uleb128 0x55
 11790 000c 17       		.uleb128 0x17
 11791 000d 11       		.uleb128 0x11
 11792 000e 01       		.uleb128 0x1
 11793 000f 10       		.uleb128 0x10
 11794 0010 17       		.uleb128 0x17
 11795 0011 00       		.byte	0
 11796 0012 00       		.byte	0
 11797 0013 02       		.uleb128 0x2
 11798 0014 24       		.uleb128 0x24
 11799 0015 00       		.byte	0
 11800 0016 0B       		.uleb128 0xb
 11801 0017 0B       		.uleb128 0xb
 11802 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 280


 11803 0019 0B       		.uleb128 0xb
 11804 001a 03       		.uleb128 0x3
 11805 001b 0E       		.uleb128 0xe
 11806 001c 00       		.byte	0
 11807 001d 00       		.byte	0
 11808 001e 03       		.uleb128 0x3
 11809 001f 16       		.uleb128 0x16
 11810 0020 00       		.byte	0
 11811 0021 03       		.uleb128 0x3
 11812 0022 0E       		.uleb128 0xe
 11813 0023 3A       		.uleb128 0x3a
 11814 0024 0B       		.uleb128 0xb
 11815 0025 3B       		.uleb128 0x3b
 11816 0026 0B       		.uleb128 0xb
 11817 0027 49       		.uleb128 0x49
 11818 0028 13       		.uleb128 0x13
 11819 0029 00       		.byte	0
 11820 002a 00       		.byte	0
 11821 002b 04       		.uleb128 0x4
 11822 002c 24       		.uleb128 0x24
 11823 002d 00       		.byte	0
 11824 002e 0B       		.uleb128 0xb
 11825 002f 0B       		.uleb128 0xb
 11826 0030 3E       		.uleb128 0x3e
 11827 0031 0B       		.uleb128 0xb
 11828 0032 03       		.uleb128 0x3
 11829 0033 08       		.uleb128 0x8
 11830 0034 00       		.byte	0
 11831 0035 00       		.byte	0
 11832 0036 05       		.uleb128 0x5
 11833 0037 13       		.uleb128 0x13
 11834 0038 01       		.byte	0x1
 11835 0039 0B       		.uleb128 0xb
 11836 003a 05       		.uleb128 0x5
 11837 003b 3A       		.uleb128 0x3a
 11838 003c 0B       		.uleb128 0xb
 11839 003d 3B       		.uleb128 0x3b
 11840 003e 0B       		.uleb128 0xb
 11841 003f 01       		.uleb128 0x1
 11842 0040 13       		.uleb128 0x13
 11843 0041 00       		.byte	0
 11844 0042 00       		.byte	0
 11845 0043 06       		.uleb128 0x6
 11846 0044 0D       		.uleb128 0xd
 11847 0045 00       		.byte	0
 11848 0046 03       		.uleb128 0x3
 11849 0047 0E       		.uleb128 0xe
 11850 0048 3A       		.uleb128 0x3a
 11851 0049 0B       		.uleb128 0xb
 11852 004a 3B       		.uleb128 0x3b
 11853 004b 0B       		.uleb128 0xb
 11854 004c 49       		.uleb128 0x49
 11855 004d 13       		.uleb128 0x13
 11856 004e 38       		.uleb128 0x38
 11857 004f 0B       		.uleb128 0xb
 11858 0050 00       		.byte	0
 11859 0051 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 281


 11860 0052 07       		.uleb128 0x7
 11861 0053 0D       		.uleb128 0xd
 11862 0054 00       		.byte	0
 11863 0055 03       		.uleb128 0x3
 11864 0056 08       		.uleb128 0x8
 11865 0057 3A       		.uleb128 0x3a
 11866 0058 0B       		.uleb128 0xb
 11867 0059 3B       		.uleb128 0x3b
 11868 005a 0B       		.uleb128 0xb
 11869 005b 49       		.uleb128 0x49
 11870 005c 13       		.uleb128 0x13
 11871 005d 38       		.uleb128 0x38
 11872 005e 0B       		.uleb128 0xb
 11873 005f 00       		.byte	0
 11874 0060 00       		.byte	0
 11875 0061 08       		.uleb128 0x8
 11876 0062 01       		.uleb128 0x1
 11877 0063 01       		.byte	0x1
 11878 0064 49       		.uleb128 0x49
 11879 0065 13       		.uleb128 0x13
 11880 0066 01       		.uleb128 0x1
 11881 0067 13       		.uleb128 0x13
 11882 0068 00       		.byte	0
 11883 0069 00       		.byte	0
 11884 006a 09       		.uleb128 0x9
 11885 006b 21       		.uleb128 0x21
 11886 006c 00       		.byte	0
 11887 006d 49       		.uleb128 0x49
 11888 006e 13       		.uleb128 0x13
 11889 006f 2F       		.uleb128 0x2f
 11890 0070 05       		.uleb128 0x5
 11891 0071 00       		.byte	0
 11892 0072 00       		.byte	0
 11893 0073 0A       		.uleb128 0xa
 11894 0074 13       		.uleb128 0x13
 11895 0075 01       		.byte	0x1
 11896 0076 0B       		.uleb128 0xb
 11897 0077 0B       		.uleb128 0xb
 11898 0078 3A       		.uleb128 0x3a
 11899 0079 0B       		.uleb128 0xb
 11900 007a 3B       		.uleb128 0x3b
 11901 007b 0B       		.uleb128 0xb
 11902 007c 01       		.uleb128 0x1
 11903 007d 13       		.uleb128 0x13
 11904 007e 00       		.byte	0
 11905 007f 00       		.byte	0
 11906 0080 0B       		.uleb128 0xb
 11907 0081 0F       		.uleb128 0xf
 11908 0082 00       		.byte	0
 11909 0083 0B       		.uleb128 0xb
 11910 0084 0B       		.uleb128 0xb
 11911 0085 49       		.uleb128 0x49
 11912 0086 13       		.uleb128 0x13
 11913 0087 00       		.byte	0
 11914 0088 00       		.byte	0
 11915 0089 0C       		.uleb128 0xc
 11916 008a 16       		.uleb128 0x16
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 282


 11917 008b 00       		.byte	0
 11918 008c 03       		.uleb128 0x3
 11919 008d 08       		.uleb128 0x8
 11920 008e 3A       		.uleb128 0x3a
 11921 008f 0B       		.uleb128 0xb
 11922 0090 3B       		.uleb128 0x3b
 11923 0091 0B       		.uleb128 0xb
 11924 0092 49       		.uleb128 0x49
 11925 0093 13       		.uleb128 0x13
 11926 0094 00       		.byte	0
 11927 0095 00       		.byte	0
 11928 0096 0D       		.uleb128 0xd
 11929 0097 21       		.uleb128 0x21
 11930 0098 00       		.byte	0
 11931 0099 49       		.uleb128 0x49
 11932 009a 13       		.uleb128 0x13
 11933 009b 2F       		.uleb128 0x2f
 11934 009c 0B       		.uleb128 0xb
 11935 009d 00       		.byte	0
 11936 009e 00       		.byte	0
 11937 009f 0E       		.uleb128 0xe
 11938 00a0 04       		.uleb128 0x4
 11939 00a1 01       		.byte	0x1
 11940 00a2 0B       		.uleb128 0xb
 11941 00a3 0B       		.uleb128 0xb
 11942 00a4 3A       		.uleb128 0x3a
 11943 00a5 0B       		.uleb128 0xb
 11944 00a6 3B       		.uleb128 0x3b
 11945 00a7 0B       		.uleb128 0xb
 11946 00a8 01       		.uleb128 0x1
 11947 00a9 13       		.uleb128 0x13
 11948 00aa 00       		.byte	0
 11949 00ab 00       		.byte	0
 11950 00ac 0F       		.uleb128 0xf
 11951 00ad 28       		.uleb128 0x28
 11952 00ae 00       		.byte	0
 11953 00af 03       		.uleb128 0x3
 11954 00b0 0E       		.uleb128 0xe
 11955 00b1 1C       		.uleb128 0x1c
 11956 00b2 0D       		.uleb128 0xd
 11957 00b3 00       		.byte	0
 11958 00b4 00       		.byte	0
 11959 00b5 10       		.uleb128 0x10
 11960 00b6 2E       		.uleb128 0x2e
 11961 00b7 01       		.byte	0x1
 11962 00b8 03       		.uleb128 0x3
 11963 00b9 0E       		.uleb128 0xe
 11964 00ba 3A       		.uleb128 0x3a
 11965 00bb 0B       		.uleb128 0xb
 11966 00bc 3B       		.uleb128 0x3b
 11967 00bd 05       		.uleb128 0x5
 11968 00be 27       		.uleb128 0x27
 11969 00bf 19       		.uleb128 0x19
 11970 00c0 49       		.uleb128 0x49
 11971 00c1 13       		.uleb128 0x13
 11972 00c2 20       		.uleb128 0x20
 11973 00c3 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 283


 11974 00c4 01       		.uleb128 0x1
 11975 00c5 13       		.uleb128 0x13
 11976 00c6 00       		.byte	0
 11977 00c7 00       		.byte	0
 11978 00c8 11       		.uleb128 0x11
 11979 00c9 05       		.uleb128 0x5
 11980 00ca 00       		.byte	0
 11981 00cb 03       		.uleb128 0x3
 11982 00cc 08       		.uleb128 0x8
 11983 00cd 3A       		.uleb128 0x3a
 11984 00ce 0B       		.uleb128 0xb
 11985 00cf 3B       		.uleb128 0x3b
 11986 00d0 05       		.uleb128 0x5
 11987 00d1 49       		.uleb128 0x49
 11988 00d2 13       		.uleb128 0x13
 11989 00d3 00       		.byte	0
 11990 00d4 00       		.byte	0
 11991 00d5 12       		.uleb128 0x12
 11992 00d6 05       		.uleb128 0x5
 11993 00d7 00       		.byte	0
 11994 00d8 03       		.uleb128 0x3
 11995 00d9 0E       		.uleb128 0xe
 11996 00da 3A       		.uleb128 0x3a
 11997 00db 0B       		.uleb128 0xb
 11998 00dc 3B       		.uleb128 0x3b
 11999 00dd 05       		.uleb128 0x5
 12000 00de 49       		.uleb128 0x49
 12001 00df 13       		.uleb128 0x13
 12002 00e0 00       		.byte	0
 12003 00e1 00       		.byte	0
 12004 00e2 13       		.uleb128 0x13
 12005 00e3 34       		.uleb128 0x34
 12006 00e4 00       		.byte	0
 12007 00e5 03       		.uleb128 0x3
 12008 00e6 0E       		.uleb128 0xe
 12009 00e7 3A       		.uleb128 0x3a
 12010 00e8 0B       		.uleb128 0xb
 12011 00e9 3B       		.uleb128 0x3b
 12012 00ea 05       		.uleb128 0x5
 12013 00eb 49       		.uleb128 0x49
 12014 00ec 13       		.uleb128 0x13
 12015 00ed 1C       		.uleb128 0x1c
 12016 00ee 0A       		.uleb128 0xa
 12017 00ef 00       		.byte	0
 12018 00f0 00       		.byte	0
 12019 00f1 14       		.uleb128 0x14
 12020 00f2 34       		.uleb128 0x34
 12021 00f3 00       		.byte	0
 12022 00f4 03       		.uleb128 0x3
 12023 00f5 08       		.uleb128 0x8
 12024 00f6 3A       		.uleb128 0x3a
 12025 00f7 0B       		.uleb128 0xb
 12026 00f8 3B       		.uleb128 0x3b
 12027 00f9 05       		.uleb128 0x5
 12028 00fa 49       		.uleb128 0x49
 12029 00fb 13       		.uleb128 0x13
 12030 00fc 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 284


 12031 00fd 00       		.byte	0
 12032 00fe 15       		.uleb128 0x15
 12033 00ff 26       		.uleb128 0x26
 12034 0100 00       		.byte	0
 12035 0101 49       		.uleb128 0x49
 12036 0102 13       		.uleb128 0x13
 12037 0103 00       		.byte	0
 12038 0104 00       		.byte	0
 12039 0105 16       		.uleb128 0x16
 12040 0106 2E       		.uleb128 0x2e
 12041 0107 01       		.byte	0x1
 12042 0108 3F       		.uleb128 0x3f
 12043 0109 19       		.uleb128 0x19
 12044 010a 03       		.uleb128 0x3
 12045 010b 0E       		.uleb128 0xe
 12046 010c 3A       		.uleb128 0x3a
 12047 010d 0B       		.uleb128 0xb
 12048 010e 3B       		.uleb128 0x3b
 12049 010f 05       		.uleb128 0x5
 12050 0110 27       		.uleb128 0x27
 12051 0111 19       		.uleb128 0x19
 12052 0112 49       		.uleb128 0x49
 12053 0113 13       		.uleb128 0x13
 12054 0114 20       		.uleb128 0x20
 12055 0115 0B       		.uleb128 0xb
 12056 0116 01       		.uleb128 0x1
 12057 0117 13       		.uleb128 0x13
 12058 0118 00       		.byte	0
 12059 0119 00       		.byte	0
 12060 011a 17       		.uleb128 0x17
 12061 011b 26       		.uleb128 0x26
 12062 011c 00       		.byte	0
 12063 011d 00       		.byte	0
 12064 011e 00       		.byte	0
 12065 011f 18       		.uleb128 0x18
 12066 0120 2E       		.uleb128 0x2e
 12067 0121 01       		.byte	0x1
 12068 0122 03       		.uleb128 0x3
 12069 0123 0E       		.uleb128 0xe
 12070 0124 3A       		.uleb128 0x3a
 12071 0125 0B       		.uleb128 0xb
 12072 0126 3B       		.uleb128 0x3b
 12073 0127 05       		.uleb128 0x5
 12074 0128 27       		.uleb128 0x27
 12075 0129 19       		.uleb128 0x19
 12076 012a 11       		.uleb128 0x11
 12077 012b 01       		.uleb128 0x1
 12078 012c 12       		.uleb128 0x12
 12079 012d 06       		.uleb128 0x6
 12080 012e 40       		.uleb128 0x40
 12081 012f 18       		.uleb128 0x18
 12082 0130 9742     		.uleb128 0x2117
 12083 0132 19       		.uleb128 0x19
 12084 0133 01       		.uleb128 0x1
 12085 0134 13       		.uleb128 0x13
 12086 0135 00       		.byte	0
 12087 0136 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 285


 12088 0137 19       		.uleb128 0x19
 12089 0138 05       		.uleb128 0x5
 12090 0139 00       		.byte	0
 12091 013a 03       		.uleb128 0x3
 12092 013b 08       		.uleb128 0x8
 12093 013c 3A       		.uleb128 0x3a
 12094 013d 0B       		.uleb128 0xb
 12095 013e 3B       		.uleb128 0x3b
 12096 013f 05       		.uleb128 0x5
 12097 0140 49       		.uleb128 0x49
 12098 0141 13       		.uleb128 0x13
 12099 0142 02       		.uleb128 0x2
 12100 0143 18       		.uleb128 0x18
 12101 0144 00       		.byte	0
 12102 0145 00       		.byte	0
 12103 0146 1A       		.uleb128 0x1a
 12104 0147 05       		.uleb128 0x5
 12105 0148 00       		.byte	0
 12106 0149 03       		.uleb128 0x3
 12107 014a 08       		.uleb128 0x8
 12108 014b 3A       		.uleb128 0x3a
 12109 014c 0B       		.uleb128 0xb
 12110 014d 3B       		.uleb128 0x3b
 12111 014e 05       		.uleb128 0x5
 12112 014f 49       		.uleb128 0x49
 12113 0150 13       		.uleb128 0x13
 12114 0151 02       		.uleb128 0x2
 12115 0152 17       		.uleb128 0x17
 12116 0153 00       		.byte	0
 12117 0154 00       		.byte	0
 12118 0155 1B       		.uleb128 0x1b
 12119 0156 34       		.uleb128 0x34
 12120 0157 00       		.byte	0
 12121 0158 03       		.uleb128 0x3
 12122 0159 08       		.uleb128 0x8
 12123 015a 3A       		.uleb128 0x3a
 12124 015b 0B       		.uleb128 0xb
 12125 015c 3B       		.uleb128 0x3b
 12126 015d 05       		.uleb128 0x5
 12127 015e 49       		.uleb128 0x49
 12128 015f 13       		.uleb128 0x13
 12129 0160 02       		.uleb128 0x2
 12130 0161 17       		.uleb128 0x17
 12131 0162 00       		.byte	0
 12132 0163 00       		.byte	0
 12133 0164 1C       		.uleb128 0x1c
 12134 0165 0F       		.uleb128 0xf
 12135 0166 00       		.byte	0
 12136 0167 0B       		.uleb128 0xb
 12137 0168 0B       		.uleb128 0xb
 12138 0169 00       		.byte	0
 12139 016a 00       		.byte	0
 12140 016b 1D       		.uleb128 0x1d
 12141 016c 2E       		.uleb128 0x2e
 12142 016d 01       		.byte	0x1
 12143 016e 03       		.uleb128 0x3
 12144 016f 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 286


 12145 0170 3A       		.uleb128 0x3a
 12146 0171 0B       		.uleb128 0xb
 12147 0172 3B       		.uleb128 0x3b
 12148 0173 05       		.uleb128 0x5
 12149 0174 27       		.uleb128 0x27
 12150 0175 19       		.uleb128 0x19
 12151 0176 49       		.uleb128 0x49
 12152 0177 13       		.uleb128 0x13
 12153 0178 11       		.uleb128 0x11
 12154 0179 01       		.uleb128 0x1
 12155 017a 12       		.uleb128 0x12
 12156 017b 06       		.uleb128 0x6
 12157 017c 40       		.uleb128 0x40
 12158 017d 18       		.uleb128 0x18
 12159 017e 9742     		.uleb128 0x2117
 12160 0180 19       		.uleb128 0x19
 12161 0181 01       		.uleb128 0x1
 12162 0182 13       		.uleb128 0x13
 12163 0183 00       		.byte	0
 12164 0184 00       		.byte	0
 12165 0185 1E       		.uleb128 0x1e
 12166 0186 05       		.uleb128 0x5
 12167 0187 00       		.byte	0
 12168 0188 03       		.uleb128 0x3
 12169 0189 0E       		.uleb128 0xe
 12170 018a 3A       		.uleb128 0x3a
 12171 018b 0B       		.uleb128 0xb
 12172 018c 3B       		.uleb128 0x3b
 12173 018d 05       		.uleb128 0x5
 12174 018e 49       		.uleb128 0x49
 12175 018f 13       		.uleb128 0x13
 12176 0190 02       		.uleb128 0x2
 12177 0191 17       		.uleb128 0x17
 12178 0192 00       		.byte	0
 12179 0193 00       		.byte	0
 12180 0194 1F       		.uleb128 0x1f
 12181 0195 34       		.uleb128 0x34
 12182 0196 00       		.byte	0
 12183 0197 03       		.uleb128 0x3
 12184 0198 0E       		.uleb128 0xe
 12185 0199 3A       		.uleb128 0x3a
 12186 019a 0B       		.uleb128 0xb
 12187 019b 3B       		.uleb128 0x3b
 12188 019c 05       		.uleb128 0x5
 12189 019d 49       		.uleb128 0x49
 12190 019e 13       		.uleb128 0x13
 12191 019f 02       		.uleb128 0x2
 12192 01a0 17       		.uleb128 0x17
 12193 01a1 00       		.byte	0
 12194 01a2 00       		.byte	0
 12195 01a3 20       		.uleb128 0x20
 12196 01a4 0B       		.uleb128 0xb
 12197 01a5 01       		.byte	0x1
 12198 01a6 11       		.uleb128 0x11
 12199 01a7 01       		.uleb128 0x1
 12200 01a8 12       		.uleb128 0x12
 12201 01a9 06       		.uleb128 0x6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 287


 12202 01aa 01       		.uleb128 0x1
 12203 01ab 13       		.uleb128 0x13
 12204 01ac 00       		.byte	0
 12205 01ad 00       		.byte	0
 12206 01ae 21       		.uleb128 0x21
 12207 01af 898201   		.uleb128 0x4109
 12208 01b2 01       		.byte	0x1
 12209 01b3 11       		.uleb128 0x11
 12210 01b4 01       		.uleb128 0x1
 12211 01b5 31       		.uleb128 0x31
 12212 01b6 13       		.uleb128 0x13
 12213 01b7 00       		.byte	0
 12214 01b8 00       		.byte	0
 12215 01b9 22       		.uleb128 0x22
 12216 01ba 8A8201   		.uleb128 0x410a
 12217 01bd 00       		.byte	0
 12218 01be 02       		.uleb128 0x2
 12219 01bf 18       		.uleb128 0x18
 12220 01c0 9142     		.uleb128 0x2111
 12221 01c2 18       		.uleb128 0x18
 12222 01c3 00       		.byte	0
 12223 01c4 00       		.byte	0
 12224 01c5 23       		.uleb128 0x23
 12225 01c6 898201   		.uleb128 0x4109
 12226 01c9 01       		.byte	0x1
 12227 01ca 11       		.uleb128 0x11
 12228 01cb 01       		.uleb128 0x1
 12229 01cc 31       		.uleb128 0x31
 12230 01cd 13       		.uleb128 0x13
 12231 01ce 01       		.uleb128 0x1
 12232 01cf 13       		.uleb128 0x13
 12233 01d0 00       		.byte	0
 12234 01d1 00       		.byte	0
 12235 01d2 24       		.uleb128 0x24
 12236 01d3 2E       		.uleb128 0x2e
 12237 01d4 01       		.byte	0x1
 12238 01d5 31       		.uleb128 0x31
 12239 01d6 13       		.uleb128 0x13
 12240 01d7 11       		.uleb128 0x11
 12241 01d8 01       		.uleb128 0x1
 12242 01d9 12       		.uleb128 0x12
 12243 01da 06       		.uleb128 0x6
 12244 01db 40       		.uleb128 0x40
 12245 01dc 18       		.uleb128 0x18
 12246 01dd 9742     		.uleb128 0x2117
 12247 01df 19       		.uleb128 0x19
 12248 01e0 01       		.uleb128 0x1
 12249 01e1 13       		.uleb128 0x13
 12250 01e2 00       		.byte	0
 12251 01e3 00       		.byte	0
 12252 01e4 25       		.uleb128 0x25
 12253 01e5 05       		.uleb128 0x5
 12254 01e6 00       		.byte	0
 12255 01e7 31       		.uleb128 0x31
 12256 01e8 13       		.uleb128 0x13
 12257 01e9 02       		.uleb128 0x2
 12258 01ea 17       		.uleb128 0x17
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 288


 12259 01eb 00       		.byte	0
 12260 01ec 00       		.byte	0
 12261 01ed 26       		.uleb128 0x26
 12262 01ee 2E       		.uleb128 0x2e
 12263 01ef 01       		.byte	0x1
 12264 01f0 03       		.uleb128 0x3
 12265 01f1 0E       		.uleb128 0xe
 12266 01f2 3A       		.uleb128 0x3a
 12267 01f3 0B       		.uleb128 0xb
 12268 01f4 3B       		.uleb128 0x3b
 12269 01f5 05       		.uleb128 0x5
 12270 01f6 27       		.uleb128 0x27
 12271 01f7 19       		.uleb128 0x19
 12272 01f8 20       		.uleb128 0x20
 12273 01f9 0B       		.uleb128 0xb
 12274 01fa 01       		.uleb128 0x1
 12275 01fb 13       		.uleb128 0x13
 12276 01fc 00       		.byte	0
 12277 01fd 00       		.byte	0
 12278 01fe 27       		.uleb128 0x27
 12279 01ff 2E       		.uleb128 0x2e
 12280 0200 01       		.byte	0x1
 12281 0201 03       		.uleb128 0x3
 12282 0202 0E       		.uleb128 0xe
 12283 0203 3A       		.uleb128 0x3a
 12284 0204 0B       		.uleb128 0xb
 12285 0205 3B       		.uleb128 0x3b
 12286 0206 05       		.uleb128 0x5
 12287 0207 27       		.uleb128 0x27
 12288 0208 19       		.uleb128 0x19
 12289 0209 49       		.uleb128 0x49
 12290 020a 13       		.uleb128 0x13
 12291 020b 11       		.uleb128 0x11
 12292 020c 01       		.uleb128 0x1
 12293 020d 12       		.uleb128 0x12
 12294 020e 06       		.uleb128 0x6
 12295 020f 40       		.uleb128 0x40
 12296 0210 18       		.uleb128 0x18
 12297 0211 9642     		.uleb128 0x2116
 12298 0213 19       		.uleb128 0x19
 12299 0214 01       		.uleb128 0x1
 12300 0215 13       		.uleb128 0x13
 12301 0216 00       		.byte	0
 12302 0217 00       		.byte	0
 12303 0218 28       		.uleb128 0x28
 12304 0219 1D       		.uleb128 0x1d
 12305 021a 01       		.byte	0x1
 12306 021b 31       		.uleb128 0x31
 12307 021c 13       		.uleb128 0x13
 12308 021d 11       		.uleb128 0x11
 12309 021e 01       		.uleb128 0x1
 12310 021f 12       		.uleb128 0x12
 12311 0220 06       		.uleb128 0x6
 12312 0221 58       		.uleb128 0x58
 12313 0222 0B       		.uleb128 0xb
 12314 0223 59       		.uleb128 0x59
 12315 0224 05       		.uleb128 0x5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 289


 12316 0225 01       		.uleb128 0x1
 12317 0226 13       		.uleb128 0x13
 12318 0227 00       		.byte	0
 12319 0228 00       		.byte	0
 12320 0229 29       		.uleb128 0x29
 12321 022a 0B       		.uleb128 0xb
 12322 022b 01       		.byte	0x1
 12323 022c 11       		.uleb128 0x11
 12324 022d 01       		.uleb128 0x1
 12325 022e 12       		.uleb128 0x12
 12326 022f 06       		.uleb128 0x6
 12327 0230 00       		.byte	0
 12328 0231 00       		.byte	0
 12329 0232 2A       		.uleb128 0x2a
 12330 0233 34       		.uleb128 0x34
 12331 0234 00       		.byte	0
 12332 0235 31       		.uleb128 0x31
 12333 0236 13       		.uleb128 0x13
 12334 0237 00       		.byte	0
 12335 0238 00       		.byte	0
 12336 0239 2B       		.uleb128 0x2b
 12337 023a 898201   		.uleb128 0x4109
 12338 023d 00       		.byte	0
 12339 023e 11       		.uleb128 0x11
 12340 023f 01       		.uleb128 0x1
 12341 0240 31       		.uleb128 0x31
 12342 0241 13       		.uleb128 0x13
 12343 0242 00       		.byte	0
 12344 0243 00       		.byte	0
 12345 0244 2C       		.uleb128 0x2c
 12346 0245 34       		.uleb128 0x34
 12347 0246 00       		.byte	0
 12348 0247 31       		.uleb128 0x31
 12349 0248 13       		.uleb128 0x13
 12350 0249 02       		.uleb128 0x2
 12351 024a 17       		.uleb128 0x17
 12352 024b 00       		.byte	0
 12353 024c 00       		.byte	0
 12354 024d 2D       		.uleb128 0x2d
 12355 024e 2E       		.uleb128 0x2e
 12356 024f 01       		.byte	0x1
 12357 0250 3F       		.uleb128 0x3f
 12358 0251 19       		.uleb128 0x19
 12359 0252 03       		.uleb128 0x3
 12360 0253 0E       		.uleb128 0xe
 12361 0254 3A       		.uleb128 0x3a
 12362 0255 0B       		.uleb128 0xb
 12363 0256 3B       		.uleb128 0x3b
 12364 0257 05       		.uleb128 0x5
 12365 0258 27       		.uleb128 0x27
 12366 0259 19       		.uleb128 0x19
 12367 025a 49       		.uleb128 0x49
 12368 025b 13       		.uleb128 0x13
 12369 025c 11       		.uleb128 0x11
 12370 025d 01       		.uleb128 0x1
 12371 025e 12       		.uleb128 0x12
 12372 025f 06       		.uleb128 0x6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 290


 12373 0260 40       		.uleb128 0x40
 12374 0261 18       		.uleb128 0x18
 12375 0262 9742     		.uleb128 0x2117
 12376 0264 19       		.uleb128 0x19
 12377 0265 01       		.uleb128 0x1
 12378 0266 13       		.uleb128 0x13
 12379 0267 00       		.byte	0
 12380 0268 00       		.byte	0
 12381 0269 2E       		.uleb128 0x2e
 12382 026a 34       		.uleb128 0x34
 12383 026b 00       		.byte	0
 12384 026c 31       		.uleb128 0x31
 12385 026d 13       		.uleb128 0x13
 12386 026e 02       		.uleb128 0x2
 12387 026f 18       		.uleb128 0x18
 12388 0270 00       		.byte	0
 12389 0271 00       		.byte	0
 12390 0272 2F       		.uleb128 0x2f
 12391 0273 1D       		.uleb128 0x1d
 12392 0274 01       		.byte	0x1
 12393 0275 31       		.uleb128 0x31
 12394 0276 13       		.uleb128 0x13
 12395 0277 52       		.uleb128 0x52
 12396 0278 01       		.uleb128 0x1
 12397 0279 55       		.uleb128 0x55
 12398 027a 17       		.uleb128 0x17
 12399 027b 58       		.uleb128 0x58
 12400 027c 0B       		.uleb128 0xb
 12401 027d 59       		.uleb128 0x59
 12402 027e 05       		.uleb128 0x5
 12403 027f 01       		.uleb128 0x1
 12404 0280 13       		.uleb128 0x13
 12405 0281 00       		.byte	0
 12406 0282 00       		.byte	0
 12407 0283 30       		.uleb128 0x30
 12408 0284 0B       		.uleb128 0xb
 12409 0285 01       		.byte	0x1
 12410 0286 55       		.uleb128 0x55
 12411 0287 17       		.uleb128 0x17
 12412 0288 00       		.byte	0
 12413 0289 00       		.byte	0
 12414 028a 31       		.uleb128 0x31
 12415 028b 1D       		.uleb128 0x1d
 12416 028c 01       		.byte	0x1
 12417 028d 31       		.uleb128 0x31
 12418 028e 13       		.uleb128 0x13
 12419 028f 11       		.uleb128 0x11
 12420 0290 01       		.uleb128 0x1
 12421 0291 12       		.uleb128 0x12
 12422 0292 06       		.uleb128 0x6
 12423 0293 58       		.uleb128 0x58
 12424 0294 0B       		.uleb128 0xb
 12425 0295 59       		.uleb128 0x59
 12426 0296 05       		.uleb128 0x5
 12427 0297 00       		.byte	0
 12428 0298 00       		.byte	0
 12429 0299 32       		.uleb128 0x32
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 291


 12430 029a 05       		.uleb128 0x5
 12431 029b 00       		.byte	0
 12432 029c 31       		.uleb128 0x31
 12433 029d 13       		.uleb128 0x13
 12434 029e 00       		.byte	0
 12435 029f 00       		.byte	0
 12436 02a0 33       		.uleb128 0x33
 12437 02a1 34       		.uleb128 0x34
 12438 02a2 00       		.byte	0
 12439 02a3 03       		.uleb128 0x3
 12440 02a4 08       		.uleb128 0x8
 12441 02a5 3A       		.uleb128 0x3a
 12442 02a6 0B       		.uleb128 0xb
 12443 02a7 3B       		.uleb128 0x3b
 12444 02a8 05       		.uleb128 0x5
 12445 02a9 49       		.uleb128 0x49
 12446 02aa 13       		.uleb128 0x13
 12447 02ab 02       		.uleb128 0x2
 12448 02ac 18       		.uleb128 0x18
 12449 02ad 00       		.byte	0
 12450 02ae 00       		.byte	0
 12451 02af 34       		.uleb128 0x34
 12452 02b0 0B       		.uleb128 0xb
 12453 02b1 01       		.byte	0x1
 12454 02b2 55       		.uleb128 0x55
 12455 02b3 17       		.uleb128 0x17
 12456 02b4 01       		.uleb128 0x1
 12457 02b5 13       		.uleb128 0x13
 12458 02b6 00       		.byte	0
 12459 02b7 00       		.byte	0
 12460 02b8 35       		.uleb128 0x35
 12461 02b9 2E       		.uleb128 0x2e
 12462 02ba 01       		.byte	0x1
 12463 02bb 3F       		.uleb128 0x3f
 12464 02bc 19       		.uleb128 0x19
 12465 02bd 03       		.uleb128 0x3
 12466 02be 0E       		.uleb128 0xe
 12467 02bf 3A       		.uleb128 0x3a
 12468 02c0 0B       		.uleb128 0xb
 12469 02c1 3B       		.uleb128 0x3b
 12470 02c2 05       		.uleb128 0x5
 12471 02c3 27       		.uleb128 0x27
 12472 02c4 19       		.uleb128 0x19
 12473 02c5 49       		.uleb128 0x49
 12474 02c6 13       		.uleb128 0x13
 12475 02c7 11       		.uleb128 0x11
 12476 02c8 01       		.uleb128 0x1
 12477 02c9 12       		.uleb128 0x12
 12478 02ca 06       		.uleb128 0x6
 12479 02cb 40       		.uleb128 0x40
 12480 02cc 18       		.uleb128 0x18
 12481 02cd 9642     		.uleb128 0x2116
 12482 02cf 19       		.uleb128 0x19
 12483 02d0 01       		.uleb128 0x1
 12484 02d1 13       		.uleb128 0x13
 12485 02d2 00       		.byte	0
 12486 02d3 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 292


 12487 02d4 36       		.uleb128 0x36
 12488 02d5 34       		.uleb128 0x34
 12489 02d6 00       		.byte	0
 12490 02d7 03       		.uleb128 0x3
 12491 02d8 0E       		.uleb128 0xe
 12492 02d9 3A       		.uleb128 0x3a
 12493 02da 0B       		.uleb128 0xb
 12494 02db 3B       		.uleb128 0x3b
 12495 02dc 05       		.uleb128 0x5
 12496 02dd 49       		.uleb128 0x49
 12497 02de 13       		.uleb128 0x13
 12498 02df 02       		.uleb128 0x2
 12499 02e0 18       		.uleb128 0x18
 12500 02e1 00       		.byte	0
 12501 02e2 00       		.byte	0
 12502 02e3 37       		.uleb128 0x37
 12503 02e4 2E       		.uleb128 0x2e
 12504 02e5 01       		.byte	0x1
 12505 02e6 3F       		.uleb128 0x3f
 12506 02e7 19       		.uleb128 0x19
 12507 02e8 03       		.uleb128 0x3
 12508 02e9 0E       		.uleb128 0xe
 12509 02ea 3A       		.uleb128 0x3a
 12510 02eb 0B       		.uleb128 0xb
 12511 02ec 3B       		.uleb128 0x3b
 12512 02ed 0B       		.uleb128 0xb
 12513 02ee 27       		.uleb128 0x27
 12514 02ef 19       		.uleb128 0x19
 12515 02f0 49       		.uleb128 0x49
 12516 02f1 13       		.uleb128 0x13
 12517 02f2 3C       		.uleb128 0x3c
 12518 02f3 19       		.uleb128 0x19
 12519 02f4 01       		.uleb128 0x1
 12520 02f5 13       		.uleb128 0x13
 12521 02f6 00       		.byte	0
 12522 02f7 00       		.byte	0
 12523 02f8 38       		.uleb128 0x38
 12524 02f9 05       		.uleb128 0x5
 12525 02fa 00       		.byte	0
 12526 02fb 49       		.uleb128 0x49
 12527 02fc 13       		.uleb128 0x13
 12528 02fd 00       		.byte	0
 12529 02fe 00       		.byte	0
 12530 02ff 39       		.uleb128 0x39
 12531 0300 2E       		.uleb128 0x2e
 12532 0301 00       		.byte	0
 12533 0302 3F       		.uleb128 0x3f
 12534 0303 19       		.uleb128 0x19
 12535 0304 03       		.uleb128 0x3
 12536 0305 0E       		.uleb128 0xe
 12537 0306 3A       		.uleb128 0x3a
 12538 0307 0B       		.uleb128 0xb
 12539 0308 3B       		.uleb128 0x3b
 12540 0309 0B       		.uleb128 0xb
 12541 030a 27       		.uleb128 0x27
 12542 030b 19       		.uleb128 0x19
 12543 030c 49       		.uleb128 0x49
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 293


 12544 030d 13       		.uleb128 0x13
 12545 030e 3C       		.uleb128 0x3c
 12546 030f 19       		.uleb128 0x19
 12547 0310 00       		.byte	0
 12548 0311 00       		.byte	0
 12549 0312 00       		.byte	0
 12550              		.section	.debug_loc,"",%progbits
 12551              	.Ldebug_loc0:
 12552              	.LLST0:
 12553 0000 00000000 		.4byte	.LVL0
 12554 0004 04000000 		.4byte	.LVL1
 12555 0008 0100     		.2byte	0x1
 12556 000a 52       		.byte	0x52
 12557 000b 04000000 		.4byte	.LVL1
 12558 000f 0E000000 		.4byte	.LVL3
 12559 0013 0700     		.2byte	0x7
 12560 0015 73       		.byte	0x73
 12561 0016 00       		.sleb128 0
 12562 0017 20       		.byte	0x20
 12563 0018 72       		.byte	0x72
 12564 0019 00       		.sleb128 0
 12565 001a 22       		.byte	0x22
 12566 001b 9F       		.byte	0x9f
 12567 001c 0E000000 		.4byte	.LVL3
 12568 0020 10000000 		.4byte	.LVL4
 12569 0024 0600     		.2byte	0x6
 12570 0026 72       		.byte	0x72
 12571 0027 00       		.sleb128 0
 12572 0028 73       		.byte	0x73
 12573 0029 00       		.sleb128 0
 12574 002a 1C       		.byte	0x1c
 12575 002b 9F       		.byte	0x9f
 12576 002c 10000000 		.4byte	.LVL4
 12577 0030 12000000 		.4byte	.LFE0
 12578 0034 0700     		.2byte	0x7
 12579 0036 73       		.byte	0x73
 12580 0037 00       		.sleb128 0
 12581 0038 20       		.byte	0x20
 12582 0039 72       		.byte	0x72
 12583 003a 00       		.sleb128 0
 12584 003b 22       		.byte	0x22
 12585 003c 9F       		.byte	0x9f
 12586 003d 00000000 		.4byte	0
 12587 0041 00000000 		.4byte	0
 12588              	.LLST1:
 12589 0045 00000000 		.4byte	.LVL0
 12590 0049 04000000 		.4byte	.LVL1
 12591 004d 0100     		.2byte	0x1
 12592 004f 50       		.byte	0x50
 12593 0050 04000000 		.4byte	.LVL1
 12594 0054 08000000 		.4byte	.LVL2
 12595 0058 0600     		.2byte	0x6
 12596 005a 70       		.byte	0x70
 12597 005b 00       		.sleb128 0
 12598 005c 73       		.byte	0x73
 12599 005d 00       		.sleb128 0
 12600 005e 22       		.byte	0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 294


 12601 005f 9F       		.byte	0x9f
 12602 0060 08000000 		.4byte	.LVL2
 12603 0064 0E000000 		.4byte	.LVL3
 12604 0068 0800     		.2byte	0x8
 12605 006a 70       		.byte	0x70
 12606 006b 00       		.sleb128 0
 12607 006c 73       		.byte	0x73
 12608 006d 00       		.sleb128 0
 12609 006e 22       		.byte	0x22
 12610 006f 23       		.byte	0x23
 12611 0070 01       		.uleb128 0x1
 12612 0071 9F       		.byte	0x9f
 12613 0072 0E000000 		.4byte	.LVL3
 12614 0076 12000000 		.4byte	.LFE0
 12615 007a 0600     		.2byte	0x6
 12616 007c 70       		.byte	0x70
 12617 007d 00       		.sleb128 0
 12618 007e 73       		.byte	0x73
 12619 007f 00       		.sleb128 0
 12620 0080 22       		.byte	0x22
 12621 0081 9F       		.byte	0x9f
 12622 0082 00000000 		.4byte	0
 12623 0086 00000000 		.4byte	0
 12624              	.LLST2:
 12625 008a 00000000 		.4byte	.LVL0
 12626 008e 04000000 		.4byte	.LVL1
 12627 0092 0100     		.2byte	0x1
 12628 0094 51       		.byte	0x51
 12629 0095 04000000 		.4byte	.LVL1
 12630 0099 08000000 		.4byte	.LVL2
 12631 009d 0600     		.2byte	0x6
 12632 009f 71       		.byte	0x71
 12633 00a0 00       		.sleb128 0
 12634 00a1 73       		.byte	0x73
 12635 00a2 00       		.sleb128 0
 12636 00a3 22       		.byte	0x22
 12637 00a4 9F       		.byte	0x9f
 12638 00a5 08000000 		.4byte	.LVL2
 12639 00a9 0E000000 		.4byte	.LVL3
 12640 00ad 0800     		.2byte	0x8
 12641 00af 71       		.byte	0x71
 12642 00b0 00       		.sleb128 0
 12643 00b1 73       		.byte	0x73
 12644 00b2 00       		.sleb128 0
 12645 00b3 22       		.byte	0x22
 12646 00b4 23       		.byte	0x23
 12647 00b5 01       		.uleb128 0x1
 12648 00b6 9F       		.byte	0x9f
 12649 00b7 0E000000 		.4byte	.LVL3
 12650 00bb 12000000 		.4byte	.LFE0
 12651 00bf 0600     		.2byte	0x6
 12652 00c1 71       		.byte	0x71
 12653 00c2 00       		.sleb128 0
 12654 00c3 73       		.byte	0x73
 12655 00c4 00       		.sleb128 0
 12656 00c5 22       		.byte	0x22
 12657 00c6 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 295


 12658 00c7 00000000 		.4byte	0
 12659 00cb 00000000 		.4byte	0
 12660              	.LLST3:
 12661 00cf 00000000 		.4byte	.LVL5
 12662 00d3 38000000 		.4byte	.LVL9
 12663 00d7 0100     		.2byte	0x1
 12664 00d9 50       		.byte	0x50
 12665 00da 38000000 		.4byte	.LVL9
 12666 00de 50000000 		.4byte	.LVL11
 12667 00e2 0400     		.2byte	0x4
 12668 00e4 F3       		.byte	0xf3
 12669 00e5 01       		.uleb128 0x1
 12670 00e6 50       		.byte	0x50
 12671 00e7 9F       		.byte	0x9f
 12672 00e8 50000000 		.4byte	.LVL11
 12673 00ec 52000000 		.4byte	.LVL12
 12674 00f0 0100     		.2byte	0x1
 12675 00f2 50       		.byte	0x50
 12676 00f3 52000000 		.4byte	.LVL12
 12677 00f7 64000000 		.4byte	.LFE4
 12678 00fb 0400     		.2byte	0x4
 12679 00fd F3       		.byte	0xf3
 12680 00fe 01       		.uleb128 0x1
 12681 00ff 50       		.byte	0x50
 12682 0100 9F       		.byte	0x9f
 12683 0101 00000000 		.4byte	0
 12684 0105 00000000 		.4byte	0
 12685              	.LLST4:
 12686 0109 00000000 		.4byte	.LVL5
 12687 010d 0A000000 		.4byte	.LVL6
 12688 0111 0200     		.2byte	0x2
 12689 0113 30       		.byte	0x30
 12690 0114 9F       		.byte	0x9f
 12691 0115 0A000000 		.4byte	.LVL6
 12692 0119 40000000 		.4byte	.LVL10
 12693 011d 0100     		.2byte	0x1
 12694 011f 53       		.byte	0x53
 12695 0120 50000000 		.4byte	.LVL11
 12696 0124 5C000000 		.4byte	.LVL13
 12697 0128 0100     		.2byte	0x1
 12698 012a 53       		.byte	0x53
 12699 012b 00000000 		.4byte	0
 12700 012f 00000000 		.4byte	0
 12701              	.LLST5:
 12702 0133 00000000 		.4byte	.LVL5
 12703 0137 0A000000 		.4byte	.LVL6
 12704 013b 0200     		.2byte	0x2
 12705 013d 30       		.byte	0x30
 12706 013e 9F       		.byte	0x9f
 12707 013f 0A000000 		.4byte	.LVL6
 12708 0143 5C000000 		.4byte	.LVL14
 12709 0147 0100     		.2byte	0x1
 12710 0149 54       		.byte	0x54
 12711 014a 00000000 		.4byte	0
 12712 014e 00000000 		.4byte	0
 12713              	.LLST6:
 12714 0152 00000000 		.4byte	.LVL15
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 296


 12715 0156 12000000 		.4byte	.LVL18
 12716 015a 0100     		.2byte	0x1
 12717 015c 50       		.byte	0x50
 12718 015d 12000000 		.4byte	.LVL18
 12719 0161 82000000 		.4byte	.LFE23
 12720 0165 0400     		.2byte	0x4
 12721 0167 F3       		.byte	0xf3
 12722 0168 01       		.uleb128 0x1
 12723 0169 50       		.byte	0x50
 12724 016a 9F       		.byte	0x9f
 12725 016b 00000000 		.4byte	0
 12726 016f 00000000 		.4byte	0
 12727              	.LLST7:
 12728 0173 0E000000 		.4byte	.LVL17
 12729 0177 12000000 		.4byte	.LVL18
 12730 017b 0200     		.2byte	0x2
 12731 017d 30       		.byte	0x30
 12732 017e 9F       		.byte	0x9f
 12733 017f 12000000 		.4byte	.LVL18
 12734 0183 22000000 		.4byte	.LVL21
 12735 0187 0100     		.2byte	0x1
 12736 0189 50       		.byte	0x50
 12737 018a 22000000 		.4byte	.LVL21
 12738 018e 24000000 		.4byte	.LVL22
 12739 0192 0300     		.2byte	0x3
 12740 0194 70       		.byte	0x70
 12741 0195 7F       		.sleb128 -1
 12742 0196 9F       		.byte	0x9f
 12743 0197 24000000 		.4byte	.LVL22
 12744 019b 2A000000 		.4byte	.LVL23
 12745 019f 0100     		.2byte	0x1
 12746 01a1 50       		.byte	0x50
 12747 01a2 32000000 		.4byte	.LVL25
 12748 01a6 3A000000 		.4byte	.LVL27
 12749 01aa 0200     		.2byte	0x2
 12750 01ac 38       		.byte	0x38
 12751 01ad 9F       		.byte	0x9f
 12752 01ae 3A000000 		.4byte	.LVL27
 12753 01b2 4C000000 		.4byte	.LVL30
 12754 01b6 0200     		.2byte	0x2
 12755 01b8 37       		.byte	0x37
 12756 01b9 9F       		.byte	0x9f
 12757 01ba 00000000 		.4byte	0
 12758 01be 00000000 		.4byte	0
 12759              	.LLST8:
 12760 01c2 0E000000 		.4byte	.LVL17
 12761 01c6 12000000 		.4byte	.LVL18
 12762 01ca 0200     		.2byte	0x2
 12763 01cc 73       		.byte	0x73
 12764 01cd 0C       		.sleb128 12
 12765 01ce 00000000 		.4byte	0
 12766 01d2 00000000 		.4byte	0
 12767              	.LLST9:
 12768 01d6 0E000000 		.4byte	.LVL17
 12769 01da 76000000 		.4byte	.LVL31
 12770 01de 0100     		.2byte	0x1
 12771 01e0 53       		.byte	0x53
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 297


 12772 01e1 00000000 		.4byte	0
 12773 01e5 00000000 		.4byte	0
 12774              	.LLST10:
 12775 01e9 08000000 		.4byte	.LVL16
 12776 01ed 12000000 		.4byte	.LVL18
 12777 01f1 0100     		.2byte	0x1
 12778 01f3 54       		.byte	0x54
 12779 01f4 12000000 		.4byte	.LVL18
 12780 01f8 2E000000 		.4byte	.LVL24
 12781 01fc 0100     		.2byte	0x1
 12782 01fe 52       		.byte	0x52
 12783 01ff 2E000000 		.4byte	.LVL24
 12784 0203 3A000000 		.4byte	.LVL27
 12785 0207 0300     		.2byte	0x3
 12786 0209 72       		.byte	0x72
 12787 020a 01       		.sleb128 1
 12788 020b 9F       		.byte	0x9f
 12789 020c 3A000000 		.4byte	.LVL27
 12790 0210 7C000000 		.4byte	.LVL32
 12791 0214 0100     		.2byte	0x1
 12792 0216 52       		.byte	0x52
 12793 0217 7C000000 		.4byte	.LVL32
 12794 021b 80000000 		.4byte	.LVL33
 12795 021f 0100     		.2byte	0x1
 12796 0221 54       		.byte	0x54
 12797 0222 00000000 		.4byte	0
 12798 0226 00000000 		.4byte	0
 12799              	.LLST11:
 12800 022a 14000000 		.4byte	.LVL19
 12801 022e 36000000 		.4byte	.LVL26
 12802 0232 0100     		.2byte	0x1
 12803 0234 55       		.byte	0x55
 12804 0235 3C000000 		.4byte	.LVL28
 12805 0239 4C000000 		.4byte	.LVL30
 12806 023d 0100     		.2byte	0x1
 12807 023f 54       		.byte	0x54
 12808 0240 00000000 		.4byte	0
 12809 0244 00000000 		.4byte	0
 12810              	.LLST12:
 12811 0248 00000000 		.4byte	.LVL34
 12812 024c 08000000 		.4byte	.LVL36
 12813 0250 0100     		.2byte	0x1
 12814 0252 50       		.byte	0x50
 12815 0253 08000000 		.4byte	.LVL36
 12816 0257 0C000000 		.4byte	.LVL37
 12817 025b 0400     		.2byte	0x4
 12818 025d F3       		.byte	0xf3
 12819 025e 01       		.uleb128 0x1
 12820 025f 50       		.byte	0x50
 12821 0260 9F       		.byte	0x9f
 12822 0261 0C000000 		.4byte	.LVL37
 12823 0265 16000000 		.4byte	.LVL38
 12824 0269 0100     		.2byte	0x1
 12825 026b 50       		.byte	0x50
 12826 026c 16000000 		.4byte	.LVL38
 12827 0270 1C000000 		.4byte	.LVL39
 12828 0274 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 298


 12829 0276 54       		.byte	0x54
 12830 0277 1C000000 		.4byte	.LVL39
 12831 027b 26000000 		.4byte	.LVL41
 12832 027f 0100     		.2byte	0x1
 12833 0281 50       		.byte	0x50
 12834 0282 26000000 		.4byte	.LVL41
 12835 0286 72000000 		.4byte	.LVL50
 12836 028a 0100     		.2byte	0x1
 12837 028c 54       		.byte	0x54
 12838 028d 72000000 		.4byte	.LVL50
 12839 0291 74000000 		.4byte	.LFE9
 12840 0295 0400     		.2byte	0x4
 12841 0297 F3       		.byte	0xf3
 12842 0298 01       		.uleb128 0x1
 12843 0299 50       		.byte	0x50
 12844 029a 9F       		.byte	0x9f
 12845 029b 00000000 		.4byte	0
 12846 029f 00000000 		.4byte	0
 12847              	.LLST13:
 12848 02a3 00000000 		.4byte	.LVL34
 12849 02a7 08000000 		.4byte	.LVL36
 12850 02ab 0100     		.2byte	0x1
 12851 02ad 51       		.byte	0x51
 12852 02ae 08000000 		.4byte	.LVL36
 12853 02b2 0C000000 		.4byte	.LVL37
 12854 02b6 0400     		.2byte	0x4
 12855 02b8 F3       		.byte	0xf3
 12856 02b9 01       		.uleb128 0x1
 12857 02ba 51       		.byte	0x51
 12858 02bb 9F       		.byte	0x9f
 12859 02bc 0C000000 		.4byte	.LVL37
 12860 02c0 16000000 		.4byte	.LVL38
 12861 02c4 0100     		.2byte	0x1
 12862 02c6 51       		.byte	0x51
 12863 02c7 16000000 		.4byte	.LVL38
 12864 02cb 1C000000 		.4byte	.LVL39
 12865 02cf 0100     		.2byte	0x1
 12866 02d1 55       		.byte	0x55
 12867 02d2 1C000000 		.4byte	.LVL39
 12868 02d6 24000000 		.4byte	.LVL40
 12869 02da 0100     		.2byte	0x1
 12870 02dc 51       		.byte	0x51
 12871 02dd 24000000 		.4byte	.LVL40
 12872 02e1 72000000 		.4byte	.LVL50
 12873 02e5 0100     		.2byte	0x1
 12874 02e7 55       		.byte	0x55
 12875 02e8 72000000 		.4byte	.LVL50
 12876 02ec 74000000 		.4byte	.LFE9
 12877 02f0 0400     		.2byte	0x4
 12878 02f2 F3       		.byte	0xf3
 12879 02f3 01       		.uleb128 0x1
 12880 02f4 51       		.byte	0x51
 12881 02f5 9F       		.byte	0x9f
 12882 02f6 00000000 		.4byte	0
 12883 02fa 00000000 		.4byte	0
 12884              	.LLST14:
 12885 02fe 04000000 		.4byte	.LVL35
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 299


 12886 0302 72000000 		.4byte	.LVL51
 12887 0306 0100     		.2byte	0x1
 12888 0308 56       		.byte	0x56
 12889 0309 00000000 		.4byte	0
 12890 030d 00000000 		.4byte	0
 12891              	.LLST15:
 12892 0311 44000000 		.4byte	.LVL43
 12893 0315 56000000 		.4byte	.LVL45
 12894 0319 0100     		.2byte	0x1
 12895 031b 57       		.byte	0x57
 12896 031c 5C000000 		.4byte	.LVL47
 12897 0320 5E000000 		.4byte	.LVL48
 12898 0324 0100     		.2byte	0x1
 12899 0326 57       		.byte	0x57
 12900 0327 00000000 		.4byte	0
 12901 032b 00000000 		.4byte	0
 12902              	.LLST16:
 12903 032f 00000000 		.4byte	.LVL52
 12904 0333 0A000000 		.4byte	.LVL54
 12905 0337 0100     		.2byte	0x1
 12906 0339 50       		.byte	0x50
 12907 033a 0A000000 		.4byte	.LVL54
 12908 033e 0C000000 		.4byte	.LVL55
 12909 0342 0100     		.2byte	0x1
 12910 0344 51       		.byte	0x51
 12911 0345 0C000000 		.4byte	.LVL55
 12912 0349 78000000 		.4byte	.LVL58
 12913 034d 0100     		.2byte	0x1
 12914 034f 54       		.byte	0x54
 12915 0350 78000000 		.4byte	.LVL58
 12916 0354 8E000000 		.4byte	.LVL59
 12917 0358 0400     		.2byte	0x4
 12918 035a 74       		.byte	0x74
 12919 035b FD7E     		.sleb128 -131
 12920 035d 9F       		.byte	0x9f
 12921 035e 8E000000 		.4byte	.LVL59
 12922 0362 A4000000 		.4byte	.LFE25
 12923 0366 0400     		.2byte	0x4
 12924 0368 F3       		.byte	0xf3
 12925 0369 01       		.uleb128 0x1
 12926 036a 50       		.byte	0x50
 12927 036b 9F       		.byte	0x9f
 12928 036c 00000000 		.4byte	0
 12929 0370 00000000 		.4byte	0
 12930              	.LLST17:
 12931 0374 00000000 		.4byte	.LVL52
 12932 0378 08000000 		.4byte	.LVL53
 12933 037c 0100     		.2byte	0x1
 12934 037e 51       		.byte	0x51
 12935 037f 08000000 		.4byte	.LVL53
 12936 0383 11000000 		.4byte	.LVL56-1
 12937 0387 0100     		.2byte	0x1
 12938 0389 52       		.byte	0x52
 12939 038a 11000000 		.4byte	.LVL56-1
 12940 038e A4000000 		.4byte	.LFE25
 12941 0392 0400     		.2byte	0x4
 12942 0394 F3       		.byte	0xf3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 300


 12943 0395 01       		.uleb128 0x1
 12944 0396 51       		.byte	0x51
 12945 0397 9F       		.byte	0x9f
 12946 0398 00000000 		.4byte	0
 12947 039c 00000000 		.4byte	0
 12948              	.LLST18:
 12949 03a0 60000000 		.4byte	.LVL57
 12950 03a4 8E000000 		.4byte	.LVL59
 12951 03a8 0400     		.2byte	0x4
 12952 03aa F3       		.byte	0xf3
 12953 03ab 01       		.uleb128 0x1
 12954 03ac 51       		.byte	0x51
 12955 03ad 9F       		.byte	0x9f
 12956 03ae 00000000 		.4byte	0
 12957 03b2 00000000 		.4byte	0
 12958              	.LLST19:
 12959 03b6 60000000 		.4byte	.LVL57
 12960 03ba 78000000 		.4byte	.LVL58
 12961 03be 0100     		.2byte	0x1
 12962 03c0 54       		.byte	0x54
 12963 03c1 78000000 		.4byte	.LVL58
 12964 03c5 8E000000 		.4byte	.LVL59
 12965 03c9 0400     		.2byte	0x4
 12966 03cb 74       		.byte	0x74
 12967 03cc FD7E     		.sleb128 -131
 12968 03ce 9F       		.byte	0x9f
 12969 03cf 00000000 		.4byte	0
 12970 03d3 00000000 		.4byte	0
 12971              	.LLST20:
 12972 03d7 00000000 		.4byte	.LVL60
 12973 03db 3A000000 		.4byte	.LVL70
 12974 03df 0100     		.2byte	0x1
 12975 03e1 50       		.byte	0x50
 12976 03e2 3A000000 		.4byte	.LVL70
 12977 03e6 80030000 		.4byte	.LFE26
 12978 03ea 0400     		.2byte	0x4
 12979 03ec F3       		.byte	0xf3
 12980 03ed 01       		.uleb128 0x1
 12981 03ee 50       		.byte	0x50
 12982 03ef 9F       		.byte	0x9f
 12983 03f0 00000000 		.4byte	0
 12984 03f4 00000000 		.4byte	0
 12985              	.LLST21:
 12986 03f8 00000000 		.4byte	.LVL60
 12987 03fc 3D000000 		.4byte	.LVL71-1
 12988 0400 0100     		.2byte	0x1
 12989 0402 51       		.byte	0x51
 12990 0403 3D000000 		.4byte	.LVL71-1
 12991 0407 80030000 		.4byte	.LFE26
 12992 040b 0400     		.2byte	0x4
 12993 040d F3       		.byte	0xf3
 12994 040e 01       		.uleb128 0x1
 12995 040f 51       		.byte	0x51
 12996 0410 9F       		.byte	0x9f
 12997 0411 00000000 		.4byte	0
 12998 0415 00000000 		.4byte	0
 12999              	.LLST22:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 301


 13000 0419 00000000 		.4byte	.LVL60
 13001 041d 3D000000 		.4byte	.LVL71-1
 13002 0421 0100     		.2byte	0x1
 13003 0423 52       		.byte	0x52
 13004 0424 3D000000 		.4byte	.LVL71-1
 13005 0428 80030000 		.4byte	.LFE26
 13006 042c 0400     		.2byte	0x4
 13007 042e F3       		.byte	0xf3
 13008 042f 01       		.uleb128 0x1
 13009 0430 52       		.byte	0x52
 13010 0431 9F       		.byte	0x9f
 13011 0432 00000000 		.4byte	0
 13012 0436 00000000 		.4byte	0
 13013              	.LLST23:
 13014 043a 76000000 		.4byte	.LVL76
 13015 043e 86000000 		.4byte	.LVL78
 13016 0442 0100     		.2byte	0x1
 13017 0444 50       		.byte	0x50
 13018 0445 8A000000 		.4byte	.LVL79
 13019 0449 AE000000 		.4byte	.LVL81
 13020 044d 0100     		.2byte	0x1
 13021 044f 50       		.byte	0x50
 13022 0450 B4000000 		.4byte	.LVL82
 13023 0454 50010000 		.4byte	.LVL92
 13024 0458 0100     		.2byte	0x1
 13025 045a 50       		.byte	0x50
 13026 045b B4010000 		.4byte	.LVL101
 13027 045f BC010000 		.4byte	.LVL102
 13028 0463 0200     		.2byte	0x2
 13029 0465 31       		.byte	0x31
 13030 0466 9F       		.byte	0x9f
 13031 0467 BC010000 		.4byte	.LVL102
 13032 046b C6010000 		.4byte	.LVL103
 13033 046f 0200     		.2byte	0x2
 13034 0471 32       		.byte	0x32
 13035 0472 9F       		.byte	0x9f
 13036 0473 C6010000 		.4byte	.LVL103
 13037 0477 DA010000 		.4byte	.LVL105
 13038 047b 0100     		.2byte	0x1
 13039 047d 55       		.byte	0x55
 13040 047e DA010000 		.4byte	.LVL105
 13041 0482 0A020000 		.4byte	.LVL107
 13042 0486 0200     		.2byte	0x2
 13043 0488 33       		.byte	0x33
 13044 0489 9F       		.byte	0x9f
 13045 048a 0A020000 		.4byte	.LVL107
 13046 048e 2A020000 		.4byte	.LVL111
 13047 0492 0100     		.2byte	0x1
 13048 0494 55       		.byte	0x55
 13049 0495 00000000 		.4byte	0
 13050 0499 00000000 		.4byte	0
 13051              	.LLST24:
 13052 049d 1C010000 		.4byte	.LVL89
 13053 04a1 2A010000 		.4byte	.LVL91
 13054 04a5 0100     		.2byte	0x1
 13055 04a7 52       		.byte	0x52
 13056 04a8 2A010000 		.4byte	.LVL91
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 302


 13057 04ac AD010000 		.4byte	.LVL100-1
 13058 04b0 0100     		.2byte	0x1
 13059 04b2 51       		.byte	0x51
 13060 04b3 00000000 		.4byte	0
 13061 04b7 00000000 		.4byte	0
 13062              	.LLST25:
 13063 04bb 7C000000 		.4byte	.LVL77
 13064 04bf 86000000 		.4byte	.LVL78
 13065 04c3 0200     		.2byte	0x2
 13066 04c5 30       		.byte	0x30
 13067 04c6 9F       		.byte	0x9f
 13068 04c7 8A000000 		.4byte	.LVL79
 13069 04cb B4000000 		.4byte	.LVL82
 13070 04cf 0200     		.2byte	0x2
 13071 04d1 30       		.byte	0x30
 13072 04d2 9F       		.byte	0x9f
 13073 04d3 00000000 		.4byte	0
 13074 04d7 00000000 		.4byte	0
 13075              	.LLST26:
 13076 04db 7C000000 		.4byte	.LVL77
 13077 04df 86000000 		.4byte	.LVL78
 13078 04e3 0400     		.2byte	0x4
 13079 04e5 74       		.byte	0x74
 13080 04e6 EE03     		.sleb128 494
 13081 04e8 9F       		.byte	0x9f
 13082 04e9 8A000000 		.4byte	.LVL79
 13083 04ed B4000000 		.4byte	.LVL82
 13084 04f1 0400     		.2byte	0x4
 13085 04f3 74       		.byte	0x74
 13086 04f4 EE03     		.sleb128 494
 13087 04f6 9F       		.byte	0x9f
 13088 04f7 00000000 		.4byte	0
 13089 04fb 00000000 		.4byte	0
 13090              	.LLST27:
 13091 04ff 0A000000 		.4byte	.LVL62
 13092 0503 0E000000 		.4byte	.LVL63
 13093 0507 0100     		.2byte	0x1
 13094 0509 54       		.byte	0x54
 13095 050a 1C000000 		.4byte	.LVL65
 13096 050e 30000000 		.4byte	.LVL69
 13097 0512 0100     		.2byte	0x1
 13098 0514 54       		.byte	0x54
 13099 0515 00000000 		.4byte	0
 13100 0519 00000000 		.4byte	0
 13101              	.LLST28:
 13102 051d 3E000000 		.4byte	.LVL71
 13103 0521 54000000 		.4byte	.LVL72
 13104 0525 0100     		.2byte	0x1
 13105 0527 50       		.byte	0x50
 13106 0528 5E000000 		.4byte	.LVL73
 13107 052c 70000000 		.4byte	.LVL75
 13108 0530 0100     		.2byte	0x1
 13109 0532 50       		.byte	0x50
 13110 0533 00000000 		.4byte	0
 13111 0537 00000000 		.4byte	0
 13112              	.LLST29:
 13113 053b 6E000000 		.4byte	.LVL74
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 303


 13114 053f 86000000 		.4byte	.LVL78
 13115 0543 0200     		.2byte	0x2
 13116 0545 30       		.byte	0x30
 13117 0546 9F       		.byte	0x9f
 13118 0547 8A000000 		.4byte	.LVL79
 13119 054b AC000000 		.4byte	.LVL80
 13120 054f 0200     		.2byte	0x2
 13121 0551 30       		.byte	0x30
 13122 0552 9F       		.byte	0x9f
 13123 0553 AC000000 		.4byte	.LVL80
 13124 0557 5A020000 		.4byte	.LVL114
 13125 055b 0100     		.2byte	0x1
 13126 055d 56       		.byte	0x56
 13127 055e 00000000 		.4byte	0
 13128 0562 00000000 		.4byte	0
 13129              	.LLST30:
 13130 0566 EA000000 		.4byte	.LVL83
 13131 056a EE000000 		.4byte	.LVL84
 13132 056e 0700     		.2byte	0x7
 13133 0570 73       		.byte	0x73
 13134 0571 00       		.sleb128 0
 13135 0572 0A       		.byte	0xa
 13136 0573 FFFF     		.2byte	0xffff
 13137 0575 1A       		.byte	0x1a
 13138 0576 9F       		.byte	0x9f
 13139 0577 EE000000 		.4byte	.LVL84
 13140 057b F0000000 		.4byte	.LVL85
 13141 057f 1200     		.2byte	0x12
 13142 0581 73       		.byte	0x73
 13143 0582 C700     		.sleb128 71
 13144 0584 94       		.byte	0x94
 13145 0585 01       		.byte	0x1
 13146 0586 08       		.byte	0x8
 13147 0587 FF       		.byte	0xff
 13148 0588 1A       		.byte	0x1a
 13149 0589 38       		.byte	0x38
 13150 058a 24       		.byte	0x24
 13151 058b 72       		.byte	0x72
 13152 058c 00       		.sleb128 0
 13153 058d 21       		.byte	0x21
 13154 058e 0A       		.byte	0xa
 13155 058f FFFF     		.2byte	0xffff
 13156 0591 1A       		.byte	0x1a
 13157 0592 9F       		.byte	0x9f
 13158 0593 F0000000 		.4byte	.LVL85
 13159 0597 F4000000 		.4byte	.LVL86
 13160 059b 1200     		.2byte	0x12
 13161 059d 74       		.byte	0x74
 13162 059e C700     		.sleb128 71
 13163 05a0 94       		.byte	0x94
 13164 05a1 01       		.byte	0x1
 13165 05a2 08       		.byte	0x8
 13166 05a3 FF       		.byte	0xff
 13167 05a4 1A       		.byte	0x1a
 13168 05a5 38       		.byte	0x38
 13169 05a6 24       		.byte	0x24
 13170 05a7 72       		.byte	0x72
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 304


 13171 05a8 00       		.sleb128 0
 13172 05a9 21       		.byte	0x21
 13173 05aa 0A       		.byte	0xa
 13174 05ab FFFF     		.2byte	0xffff
 13175 05ad 1A       		.byte	0x1a
 13176 05ae 9F       		.byte	0x9f
 13177 05af F4000000 		.4byte	.LVL86
 13178 05b3 12010000 		.4byte	.LVL87
 13179 05b7 1400     		.2byte	0x14
 13180 05b9 74       		.byte	0x74
 13181 05ba C700     		.sleb128 71
 13182 05bc 94       		.byte	0x94
 13183 05bd 01       		.byte	0x1
 13184 05be 08       		.byte	0x8
 13185 05bf FF       		.byte	0xff
 13186 05c0 1A       		.byte	0x1a
 13187 05c1 38       		.byte	0x38
 13188 05c2 24       		.byte	0x24
 13189 05c3 74       		.byte	0x74
 13190 05c4 C600     		.sleb128 70
 13191 05c6 94       		.byte	0x94
 13192 05c7 01       		.byte	0x1
 13193 05c8 08       		.byte	0x8
 13194 05c9 FF       		.byte	0xff
 13195 05ca 1A       		.byte	0x1a
 13196 05cb 21       		.byte	0x21
 13197 05cc 9F       		.byte	0x9f
 13198 05cd 12010000 		.4byte	.LVL87
 13199 05d1 18010000 		.4byte	.LVL88
 13200 05d5 0100     		.2byte	0x1
 13201 05d7 53       		.byte	0x53
 13202 05d8 18010000 		.4byte	.LVL88
 13203 05dc 24010000 		.4byte	.LVL90
 13204 05e0 0200     		.2byte	0x2
 13205 05e2 7D       		.byte	0x7d
 13206 05e3 00       		.sleb128 0
 13207 05e4 24010000 		.4byte	.LVL90
 13208 05e8 9A010000 		.4byte	.LVL97
 13209 05ec 0A00     		.2byte	0xa
 13210 05ee 72       		.byte	0x72
 13211 05ef 00       		.sleb128 0
 13212 05f0 08       		.byte	0x8
 13213 05f1 FF       		.byte	0xff
 13214 05f2 1A       		.byte	0x1a
 13215 05f3 7D       		.byte	0x7d
 13216 05f4 00       		.sleb128 0
 13217 05f5 06       		.byte	0x6
 13218 05f6 1E       		.byte	0x1e
 13219 05f7 9F       		.byte	0x9f
 13220 05f8 9A010000 		.4byte	.LVL97
 13221 05fc AD010000 		.4byte	.LVL100-1
 13222 0600 0C00     		.2byte	0xc
 13223 0602 74       		.byte	0x74
 13224 0603 03       		.sleb128 3
 13225 0604 94       		.byte	0x94
 13226 0605 01       		.byte	0x1
 13227 0606 08       		.byte	0x8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 305


 13228 0607 FF       		.byte	0xff
 13229 0608 1A       		.byte	0x1a
 13230 0609 7D       		.byte	0x7d
 13231 060a 00       		.sleb128 0
 13232 060b 06       		.byte	0x6
 13233 060c 1E       		.byte	0x1e
 13234 060d 9F       		.byte	0x9f
 13235 060e 00000000 		.4byte	0
 13236 0612 00000000 		.4byte	0
 13237              	.LLST31:
 13238 0616 58010000 		.4byte	.LVL93
 13239 061a 60010000 		.4byte	.LVL94
 13240 061e 0100     		.2byte	0x1
 13241 0620 50       		.byte	0x50
 13242 0621 60010000 		.4byte	.LVL94
 13243 0625 7C010000 		.4byte	.LVL95
 13244 0629 1400     		.2byte	0x14
 13245 062b 74       		.byte	0x74
 13246 062c C400     		.sleb128 68
 13247 062e 94       		.byte	0x94
 13248 062f 01       		.byte	0x1
 13249 0630 08       		.byte	0x8
 13250 0631 FF       		.byte	0xff
 13251 0632 1A       		.byte	0x1a
 13252 0633 38       		.byte	0x38
 13253 0634 24       		.byte	0x24
 13254 0635 74       		.byte	0x74
 13255 0636 C300     		.sleb128 67
 13256 0638 94       		.byte	0x94
 13257 0639 01       		.byte	0x1
 13258 063a 08       		.byte	0x8
 13259 063b FF       		.byte	0xff
 13260 063c 1A       		.byte	0x1a
 13261 063d 21       		.byte	0x21
 13262 063e 9F       		.byte	0x9f
 13263 063f 7C010000 		.4byte	.LVL95
 13264 0643 AA010000 		.4byte	.LVL99
 13265 0647 0100     		.2byte	0x1
 13266 0649 50       		.byte	0x50
 13267 064a 00000000 		.4byte	0
 13268 064e 00000000 		.4byte	0
 13269              	.LLST32:
 13270 0652 A2010000 		.4byte	.LVL98
 13271 0656 AD010000 		.4byte	.LVL100-1
 13272 065a 0100     		.2byte	0x1
 13273 065c 53       		.byte	0x53
 13274 065d AD010000 		.4byte	.LVL100-1
 13275 0661 30030000 		.4byte	.LVL117
 13276 0665 0200     		.2byte	0x2
 13277 0667 91       		.byte	0x91
 13278 0668 60       		.sleb128 -32
 13279 0669 00000000 		.4byte	0
 13280 066d 00000000 		.4byte	0
 13281              	.LLST33:
 13282 0671 AE010000 		.4byte	.LVL100
 13283 0675 CA010000 		.4byte	.LVL104
 13284 0679 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 306


 13285 067b 50       		.byte	0x50
 13286 067c CA010000 		.4byte	.LVL104
 13287 0680 E8010000 		.4byte	.LVL106
 13288 0684 0300     		.2byte	0x3
 13289 0686 70       		.byte	0x70
 13290 0687 7E       		.sleb128 -2
 13291 0688 9F       		.byte	0x9f
 13292 0689 E8010000 		.4byte	.LVL106
 13293 068d 0A020000 		.4byte	.LVL107
 13294 0691 0600     		.2byte	0x6
 13295 0693 74       		.byte	0x74
 13296 0694 18       		.sleb128 24
 13297 0695 06       		.byte	0x6
 13298 0696 32       		.byte	0x32
 13299 0697 1C       		.byte	0x1c
 13300 0698 9F       		.byte	0x9f
 13301 0699 0A020000 		.4byte	.LVL107
 13302 069d 1C020000 		.4byte	.LVL108
 13303 06a1 0300     		.2byte	0x3
 13304 06a3 70       		.byte	0x70
 13305 06a4 7E       		.sleb128 -2
 13306 06a5 9F       		.byte	0x9f
 13307 06a6 1C020000 		.4byte	.LVL108
 13308 06aa 1E020000 		.4byte	.LVL109
 13309 06ae 0600     		.2byte	0x6
 13310 06b0 74       		.byte	0x74
 13311 06b1 18       		.sleb128 24
 13312 06b2 06       		.byte	0x6
 13313 06b3 32       		.byte	0x32
 13314 06b4 1C       		.byte	0x1c
 13315 06b5 9F       		.byte	0x9f
 13316 06b6 1E020000 		.4byte	.LVL109
 13317 06ba 26020000 		.4byte	.LVL110
 13318 06be 0300     		.2byte	0x3
 13319 06c0 70       		.byte	0x70
 13320 06c1 7E       		.sleb128 -2
 13321 06c2 9F       		.byte	0x9f
 13322 06c3 26020000 		.4byte	.LVL110
 13323 06c7 67020000 		.4byte	.LVL115-1
 13324 06cb 0600     		.2byte	0x6
 13325 06cd 74       		.byte	0x74
 13326 06ce 18       		.sleb128 24
 13327 06cf 06       		.byte	0x6
 13328 06d0 32       		.byte	0x32
 13329 06d1 1C       		.byte	0x1c
 13330 06d2 9F       		.byte	0x9f
 13331 06d3 00000000 		.4byte	0
 13332 06d7 00000000 		.4byte	0
 13333              	.LLST34:
 13334 06db E8010000 		.4byte	.LVL106
 13335 06df 0A020000 		.4byte	.LVL107
 13336 06e3 0100     		.2byte	0x1
 13337 06e5 50       		.byte	0x50
 13338 06e6 2A020000 		.4byte	.LVL111
 13339 06ea 2E020000 		.4byte	.LVL112
 13340 06ee 0100     		.2byte	0x1
 13341 06f0 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 307


 13342 06f1 2E020000 		.4byte	.LVL112
 13343 06f5 32020000 		.4byte	.LVL113
 13344 06f9 0400     		.2byte	0x4
 13345 06fb 70       		.byte	0x70
 13346 06fc 817C     		.sleb128 -511
 13347 06fe 9F       		.byte	0x9f
 13348 06ff 00000000 		.4byte	0
 13349 0703 00000000 		.4byte	0
 13350              	.LLST35:
 13351 0707 8E010000 		.4byte	.LVL96
 13352 070b 30030000 		.4byte	.LVL117
 13353 070f 0200     		.2byte	0x2
 13354 0711 91       		.byte	0x91
 13355 0712 5C       		.sleb128 -36
 13356 0713 00000000 		.4byte	0
 13357 0717 00000000 		.4byte	0
 13358              	.LLST36:
 13359 071b 04000000 		.4byte	.LVL61
 13360 071f 0E000000 		.4byte	.LVL63
 13361 0723 0100     		.2byte	0x1
 13362 0725 53       		.byte	0x53
 13363 0726 1C000000 		.4byte	.LVL65
 13364 072a 22000000 		.4byte	.LVL66
 13365 072e 0100     		.2byte	0x1
 13366 0730 53       		.byte	0x53
 13367 0731 22000000 		.4byte	.LVL66
 13368 0735 24000000 		.4byte	.LVL67
 13369 0739 0300     		.2byte	0x3
 13370 073b 73       		.byte	0x73
 13371 073c 02       		.sleb128 2
 13372 073d 9F       		.byte	0x9f
 13373 073e 24000000 		.4byte	.LVL67
 13374 0742 28000000 		.4byte	.LVL68
 13375 0746 0100     		.2byte	0x1
 13376 0748 53       		.byte	0x53
 13377 0749 28000000 		.4byte	.LVL68
 13378 074d 30000000 		.4byte	.LVL69
 13379 0751 0200     		.2byte	0x2
 13380 0753 70       		.byte	0x70
 13381 0754 00       		.sleb128 0
 13382 0755 00000000 		.4byte	0
 13383 0759 00000000 		.4byte	0
 13384              	.LLST37:
 13385 075d 12000000 		.4byte	.LVL64
 13386 0761 1C000000 		.4byte	.LVL65
 13387 0765 0100     		.2byte	0x1
 13388 0767 54       		.byte	0x54
 13389 0768 30000000 		.4byte	.LVL69
 13390 076c 30030000 		.4byte	.LVL117
 13391 0770 0100     		.2byte	0x1
 13392 0772 54       		.byte	0x54
 13393 0773 00000000 		.4byte	0
 13394 0777 00000000 		.4byte	0
 13395              	.LLST38:
 13396 077b 1E030000 		.4byte	.LVL116
 13397 077f 30030000 		.4byte	.LVL117
 13398 0783 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 308


 13399 0785 54       		.byte	0x54
 13400 0786 00000000 		.4byte	0
 13401 078a 00000000 		.4byte	0
 13402              	.LLST39:
 13403 078e 00000000 		.4byte	.LVL118
 13404 0792 16000000 		.4byte	.LVL120
 13405 0796 0100     		.2byte	0x1
 13406 0798 50       		.byte	0x50
 13407 0799 16000000 		.4byte	.LVL120
 13408 079d 26000000 		.4byte	.LFE27
 13409 07a1 0400     		.2byte	0x4
 13410 07a3 F3       		.byte	0xf3
 13411 07a4 01       		.uleb128 0x1
 13412 07a5 50       		.byte	0x50
 13413 07a6 9F       		.byte	0x9f
 13414 07a7 00000000 		.4byte	0
 13415 07ab 00000000 		.4byte	0
 13416              	.LLST40:
 13417 07af 00000000 		.4byte	.LVL118
 13418 07b3 19000000 		.4byte	.LVL121-1
 13419 07b7 0100     		.2byte	0x1
 13420 07b9 51       		.byte	0x51
 13421 07ba 19000000 		.4byte	.LVL121-1
 13422 07be 26000000 		.4byte	.LFE27
 13423 07c2 0400     		.2byte	0x4
 13424 07c4 F3       		.byte	0xf3
 13425 07c5 01       		.uleb128 0x1
 13426 07c6 51       		.byte	0x51
 13427 07c7 9F       		.byte	0x9f
 13428 07c8 00000000 		.4byte	0
 13429 07cc 00000000 		.4byte	0
 13430              	.LLST41:
 13431 07d0 14000000 		.4byte	.LVL119
 13432 07d4 16000000 		.4byte	.LVL120
 13433 07d8 0200     		.2byte	0x2
 13434 07da 70       		.byte	0x70
 13435 07db 06       		.sleb128 6
 13436 07dc 16000000 		.4byte	.LVL120
 13437 07e0 19000000 		.4byte	.LVL121-1
 13438 07e4 0100     		.2byte	0x1
 13439 07e6 52       		.byte	0x52
 13440 07e7 00000000 		.4byte	0
 13441 07eb 00000000 		.4byte	0
 13442              	.LLST42:
 13443 07ef 14000000 		.4byte	.LVL119
 13444 07f3 16000000 		.4byte	.LVL120
 13445 07f7 0100     		.2byte	0x1
 13446 07f9 50       		.byte	0x50
 13447 07fa 16000000 		.4byte	.LVL120
 13448 07fe 22000000 		.4byte	.LVL122
 13449 0802 0400     		.2byte	0x4
 13450 0804 F3       		.byte	0xf3
 13451 0805 01       		.uleb128 0x1
 13452 0806 50       		.byte	0x50
 13453 0807 9F       		.byte	0x9f
 13454 0808 00000000 		.4byte	0
 13455 080c 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 309


 13456              	.LLST43:
 13457 0810 00000000 		.4byte	.LVL123
 13458 0814 09000000 		.4byte	.LVL124-1
 13459 0818 0100     		.2byte	0x1
 13460 081a 50       		.byte	0x50
 13461 081b 09000000 		.4byte	.LVL124-1
 13462 081f BC000000 		.4byte	.LVL137
 13463 0823 0100     		.2byte	0x1
 13464 0825 54       		.byte	0x54
 13465 0826 BC000000 		.4byte	.LVL137
 13466 082a EC000000 		.4byte	.LFE10
 13467 082e 0400     		.2byte	0x4
 13468 0830 F3       		.byte	0xf3
 13469 0831 01       		.uleb128 0x1
 13470 0832 50       		.byte	0x50
 13471 0833 9F       		.byte	0x9f
 13472 0834 00000000 		.4byte	0
 13473 0838 00000000 		.4byte	0
 13474              	.LLST44:
 13475 083c 0C000000 		.4byte	.LVL125
 13476 0840 24000000 		.4byte	.LVL127
 13477 0844 0100     		.2byte	0x1
 13478 0846 53       		.byte	0x53
 13479 0847 BC000000 		.4byte	.LVL136
 13480 084b EC000000 		.4byte	.LFE10
 13481 084f 0100     		.2byte	0x1
 13482 0851 50       		.byte	0x50
 13483 0852 00000000 		.4byte	0
 13484 0856 00000000 		.4byte	0
 13485              	.LLST45:
 13486 085a 20000000 		.4byte	.LVL126
 13487 085e 28000000 		.4byte	.LVL128
 13488 0862 0400     		.2byte	0x4
 13489 0864 0A       		.byte	0xa
 13490 0865 0002     		.2byte	0x200
 13491 0867 9F       		.byte	0x9f
 13492 0868 28000000 		.4byte	.LVL128
 13493 086c 32000000 		.4byte	.LVL130
 13494 0870 0900     		.2byte	0x9
 13495 0872 71       		.byte	0x71
 13496 0873 00       		.sleb128 0
 13497 0874 73       		.byte	0x73
 13498 0875 00       		.sleb128 0
 13499 0876 1C       		.byte	0x1c
 13500 0877 23       		.byte	0x23
 13501 0878 FF03     		.uleb128 0x1ff
 13502 087a 9F       		.byte	0x9f
 13503 087b 32000000 		.4byte	.LVL130
 13504 087f 34000000 		.4byte	.LVL131
 13505 0883 0900     		.2byte	0x9
 13506 0885 71       		.byte	0x71
 13507 0886 00       		.sleb128 0
 13508 0887 73       		.byte	0x73
 13509 0888 00       		.sleb128 0
 13510 0889 1C       		.byte	0x1c
 13511 088a 23       		.byte	0x23
 13512 088b 8004     		.uleb128 0x200
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 310


 13513 088d 9F       		.byte	0x9f
 13514 088e 34000000 		.4byte	.LVL131
 13515 0892 38000000 		.4byte	.LVL132
 13516 0896 0900     		.2byte	0x9
 13517 0898 71       		.byte	0x71
 13518 0899 00       		.sleb128 0
 13519 089a 73       		.byte	0x73
 13520 089b 00       		.sleb128 0
 13521 089c 1C       		.byte	0x1c
 13522 089d 23       		.byte	0x23
 13523 089e FF03     		.uleb128 0x1ff
 13524 08a0 9F       		.byte	0x9f
 13525 08a1 00000000 		.4byte	0
 13526 08a5 00000000 		.4byte	0
 13527              	.LLST46:
 13528 08a9 20000000 		.4byte	.LVL126
 13529 08ad AC000000 		.4byte	.LVL134
 13530 08b1 0200     		.2byte	0x2
 13531 08b3 30       		.byte	0x30
 13532 08b4 9F       		.byte	0x9f
 13533 08b5 00000000 		.4byte	0
 13534 08b9 00000000 		.4byte	0
 13535              	.LLST47:
 13536 08bd 20000000 		.4byte	.LVL126
 13537 08c1 A7000000 		.4byte	.LVL133-1
 13538 08c5 0100     		.2byte	0x1
 13539 08c7 51       		.byte	0x51
 13540 08c8 A7000000 		.4byte	.LVL133-1
 13541 08cc AC000000 		.4byte	.LVL134
 13542 08d0 0300     		.2byte	0x3
 13543 08d2 74       		.byte	0x74
 13544 08d3 30       		.sleb128 48
 13545 08d4 9F       		.byte	0x9f
 13546 08d5 00000000 		.4byte	0
 13547 08d9 00000000 		.4byte	0
 13548              	.LLST48:
 13549 08dd 20000000 		.4byte	.LVL126
 13550 08e1 28000000 		.4byte	.LVL128
 13551 08e5 0100     		.2byte	0x1
 13552 08e7 51       		.byte	0x51
 13553 08e8 28000000 		.4byte	.LVL128
 13554 08ec 2C000000 		.4byte	.LVL129
 13555 08f0 0100     		.2byte	0x1
 13556 08f2 53       		.byte	0x53
 13557 08f3 2C000000 		.4byte	.LVL129
 13558 08f7 32000000 		.4byte	.LVL130
 13559 08fb 0300     		.2byte	0x3
 13560 08fd 73       		.byte	0x73
 13561 08fe 01       		.sleb128 1
 13562 08ff 9F       		.byte	0x9f
 13563 0900 32000000 		.4byte	.LVL130
 13564 0904 38000000 		.4byte	.LVL132
 13565 0908 0100     		.2byte	0x1
 13566 090a 53       		.byte	0x53
 13567 090b 00000000 		.4byte	0
 13568 090f 00000000 		.4byte	0
 13569              	.LLST49:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 311


 13570 0913 00000000 		.4byte	.LVL138
 13571 0917 16000000 		.4byte	.LVL141
 13572 091b 0100     		.2byte	0x1
 13573 091d 50       		.byte	0x50
 13574 091e 16000000 		.4byte	.LVL141
 13575 0922 18000000 		.4byte	.LFE11
 13576 0926 0400     		.2byte	0x4
 13577 0928 F3       		.byte	0xf3
 13578 0929 01       		.uleb128 0x1
 13579 092a 50       		.byte	0x50
 13580 092b 9F       		.byte	0x9f
 13581 092c 00000000 		.4byte	0
 13582 0930 00000000 		.4byte	0
 13583              	.LLST50:
 13584 0934 00000000 		.4byte	.LVL138
 13585 0938 04000000 		.4byte	.LVL139
 13586 093c 0100     		.2byte	0x1
 13587 093e 51       		.byte	0x51
 13588 093f 04000000 		.4byte	.LVL139
 13589 0943 12000000 		.4byte	.LVL140
 13590 0947 0100     		.2byte	0x1
 13591 0949 51       		.byte	0x51
 13592 094a 12000000 		.4byte	.LVL140
 13593 094e 18000000 		.4byte	.LFE11
 13594 0952 0600     		.2byte	0x6
 13595 0954 F3       		.byte	0xf3
 13596 0955 01       		.uleb128 0x1
 13597 0956 51       		.byte	0x51
 13598 0957 32       		.byte	0x32
 13599 0958 1C       		.byte	0x1c
 13600 0959 9F       		.byte	0x9f
 13601 095a 00000000 		.4byte	0
 13602 095e 00000000 		.4byte	0
 13603              	.LLST51:
 13604 0962 00000000 		.4byte	.LVL142
 13605 0966 2D000000 		.4byte	.LVL147-1
 13606 096a 0100     		.2byte	0x1
 13607 096c 50       		.byte	0x50
 13608 096d 2D000000 		.4byte	.LVL147-1
 13609 0971 56000000 		.4byte	.LVL152
 13610 0975 0100     		.2byte	0x1
 13611 0977 55       		.byte	0x55
 13612 0978 56000000 		.4byte	.LVL152
 13613 097c 6E000000 		.4byte	.LVL154
 13614 0980 0400     		.2byte	0x4
 13615 0982 F3       		.byte	0xf3
 13616 0983 01       		.uleb128 0x1
 13617 0984 50       		.byte	0x50
 13618 0985 9F       		.byte	0x9f
 13619 0986 6E000000 		.4byte	.LVL154
 13620 098a 77000000 		.4byte	.LVL156-1
 13621 098e 0100     		.2byte	0x1
 13622 0990 50       		.byte	0x50
 13623 0991 77000000 		.4byte	.LVL156-1
 13624 0995 8A000000 		.4byte	.LVL160
 13625 0999 0100     		.2byte	0x1
 13626 099b 55       		.byte	0x55
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 312


 13627 099c 8A000000 		.4byte	.LVL160
 13628 09a0 96000000 		.4byte	.LVL163
 13629 09a4 0400     		.2byte	0x4
 13630 09a6 F3       		.byte	0xf3
 13631 09a7 01       		.uleb128 0x1
 13632 09a8 50       		.byte	0x50
 13633 09a9 9F       		.byte	0x9f
 13634 09aa 96000000 		.4byte	.LVL163
 13635 09ae 9F000000 		.4byte	.LVL165-1
 13636 09b2 0100     		.2byte	0x1
 13637 09b4 50       		.byte	0x50
 13638 09b5 9F000000 		.4byte	.LVL165-1
 13639 09b9 D4000000 		.4byte	.LVL169
 13640 09bd 0100     		.2byte	0x1
 13641 09bf 55       		.byte	0x55
 13642 09c0 D4000000 		.4byte	.LVL169
 13643 09c4 D8000000 		.4byte	.LFE12
 13644 09c8 0400     		.2byte	0x4
 13645 09ca F3       		.byte	0xf3
 13646 09cb 01       		.uleb128 0x1
 13647 09cc 50       		.byte	0x50
 13648 09cd 9F       		.byte	0x9f
 13649 09ce 00000000 		.4byte	0
 13650 09d2 00000000 		.4byte	0
 13651              	.LLST52:
 13652 09d6 00000000 		.4byte	.LVL142
 13653 09da 28000000 		.4byte	.LVL146
 13654 09de 0100     		.2byte	0x1
 13655 09e0 51       		.byte	0x51
 13656 09e1 28000000 		.4byte	.LVL146
 13657 09e5 6E000000 		.4byte	.LVL154
 13658 09e9 0100     		.2byte	0x1
 13659 09eb 57       		.byte	0x57
 13660 09ec 6E000000 		.4byte	.LVL154
 13661 09f0 72000000 		.4byte	.LVL155
 13662 09f4 0100     		.2byte	0x1
 13663 09f6 51       		.byte	0x51
 13664 09f7 72000000 		.4byte	.LVL155
 13665 09fb 80000000 		.4byte	.LVL157
 13666 09ff 0100     		.2byte	0x1
 13667 0a01 57       		.byte	0x57
 13668 0a02 80000000 		.4byte	.LVL157
 13669 0a06 96000000 		.4byte	.LVL163
 13670 0a0a 0400     		.2byte	0x4
 13671 0a0c F3       		.byte	0xf3
 13672 0a0d 01       		.uleb128 0x1
 13673 0a0e 51       		.byte	0x51
 13674 0a0f 9F       		.byte	0x9f
 13675 0a10 96000000 		.4byte	.LVL163
 13676 0a14 9A000000 		.4byte	.LVL164
 13677 0a18 0100     		.2byte	0x1
 13678 0a1a 51       		.byte	0x51
 13679 0a1b 9A000000 		.4byte	.LVL164
 13680 0a1f A8000000 		.4byte	.LVL166
 13681 0a23 0100     		.2byte	0x1
 13682 0a25 57       		.byte	0x57
 13683 0a26 A8000000 		.4byte	.LVL166
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 313


 13684 0a2a D0000000 		.4byte	.LVL168
 13685 0a2e 0400     		.2byte	0x4
 13686 0a30 F3       		.byte	0xf3
 13687 0a31 01       		.uleb128 0x1
 13688 0a32 51       		.byte	0x51
 13689 0a33 9F       		.byte	0x9f
 13690 0a34 D0000000 		.4byte	.LVL168
 13691 0a38 D4000000 		.4byte	.LVL169
 13692 0a3c 0100     		.2byte	0x1
 13693 0a3e 57       		.byte	0x57
 13694 0a3f D4000000 		.4byte	.LVL169
 13695 0a43 D8000000 		.4byte	.LFE12
 13696 0a47 0400     		.2byte	0x4
 13697 0a49 F3       		.byte	0xf3
 13698 0a4a 01       		.uleb128 0x1
 13699 0a4b 51       		.byte	0x51
 13700 0a4c 9F       		.byte	0x9f
 13701 0a4d 00000000 		.4byte	0
 13702 0a51 00000000 		.4byte	0
 13703              	.LLST53:
 13704 0a55 14000000 		.4byte	.LVL143
 13705 0a59 28000000 		.4byte	.LVL146
 13706 0a5d 0100     		.2byte	0x1
 13707 0a5f 51       		.byte	0x51
 13708 0a60 28000000 		.4byte	.LVL146
 13709 0a64 6E000000 		.4byte	.LVL154
 13710 0a68 0100     		.2byte	0x1
 13711 0a6a 57       		.byte	0x57
 13712 0a6b 6E000000 		.4byte	.LVL154
 13713 0a6f 72000000 		.4byte	.LVL155
 13714 0a73 0100     		.2byte	0x1
 13715 0a75 51       		.byte	0x51
 13716 0a76 72000000 		.4byte	.LVL155
 13717 0a7a 80000000 		.4byte	.LVL157
 13718 0a7e 0100     		.2byte	0x1
 13719 0a80 57       		.byte	0x57
 13720 0a81 80000000 		.4byte	.LVL157
 13721 0a85 96000000 		.4byte	.LVL163
 13722 0a89 0400     		.2byte	0x4
 13723 0a8b F3       		.byte	0xf3
 13724 0a8c 01       		.uleb128 0x1
 13725 0a8d 51       		.byte	0x51
 13726 0a8e 9F       		.byte	0x9f
 13727 0a8f 96000000 		.4byte	.LVL163
 13728 0a93 9A000000 		.4byte	.LVL164
 13729 0a97 0100     		.2byte	0x1
 13730 0a99 51       		.byte	0x51
 13731 0a9a 9A000000 		.4byte	.LVL164
 13732 0a9e A8000000 		.4byte	.LVL166
 13733 0aa2 0100     		.2byte	0x1
 13734 0aa4 57       		.byte	0x57
 13735 0aa5 A8000000 		.4byte	.LVL166
 13736 0aa9 D0000000 		.4byte	.LVL168
 13737 0aad 0400     		.2byte	0x4
 13738 0aaf F3       		.byte	0xf3
 13739 0ab0 01       		.uleb128 0x1
 13740 0ab1 51       		.byte	0x51
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 314


 13741 0ab2 9F       		.byte	0x9f
 13742 0ab3 D0000000 		.4byte	.LVL168
 13743 0ab7 D4000000 		.4byte	.LVL169
 13744 0abb 0100     		.2byte	0x1
 13745 0abd 57       		.byte	0x57
 13746 0abe 00000000 		.4byte	0
 13747 0ac2 00000000 		.4byte	0
 13748              	.LLST54:
 13749 0ac6 14000000 		.4byte	.LVL143
 13750 0aca 2D000000 		.4byte	.LVL147-1
 13751 0ace 0100     		.2byte	0x1
 13752 0ad0 50       		.byte	0x50
 13753 0ad1 2D000000 		.4byte	.LVL147-1
 13754 0ad5 56000000 		.4byte	.LVL152
 13755 0ad9 0100     		.2byte	0x1
 13756 0adb 55       		.byte	0x55
 13757 0adc 56000000 		.4byte	.LVL152
 13758 0ae0 6E000000 		.4byte	.LVL154
 13759 0ae4 0400     		.2byte	0x4
 13760 0ae6 F3       		.byte	0xf3
 13761 0ae7 01       		.uleb128 0x1
 13762 0ae8 50       		.byte	0x50
 13763 0ae9 9F       		.byte	0x9f
 13764 0aea 6E000000 		.4byte	.LVL154
 13765 0aee 77000000 		.4byte	.LVL156-1
 13766 0af2 0100     		.2byte	0x1
 13767 0af4 50       		.byte	0x50
 13768 0af5 77000000 		.4byte	.LVL156-1
 13769 0af9 8A000000 		.4byte	.LVL160
 13770 0afd 0100     		.2byte	0x1
 13771 0aff 55       		.byte	0x55
 13772 0b00 8A000000 		.4byte	.LVL160
 13773 0b04 96000000 		.4byte	.LVL163
 13774 0b08 0400     		.2byte	0x4
 13775 0b0a F3       		.byte	0xf3
 13776 0b0b 01       		.uleb128 0x1
 13777 0b0c 50       		.byte	0x50
 13778 0b0d 9F       		.byte	0x9f
 13779 0b0e 96000000 		.4byte	.LVL163
 13780 0b12 9F000000 		.4byte	.LVL165-1
 13781 0b16 0100     		.2byte	0x1
 13782 0b18 50       		.byte	0x50
 13783 0b19 9F000000 		.4byte	.LVL165-1
 13784 0b1d D4000000 		.4byte	.LVL169
 13785 0b21 0100     		.2byte	0x1
 13786 0b23 55       		.byte	0x55
 13787 0b24 00000000 		.4byte	0
 13788 0b28 00000000 		.4byte	0
 13789              	.LLST55:
 13790 0b2c 40000000 		.4byte	.LVL149
 13791 0b30 60000000 		.4byte	.LVL153
 13792 0b34 0800     		.2byte	0x8
 13793 0b36 91       		.byte	0x91
 13794 0b37 64       		.sleb128 -28
 13795 0b38 94       		.byte	0x94
 13796 0b39 01       		.byte	0x1
 13797 0b3a 08       		.byte	0x8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 315


 13798 0b3b FF       		.byte	0xff
 13799 0b3c 1A       		.byte	0x1a
 13800 0b3d 9F       		.byte	0x9f
 13801 0b3e 60000000 		.4byte	.LVL153
 13802 0b42 6E000000 		.4byte	.LVL154
 13803 0b46 0100     		.2byte	0x1
 13804 0b48 53       		.byte	0x53
 13805 0b49 00000000 		.4byte	0
 13806 0b4d 00000000 		.4byte	0
 13807              	.LLST56:
 13808 0b51 20000000 		.4byte	.LVL144
 13809 0b55 24000000 		.4byte	.LVL145
 13810 0b59 0100     		.2byte	0x1
 13811 0b5b 51       		.byte	0x51
 13812 0b5c 24000000 		.4byte	.LVL145
 13813 0b60 3E000000 		.4byte	.LVL148
 13814 0b64 0100     		.2byte	0x1
 13815 0b66 56       		.byte	0x56
 13816 0b67 3E000000 		.4byte	.LVL148
 13817 0b6b 40000000 		.4byte	.LVL149
 13818 0b6f 0300     		.2byte	0x3
 13819 0b71 76       		.byte	0x76
 13820 0b72 7F       		.sleb128 -1
 13821 0b73 9F       		.byte	0x9f
 13822 0b74 40000000 		.4byte	.LVL149
 13823 0b78 52000000 		.4byte	.LVL151
 13824 0b7c 0100     		.2byte	0x1
 13825 0b7e 56       		.byte	0x56
 13826 0b7f 52000000 		.4byte	.LVL151
 13827 0b83 6E000000 		.4byte	.LVL154
 13828 0b87 0A00     		.2byte	0xa
 13829 0b89 77       		.byte	0x77
 13830 0b8a 00       		.sleb128 0
 13831 0b8b 31       		.byte	0x31
 13832 0b8c 25       		.byte	0x25
 13833 0b8d 77       		.byte	0x77
 13834 0b8e 00       		.sleb128 0
 13835 0b8f 22       		.byte	0x22
 13836 0b90 23       		.byte	0x23
 13837 0b91 01       		.uleb128 0x1
 13838 0b92 9F       		.byte	0x9f
 13839 0b93 00000000 		.4byte	0
 13840 0b97 00000000 		.4byte	0
 13841              	.LLST57:
 13842 0b9b 84000000 		.4byte	.LVL158
 13843 0b9f 88000000 		.4byte	.LVL159
 13844 0ba3 0800     		.2byte	0x8
 13845 0ba5 75       		.byte	0x75
 13846 0ba6 00       		.sleb128 0
 13847 0ba7 77       		.byte	0x77
 13848 0ba8 00       		.sleb128 0
 13849 0ba9 22       		.byte	0x22
 13850 0baa 23       		.byte	0x23
 13851 0bab 30       		.uleb128 0x30
 13852 0bac 9F       		.byte	0x9f
 13853 0bad 88000000 		.4byte	.LVL159
 13854 0bb1 8A000000 		.4byte	.LVL160
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 316


 13855 0bb5 0600     		.2byte	0x6
 13856 0bb7 75       		.byte	0x75
 13857 0bb8 00       		.sleb128 0
 13858 0bb9 77       		.byte	0x77
 13859 0bba 00       		.sleb128 0
 13860 0bbb 22       		.byte	0x22
 13861 0bbc 9F       		.byte	0x9f
 13862 0bbd 8A000000 		.4byte	.LVL160
 13863 0bc1 8C000000 		.4byte	.LVL161
 13864 0bc5 0700     		.2byte	0x7
 13865 0bc7 77       		.byte	0x77
 13866 0bc8 00       		.sleb128 0
 13867 0bc9 F3       		.byte	0xf3
 13868 0bca 01       		.uleb128 0x1
 13869 0bcb 50       		.byte	0x50
 13870 0bcc 22       		.byte	0x22
 13871 0bcd 9F       		.byte	0x9f
 13872 0bce 8C000000 		.4byte	.LVL161
 13873 0bd2 90000000 		.4byte	.LVL162
 13874 0bd6 0100     		.2byte	0x1
 13875 0bd8 53       		.byte	0x53
 13876 0bd9 90000000 		.4byte	.LVL162
 13877 0bdd 96000000 		.4byte	.LVL163
 13878 0be1 0700     		.2byte	0x7
 13879 0be3 77       		.byte	0x77
 13880 0be4 00       		.sleb128 0
 13881 0be5 F3       		.byte	0xf3
 13882 0be6 01       		.uleb128 0x1
 13883 0be7 50       		.byte	0x50
 13884 0be8 22       		.byte	0x22
 13885 0be9 9F       		.byte	0x9f
 13886 0bea B2000000 		.4byte	.LVL167
 13887 0bee D0000000 		.4byte	.LVL168
 13888 0bf2 0100     		.2byte	0x1
 13889 0bf4 52       		.byte	0x52
 13890 0bf5 00000000 		.4byte	0
 13891 0bf9 00000000 		.4byte	0
 13892              	.LLST58:
 13893 0bfd 00000000 		.4byte	.LVL170
 13894 0c01 0E000000 		.4byte	.LVL172
 13895 0c05 0100     		.2byte	0x1
 13896 0c07 50       		.byte	0x50
 13897 0c08 0E000000 		.4byte	.LVL172
 13898 0c0c 12000000 		.4byte	.LVL173
 13899 0c10 0100     		.2byte	0x1
 13900 0c12 54       		.byte	0x54
 13901 0c13 12000000 		.4byte	.LVL173
 13902 0c17 42000000 		.4byte	.LVL177
 13903 0c1b 0100     		.2byte	0x1
 13904 0c1d 50       		.byte	0x50
 13905 0c1e 42000000 		.4byte	.LVL177
 13906 0c22 86000000 		.4byte	.LVL188
 13907 0c26 0100     		.2byte	0x1
 13908 0c28 54       		.byte	0x54
 13909 0c29 86000000 		.4byte	.LVL188
 13910 0c2d 88000000 		.4byte	.LFE16
 13911 0c31 0400     		.2byte	0x4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 317


 13912 0c33 F3       		.byte	0xf3
 13913 0c34 01       		.uleb128 0x1
 13914 0c35 50       		.byte	0x50
 13915 0c36 9F       		.byte	0x9f
 13916 0c37 00000000 		.4byte	0
 13917 0c3b 00000000 		.4byte	0
 13918              	.LLST59:
 13919 0c3f 00000000 		.4byte	.LVL170
 13920 0c43 0A000000 		.4byte	.LVL171
 13921 0c47 0100     		.2byte	0x1
 13922 0c49 51       		.byte	0x51
 13923 0c4a 0A000000 		.4byte	.LVL171
 13924 0c4e 0E000000 		.4byte	.LVL172
 13925 0c52 0200     		.2byte	0x2
 13926 0c54 70       		.byte	0x70
 13927 0c55 06       		.sleb128 6
 13928 0c56 12000000 		.4byte	.LVL173
 13929 0c5a 42000000 		.4byte	.LVL177
 13930 0c5e 0200     		.2byte	0x2
 13931 0c60 70       		.byte	0x70
 13932 0c61 06       		.sleb128 6
 13933 0c62 42000000 		.4byte	.LVL177
 13934 0c66 60000000 		.4byte	.LVL180
 13935 0c6a 0100     		.2byte	0x1
 13936 0c6c 55       		.byte	0x55
 13937 0c6d 62000000 		.4byte	.LVL181
 13938 0c71 76000000 		.4byte	.LVL185
 13939 0c75 0100     		.2byte	0x1
 13940 0c77 55       		.byte	0x55
 13941 0c78 84000000 		.4byte	.LVL186
 13942 0c7c 86000000 		.4byte	.LVL187
 13943 0c80 0100     		.2byte	0x1
 13944 0c82 55       		.byte	0x55
 13945 0c83 00000000 		.4byte	0
 13946 0c87 00000000 		.4byte	0
 13947              	.LLST60:
 13948 0c8b 0A000000 		.4byte	.LVL171
 13949 0c8f 0E000000 		.4byte	.LVL172
 13950 0c93 0100     		.2byte	0x1
 13951 0c95 51       		.byte	0x51
 13952 0c96 12000000 		.4byte	.LVL173
 13953 0c9a 2A000000 		.4byte	.LVL175
 13954 0c9e 0100     		.2byte	0x1
 13955 0ca0 51       		.byte	0x51
 13956 0ca1 3E000000 		.4byte	.LVL176
 13957 0ca5 4B000000 		.4byte	.LVL178-1
 13958 0ca9 0100     		.2byte	0x1
 13959 0cab 51       		.byte	0x51
 13960 0cac 4E000000 		.4byte	.LVL179
 13961 0cb0 64000000 		.4byte	.LVL182
 13962 0cb4 0100     		.2byte	0x1
 13963 0cb6 50       		.byte	0x50
 13964 0cb7 64000000 		.4byte	.LVL182
 13965 0cbb 6B000000 		.4byte	.LVL183-1
 13966 0cbf 0100     		.2byte	0x1
 13967 0cc1 51       		.byte	0x51
 13968 0cc2 84000000 		.4byte	.LVL186
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 318


 13969 0cc6 86000000 		.4byte	.LVL187
 13970 0cca 0100     		.2byte	0x1
 13971 0ccc 50       		.byte	0x50
 13972 0ccd 00000000 		.4byte	0
 13973 0cd1 00000000 		.4byte	0
 13974              	.LLST61:
 13975 0cd5 42000000 		.4byte	.LVL177
 13976 0cd9 72000000 		.4byte	.LVL184
 13977 0cdd 0100     		.2byte	0x1
 13978 0cdf 56       		.byte	0x56
 13979 0ce0 84000000 		.4byte	.LVL186
 13980 0ce4 86000000 		.4byte	.LVL187
 13981 0ce8 0100     		.2byte	0x1
 13982 0cea 56       		.byte	0x56
 13983 0ceb 00000000 		.4byte	0
 13984 0cef 00000000 		.4byte	0
 13985              	.LLST62:
 13986 0cf3 00000000 		.4byte	.LVL189
 13987 0cf7 09000000 		.4byte	.LVL190-1
 13988 0cfb 0100     		.2byte	0x1
 13989 0cfd 50       		.byte	0x50
 13990 0cfe 09000000 		.4byte	.LVL190-1
 13991 0d02 26000000 		.4byte	.LVL195
 13992 0d06 0100     		.2byte	0x1
 13993 0d08 54       		.byte	0x54
 13994 0d09 26000000 		.4byte	.LVL195
 13995 0d0d 28000000 		.4byte	.LFE21
 13996 0d11 0400     		.2byte	0x4
 13997 0d13 F3       		.byte	0xf3
 13998 0d14 01       		.uleb128 0x1
 13999 0d15 50       		.byte	0x50
 14000 0d16 9F       		.byte	0x9f
 14001 0d17 00000000 		.4byte	0
 14002 0d1b 00000000 		.4byte	0
 14003              	.LLST63:
 14004 0d1f 0A000000 		.4byte	.LVL190
 14005 0d23 10000000 		.4byte	.LVL192
 14006 0d27 0100     		.2byte	0x1
 14007 0d29 50       		.byte	0x50
 14008 0d2a 26000000 		.4byte	.LVL194
 14009 0d2e 28000000 		.4byte	.LFE21
 14010 0d32 0100     		.2byte	0x1
 14011 0d34 50       		.byte	0x50
 14012 0d35 00000000 		.4byte	0
 14013 0d39 00000000 		.4byte	0
 14014              	.LLST64:
 14015 0d3d 0E000000 		.4byte	.LVL191
 14016 0d41 26000000 		.4byte	.LVL194
 14017 0d45 0100     		.2byte	0x1
 14018 0d47 54       		.byte	0x54
 14019 0d48 00000000 		.4byte	0
 14020 0d4c 00000000 		.4byte	0
 14021              	.LLST65:
 14022 0d50 16000000 		.4byte	.LVL193
 14023 0d54 26000000 		.4byte	.LVL194
 14024 0d58 0100     		.2byte	0x1
 14025 0d5a 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 319


 14026 0d5b 00000000 		.4byte	0
 14027 0d5f 00000000 		.4byte	0
 14028              	.LLST66:
 14029 0d63 00000000 		.4byte	.LVL196
 14030 0d67 0A000000 		.4byte	.LVL197
 14031 0d6b 0100     		.2byte	0x1
 14032 0d6d 50       		.byte	0x50
 14033 0d6e 0A000000 		.4byte	.LVL197
 14034 0d72 02010000 		.4byte	.LVL235
 14035 0d76 0100     		.2byte	0x1
 14036 0d78 54       		.byte	0x54
 14037 0d79 02010000 		.4byte	.LVL235
 14038 0d7d 04010000 		.4byte	.LFE13
 14039 0d81 0400     		.2byte	0x4
 14040 0d83 F3       		.byte	0xf3
 14041 0d84 01       		.uleb128 0x1
 14042 0d85 50       		.byte	0x50
 14043 0d86 9F       		.byte	0x9f
 14044 0d87 00000000 		.4byte	0
 14045 0d8b 00000000 		.4byte	0
 14046              	.LLST67:
 14047 0d8f 00000000 		.4byte	.LVL196
 14048 0d93 28000000 		.4byte	.LVL200
 14049 0d97 0100     		.2byte	0x1
 14050 0d99 51       		.byte	0x51
 14051 0d9a 28000000 		.4byte	.LVL200
 14052 0d9e 3C000000 		.4byte	.LVL204
 14053 0da2 0100     		.2byte	0x1
 14054 0da4 56       		.byte	0x56
 14055 0da5 3C000000 		.4byte	.LVL204
 14056 0da9 9E000000 		.4byte	.LVL219
 14057 0dad 0400     		.2byte	0x4
 14058 0daf F3       		.byte	0xf3
 14059 0db0 01       		.uleb128 0x1
 14060 0db1 51       		.byte	0x51
 14061 0db2 9F       		.byte	0x9f
 14062 0db3 9E000000 		.4byte	.LVL219
 14063 0db7 A2000000 		.4byte	.LVL220
 14064 0dbb 0100     		.2byte	0x1
 14065 0dbd 51       		.byte	0x51
 14066 0dbe A2000000 		.4byte	.LVL220
 14067 0dc2 B2000000 		.4byte	.LVL222
 14068 0dc6 0100     		.2byte	0x1
 14069 0dc8 56       		.byte	0x56
 14070 0dc9 B2000000 		.4byte	.LVL222
 14071 0dcd C6000000 		.4byte	.LVL226
 14072 0dd1 0400     		.2byte	0x4
 14073 0dd3 F3       		.byte	0xf3
 14074 0dd4 01       		.uleb128 0x1
 14075 0dd5 51       		.byte	0x51
 14076 0dd6 9F       		.byte	0x9f
 14077 0dd7 C6000000 		.4byte	.LVL226
 14078 0ddb CA000000 		.4byte	.LVL227
 14079 0ddf 0100     		.2byte	0x1
 14080 0de1 51       		.byte	0x51
 14081 0de2 CA000000 		.4byte	.LVL227
 14082 0de6 DA000000 		.4byte	.LVL229
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 320


 14083 0dea 0100     		.2byte	0x1
 14084 0dec 56       		.byte	0x56
 14085 0ded DA000000 		.4byte	.LVL229
 14086 0df1 04010000 		.4byte	.LFE13
 14087 0df5 0400     		.2byte	0x4
 14088 0df7 F3       		.byte	0xf3
 14089 0df8 01       		.uleb128 0x1
 14090 0df9 51       		.byte	0x51
 14091 0dfa 9F       		.byte	0x9f
 14092 0dfb 00000000 		.4byte	0
 14093 0dff 00000000 		.4byte	0
 14094              	.LLST68:
 14095 0e03 00000000 		.4byte	.LVL196
 14096 0e07 33000000 		.4byte	.LVL203-1
 14097 0e0b 0100     		.2byte	0x1
 14098 0e0d 52       		.byte	0x52
 14099 0e0e 33000000 		.4byte	.LVL203-1
 14100 0e12 82000000 		.4byte	.LVL215
 14101 0e16 0100     		.2byte	0x1
 14102 0e18 55       		.byte	0x55
 14103 0e19 82000000 		.4byte	.LVL215
 14104 0e1d 86000000 		.4byte	.LVL216
 14105 0e21 0400     		.2byte	0x4
 14106 0e23 F3       		.byte	0xf3
 14107 0e24 01       		.uleb128 0x1
 14108 0e25 52       		.byte	0x52
 14109 0e26 9F       		.byte	0x9f
 14110 0e27 86000000 		.4byte	.LVL216
 14111 0e2b 90000000 		.4byte	.LVL217
 14112 0e2f 0100     		.2byte	0x1
 14113 0e31 55       		.byte	0x55
 14114 0e32 90000000 		.4byte	.LVL217
 14115 0e36 9E000000 		.4byte	.LVL219
 14116 0e3a 0400     		.2byte	0x4
 14117 0e3c F3       		.byte	0xf3
 14118 0e3d 01       		.uleb128 0x1
 14119 0e3e 52       		.byte	0x52
 14120 0e3f 9F       		.byte	0x9f
 14121 0e40 9E000000 		.4byte	.LVL219
 14122 0e44 A9000000 		.4byte	.LVL221-1
 14123 0e48 0100     		.2byte	0x1
 14124 0e4a 52       		.byte	0x52
 14125 0e4b A9000000 		.4byte	.LVL221-1
 14126 0e4f C2000000 		.4byte	.LVL225
 14127 0e53 0100     		.2byte	0x1
 14128 0e55 55       		.byte	0x55
 14129 0e56 C2000000 		.4byte	.LVL225
 14130 0e5a C6000000 		.4byte	.LVL226
 14131 0e5e 0400     		.2byte	0x4
 14132 0e60 F3       		.byte	0xf3
 14133 0e61 01       		.uleb128 0x1
 14134 0e62 52       		.byte	0x52
 14135 0e63 9F       		.byte	0x9f
 14136 0e64 C6000000 		.4byte	.LVL226
 14137 0e68 D1000000 		.4byte	.LVL228-1
 14138 0e6c 0100     		.2byte	0x1
 14139 0e6e 52       		.byte	0x52
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 321


 14140 0e6f D1000000 		.4byte	.LVL228-1
 14141 0e73 EE000000 		.4byte	.LVL231
 14142 0e77 0100     		.2byte	0x1
 14143 0e79 55       		.byte	0x55
 14144 0e7a EE000000 		.4byte	.LVL231
 14145 0e7e 04010000 		.4byte	.LFE13
 14146 0e82 0400     		.2byte	0x4
 14147 0e84 F3       		.byte	0xf3
 14148 0e85 01       		.uleb128 0x1
 14149 0e86 52       		.byte	0x52
 14150 0e87 9F       		.byte	0x9f
 14151 0e88 00000000 		.4byte	0
 14152 0e8c 00000000 		.4byte	0
 14153              	.LLST69:
 14154 0e90 14000000 		.4byte	.LVL198
 14155 0e94 33000000 		.4byte	.LVL203-1
 14156 0e98 0100     		.2byte	0x1
 14157 0e9a 52       		.byte	0x52
 14158 0e9b 33000000 		.4byte	.LVL203-1
 14159 0e9f 82000000 		.4byte	.LVL215
 14160 0ea3 0100     		.2byte	0x1
 14161 0ea5 55       		.byte	0x55
 14162 0ea6 82000000 		.4byte	.LVL215
 14163 0eaa 86000000 		.4byte	.LVL216
 14164 0eae 0400     		.2byte	0x4
 14165 0eb0 F3       		.byte	0xf3
 14166 0eb1 01       		.uleb128 0x1
 14167 0eb2 52       		.byte	0x52
 14168 0eb3 9F       		.byte	0x9f
 14169 0eb4 86000000 		.4byte	.LVL216
 14170 0eb8 90000000 		.4byte	.LVL217
 14171 0ebc 0100     		.2byte	0x1
 14172 0ebe 55       		.byte	0x55
 14173 0ebf 90000000 		.4byte	.LVL217
 14174 0ec3 9E000000 		.4byte	.LVL219
 14175 0ec7 0400     		.2byte	0x4
 14176 0ec9 F3       		.byte	0xf3
 14177 0eca 01       		.uleb128 0x1
 14178 0ecb 52       		.byte	0x52
 14179 0ecc 9F       		.byte	0x9f
 14180 0ecd 9E000000 		.4byte	.LVL219
 14181 0ed1 A9000000 		.4byte	.LVL221-1
 14182 0ed5 0100     		.2byte	0x1
 14183 0ed7 52       		.byte	0x52
 14184 0ed8 A9000000 		.4byte	.LVL221-1
 14185 0edc C2000000 		.4byte	.LVL225
 14186 0ee0 0100     		.2byte	0x1
 14187 0ee2 55       		.byte	0x55
 14188 0ee3 C2000000 		.4byte	.LVL225
 14189 0ee7 C6000000 		.4byte	.LVL226
 14190 0eeb 0400     		.2byte	0x4
 14191 0eed F3       		.byte	0xf3
 14192 0eee 01       		.uleb128 0x1
 14193 0eef 52       		.byte	0x52
 14194 0ef0 9F       		.byte	0x9f
 14195 0ef1 C6000000 		.4byte	.LVL226
 14196 0ef5 D1000000 		.4byte	.LVL228-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 322


 14197 0ef9 0100     		.2byte	0x1
 14198 0efb 52       		.byte	0x52
 14199 0efc D1000000 		.4byte	.LVL228-1
 14200 0f00 FA000000 		.4byte	.LVL232
 14201 0f04 0100     		.2byte	0x1
 14202 0f06 55       		.byte	0x55
 14203 0f07 FA000000 		.4byte	.LVL232
 14204 0f0b FE000000 		.4byte	.LVL233
 14205 0f0f 1000     		.2byte	0x10
 14206 0f11 73       		.byte	0x73
 14207 0f12 03       		.sleb128 3
 14208 0f13 94       		.byte	0x94
 14209 0f14 01       		.byte	0x1
 14210 0f15 08       		.byte	0x8
 14211 0f16 FF       		.byte	0xff
 14212 0f17 1A       		.byte	0x1a
 14213 0f18 34       		.byte	0x34
 14214 0f19 25       		.byte	0x25
 14215 0f1a 4C       		.byte	0x4c
 14216 0f1b 24       		.byte	0x24
 14217 0f1c F3       		.byte	0xf3
 14218 0f1d 01       		.uleb128 0x1
 14219 0f1e 52       		.byte	0x52
 14220 0f1f 21       		.byte	0x21
 14221 0f20 9F       		.byte	0x9f
 14222 0f21 00000000 		.4byte	0
 14223 0f25 00000000 		.4byte	0
 14224              	.LLST70:
 14225 0f29 14000000 		.4byte	.LVL198
 14226 0f2d 28000000 		.4byte	.LVL200
 14227 0f31 0100     		.2byte	0x1
 14228 0f33 51       		.byte	0x51
 14229 0f34 28000000 		.4byte	.LVL200
 14230 0f38 3C000000 		.4byte	.LVL204
 14231 0f3c 0100     		.2byte	0x1
 14232 0f3e 56       		.byte	0x56
 14233 0f3f 3C000000 		.4byte	.LVL204
 14234 0f43 9E000000 		.4byte	.LVL219
 14235 0f47 0400     		.2byte	0x4
 14236 0f49 F3       		.byte	0xf3
 14237 0f4a 01       		.uleb128 0x1
 14238 0f4b 51       		.byte	0x51
 14239 0f4c 9F       		.byte	0x9f
 14240 0f4d 9E000000 		.4byte	.LVL219
 14241 0f51 A2000000 		.4byte	.LVL220
 14242 0f55 0100     		.2byte	0x1
 14243 0f57 51       		.byte	0x51
 14244 0f58 A2000000 		.4byte	.LVL220
 14245 0f5c B2000000 		.4byte	.LVL222
 14246 0f60 0100     		.2byte	0x1
 14247 0f62 56       		.byte	0x56
 14248 0f63 B2000000 		.4byte	.LVL222
 14249 0f67 C6000000 		.4byte	.LVL226
 14250 0f6b 0400     		.2byte	0x4
 14251 0f6d F3       		.byte	0xf3
 14252 0f6e 01       		.uleb128 0x1
 14253 0f6f 51       		.byte	0x51
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 323


 14254 0f70 9F       		.byte	0x9f
 14255 0f71 C6000000 		.4byte	.LVL226
 14256 0f75 CA000000 		.4byte	.LVL227
 14257 0f79 0100     		.2byte	0x1
 14258 0f7b 51       		.byte	0x51
 14259 0f7c CA000000 		.4byte	.LVL227
 14260 0f80 DA000000 		.4byte	.LVL229
 14261 0f84 0100     		.2byte	0x1
 14262 0f86 56       		.byte	0x56
 14263 0f87 DA000000 		.4byte	.LVL229
 14264 0f8b 02010000 		.4byte	.LVL234
 14265 0f8f 0400     		.2byte	0x4
 14266 0f91 F3       		.byte	0xf3
 14267 0f92 01       		.uleb128 0x1
 14268 0f93 51       		.byte	0x51
 14269 0f94 9F       		.byte	0x9f
 14270 0f95 00000000 		.4byte	0
 14271 0f99 00000000 		.4byte	0
 14272              	.LLST71:
 14273 0f9d 14000000 		.4byte	.LVL198
 14274 0fa1 02010000 		.4byte	.LVL234
 14275 0fa5 0100     		.2byte	0x1
 14276 0fa7 54       		.byte	0x54
 14277 0fa8 00000000 		.4byte	0
 14278 0fac 00000000 		.4byte	0
 14279              	.LLST72:
 14280 0fb0 22000000 		.4byte	.LVL199
 14281 0fb4 28000000 		.4byte	.LVL200
 14282 0fb8 0100     		.2byte	0x1
 14283 0fba 51       		.byte	0x51
 14284 0fbb 28000000 		.4byte	.LVL200
 14285 0fbf 2A000000 		.4byte	.LVL201
 14286 0fc3 0100     		.2byte	0x1
 14287 0fc5 56       		.byte	0x56
 14288 0fc6 2A000000 		.4byte	.LVL201
 14289 0fca 2C000000 		.4byte	.LVL202
 14290 0fce 0100     		.2byte	0x1
 14291 0fd0 53       		.byte	0x53
 14292 0fd1 2C000000 		.4byte	.LVL202
 14293 0fd5 66000000 		.4byte	.LVL209
 14294 0fd9 0200     		.2byte	0x2
 14295 0fdb 91       		.byte	0x91
 14296 0fdc 64       		.sleb128 -28
 14297 0fdd 66000000 		.4byte	.LVL209
 14298 0fe1 78000000 		.4byte	.LVL212
 14299 0fe5 0100     		.2byte	0x1
 14300 0fe7 57       		.byte	0x57
 14301 0fe8 78000000 		.4byte	.LVL212
 14302 0fec 9E000000 		.4byte	.LVL219
 14303 0ff0 0600     		.2byte	0x6
 14304 0ff2 91       		.byte	0x91
 14305 0ff3 64       		.sleb128 -28
 14306 0ff4 06       		.byte	0x6
 14307 0ff5 23       		.byte	0x23
 14308 0ff6 01       		.uleb128 0x1
 14309 0ff7 9F       		.byte	0x9f
 14310 0ff8 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 324


 14311 0ffc 00000000 		.4byte	0
 14312              	.LLST73:
 14313 1000 40000000 		.4byte	.LVL205
 14314 1004 42000000 		.4byte	.LVL206
 14315 1008 0800     		.2byte	0x8
 14316 100a 74       		.byte	0x74
 14317 100b 00       		.sleb128 0
 14318 100c 73       		.byte	0x73
 14319 100d 00       		.sleb128 0
 14320 100e 22       		.byte	0x22
 14321 100f 23       		.byte	0x23
 14322 1010 30       		.uleb128 0x30
 14323 1011 9F       		.byte	0x9f
 14324 1012 42000000 		.4byte	.LVL206
 14325 1016 4C000000 		.4byte	.LVL207
 14326 101a 0D00     		.2byte	0xd
 14327 101c 91       		.byte	0x91
 14328 101d 64       		.sleb128 -28
 14329 101e 06       		.byte	0x6
 14330 101f 47       		.byte	0x47
 14331 1020 24       		.byte	0x24
 14332 1021 47       		.byte	0x47
 14333 1022 25       		.byte	0x25
 14334 1023 74       		.byte	0x74
 14335 1024 00       		.sleb128 0
 14336 1025 22       		.byte	0x22
 14337 1026 23       		.byte	0x23
 14338 1027 30       		.uleb128 0x30
 14339 1028 9F       		.byte	0x9f
 14340 1029 4C000000 		.4byte	.LVL207
 14341 102d 50000000 		.4byte	.LVL208
 14342 1031 0100     		.2byte	0x1
 14343 1033 52       		.byte	0x52
 14344 1034 50000000 		.4byte	.LVL208
 14345 1038 7A000000 		.4byte	.LVL213
 14346 103c 0D00     		.2byte	0xd
 14347 103e 91       		.byte	0x91
 14348 103f 64       		.sleb128 -28
 14349 1040 06       		.byte	0x6
 14350 1041 47       		.byte	0x47
 14351 1042 24       		.byte	0x24
 14352 1043 47       		.byte	0x47
 14353 1044 25       		.byte	0x25
 14354 1045 74       		.byte	0x74
 14355 1046 00       		.sleb128 0
 14356 1047 22       		.byte	0x22
 14357 1048 23       		.byte	0x23
 14358 1049 30       		.uleb128 0x30
 14359 104a 9F       		.byte	0x9f
 14360 104b 7A000000 		.4byte	.LVL213
 14361 104f 7C000000 		.4byte	.LVL214
 14362 1053 0800     		.2byte	0x8
 14363 1055 74       		.byte	0x74
 14364 1056 00       		.sleb128 0
 14365 1057 77       		.byte	0x77
 14366 1058 00       		.sleb128 0
 14367 1059 22       		.byte	0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 325


 14368 105a 23       		.byte	0x23
 14369 105b 30       		.uleb128 0x30
 14370 105c 9F       		.byte	0x9f
 14371 105d 7C000000 		.4byte	.LVL214
 14372 1061 98000000 		.4byte	.LVL218
 14373 1065 0F00     		.2byte	0xf
 14374 1067 91       		.byte	0x91
 14375 1068 64       		.sleb128 -28
 14376 1069 06       		.byte	0x6
 14377 106a 23       		.byte	0x23
 14378 106b 01       		.uleb128 0x1
 14379 106c 47       		.byte	0x47
 14380 106d 24       		.byte	0x24
 14381 106e 47       		.byte	0x47
 14382 106f 25       		.byte	0x25
 14383 1070 74       		.byte	0x74
 14384 1071 00       		.sleb128 0
 14385 1072 22       		.byte	0x22
 14386 1073 23       		.byte	0x23
 14387 1074 30       		.uleb128 0x30
 14388 1075 9F       		.byte	0x9f
 14389 1076 B6000000 		.4byte	.LVL223
 14390 107a BA000000 		.4byte	.LVL224
 14391 107e 0800     		.2byte	0x8
 14392 1080 74       		.byte	0x74
 14393 1081 00       		.sleb128 0
 14394 1082 76       		.byte	0x76
 14395 1083 00       		.sleb128 0
 14396 1084 22       		.byte	0x22
 14397 1085 23       		.byte	0x23
 14398 1086 30       		.uleb128 0x30
 14399 1087 9F       		.byte	0x9f
 14400 1088 BA000000 		.4byte	.LVL224
 14401 108c C6000000 		.4byte	.LVL226
 14402 1090 0100     		.2byte	0x1
 14403 1092 53       		.byte	0x53
 14404 1093 E4000000 		.4byte	.LVL230
 14405 1097 FE000000 		.4byte	.LVL233
 14406 109b 0100     		.2byte	0x1
 14407 109d 53       		.byte	0x53
 14408 109e 00000000 		.4byte	0
 14409 10a2 00000000 		.4byte	0
 14410              	.LLST74:
 14411 10a6 34000000 		.4byte	.LVL203
 14412 10aa 6E000000 		.4byte	.LVL210
 14413 10ae 0100     		.2byte	0x1
 14414 10b0 50       		.byte	0x50
 14415 10b1 72000000 		.4byte	.LVL211
 14416 10b5 9E000000 		.4byte	.LVL219
 14417 10b9 0100     		.2byte	0x1
 14418 10bb 50       		.byte	0x50
 14419 10bc AA000000 		.4byte	.LVL221
 14420 10c0 C6000000 		.4byte	.LVL226
 14421 10c4 0100     		.2byte	0x1
 14422 10c6 50       		.byte	0x50
 14423 10c7 D2000000 		.4byte	.LVL228
 14424 10cb 02010000 		.4byte	.LVL234
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 326


 14425 10cf 0100     		.2byte	0x1
 14426 10d1 50       		.byte	0x50
 14427 10d2 00000000 		.4byte	0
 14428 10d6 00000000 		.4byte	0
 14429              	.LLST75:
 14430 10da 00000000 		.4byte	.LVL236
 14431 10de 19000000 		.4byte	.LVL239-1
 14432 10e2 0100     		.2byte	0x1
 14433 10e4 50       		.byte	0x50
 14434 10e5 19000000 		.4byte	.LVL239-1
 14435 10e9 2C000000 		.4byte	.LVL240
 14436 10ed 0100     		.2byte	0x1
 14437 10ef 55       		.byte	0x55
 14438 10f0 2C000000 		.4byte	.LVL240
 14439 10f4 2E000000 		.4byte	.LVL241
 14440 10f8 0100     		.2byte	0x1
 14441 10fa 50       		.byte	0x50
 14442 10fb 2E000000 		.4byte	.LVL241
 14443 10ff A0000000 		.4byte	.LVL261
 14444 1103 0100     		.2byte	0x1
 14445 1105 55       		.byte	0x55
 14446 1106 A0000000 		.4byte	.LVL261
 14447 110a A8000000 		.4byte	.LFE15
 14448 110e 0400     		.2byte	0x4
 14449 1110 F3       		.byte	0xf3
 14450 1111 01       		.uleb128 0x1
 14451 1112 50       		.byte	0x50
 14452 1113 9F       		.byte	0x9f
 14453 1114 00000000 		.4byte	0
 14454 1118 00000000 		.4byte	0
 14455              	.LLST76:
 14456 111c 00000000 		.4byte	.LVL236
 14457 1120 19000000 		.4byte	.LVL239-1
 14458 1124 0100     		.2byte	0x1
 14459 1126 51       		.byte	0x51
 14460 1127 19000000 		.4byte	.LVL239-1
 14461 112b 2C000000 		.4byte	.LVL240
 14462 112f 0100     		.2byte	0x1
 14463 1131 56       		.byte	0x56
 14464 1132 2C000000 		.4byte	.LVL240
 14465 1136 2E000000 		.4byte	.LVL241
 14466 113a 0100     		.2byte	0x1
 14467 113c 51       		.byte	0x51
 14468 113d 2E000000 		.4byte	.LVL241
 14469 1141 A0000000 		.4byte	.LVL262
 14470 1145 0100     		.2byte	0x1
 14471 1147 56       		.byte	0x56
 14472 1148 A0000000 		.4byte	.LVL262
 14473 114c A8000000 		.4byte	.LFE15
 14474 1150 0400     		.2byte	0x4
 14475 1152 F3       		.byte	0xf3
 14476 1153 01       		.uleb128 0x1
 14477 1154 51       		.byte	0x51
 14478 1155 9F       		.byte	0x9f
 14479 1156 00000000 		.4byte	0
 14480 115a 00000000 		.4byte	0
 14481              	.LLST77:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 327


 14482 115e 1A000000 		.4byte	.LVL239
 14483 1162 2C000000 		.4byte	.LVL240
 14484 1166 0100     		.2byte	0x1
 14485 1168 50       		.byte	0x50
 14486 1169 4A000000 		.4byte	.LVL248
 14487 116d 62000000 		.4byte	.LVL251
 14488 1171 0100     		.2byte	0x1
 14489 1173 50       		.byte	0x50
 14490 1174 00000000 		.4byte	0
 14491 1178 00000000 		.4byte	0
 14492              	.LLST78:
 14493 117c 2E000000 		.4byte	.LVL241
 14494 1180 30000000 		.4byte	.LVL242
 14495 1184 0100     		.2byte	0x1
 14496 1186 57       		.byte	0x57
 14497 1187 30000000 		.4byte	.LVL242
 14498 118b 38000000 		.4byte	.LVL244
 14499 118f 0100     		.2byte	0x1
 14500 1191 54       		.byte	0x54
 14501 1192 38000000 		.4byte	.LVL244
 14502 1196 3C000000 		.4byte	.LVL245
 14503 119a 0200     		.2byte	0x2
 14504 119c 32       		.byte	0x32
 14505 119d 9F       		.byte	0x9f
 14506 119e 40000000 		.4byte	.LVL246
 14507 11a2 42000000 		.4byte	.LVL247
 14508 11a6 0200     		.2byte	0x2
 14509 11a8 32       		.byte	0x32
 14510 11a9 9F       		.byte	0x9f
 14511 11aa 42000000 		.4byte	.LVL247
 14512 11ae 58000000 		.4byte	.LVL249
 14513 11b2 0100     		.2byte	0x1
 14514 11b4 54       		.byte	0x54
 14515 11b5 5A000000 		.4byte	.LVL250
 14516 11b9 98000000 		.4byte	.LVL259
 14517 11bd 0100     		.2byte	0x1
 14518 11bf 54       		.byte	0x54
 14519 11c0 00000000 		.4byte	0
 14520 11c4 00000000 		.4byte	0
 14521              	.LLST79:
 14522 11c8 0A000000 		.4byte	.LVL237
 14523 11cc 16000000 		.4byte	.LVL238
 14524 11d0 0100     		.2byte	0x1
 14525 11d2 57       		.byte	0x57
 14526 11d3 2C000000 		.4byte	.LVL240
 14527 11d7 9E000000 		.4byte	.LVL260
 14528 11db 0100     		.2byte	0x1
 14529 11dd 57       		.byte	0x57
 14530 11de 00000000 		.4byte	0
 14531 11e2 00000000 		.4byte	0
 14532              	.LLST80:
 14533 11e6 6A000000 		.4byte	.LVL252
 14534 11ea 72000000 		.4byte	.LVL253
 14535 11ee 0100     		.2byte	0x1
 14536 11f0 50       		.byte	0x50
 14537 11f1 84000000 		.4byte	.LVL254
 14538 11f5 86000000 		.4byte	.LVL255
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 328


 14539 11f9 0100     		.2byte	0x1
 14540 11fb 50       		.byte	0x50
 14541 11fc 8E000000 		.4byte	.LVL256
 14542 1200 94000000 		.4byte	.LVL258
 14543 1204 0100     		.2byte	0x1
 14544 1206 50       		.byte	0x50
 14545 1207 00000000 		.4byte	0
 14546 120b 00000000 		.4byte	0
 14547              	.LLST81:
 14548 120f 00000000 		.4byte	.LVL263
 14549 1213 0C000000 		.4byte	.LVL265
 14550 1217 0100     		.2byte	0x1
 14551 1219 50       		.byte	0x50
 14552 121a 0C000000 		.4byte	.LVL265
 14553 121e 10000000 		.4byte	.LVL266
 14554 1222 0400     		.2byte	0x4
 14555 1224 F3       		.byte	0xf3
 14556 1225 01       		.uleb128 0x1
 14557 1226 50       		.byte	0x50
 14558 1227 9F       		.byte	0x9f
 14559 1228 10000000 		.4byte	.LVL266
 14560 122c 2C000000 		.4byte	.LVL268
 14561 1230 0100     		.2byte	0x1
 14562 1232 50       		.byte	0x50
 14563 1233 2C000000 		.4byte	.LVL268
 14564 1237 F4000000 		.4byte	.LVL297
 14565 123b 0100     		.2byte	0x1
 14566 123d 54       		.byte	0x54
 14567 123e F4000000 		.4byte	.LVL297
 14568 1242 F6000000 		.4byte	.LFE17
 14569 1246 0400     		.2byte	0x4
 14570 1248 F3       		.byte	0xf3
 14571 1249 01       		.uleb128 0x1
 14572 124a 50       		.byte	0x50
 14573 124b 9F       		.byte	0x9f
 14574 124c 00000000 		.4byte	0
 14575 1250 00000000 		.4byte	0
 14576              	.LLST82:
 14577 1254 00000000 		.4byte	.LVL263
 14578 1258 0C000000 		.4byte	.LVL265
 14579 125c 0100     		.2byte	0x1
 14580 125e 51       		.byte	0x51
 14581 125f 0C000000 		.4byte	.LVL265
 14582 1263 10000000 		.4byte	.LVL266
 14583 1267 0400     		.2byte	0x4
 14584 1269 F3       		.byte	0xf3
 14585 126a 01       		.uleb128 0x1
 14586 126b 51       		.byte	0x51
 14587 126c 9F       		.byte	0x9f
 14588 126d 10000000 		.4byte	.LVL266
 14589 1271 26000000 		.4byte	.LVL267
 14590 1275 0100     		.2byte	0x1
 14591 1277 51       		.byte	0x51
 14592 1278 26000000 		.4byte	.LVL267
 14593 127c 54000000 		.4byte	.LVL273
 14594 1280 0100     		.2byte	0x1
 14595 1282 57       		.byte	0x57
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 329


 14596 1283 54000000 		.4byte	.LVL273
 14597 1287 58000000 		.4byte	.LVL274
 14598 128b 0400     		.2byte	0x4
 14599 128d F3       		.byte	0xf3
 14600 128e 01       		.uleb128 0x1
 14601 128f 51       		.byte	0x51
 14602 1290 9F       		.byte	0x9f
 14603 1291 58000000 		.4byte	.LVL274
 14604 1295 A0000000 		.4byte	.LVL286
 14605 1299 0100     		.2byte	0x1
 14606 129b 57       		.byte	0x57
 14607 129c A0000000 		.4byte	.LVL286
 14608 12a0 F6000000 		.4byte	.LFE17
 14609 12a4 0400     		.2byte	0x4
 14610 12a6 F3       		.byte	0xf3
 14611 12a7 01       		.uleb128 0x1
 14612 12a8 51       		.byte	0x51
 14613 12a9 9F       		.byte	0x9f
 14614 12aa 00000000 		.4byte	0
 14615 12ae 00000000 		.4byte	0
 14616              	.LLST83:
 14617 12b2 48000000 		.4byte	.LVL270
 14618 12b6 4C000000 		.4byte	.LVL271
 14619 12ba 0100     		.2byte	0x1
 14620 12bc 50       		.byte	0x50
 14621 12bd 4C000000 		.4byte	.LVL271
 14622 12c1 50000000 		.4byte	.LVL272
 14623 12c5 0100     		.2byte	0x1
 14624 12c7 55       		.byte	0x55
 14625 12c8 50000000 		.4byte	.LVL272
 14626 12cc 54000000 		.4byte	.LVL273
 14627 12d0 0100     		.2byte	0x1
 14628 12d2 50       		.byte	0x50
 14629 12d3 54000000 		.4byte	.LVL273
 14630 12d7 58000000 		.4byte	.LVL274
 14631 12db 0100     		.2byte	0x1
 14632 12dd 55       		.byte	0x55
 14633 12de 58000000 		.4byte	.LVL274
 14634 12e2 5A000000 		.4byte	.LVL275
 14635 12e6 0100     		.2byte	0x1
 14636 12e8 50       		.byte	0x50
 14637 12e9 5A000000 		.4byte	.LVL275
 14638 12ed 6C000000 		.4byte	.LVL277
 14639 12f1 0100     		.2byte	0x1
 14640 12f3 55       		.byte	0x55
 14641 12f4 6C000000 		.4byte	.LVL277
 14642 12f8 6E000000 		.4byte	.LVL278
 14643 12fc 0100     		.2byte	0x1
 14644 12fe 50       		.byte	0x50
 14645 12ff 6E000000 		.4byte	.LVL278
 14646 1303 E4000000 		.4byte	.LVL296
 14647 1307 0100     		.2byte	0x1
 14648 1309 55       		.byte	0x55
 14649 130a 00000000 		.4byte	0
 14650 130e 00000000 		.4byte	0
 14651              	.LLST84:
 14652 1312 08000000 		.4byte	.LVL264
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 330


 14653 1316 F4000000 		.4byte	.LVL298
 14654 131a 0100     		.2byte	0x1
 14655 131c 56       		.byte	0x56
 14656 131d 00000000 		.4byte	0
 14657 1321 00000000 		.4byte	0
 14658              	.LLST85:
 14659 1325 AA000000 		.4byte	.LVL288
 14660 1329 AC000000 		.4byte	.LVL289
 14661 132d 0200     		.2byte	0x2
 14662 132f 30       		.byte	0x30
 14663 1330 9F       		.byte	0x9f
 14664 1331 AC000000 		.4byte	.LVL289
 14665 1335 C8000000 		.4byte	.LVL291
 14666 1339 0100     		.2byte	0x1
 14667 133b 57       		.byte	0x57
 14668 133c CC000000 		.4byte	.LVL292
 14669 1340 D6000000 		.4byte	.LVL293
 14670 1344 0100     		.2byte	0x1
 14671 1346 57       		.byte	0x57
 14672 1347 00000000 		.4byte	0
 14673 134b 00000000 		.4byte	0
 14674              	.LLST86:
 14675 134f 88000000 		.4byte	.LVL280
 14676 1353 92000000 		.4byte	.LVL282
 14677 1357 0400     		.2byte	0x4
 14678 1359 0A       		.byte	0xa
 14679 135a 0002     		.2byte	0x200
 14680 135c 9F       		.byte	0x9f
 14681 135d 92000000 		.4byte	.LVL282
 14682 1361 9C000000 		.4byte	.LVL284
 14683 1365 0700     		.2byte	0x7
 14684 1367 72       		.byte	0x72
 14685 1368 00       		.sleb128 0
 14686 1369 20       		.byte	0x20
 14687 136a 73       		.byte	0x73
 14688 136b 00       		.sleb128 0
 14689 136c 22       		.byte	0x22
 14690 136d 9F       		.byte	0x9f
 14691 136e 9C000000 		.4byte	.LVL284
 14692 1372 9E000000 		.4byte	.LVL285
 14693 1376 0600     		.2byte	0x6
 14694 1378 73       		.byte	0x73
 14695 1379 00       		.sleb128 0
 14696 137a 72       		.byte	0x72
 14697 137b 00       		.sleb128 0
 14698 137c 1C       		.byte	0x1c
 14699 137d 9F       		.byte	0x9f
 14700 137e 9E000000 		.4byte	.LVL285
 14701 1382 A7000000 		.4byte	.LVL287-1
 14702 1386 0700     		.2byte	0x7
 14703 1388 72       		.byte	0x72
 14704 1389 00       		.sleb128 0
 14705 138a 20       		.byte	0x20
 14706 138b 73       		.byte	0x73
 14707 138c 00       		.sleb128 0
 14708 138d 22       		.byte	0x22
 14709 138e 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 331


 14710 138f 00000000 		.4byte	0
 14711 1393 00000000 		.4byte	0
 14712              	.LLST87:
 14713 1397 88000000 		.4byte	.LVL280
 14714 139b D8000000 		.4byte	.LVL294
 14715 139f 0200     		.2byte	0x2
 14716 13a1 30       		.byte	0x30
 14717 13a2 9F       		.byte	0x9f
 14718 13a3 00000000 		.4byte	0
 14719 13a7 00000000 		.4byte	0
 14720              	.LLST88:
 14721 13ab 88000000 		.4byte	.LVL280
 14722 13af 90000000 		.4byte	.LVL281
 14723 13b3 0300     		.2byte	0x3
 14724 13b5 73       		.byte	0x73
 14725 13b6 30       		.sleb128 48
 14726 13b7 9F       		.byte	0x9f
 14727 13b8 90000000 		.4byte	.LVL281
 14728 13bc 92000000 		.4byte	.LVL282
 14729 13c0 0100     		.2byte	0x1
 14730 13c2 52       		.byte	0x52
 14731 13c3 92000000 		.4byte	.LVL282
 14732 13c7 A7000000 		.4byte	.LVL287-1
 14733 13cb 0400     		.2byte	0x4
 14734 13cd 73       		.byte	0x73
 14735 13ce 807C     		.sleb128 -512
 14736 13d0 9F       		.byte	0x9f
 14737 13d1 00000000 		.4byte	0
 14738 13d5 00000000 		.4byte	0
 14739              	.LLST89:
 14740 13d9 88000000 		.4byte	.LVL280
 14741 13dd 90000000 		.4byte	.LVL281
 14742 13e1 0300     		.2byte	0x3
 14743 13e3 73       		.byte	0x73
 14744 13e4 30       		.sleb128 48
 14745 13e5 9F       		.byte	0x9f
 14746 13e6 90000000 		.4byte	.LVL281
 14747 13ea 96000000 		.4byte	.LVL283
 14748 13ee 0100     		.2byte	0x1
 14749 13f0 52       		.byte	0x52
 14750 13f1 96000000 		.4byte	.LVL283
 14751 13f5 9C000000 		.4byte	.LVL284
 14752 13f9 0300     		.2byte	0x3
 14753 13fb 72       		.byte	0x72
 14754 13fc 01       		.sleb128 1
 14755 13fd 9F       		.byte	0x9f
 14756 13fe 9C000000 		.4byte	.LVL284
 14757 1402 A7000000 		.4byte	.LVL287-1
 14758 1406 0100     		.2byte	0x1
 14759 1408 52       		.byte	0x52
 14760 1409 00000000 		.4byte	0
 14761 140d 00000000 		.4byte	0
 14762              	.LLST90:
 14763 1411 00000000 		.4byte	.LVL299
 14764 1415 1E000000 		.4byte	.LVL301
 14765 1419 0100     		.2byte	0x1
 14766 141b 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 332


 14767 141c 1E000000 		.4byte	.LVL301
 14768 1420 92010000 		.4byte	.LVL369
 14769 1424 0100     		.2byte	0x1
 14770 1426 54       		.byte	0x54
 14771 1427 92010000 		.4byte	.LVL369
 14772 142b 9C010000 		.4byte	.LFE24
 14773 142f 0400     		.2byte	0x4
 14774 1431 F3       		.byte	0xf3
 14775 1432 01       		.uleb128 0x1
 14776 1433 50       		.byte	0x50
 14777 1434 9F       		.byte	0x9f
 14778 1435 00000000 		.4byte	0
 14779 1439 00000000 		.4byte	0
 14780              	.LLST91:
 14781 143d 00000000 		.4byte	.LVL299
 14782 1441 12000000 		.4byte	.LVL300
 14783 1445 0100     		.2byte	0x1
 14784 1447 51       		.byte	0x51
 14785 1448 12000000 		.4byte	.LVL300
 14786 144c 28000000 		.4byte	.LVL303
 14787 1450 0100     		.2byte	0x1
 14788 1452 55       		.byte	0x55
 14789 1453 96000000 		.4byte	.LVL322
 14790 1457 56010000 		.4byte	.LVL353
 14791 145b 0100     		.2byte	0x1
 14792 145d 55       		.byte	0x55
 14793 145e 00000000 		.4byte	0
 14794 1462 00000000 		.4byte	0
 14795              	.LLST92:
 14796 1466 24000000 		.4byte	.LVL302
 14797 146a 28000000 		.4byte	.LVL303
 14798 146e 0100     		.2byte	0x1
 14799 1470 50       		.byte	0x50
 14800 1471 58010000 		.4byte	.LVL354
 14801 1475 5A010000 		.4byte	.LVL355
 14802 1479 0100     		.2byte	0x1
 14803 147b 50       		.byte	0x50
 14804 147c 00000000 		.4byte	0
 14805 1480 00000000 		.4byte	0
 14806              	.LLST93:
 14807 1484 34010000 		.4byte	.LVL349
 14808 1488 54010000 		.4byte	.LVL352
 14809 148c 0100     		.2byte	0x1
 14810 148e 50       		.byte	0x50
 14811 148f 54010000 		.4byte	.LVL352
 14812 1493 56010000 		.4byte	.LVL353
 14813 1497 0200     		.2byte	0x2
 14814 1499 74       		.byte	0x74
 14815 149a 14       		.sleb128 20
 14816 149b 00000000 		.4byte	0
 14817 149f 00000000 		.4byte	0
 14818              	.LLST94:
 14819 14a3 1E010000 		.4byte	.LVL347
 14820 14a7 32010000 		.4byte	.LVL348
 14821 14ab 0100     		.2byte	0x1
 14822 14ad 53       		.byte	0x53
 14823 14ae 32010000 		.4byte	.LVL348
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 333


 14824 14b2 50010000 		.4byte	.LVL350
 14825 14b6 0500     		.2byte	0x5
 14826 14b8 74       		.byte	0x74
 14827 14b9 18       		.sleb128 24
 14828 14ba 06       		.byte	0x6
 14829 14bb 23       		.byte	0x23
 14830 14bc 0B       		.uleb128 0xb
 14831 14bd 52010000 		.4byte	.LVL351
 14832 14c1 56010000 		.4byte	.LVL353
 14833 14c5 0500     		.2byte	0x5
 14834 14c7 74       		.byte	0x74
 14835 14c8 18       		.sleb128 24
 14836 14c9 06       		.byte	0x6
 14837 14ca 23       		.byte	0x23
 14838 14cb 0B       		.uleb128 0xb
 14839 14cc 00000000 		.4byte	0
 14840 14d0 00000000 		.4byte	0
 14841              	.LLST95:
 14842 14d4 50010000 		.4byte	.LVL350
 14843 14d8 52010000 		.4byte	.LVL351
 14844 14dc 0100     		.2byte	0x1
 14845 14de 54       		.byte	0x54
 14846 14df 00000000 		.4byte	0
 14847 14e3 00000000 		.4byte	0
 14848              	.LLST96:
 14849 14e7 50010000 		.4byte	.LVL350
 14850 14eb 52010000 		.4byte	.LVL351
 14851 14ef 0600     		.2byte	0x6
 14852 14f1 F2       		.byte	0xf2
 14853 14f2 C1120000 		.4byte	.Ldebug_info0+4801
 14854 14f6 00       		.sleb128 0
 14855 14f7 00000000 		.4byte	0
 14856 14fb 00000000 		.4byte	0
 14857              	.LLST97:
 14858 14ff 52000000 		.4byte	.LVL311
 14859 1503 B4000000 		.4byte	.LVL325
 14860 1507 0100     		.2byte	0x1
 14861 1509 52       		.byte	0x52
 14862 150a B6000000 		.4byte	.LVL326
 14863 150e C8000000 		.4byte	.LVL329
 14864 1512 0100     		.2byte	0x1
 14865 1514 52       		.byte	0x52
 14866 1515 56010000 		.4byte	.LVL353
 14867 1519 64010000 		.4byte	.LVL358
 14868 151d 0100     		.2byte	0x1
 14869 151f 52       		.byte	0x52
 14870 1520 68010000 		.4byte	.LVL359
 14871 1524 92010000 		.4byte	.LVL368
 14872 1528 0100     		.2byte	0x1
 14873 152a 52       		.byte	0x52
 14874 152b 00000000 		.4byte	0
 14875 152f 00000000 		.4byte	0
 14876              	.LLST98:
 14877 1533 58000000 		.4byte	.LVL313
 14878 1537 7C000000 		.4byte	.LVL316
 14879 153b 0100     		.2byte	0x1
 14880 153d 53       		.byte	0x53
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 334


 14881 153e 7C000000 		.4byte	.LVL316
 14882 1542 7E000000 		.4byte	.LVL317
 14883 1546 0400     		.2byte	0x4
 14884 1548 73       		.byte	0x73
 14885 1549 8001     		.sleb128 128
 14886 154b 9F       		.byte	0x9f
 14887 154c 7E000000 		.4byte	.LVL317
 14888 1550 C2000000 		.4byte	.LVL327
 14889 1554 0100     		.2byte	0x1
 14890 1556 53       		.byte	0x53
 14891 1557 C2000000 		.4byte	.LVL327
 14892 155b C4000000 		.4byte	.LVL328
 14893 155f 0500     		.2byte	0x5
 14894 1561 77       		.byte	0x77
 14895 1562 00       		.sleb128 0
 14896 1563 32       		.byte	0x32
 14897 1564 24       		.byte	0x24
 14898 1565 9F       		.byte	0x9f
 14899 1566 C4000000 		.4byte	.LVL328
 14900 156a D0000000 		.4byte	.LVL330
 14901 156e 0100     		.2byte	0x1
 14902 1570 53       		.byte	0x53
 14903 1571 D2000000 		.4byte	.LVL331
 14904 1575 DB000000 		.4byte	.LVL334-1
 14905 1579 0100     		.2byte	0x1
 14906 157b 53       		.byte	0x53
 14907 157c 5A010000 		.4byte	.LVL355
 14908 1580 5C010000 		.4byte	.LVL356
 14909 1584 0100     		.2byte	0x1
 14910 1586 53       		.byte	0x53
 14911 1587 5C010000 		.4byte	.LVL356
 14912 158b 6A010000 		.4byte	.LVL360
 14913 158f 0700     		.2byte	0x7
 14914 1591 75       		.byte	0x75
 14915 1592 00       		.sleb128 0
 14916 1593 77       		.byte	0x77
 14917 1594 00       		.sleb128 0
 14918 1595 22       		.byte	0x22
 14919 1596 31       		.byte	0x31
 14920 1597 1C       		.byte	0x1c
 14921 1598 6E010000 		.4byte	.LVL361
 14922 159c 88010000 		.4byte	.LVL364
 14923 15a0 0100     		.2byte	0x1
 14924 15a2 53       		.byte	0x53
 14925 15a3 8C010000 		.4byte	.LVL366
 14926 15a7 92010000 		.4byte	.LVL368
 14927 15ab 0100     		.2byte	0x1
 14928 15ad 53       		.byte	0x53
 14929 15ae 00000000 		.4byte	0
 14930 15b2 00000000 		.4byte	0
 14931              	.LLST99:
 14932 15b6 36000000 		.4byte	.LVL305
 14933 15ba D8000000 		.4byte	.LVL333
 14934 15be 0100     		.2byte	0x1
 14935 15c0 50       		.byte	0x50
 14936 15c1 56010000 		.4byte	.LVL353
 14937 15c5 58010000 		.4byte	.LVL354
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 335


 14938 15c9 0100     		.2byte	0x1
 14939 15cb 50       		.byte	0x50
 14940 15cc 5A010000 		.4byte	.LVL355
 14941 15d0 92010000 		.4byte	.LVL368
 14942 15d4 0100     		.2byte	0x1
 14943 15d6 50       		.byte	0x50
 14944 15d7 00000000 		.4byte	0
 14945 15db 00000000 		.4byte	0
 14946              	.LLST100:
 14947 15df 52000000 		.4byte	.LVL311
 14948 15e3 60010000 		.4byte	.LVL357
 14949 15e7 0200     		.2byte	0x2
 14950 15e9 7D       		.byte	0x7d
 14951 15ea 00       		.sleb128 0
 14952 15eb 60010000 		.4byte	.LVL357
 14953 15ef 6A010000 		.4byte	.LVL360
 14954 15f3 0200     		.2byte	0x2
 14955 15f5 3B       		.byte	0x3b
 14956 15f6 9F       		.byte	0x9f
 14957 15f7 6E010000 		.4byte	.LVL361
 14958 15fb 92010000 		.4byte	.LVL368
 14959 15ff 0200     		.2byte	0x2
 14960 1601 7D       		.byte	0x7d
 14961 1602 00       		.sleb128 0
 14962 1603 00000000 		.4byte	0
 14963 1607 00000000 		.4byte	0
 14964              	.LLST101:
 14965 160b 52000000 		.4byte	.LVL311
 14966 160f 56000000 		.4byte	.LVL312
 14967 1613 0100     		.2byte	0x1
 14968 1615 53       		.byte	0x53
 14969 1616 56000000 		.4byte	.LVL312
 14970 161a 58000000 		.4byte	.LVL313
 14971 161e 0300     		.2byte	0x3
 14972 1620 77       		.byte	0x77
 14973 1621 7F       		.sleb128 -1
 14974 1622 9F       		.byte	0x9f
 14975 1623 58000000 		.4byte	.LVL313
 14976 1627 70000000 		.4byte	.LVL314
 14977 162b 0100     		.2byte	0x1
 14978 162d 57       		.byte	0x57
 14979 162e 70000000 		.4byte	.LVL314
 14980 1632 90000000 		.4byte	.LVL320
 14981 1636 0200     		.2byte	0x2
 14982 1638 91       		.byte	0x91
 14983 1639 64       		.sleb128 -28
 14984 163a 90000000 		.4byte	.LVL320
 14985 163e 94000000 		.4byte	.LVL321
 14986 1642 0100     		.2byte	0x1
 14987 1644 57       		.byte	0x57
 14988 1645 94000000 		.4byte	.LVL321
 14989 1649 5A010000 		.4byte	.LVL355
 14990 164d 0200     		.2byte	0x2
 14991 164f 91       		.byte	0x91
 14992 1650 64       		.sleb128 -28
 14993 1651 5A010000 		.4byte	.LVL355
 14994 1655 6A010000 		.4byte	.LVL360
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 336


 14995 1659 0100     		.2byte	0x1
 14996 165b 57       		.byte	0x57
 14997 165c 6A010000 		.4byte	.LVL360
 14998 1660 92010000 		.4byte	.LVL368
 14999 1664 0200     		.2byte	0x2
 15000 1666 91       		.byte	0x91
 15001 1667 64       		.sleb128 -28
 15002 1668 00000000 		.4byte	0
 15003 166c 00000000 		.4byte	0
 15004              	.LLST102:
 15005 1670 52000000 		.4byte	.LVL311
 15006 1674 A4000000 		.4byte	.LVL324
 15007 1678 0100     		.2byte	0x1
 15008 167a 51       		.byte	0x51
 15009 167b 56010000 		.4byte	.LVL353
 15010 167f 60010000 		.4byte	.LVL357
 15011 1683 0100     		.2byte	0x1
 15012 1685 51       		.byte	0x51
 15013 1686 60010000 		.4byte	.LVL357
 15014 168a 6A010000 		.4byte	.LVL360
 15015 168e 0200     		.2byte	0x2
 15016 1690 38       		.byte	0x38
 15017 1691 9F       		.byte	0x9f
 15018 1692 6E010000 		.4byte	.LVL361
 15019 1696 8C010000 		.4byte	.LVL366
 15020 169a 0100     		.2byte	0x1
 15021 169c 51       		.byte	0x51
 15022 169d 8C010000 		.4byte	.LVL366
 15023 16a1 90010000 		.4byte	.LVL367
 15024 16a5 0300     		.2byte	0x3
 15025 16a7 71       		.byte	0x71
 15026 16a8 01       		.sleb128 1
 15027 16a9 9F       		.byte	0x9f
 15028 16aa 90010000 		.4byte	.LVL367
 15029 16ae 92010000 		.4byte	.LVL368
 15030 16b2 0100     		.2byte	0x1
 15031 16b4 51       		.byte	0x51
 15032 16b5 00000000 		.4byte	0
 15033 16b9 00000000 		.4byte	0
 15034              	.LLST103:
 15035 16bd 28000000 		.4byte	.LVL303
 15036 16c1 96000000 		.4byte	.LVL322
 15037 16c5 0100     		.2byte	0x1
 15038 16c7 55       		.byte	0x55
 15039 16c8 50010000 		.4byte	.LVL350
 15040 16cc 52010000 		.4byte	.LVL351
 15041 16d0 0100     		.2byte	0x1
 15042 16d2 55       		.byte	0x55
 15043 16d3 5A010000 		.4byte	.LVL355
 15044 16d7 92010000 		.4byte	.LVL368
 15045 16db 0100     		.2byte	0x1
 15046 16dd 55       		.byte	0x55
 15047 16de 00000000 		.4byte	0
 15048 16e2 00000000 		.4byte	0
 15049              	.LLST104:
 15050 16e6 36000000 		.4byte	.LVL305
 15051 16ea 3C000000 		.4byte	.LVL306
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 337


 15052 16ee 0200     		.2byte	0x2
 15053 16f0 3B       		.byte	0x3b
 15054 16f1 9F       		.byte	0x9f
 15055 16f2 3C000000 		.4byte	.LVL306
 15056 16f6 46000000 		.4byte	.LVL308
 15057 16fa 0800     		.2byte	0x8
 15058 16fc 70       		.byte	0x70
 15059 16fd 00       		.sleb128 0
 15060 16fe 73       		.byte	0x73
 15061 16ff 00       		.sleb128 0
 15062 1700 1C       		.byte	0x1c
 15063 1701 23       		.byte	0x23
 15064 1702 0A       		.uleb128 0xa
 15065 1703 9F       		.byte	0x9f
 15066 1704 46000000 		.4byte	.LVL308
 15067 1708 48000000 		.4byte	.LVL309
 15068 170c 0800     		.2byte	0x8
 15069 170e 70       		.byte	0x70
 15070 170f 00       		.sleb128 0
 15071 1710 73       		.byte	0x73
 15072 1711 00       		.sleb128 0
 15073 1712 1C       		.byte	0x1c
 15074 1713 23       		.byte	0x23
 15075 1714 0B       		.uleb128 0xb
 15076 1715 9F       		.byte	0x9f
 15077 1716 48000000 		.4byte	.LVL309
 15078 171a 4E000000 		.4byte	.LVL310
 15079 171e 0800     		.2byte	0x8
 15080 1720 70       		.byte	0x70
 15081 1721 00       		.sleb128 0
 15082 1722 73       		.byte	0x73
 15083 1723 00       		.sleb128 0
 15084 1724 1C       		.byte	0x1c
 15085 1725 23       		.byte	0x23
 15086 1726 0A       		.uleb128 0xa
 15087 1727 9F       		.byte	0x9f
 15088 1728 00000000 		.4byte	0
 15089 172c 00000000 		.4byte	0
 15090              	.LLST105:
 15091 1730 36000000 		.4byte	.LVL305
 15092 1734 92010000 		.4byte	.LVL368
 15093 1738 0300     		.2byte	0x3
 15094 173a 08       		.byte	0x8
 15095 173b 20       		.byte	0x20
 15096 173c 9F       		.byte	0x9f
 15097 173d 00000000 		.4byte	0
 15098 1741 00000000 		.4byte	0
 15099              	.LLST107:
 15100 1745 36000000 		.4byte	.LVL305
 15101 1749 3C000000 		.4byte	.LVL306
 15102 174d 0100     		.2byte	0x1
 15103 174f 50       		.byte	0x50
 15104 1750 3C000000 		.4byte	.LVL306
 15105 1754 40000000 		.4byte	.LVL307
 15106 1758 0100     		.2byte	0x1
 15107 175a 53       		.byte	0x53
 15108 175b 40000000 		.4byte	.LVL307
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 338


 15109 175f 46000000 		.4byte	.LVL308
 15110 1763 0300     		.2byte	0x3
 15111 1765 73       		.byte	0x73
 15112 1766 01       		.sleb128 1
 15113 1767 9F       		.byte	0x9f
 15114 1768 46000000 		.4byte	.LVL308
 15115 176c 4E000000 		.4byte	.LVL310
 15116 1770 0100     		.2byte	0x1
 15117 1772 53       		.byte	0x53
 15118 1773 00000000 		.4byte	0
 15119 1777 00000000 		.4byte	0
 15120              	.LLST108:
 15121 177b 7E000000 		.4byte	.LVL317
 15122 177f 80000000 		.4byte	.LVL318
 15123 1783 0600     		.2byte	0x6
 15124 1785 03       		.byte	0x3
 15125 1786 00000000 		.4byte	.LC8
 15126 178a 9F       		.byte	0x9f
 15127 178b 80000000 		.4byte	.LVL318
 15128 178f 8A000000 		.4byte	.LVL319
 15129 1793 0900     		.2byte	0x9
 15130 1795 77       		.byte	0x77
 15131 1796 00       		.sleb128 0
 15132 1797 03       		.byte	0x3
 15133 1798 00000000 		.4byte	.LC8
 15134 179c 22       		.byte	0x22
 15135 179d 9F       		.byte	0x9f
 15136 179e 8A000000 		.4byte	.LVL319
 15137 17a2 90000000 		.4byte	.LVL320
 15138 17a6 0900     		.2byte	0x9
 15139 17a8 77       		.byte	0x77
 15140 17a9 00       		.sleb128 0
 15141 17aa 03       		.byte	0x3
 15142 17ab FFFFFFFF 		.4byte	.LC8-1
 15143 17af 22       		.byte	0x22
 15144 17b0 9F       		.byte	0x9f
 15145 17b1 6E010000 		.4byte	.LVL361
 15146 17b5 70010000 		.4byte	.LVL362
 15147 17b9 0900     		.2byte	0x9
 15148 17bb 77       		.byte	0x77
 15149 17bc 00       		.sleb128 0
 15150 17bd 03       		.byte	0x3
 15151 17be 00000000 		.4byte	.LC8
 15152 17c2 22       		.byte	0x22
 15153 17c3 9F       		.byte	0x9f
 15154 17c4 00000000 		.4byte	0
 15155 17c8 00000000 		.4byte	0
 15156              	.LLST109:
 15157 17cc 7E000000 		.4byte	.LVL317
 15158 17d0 90000000 		.4byte	.LVL320
 15159 17d4 0100     		.2byte	0x1
 15160 17d6 53       		.byte	0x53
 15161 17d7 6E010000 		.4byte	.LVL361
 15162 17db 88010000 		.4byte	.LVL364
 15163 17df 0100     		.2byte	0x1
 15164 17e1 53       		.byte	0x53
 15165 17e2 88010000 		.4byte	.LVL364
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 339


 15166 17e6 8C010000 		.4byte	.LVL366
 15167 17ea 0300     		.2byte	0x3
 15168 17ec 73       		.byte	0x73
 15169 17ed 20       		.sleb128 32
 15170 17ee 9F       		.byte	0x9f
 15171 17ef 00000000 		.4byte	0
 15172 17f3 00000000 		.4byte	0
 15173              	.LLST110:
 15174 17f7 D4000000 		.4byte	.LVL332
 15175 17fb 56010000 		.4byte	.LVL353
 15176 17ff 0100     		.2byte	0x1
 15177 1801 54       		.byte	0x54
 15178 1802 00000000 		.4byte	0
 15179 1806 00000000 		.4byte	0
 15180              	.LLST111:
 15181 180a DC000000 		.4byte	.LVL334
 15182 180e E2000000 		.4byte	.LVL335
 15183 1812 0100     		.2byte	0x1
 15184 1814 50       		.byte	0x50
 15185 1815 E8000000 		.4byte	.LVL336
 15186 1819 FE000000 		.4byte	.LVL338
 15187 181d 0100     		.2byte	0x1
 15188 181f 50       		.byte	0x50
 15189 1820 16010000 		.4byte	.LVL344
 15190 1824 1A010000 		.4byte	.LVL346
 15191 1828 0100     		.2byte	0x1
 15192 182a 50       		.byte	0x50
 15193 182b 00000000 		.4byte	0
 15194 182f 00000000 		.4byte	0
 15195              	.LLST112:
 15196 1833 EE000000 		.4byte	.LVL337
 15197 1837 12010000 		.4byte	.LVL343
 15198 183b 0200     		.2byte	0x2
 15199 183d 71       		.byte	0x71
 15200 183e 00       		.sleb128 0
 15201 183f 12010000 		.4byte	.LVL343
 15202 1843 15010000 		.4byte	.LVL344-1
 15203 1847 0300     		.2byte	0x3
 15204 1849 74       		.byte	0x74
 15205 184a 14       		.sleb128 20
 15206 184b 06       		.byte	0x6
 15207 184c 18010000 		.4byte	.LVL345
 15208 1850 1A010000 		.4byte	.LVL346
 15209 1854 0200     		.2byte	0x2
 15210 1856 71       		.byte	0x71
 15211 1857 00       		.sleb128 0
 15212 1858 00000000 		.4byte	0
 15213 185c 00000000 		.4byte	0
 15214              	.LLST113:
 15215 1860 EE000000 		.4byte	.LVL337
 15216 1864 12010000 		.4byte	.LVL343
 15217 1868 0100     		.2byte	0x1
 15218 186a 51       		.byte	0x51
 15219 186b 12010000 		.4byte	.LVL343
 15220 186f 15010000 		.4byte	.LVL344-1
 15221 1873 0200     		.2byte	0x2
 15222 1875 74       		.byte	0x74
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 340


 15223 1876 14       		.sleb128 20
 15224 1877 18010000 		.4byte	.LVL345
 15225 187b 1A010000 		.4byte	.LVL346
 15226 187f 0100     		.2byte	0x1
 15227 1881 51       		.byte	0x51
 15228 1882 00000000 		.4byte	0
 15229 1886 00000000 		.4byte	0
 15230              	.LLST114:
 15231 188a FE000000 		.4byte	.LVL338
 15232 188e 04010000 		.4byte	.LVL339
 15233 1892 0500     		.2byte	0x5
 15234 1894 3A       		.byte	0x3a
 15235 1895 72       		.byte	0x72
 15236 1896 00       		.sleb128 0
 15237 1897 1C       		.byte	0x1c
 15238 1898 9F       		.byte	0x9f
 15239 1899 04010000 		.4byte	.LVL339
 15240 189d 08010000 		.4byte	.LVL341
 15241 18a1 0500     		.2byte	0x5
 15242 18a3 3B       		.byte	0x3b
 15243 18a4 72       		.byte	0x72
 15244 18a5 00       		.sleb128 0
 15245 18a6 1C       		.byte	0x1c
 15246 18a7 9F       		.byte	0x9f
 15247 18a8 08010000 		.4byte	.LVL341
 15248 18ac 0E010000 		.4byte	.LVL342
 15249 18b0 0500     		.2byte	0x5
 15250 18b2 3A       		.byte	0x3a
 15251 18b3 72       		.byte	0x72
 15252 18b4 00       		.sleb128 0
 15253 18b5 1C       		.byte	0x1c
 15254 18b6 9F       		.byte	0x9f
 15255 18b7 00000000 		.4byte	0
 15256 18bb 00000000 		.4byte	0
 15257              	.LLST115:
 15258 18bf FE000000 		.4byte	.LVL338
 15259 18c3 0E010000 		.4byte	.LVL342
 15260 18c7 0100     		.2byte	0x1
 15261 18c9 56       		.byte	0x56
 15262 18ca 00000000 		.4byte	0
 15263 18ce 00000000 		.4byte	0
 15264              	.LLST116:
 15265 18d2 FE000000 		.4byte	.LVL338
 15266 18d6 0E010000 		.4byte	.LVL342
 15267 18da 0100     		.2byte	0x1
 15268 18dc 51       		.byte	0x51
 15269 18dd 00000000 		.4byte	0
 15270 18e1 00000000 		.4byte	0
 15271              	.LLST117:
 15272 18e5 FE000000 		.4byte	.LVL338
 15273 18e9 04010000 		.4byte	.LVL339
 15274 18ed 0800     		.2byte	0x8
 15275 18ef 71       		.byte	0x71
 15276 18f0 00       		.sleb128 0
 15277 18f1 72       		.byte	0x72
 15278 18f2 00       		.sleb128 0
 15279 18f3 22       		.byte	0x22
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 341


 15280 18f4 23       		.byte	0x23
 15281 18f5 01       		.uleb128 0x1
 15282 18f6 9F       		.byte	0x9f
 15283 18f7 04010000 		.4byte	.LVL339
 15284 18fb 0E010000 		.4byte	.LVL342
 15285 18ff 0600     		.2byte	0x6
 15286 1901 71       		.byte	0x71
 15287 1902 00       		.sleb128 0
 15288 1903 72       		.byte	0x72
 15289 1904 00       		.sleb128 0
 15290 1905 22       		.byte	0x22
 15291 1906 9F       		.byte	0x9f
 15292 1907 00000000 		.4byte	0
 15293 190b 00000000 		.4byte	0
 15294              	.LLST118:
 15295 190f FE000000 		.4byte	.LVL338
 15296 1913 04010000 		.4byte	.LVL339
 15297 1917 0800     		.2byte	0x8
 15298 1919 76       		.byte	0x76
 15299 191a 00       		.sleb128 0
 15300 191b 72       		.byte	0x72
 15301 191c 00       		.sleb128 0
 15302 191d 22       		.byte	0x22
 15303 191e 23       		.byte	0x23
 15304 191f 01       		.uleb128 0x1
 15305 1920 9F       		.byte	0x9f
 15306 1921 04010000 		.4byte	.LVL339
 15307 1925 0E010000 		.4byte	.LVL342
 15308 1929 0600     		.2byte	0x6
 15309 192b 76       		.byte	0x76
 15310 192c 00       		.sleb128 0
 15311 192d 72       		.byte	0x72
 15312 192e 00       		.sleb128 0
 15313 192f 22       		.byte	0x22
 15314 1930 9F       		.byte	0x9f
 15315 1931 00000000 		.4byte	0
 15316 1935 00000000 		.4byte	0
 15317              	.LLST119:
 15318 1939 FE000000 		.4byte	.LVL338
 15319 193d 06010000 		.4byte	.LVL340
 15320 1941 0200     		.2byte	0x2
 15321 1943 30       		.byte	0x30
 15322 1944 9F       		.byte	0x9f
 15323 1945 06010000 		.4byte	.LVL340
 15324 1949 08010000 		.4byte	.LVL341
 15325 194d 0100     		.2byte	0x1
 15326 194f 50       		.byte	0x50
 15327 1950 08010000 		.4byte	.LVL341
 15328 1954 0E010000 		.4byte	.LVL342
 15329 1958 0200     		.2byte	0x2
 15330 195a 30       		.byte	0x30
 15331 195b 9F       		.byte	0x9f
 15332 195c 00000000 		.4byte	0
 15333 1960 00000000 		.4byte	0
 15334              	.LLST120:
 15335 1964 00000000 		.4byte	.LVL370
 15336 1968 09000000 		.4byte	.LVL371-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 342


 15337 196c 0100     		.2byte	0x1
 15338 196e 50       		.byte	0x50
 15339 196f 09000000 		.4byte	.LVL371-1
 15340 1973 60000000 		.4byte	.LVL389
 15341 1977 0100     		.2byte	0x1
 15342 1979 54       		.byte	0x54
 15343 197a 60000000 		.4byte	.LVL389
 15344 197e 62000000 		.4byte	.LFE20
 15345 1982 0400     		.2byte	0x4
 15346 1984 F3       		.byte	0xf3
 15347 1985 01       		.uleb128 0x1
 15348 1986 50       		.byte	0x50
 15349 1987 9F       		.byte	0x9f
 15350 1988 00000000 		.4byte	0
 15351 198c 00000000 		.4byte	0
 15352              	.LLST121:
 15353 1990 0C000000 		.4byte	.LVL372
 15354 1994 10000000 		.4byte	.LVL373
 15355 1998 0100     		.2byte	0x1
 15356 199a 50       		.byte	0x50
 15357 199b 10000000 		.4byte	.LVL373
 15358 199f 18000000 		.4byte	.LVL375
 15359 19a3 0100     		.2byte	0x1
 15360 19a5 55       		.byte	0x55
 15361 19a6 18000000 		.4byte	.LVL375
 15362 19aa 28000000 		.4byte	.LVL377
 15363 19ae 0100     		.2byte	0x1
 15364 19b0 50       		.byte	0x50
 15365 19b1 28000000 		.4byte	.LVL377
 15366 19b5 30000000 		.4byte	.LVL379
 15367 19b9 0100     		.2byte	0x1
 15368 19bb 55       		.byte	0x55
 15369 19bc 30000000 		.4byte	.LVL379
 15370 19c0 5E000000 		.4byte	.LVL388
 15371 19c4 0200     		.2byte	0x2
 15372 19c6 30       		.byte	0x30
 15373 19c7 9F       		.byte	0x9f
 15374 19c8 00000000 		.4byte	0
 15375 19cc 00000000 		.4byte	0
 15376              	.LLST122:
 15377 19d0 1E000000 		.4byte	.LVL376
 15378 19d4 2D000000 		.4byte	.LVL378-1
 15379 19d8 0100     		.2byte	0x1
 15380 19da 53       		.byte	0x53
 15381 19db 30000000 		.4byte	.LVL379
 15382 19df 37000000 		.4byte	.LVL380-1
 15383 19e3 0100     		.2byte	0x1
 15384 19e5 53       		.byte	0x53
 15385 19e6 00000000 		.4byte	0
 15386 19ea 00000000 		.4byte	0
 15387              	.LLST123:
 15388 19ee 30000000 		.4byte	.LVL379
 15389 19f2 5E000000 		.4byte	.LVL388
 15390 19f6 0100     		.2byte	0x1
 15391 19f8 54       		.byte	0x54
 15392 19f9 00000000 		.4byte	0
 15393 19fd 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 343


 15394              	.LLST124:
 15395 1a01 3A000000 		.4byte	.LVL381
 15396 1a05 3E000000 		.4byte	.LVL382
 15397 1a09 0100     		.2byte	0x1
 15398 1a0b 50       		.byte	0x50
 15399 1a0c 3E000000 		.4byte	.LVL382
 15400 1a10 5E000000 		.4byte	.LVL388
 15401 1a14 0100     		.2byte	0x1
 15402 1a16 55       		.byte	0x55
 15403 1a17 00000000 		.4byte	0
 15404 1a1b 00000000 		.4byte	0
 15405              	.LLST125:
 15406 1a1f 3E000000 		.4byte	.LVL382
 15407 1a23 57000000 		.4byte	.LVL387-1
 15408 1a27 0100     		.2byte	0x1
 15409 1a29 50       		.byte	0x50
 15410 1a2a 00000000 		.4byte	0
 15411 1a2e 00000000 		.4byte	0
 15412              	.LLST126:
 15413 1a32 3E000000 		.4byte	.LVL382
 15414 1a36 44000000 		.4byte	.LVL383
 15415 1a3a 0300     		.2byte	0x3
 15416 1a3c 08       		.byte	0x8
 15417 1a3d 20       		.byte	0x20
 15418 1a3e 9F       		.byte	0x9f
 15419 1a3f 44000000 		.4byte	.LVL383
 15420 1a43 4E000000 		.4byte	.LVL385
 15421 1a47 0800     		.2byte	0x8
 15422 1a49 70       		.byte	0x70
 15423 1a4a 00       		.sleb128 0
 15424 1a4b 73       		.byte	0x73
 15425 1a4c 00       		.sleb128 0
 15426 1a4d 1C       		.byte	0x1c
 15427 1a4e 23       		.byte	0x23
 15428 1a4f 1F       		.uleb128 0x1f
 15429 1a50 9F       		.byte	0x9f
 15430 1a51 4E000000 		.4byte	.LVL385
 15431 1a55 50000000 		.4byte	.LVL386
 15432 1a59 0800     		.2byte	0x8
 15433 1a5b 70       		.byte	0x70
 15434 1a5c 00       		.sleb128 0
 15435 1a5d 73       		.byte	0x73
 15436 1a5e 00       		.sleb128 0
 15437 1a5f 1C       		.byte	0x1c
 15438 1a60 23       		.byte	0x23
 15439 1a61 20       		.uleb128 0x20
 15440 1a62 9F       		.byte	0x9f
 15441 1a63 50000000 		.4byte	.LVL386
 15442 1a67 57000000 		.4byte	.LVL387-1
 15443 1a6b 0800     		.2byte	0x8
 15444 1a6d 70       		.byte	0x70
 15445 1a6e 00       		.sleb128 0
 15446 1a6f 73       		.byte	0x73
 15447 1a70 00       		.sleb128 0
 15448 1a71 1C       		.byte	0x1c
 15449 1a72 23       		.byte	0x23
 15450 1a73 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 344


 15451 1a74 9F       		.byte	0x9f
 15452 1a75 00000000 		.4byte	0
 15453 1a79 00000000 		.4byte	0
 15454              	.LLST127:
 15455 1a7d 3E000000 		.4byte	.LVL382
 15456 1a81 5E000000 		.4byte	.LVL388
 15457 1a85 0200     		.2byte	0x2
 15458 1a87 30       		.byte	0x30
 15459 1a88 9F       		.byte	0x9f
 15460 1a89 00000000 		.4byte	0
 15461 1a8d 00000000 		.4byte	0
 15462              	.LLST129:
 15463 1a91 3E000000 		.4byte	.LVL382
 15464 1a95 44000000 		.4byte	.LVL383
 15465 1a99 0100     		.2byte	0x1
 15466 1a9b 50       		.byte	0x50
 15467 1a9c 44000000 		.4byte	.LVL383
 15468 1aa0 48000000 		.4byte	.LVL384
 15469 1aa4 0100     		.2byte	0x1
 15470 1aa6 53       		.byte	0x53
 15471 1aa7 48000000 		.4byte	.LVL384
 15472 1aab 4E000000 		.4byte	.LVL385
 15473 1aaf 0300     		.2byte	0x3
 15474 1ab1 73       		.byte	0x73
 15475 1ab2 01       		.sleb128 1
 15476 1ab3 9F       		.byte	0x9f
 15477 1ab4 4E000000 		.4byte	.LVL385
 15478 1ab8 57000000 		.4byte	.LVL387-1
 15479 1abc 0100     		.2byte	0x1
 15480 1abe 53       		.byte	0x53
 15481 1abf 00000000 		.4byte	0
 15482 1ac3 00000000 		.4byte	0
 15483              	.LLST130:
 15484 1ac7 00000000 		.4byte	.LVL390
 15485 1acb 06000000 		.4byte	.LVL391
 15486 1acf 0100     		.2byte	0x1
 15487 1ad1 50       		.byte	0x50
 15488 1ad2 06000000 		.4byte	.LVL391
 15489 1ad6 4C000000 		.4byte	.LVL404
 15490 1ada 0100     		.2byte	0x1
 15491 1adc 54       		.byte	0x54
 15492 1add 4C000000 		.4byte	.LVL404
 15493 1ae1 4E000000 		.4byte	.LFE19
 15494 1ae5 0400     		.2byte	0x4
 15495 1ae7 F3       		.byte	0xf3
 15496 1ae8 01       		.uleb128 0x1
 15497 1ae9 50       		.byte	0x50
 15498 1aea 9F       		.byte	0x9f
 15499 1aeb 00000000 		.4byte	0
 15500 1aef 00000000 		.4byte	0
 15501              	.LLST131:
 15502 1af3 00000000 		.4byte	.LVL390
 15503 1af7 06000000 		.4byte	.LVL391
 15504 1afb 0200     		.2byte	0x2
 15505 1afd 34       		.byte	0x34
 15506 1afe 9F       		.byte	0x9f
 15507 1aff 12000000 		.4byte	.LVL392
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 345


 15508 1b03 2C000000 		.4byte	.LVL396
 15509 1b07 0100     		.2byte	0x1
 15510 1b09 50       		.byte	0x50
 15511 1b0a 30000000 		.4byte	.LVL397
 15512 1b0e 32000000 		.4byte	.LVL398
 15513 1b12 0100     		.2byte	0x1
 15514 1b14 50       		.byte	0x50
 15515 1b15 38000000 		.4byte	.LVL399
 15516 1b19 3E000000 		.4byte	.LVL400
 15517 1b1d 0100     		.2byte	0x1
 15518 1b1f 50       		.byte	0x50
 15519 1b20 48000000 		.4byte	.LVL401
 15520 1b24 4A000000 		.4byte	.LVL402
 15521 1b28 0100     		.2byte	0x1
 15522 1b2a 50       		.byte	0x50
 15523 1b2b 4A000000 		.4byte	.LVL402
 15524 1b2f 4C000000 		.4byte	.LVL403
 15525 1b33 0200     		.2byte	0x2
 15526 1b35 34       		.byte	0x34
 15527 1b36 9F       		.byte	0x9f
 15528 1b37 00000000 		.4byte	0
 15529 1b3b 00000000 		.4byte	0
 15530              	.LLST132:
 15531 1b3f 1A000000 		.4byte	.LVL394
 15532 1b43 28000000 		.4byte	.LVL395
 15533 1b47 0100     		.2byte	0x1
 15534 1b49 53       		.byte	0x53
 15535 1b4a 28000000 		.4byte	.LVL395
 15536 1b4e 2C000000 		.4byte	.LVL396
 15537 1b52 0200     		.2byte	0x2
 15538 1b54 72       		.byte	0x72
 15539 1b55 00       		.sleb128 0
 15540 1b56 30000000 		.4byte	.LVL397
 15541 1b5a 37000000 		.4byte	.LVL399-1
 15542 1b5e 0200     		.2byte	0x2
 15543 1b60 72       		.byte	0x72
 15544 1b61 00       		.sleb128 0
 15545 1b62 48000000 		.4byte	.LVL401
 15546 1b66 4C000000 		.4byte	.LVL403
 15547 1b6a 0100     		.2byte	0x1
 15548 1b6c 53       		.byte	0x53
 15549 1b6d 00000000 		.4byte	0
 15550 1b71 00000000 		.4byte	0
 15551              	.LLST133:
 15552 1b75 18000000 		.4byte	.LVL393
 15553 1b79 2C000000 		.4byte	.LVL396
 15554 1b7d 0100     		.2byte	0x1
 15555 1b7f 52       		.byte	0x52
 15556 1b80 30000000 		.4byte	.LVL397
 15557 1b84 37000000 		.4byte	.LVL399-1
 15558 1b88 0100     		.2byte	0x1
 15559 1b8a 52       		.byte	0x52
 15560 1b8b 48000000 		.4byte	.LVL401
 15561 1b8f 4C000000 		.4byte	.LVL403
 15562 1b93 0100     		.2byte	0x1
 15563 1b95 52       		.byte	0x52
 15564 1b96 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 346


 15565 1b9a 00000000 		.4byte	0
 15566              	.LLST134:
 15567 1b9e 00000000 		.4byte	.LVL405
 15568 1ba2 0A000000 		.4byte	.LVL406
 15569 1ba6 0100     		.2byte	0x1
 15570 1ba8 50       		.byte	0x50
 15571 1ba9 0A000000 		.4byte	.LVL406
 15572 1bad 0E000000 		.4byte	.LVL407
 15573 1bb1 0100     		.2byte	0x1
 15574 1bb3 54       		.byte	0x54
 15575 1bb4 0E000000 		.4byte	.LVL407
 15576 1bb8 14000000 		.4byte	.LVL408
 15577 1bbc 0100     		.2byte	0x1
 15578 1bbe 50       		.byte	0x50
 15579 1bbf 14000000 		.4byte	.LVL408
 15580 1bc3 54000000 		.4byte	.LVL418
 15581 1bc7 0100     		.2byte	0x1
 15582 1bc9 54       		.byte	0x54
 15583 1bca 54000000 		.4byte	.LVL418
 15584 1bce 56000000 		.4byte	.LFE14
 15585 1bd2 0400     		.2byte	0x4
 15586 1bd4 F3       		.byte	0xf3
 15587 1bd5 01       		.uleb128 0x1
 15588 1bd6 50       		.byte	0x50
 15589 1bd7 9F       		.byte	0x9f
 15590 1bd8 00000000 		.4byte	0
 15591 1bdc 00000000 		.4byte	0
 15592              	.LLST135:
 15593 1be0 00000000 		.4byte	.LVL405
 15594 1be4 0A000000 		.4byte	.LVL406
 15595 1be8 0100     		.2byte	0x1
 15596 1bea 51       		.byte	0x51
 15597 1beb 0A000000 		.4byte	.LVL406
 15598 1bef 0E000000 		.4byte	.LVL407
 15599 1bf3 0400     		.2byte	0x4
 15600 1bf5 F3       		.byte	0xf3
 15601 1bf6 01       		.uleb128 0x1
 15602 1bf7 51       		.byte	0x51
 15603 1bf8 9F       		.byte	0x9f
 15604 1bf9 0E000000 		.4byte	.LVL407
 15605 1bfd 14000000 		.4byte	.LVL408
 15606 1c01 0100     		.2byte	0x1
 15607 1c03 51       		.byte	0x51
 15608 1c04 14000000 		.4byte	.LVL408
 15609 1c08 56000000 		.4byte	.LFE14
 15610 1c0c 0400     		.2byte	0x4
 15611 1c0e F3       		.byte	0xf3
 15612 1c0f 01       		.uleb128 0x1
 15613 1c10 51       		.byte	0x51
 15614 1c11 9F       		.byte	0x9f
 15615 1c12 00000000 		.4byte	0
 15616 1c16 00000000 		.4byte	0
 15617              	.LLST136:
 15618 1c1a 14000000 		.4byte	.LVL408
 15619 1c1e 50000000 		.4byte	.LVL415
 15620 1c22 0100     		.2byte	0x1
 15621 1c24 55       		.byte	0x55
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 347


 15622 1c25 52000000 		.4byte	.LVL416
 15623 1c29 54000000 		.4byte	.LVL417
 15624 1c2d 0100     		.2byte	0x1
 15625 1c2f 55       		.byte	0x55
 15626 1c30 00000000 		.4byte	0
 15627 1c34 00000000 		.4byte	0
 15628              	.LLST137:
 15629 1c38 14000000 		.4byte	.LVL408
 15630 1c3c 3C000000 		.4byte	.LVL414
 15631 1c40 0200     		.2byte	0x2
 15632 1c42 30       		.byte	0x30
 15633 1c43 9F       		.byte	0x9f
 15634 1c44 3C000000 		.4byte	.LVL414
 15635 1c48 52000000 		.4byte	.LVL416
 15636 1c4c 0100     		.2byte	0x1
 15637 1c4e 50       		.byte	0x50
 15638 1c4f 52000000 		.4byte	.LVL416
 15639 1c53 54000000 		.4byte	.LVL417
 15640 1c57 0200     		.2byte	0x2
 15641 1c59 30       		.byte	0x30
 15642 1c5a 9F       		.byte	0x9f
 15643 1c5b 00000000 		.4byte	0
 15644 1c5f 00000000 		.4byte	0
 15645              	.LLST138:
 15646 1c63 24000000 		.4byte	.LVL410
 15647 1c67 26000000 		.4byte	.LVL411
 15648 1c6b 0100     		.2byte	0x1
 15649 1c6d 50       		.byte	0x50
 15650 1c6e 2A000000 		.4byte	.LVL412
 15651 1c72 34000000 		.4byte	.LVL413
 15652 1c76 0100     		.2byte	0x1
 15653 1c78 50       		.byte	0x50
 15654 1c79 34000000 		.4byte	.LVL413
 15655 1c7d 52000000 		.4byte	.LVL416
 15656 1c81 0100     		.2byte	0x1
 15657 1c83 56       		.byte	0x56
 15658 1c84 52000000 		.4byte	.LVL416
 15659 1c88 54000000 		.4byte	.LVL417
 15660 1c8c 0100     		.2byte	0x1
 15661 1c8e 50       		.byte	0x50
 15662 1c8f 00000000 		.4byte	0
 15663 1c93 00000000 		.4byte	0
 15664              	.LLST139:
 15665 1c97 00000000 		.4byte	.LVL419
 15666 1c9b 10000000 		.4byte	.LVL421
 15667 1c9f 0100     		.2byte	0x1
 15668 1ca1 50       		.byte	0x50
 15669 1ca2 10000000 		.4byte	.LVL421
 15670 1ca6 38000000 		.4byte	.LFE28
 15671 1caa 0400     		.2byte	0x4
 15672 1cac F3       		.byte	0xf3
 15673 1cad 01       		.uleb128 0x1
 15674 1cae 50       		.byte	0x50
 15675 1caf 9F       		.byte	0x9f
 15676 1cb0 00000000 		.4byte	0
 15677 1cb4 00000000 		.4byte	0
 15678              	.LLST140:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 348


 15679 1cb8 0C000000 		.4byte	.LVL420
 15680 1cbc 2A000000 		.4byte	.LVL423
 15681 1cc0 0100     		.2byte	0x1
 15682 1cc2 52       		.byte	0x52
 15683 1cc3 2A000000 		.4byte	.LVL423
 15684 1cc7 30000000 		.4byte	.LVL424
 15685 1ccb 0500     		.2byte	0x5
 15686 1ccd 03       		.byte	0x3
 15687 1cce 24000000 		.4byte	FatFs
 15688 1cd2 00000000 		.4byte	0
 15689 1cd6 00000000 		.4byte	0
 15690              	.LLST141:
 15691 1cda 00000000 		.4byte	.LVL425
 15692 1cde 1A000000 		.4byte	.LVL427
 15693 1ce2 0100     		.2byte	0x1
 15694 1ce4 50       		.byte	0x50
 15695 1ce5 1A000000 		.4byte	.LVL427
 15696 1ce9 2E020000 		.4byte	.LVL478
 15697 1ced 0100     		.2byte	0x1
 15698 1cef 57       		.byte	0x57
 15699 1cf0 2E020000 		.4byte	.LVL478
 15700 1cf4 34020000 		.4byte	.LFE29
 15701 1cf8 0400     		.2byte	0x4
 15702 1cfa F3       		.byte	0xf3
 15703 1cfb 01       		.uleb128 0x1
 15704 1cfc 50       		.byte	0x50
 15705 1cfd 9F       		.byte	0x9f
 15706 1cfe 00000000 		.4byte	0
 15707 1d02 00000000 		.4byte	0
 15708              	.LLST142:
 15709 1d06 00000000 		.4byte	.LVL425
 15710 1d0a 1C000000 		.4byte	.LVL428
 15711 1d0e 0100     		.2byte	0x1
 15712 1d10 51       		.byte	0x51
 15713 1d11 1C000000 		.4byte	.LVL428
 15714 1d15 21000000 		.4byte	.LVL430-1
 15715 1d19 0200     		.2byte	0x2
 15716 1d1b 70       		.byte	0x70
 15717 1d1c 00       		.sleb128 0
 15718 1d1d 21000000 		.4byte	.LVL430-1
 15719 1d21 34020000 		.4byte	.LFE29
 15720 1d25 0300     		.2byte	0x3
 15721 1d27 91       		.byte	0x91
 15722 1d28 BC7F     		.sleb128 -68
 15723 1d2a 00000000 		.4byte	0
 15724 1d2e 00000000 		.4byte	0
 15725              	.LLST143:
 15726 1d32 00000000 		.4byte	.LVL425
 15727 1d36 0E000000 		.4byte	.LVL426
 15728 1d3a 0100     		.2byte	0x1
 15729 1d3c 52       		.byte	0x52
 15730 1d3d 0E000000 		.4byte	.LVL426
 15731 1d41 1E000000 		.4byte	.LVL429
 15732 1d45 0400     		.2byte	0x4
 15733 1d47 F3       		.byte	0xf3
 15734 1d48 01       		.uleb128 0x1
 15735 1d49 52       		.byte	0x52
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 349


 15736 1d4a 9F       		.byte	0x9f
 15737 1d4b 1E000000 		.4byte	.LVL429
 15738 1d4f 78000000 		.4byte	.LVL439
 15739 1d53 0500     		.2byte	0x5
 15740 1d55 75       		.byte	0x75
 15741 1d56 00       		.sleb128 0
 15742 1d57 4F       		.byte	0x4f
 15743 1d58 1A       		.byte	0x1a
 15744 1d59 9F       		.byte	0x9f
 15745 1d5a 78000000 		.4byte	.LVL439
 15746 1d5e 80000000 		.4byte	.LVL441
 15747 1d62 0600     		.2byte	0x6
 15748 1d64 7D       		.byte	0x7d
 15749 1d65 00       		.sleb128 0
 15750 1d66 06       		.byte	0x6
 15751 1d67 38       		.byte	0x38
 15752 1d68 21       		.byte	0x21
 15753 1d69 9F       		.byte	0x9f
 15754 1d6a 80000000 		.4byte	.LVL441
 15755 1d6e 88000000 		.4byte	.LVL443
 15756 1d72 0100     		.2byte	0x1
 15757 1d74 52       		.byte	0x52
 15758 1d75 88000000 		.4byte	.LVL443
 15759 1d79 9C000000 		.4byte	.LVL445
 15760 1d7d 0500     		.2byte	0x5
 15761 1d7f 75       		.byte	0x75
 15762 1d80 00       		.sleb128 0
 15763 1d81 4F       		.byte	0x4f
 15764 1d82 1A       		.byte	0x1a
 15765 1d83 9F       		.byte	0x9f
 15766 1d84 06010000 		.4byte	.LVL454
 15767 1d88 22010000 		.4byte	.LVL456
 15768 1d8c 0500     		.2byte	0x5
 15769 1d8e 75       		.byte	0x75
 15770 1d8f 00       		.sleb128 0
 15771 1d90 4F       		.byte	0x4f
 15772 1d91 1A       		.byte	0x1a
 15773 1d92 9F       		.byte	0x9f
 15774 1d93 28010000 		.4byte	.LVL457
 15775 1d97 2E010000 		.4byte	.LVL458
 15776 1d9b 0700     		.2byte	0x7
 15777 1d9d 7D       		.byte	0x7d
 15778 1d9e 00       		.sleb128 0
 15779 1d9f 06       		.byte	0x6
 15780 1da0 08       		.byte	0x8
 15781 1da1 20       		.byte	0x20
 15782 1da2 21       		.byte	0x21
 15783 1da3 9F       		.byte	0x9f
 15784 1da4 2E010000 		.4byte	.LVL458
 15785 1da8 30010000 		.4byte	.LVL459
 15786 1dac 0100     		.2byte	0x1
 15787 1dae 52       		.byte	0x52
 15788 1daf 24020000 		.4byte	.LVL473
 15789 1db3 2C020000 		.4byte	.LVL476
 15790 1db7 0500     		.2byte	0x5
 15791 1db9 75       		.byte	0x75
 15792 1dba 00       		.sleb128 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 350


 15793 1dbb 4F       		.byte	0x4f
 15794 1dbc 1A       		.byte	0x1a
 15795 1dbd 9F       		.byte	0x9f
 15796 1dbe 00000000 		.4byte	0
 15797 1dc2 00000000 		.4byte	0
 15798              	.LLST144:
 15799 1dc6 22000000 		.4byte	.LVL430
 15800 1dca 2C000000 		.4byte	.LVL431
 15801 1dce 0100     		.2byte	0x1
 15802 1dd0 50       		.byte	0x50
 15803 1dd1 32000000 		.4byte	.LVL432
 15804 1dd5 3A000000 		.4byte	.LVL434
 15805 1dd9 0100     		.2byte	0x1
 15806 1ddb 50       		.byte	0x50
 15807 1ddc 4E000000 		.4byte	.LVL435
 15808 1de0 8E000000 		.4byte	.LVL444
 15809 1de4 0100     		.2byte	0x1
 15810 1de6 50       		.byte	0x50
 15811 1de7 EE000000 		.4byte	.LVL450
 15812 1deb F6000000 		.4byte	.LVL451
 15813 1def 0100     		.2byte	0x1
 15814 1df1 50       		.byte	0x50
 15815 1df2 00010000 		.4byte	.LVL453
 15816 1df6 10010000 		.4byte	.LVL455
 15817 1dfa 0100     		.2byte	0x1
 15818 1dfc 50       		.byte	0x50
 15819 1dfd E4010000 		.4byte	.LVL472
 15820 1e01 24020000 		.4byte	.LVL473
 15821 1e05 0200     		.2byte	0x2
 15822 1e07 30       		.byte	0x30
 15823 1e08 9F       		.byte	0x9f
 15824 1e09 24020000 		.4byte	.LVL473
 15825 1e0d 26020000 		.4byte	.LVL474
 15826 1e11 0100     		.2byte	0x1
 15827 1e13 50       		.byte	0x50
 15828 1e14 00000000 		.4byte	0
 15829 1e18 00000000 		.4byte	0
 15830              	.LLST145:
 15831 1e1c 34000000 		.4byte	.LVL433
 15832 1e20 7E000000 		.4byte	.LVL440
 15833 1e24 0100     		.2byte	0x1
 15834 1e26 54       		.byte	0x54
 15835 1e27 82000000 		.4byte	.LVL442
 15836 1e2b 2E020000 		.4byte	.LVL477
 15837 1e2f 0100     		.2byte	0x1
 15838 1e31 54       		.byte	0x54
 15839 1e32 00000000 		.4byte	0
 15840 1e36 00000000 		.4byte	0
 15841              	.LLST146:
 15842 1e3a A6000000 		.4byte	.LVL446
 15843 1e3e C0000000 		.4byte	.LVL447
 15844 1e42 0100     		.2byte	0x1
 15845 1e44 50       		.byte	0x50
 15846 1e45 EA000000 		.4byte	.LVL449
 15847 1e49 ED000000 		.4byte	.LVL450-1
 15848 1e4d 0100     		.2byte	0x1
 15849 1e4f 53       		.byte	0x53
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 351


 15850 1e50 ED000000 		.4byte	.LVL450-1
 15851 1e54 06010000 		.4byte	.LVL454
 15852 1e58 0300     		.2byte	0x3
 15853 1e5a 91       		.byte	0x91
 15854 1e5b B47F     		.sleb128 -76
 15855 1e5d 00000000 		.4byte	0
 15856 1e61 00000000 		.4byte	0
 15857              	.LLST147:
 15858 1e65 E0000000 		.4byte	.LVL448
 15859 1e69 F8000000 		.4byte	.LVL452
 15860 1e6d 0100     		.2byte	0x1
 15861 1e6f 55       		.byte	0x55
 15862 1e70 F8000000 		.4byte	.LVL452
 15863 1e74 06010000 		.4byte	.LVL454
 15864 1e78 0300     		.2byte	0x3
 15865 1e7a 75       		.byte	0x75
 15866 1e7b 01       		.sleb128 1
 15867 1e7c 9F       		.byte	0x9f
 15868 1e7d 00000000 		.4byte	0
 15869 1e81 00000000 		.4byte	0
 15870              	.LLST148:
 15871 1e85 5C000000 		.4byte	.LVL436
 15872 1e89 66000000 		.4byte	.LVL437
 15873 1e8d 0200     		.2byte	0x2
 15874 1e8f 30       		.byte	0x30
 15875 1e90 9F       		.byte	0x9f
 15876 1e91 66000000 		.4byte	.LVL437
 15877 1e95 6E000000 		.4byte	.LVL438
 15878 1e99 0200     		.2byte	0x2
 15879 1e9b 31       		.byte	0x31
 15880 1e9c 9F       		.byte	0x9f
 15881 1e9d 6E000000 		.4byte	.LVL438
 15882 1ea1 78000000 		.4byte	.LVL439
 15883 1ea5 0200     		.2byte	0x2
 15884 1ea7 32       		.byte	0x32
 15885 1ea8 9F       		.byte	0x9f
 15886 1ea9 00000000 		.4byte	0
 15887 1ead 00000000 		.4byte	0
 15888              	.LLST149:
 15889 1eb1 3E010000 		.4byte	.LVL460
 15890 1eb5 D6010000 		.4byte	.LVL470
 15891 1eb9 0800     		.2byte	0x8
 15892 1ebb 75       		.byte	0x75
 15893 1ebc 00       		.sleb128 0
 15894 1ebd 30       		.byte	0x30
 15895 1ebe 2E       		.byte	0x2e
 15896 1ebf 08       		.byte	0x8
 15897 1ec0 FF       		.byte	0xff
 15898 1ec1 1A       		.byte	0x1a
 15899 1ec2 9F       		.byte	0x9f
 15900 1ec3 D6010000 		.4byte	.LVL470
 15901 1ec7 24020000 		.4byte	.LVL473
 15902 1ecb 0C00     		.2byte	0xc
 15903 1ecd 7D       		.byte	0x7d
 15904 1ece 00       		.sleb128 0
 15905 1ecf 06       		.byte	0x6
 15906 1ed0 09       		.byte	0x9
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 352


 15907 1ed1 FE       		.byte	0xfe
 15908 1ed2 1A       		.byte	0x1a
 15909 1ed3 30       		.byte	0x30
 15910 1ed4 2E       		.byte	0x2e
 15911 1ed5 08       		.byte	0x8
 15912 1ed6 FF       		.byte	0xff
 15913 1ed7 1A       		.byte	0x1a
 15914 1ed8 9F       		.byte	0x9f
 15915 1ed9 00000000 		.4byte	0
 15916 1edd 00000000 		.4byte	0
 15917              	.LLST150:
 15918 1ee1 3E010000 		.4byte	.LVL460
 15919 1ee5 4E010000 		.4byte	.LVL461
 15920 1ee9 0100     		.2byte	0x1
 15921 1eeb 56       		.byte	0x56
 15922 1eec 4E010000 		.4byte	.LVL461
 15923 1ef0 24020000 		.4byte	.LVL473
 15924 1ef4 0300     		.2byte	0x3
 15925 1ef6 91       		.byte	0x91
 15926 1ef7 4C       		.sleb128 -52
 15927 1ef8 9F       		.byte	0x9f
 15928 1ef9 00000000 		.4byte	0
 15929 1efd 00000000 		.4byte	0
 15930              	.LLST151:
 15931 1f01 3E010000 		.4byte	.LVL460
 15932 1f05 4E010000 		.4byte	.LVL461
 15933 1f09 0200     		.2byte	0x2
 15934 1f0b 30       		.byte	0x30
 15935 1f0c 9F       		.byte	0x9f
 15936 1f0d 4E010000 		.4byte	.LVL461
 15937 1f11 6C010000 		.4byte	.LVL463
 15938 1f15 0100     		.2byte	0x1
 15939 1f17 53       		.byte	0x53
 15940 1f18 6C010000 		.4byte	.LVL463
 15941 1f1c 76010000 		.4byte	.LVL464
 15942 1f20 0200     		.2byte	0x2
 15943 1f22 30       		.byte	0x30
 15944 1f23 9F       		.byte	0x9f
 15945 1f24 76010000 		.4byte	.LVL464
 15946 1f28 7C010000 		.4byte	.LVL465
 15947 1f2c 0200     		.2byte	0x2
 15948 1f2e 31       		.byte	0x31
 15949 1f2f 9F       		.byte	0x9f
 15950 1f30 7C010000 		.4byte	.LVL465
 15951 1f34 88010000 		.4byte	.LVL466
 15952 1f38 0200     		.2byte	0x2
 15953 1f3a 32       		.byte	0x32
 15954 1f3b 9F       		.byte	0x9f
 15955 1f3c 88010000 		.4byte	.LVL466
 15956 1f40 9E010000 		.4byte	.LVL467
 15957 1f44 0100     		.2byte	0x1
 15958 1f46 53       		.byte	0x53
 15959 1f47 9E010000 		.4byte	.LVL467
 15960 1f4b A0010000 		.4byte	.LVL468
 15961 1f4f 0200     		.2byte	0x2
 15962 1f51 31       		.byte	0x31
 15963 1f52 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 353


 15964 1f53 B8010000 		.4byte	.LVL469
 15965 1f57 DC010000 		.4byte	.LVL471
 15966 1f5b 0100     		.2byte	0x1
 15967 1f5d 53       		.byte	0x53
 15968 1f5e 00000000 		.4byte	0
 15969 1f62 00000000 		.4byte	0
 15970              	.LLST152:
 15971 1f66 00000000 		.4byte	.LVL479
 15972 1f6a 12000000 		.4byte	.LVL484
 15973 1f6e 0100     		.2byte	0x1
 15974 1f70 50       		.byte	0x50
 15975 1f71 12000000 		.4byte	.LVL484
 15976 1f75 5A010000 		.4byte	.LVL521
 15977 1f79 0100     		.2byte	0x1
 15978 1f7b 54       		.byte	0x54
 15979 1f7c 5A010000 		.4byte	.LVL521
 15980 1f80 5C010000 		.4byte	.LFE30
 15981 1f84 0400     		.2byte	0x4
 15982 1f86 F3       		.byte	0xf3
 15983 1f87 01       		.uleb128 0x1
 15984 1f88 50       		.byte	0x50
 15985 1f89 9F       		.byte	0x9f
 15986 1f8a 00000000 		.4byte	0
 15987 1f8e 00000000 		.4byte	0
 15988              	.LLST153:
 15989 1f92 00000000 		.4byte	.LVL479
 15990 1f96 10000000 		.4byte	.LVL483
 15991 1f9a 0100     		.2byte	0x1
 15992 1f9c 51       		.byte	0x51
 15993 1f9d 10000000 		.4byte	.LVL483
 15994 1fa1 42000000 		.4byte	.LVL488
 15995 1fa5 0200     		.2byte	0x2
 15996 1fa7 7D       		.byte	0x7d
 15997 1fa8 00       		.sleb128 0
 15998 1fa9 42000000 		.4byte	.LVL488
 15999 1fad 5C010000 		.4byte	.LFE30
 16000 1fb1 0400     		.2byte	0x4
 16001 1fb3 F3       		.byte	0xf3
 16002 1fb4 01       		.uleb128 0x1
 16003 1fb5 51       		.byte	0x51
 16004 1fb6 9F       		.byte	0x9f
 16005 1fb7 00000000 		.4byte	0
 16006 1fbb 00000000 		.4byte	0
 16007              	.LLST154:
 16008 1fbf 00000000 		.4byte	.LVL479
 16009 1fc3 17000000 		.4byte	.LVL485-1
 16010 1fc7 0100     		.2byte	0x1
 16011 1fc9 52       		.byte	0x52
 16012 1fca 17000000 		.4byte	.LVL485-1
 16013 1fce 42000000 		.4byte	.LVL488
 16014 1fd2 0100     		.2byte	0x1
 16015 1fd4 55       		.byte	0x55
 16016 1fd5 42000000 		.4byte	.LVL488
 16017 1fd9 A6000000 		.4byte	.LVL496
 16018 1fdd 0100     		.2byte	0x1
 16019 1fdf 57       		.byte	0x57
 16020 1fe0 AA000000 		.4byte	.LVL497
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 354


 16021 1fe4 24010000 		.4byte	.LVL513
 16022 1fe8 0100     		.2byte	0x1
 16023 1fea 57       		.byte	0x57
 16024 1feb 24010000 		.4byte	.LVL513
 16025 1fef 26010000 		.4byte	.LVL514
 16026 1ff3 0100     		.2byte	0x1
 16027 1ff5 55       		.byte	0x55
 16028 1ff6 26010000 		.4byte	.LVL514
 16029 1ffa 58010000 		.4byte	.LVL520
 16030 1ffe 0100     		.2byte	0x1
 16031 2000 57       		.byte	0x57
 16032 2001 00000000 		.4byte	0
 16033 2005 00000000 		.4byte	0
 16034              	.LLST155:
 16035 2009 00000000 		.4byte	.LVL479
 16036 200d 06000000 		.4byte	.LVL480
 16037 2011 0100     		.2byte	0x1
 16038 2013 53       		.byte	0x53
 16039 2014 06000000 		.4byte	.LVL480
 16040 2018 5A010000 		.4byte	.LVL522
 16041 201c 0100     		.2byte	0x1
 16042 201e 56       		.byte	0x56
 16043 201f 5A010000 		.4byte	.LVL522
 16044 2023 5C010000 		.4byte	.LFE30
 16045 2027 0400     		.2byte	0x4
 16046 2029 F3       		.byte	0xf3
 16047 202a 01       		.uleb128 0x1
 16048 202b 53       		.byte	0x53
 16049 202c 9F       		.byte	0x9f
 16050 202d 00000000 		.4byte	0
 16051 2031 00000000 		.4byte	0
 16052              	.LLST156:
 16053 2035 18000000 		.4byte	.LVL485
 16054 2039 22000000 		.4byte	.LVL486
 16055 203d 0100     		.2byte	0x1
 16056 203f 50       		.byte	0x50
 16057 2040 00000000 		.4byte	0
 16058 2044 00000000 		.4byte	0
 16059              	.LLST157:
 16060 2048 C2000000 		.4byte	.LVL501
 16061 204c C4000000 		.4byte	.LVL502
 16062 2050 0100     		.2byte	0x1
 16063 2052 50       		.byte	0x50
 16064 2053 CA000000 		.4byte	.LVL503
 16065 2057 DA000000 		.4byte	.LVL504
 16066 205b 0100     		.2byte	0x1
 16067 205d 50       		.byte	0x50
 16068 205e DC000000 		.4byte	.LVL505
 16069 2062 E4000000 		.4byte	.LVL506
 16070 2066 0100     		.2byte	0x1
 16071 2068 50       		.byte	0x50
 16072 2069 00000000 		.4byte	0
 16073 206d 00000000 		.4byte	0
 16074              	.LLST158:
 16075 2071 66000000 		.4byte	.LVL490
 16076 2075 72000000 		.4byte	.LVL491
 16077 2079 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 355


 16078 207b 50       		.byte	0x50
 16079 207c 72000000 		.4byte	.LVL491
 16080 2080 78000000 		.4byte	.LVL492
 16081 2084 0100     		.2byte	0x1
 16082 2086 53       		.byte	0x53
 16083 2087 78000000 		.4byte	.LVL492
 16084 208b A2000000 		.4byte	.LVL495
 16085 208f 0200     		.2byte	0x2
 16086 2091 91       		.byte	0x91
 16087 2092 64       		.sleb128 -28
 16088 2093 F2000000 		.4byte	.LVL507
 16089 2097 0E010000 		.4byte	.LVL509
 16090 209b 0200     		.2byte	0x2
 16091 209d 91       		.byte	0x91
 16092 209e 64       		.sleb128 -28
 16093 209f 0E010000 		.4byte	.LVL509
 16094 20a3 10010000 		.4byte	.LVL510
 16095 20a7 0100     		.2byte	0x1
 16096 20a9 53       		.byte	0x53
 16097 20aa 10010000 		.4byte	.LVL510
 16098 20ae 12010000 		.4byte	.LVL511
 16099 20b2 0200     		.2byte	0x2
 16100 20b4 91       		.byte	0x91
 16101 20b5 64       		.sleb128 -28
 16102 20b6 00000000 		.4byte	0
 16103 20ba 00000000 		.4byte	0
 16104              	.LLST159:
 16105 20be 3A000000 		.4byte	.LVL487
 16106 20c2 42000000 		.4byte	.LVL488
 16107 20c6 0100     		.2byte	0x1
 16108 20c8 53       		.byte	0x53
 16109 20c9 00000000 		.4byte	0
 16110 20cd 00000000 		.4byte	0
 16111              	.LLST160:
 16112 20d1 A2000000 		.4byte	.LVL495
 16113 20d5 B6000000 		.4byte	.LVL499
 16114 20d9 0100     		.2byte	0x1
 16115 20db 55       		.byte	0x55
 16116 20dc 1E010000 		.4byte	.LVL512
 16117 20e0 26010000 		.4byte	.LVL514
 16118 20e4 0100     		.2byte	0x1
 16119 20e6 53       		.byte	0x53
 16120 20e7 26010000 		.4byte	.LVL514
 16121 20eb 32010000 		.4byte	.LVL516
 16122 20ef 0100     		.2byte	0x1
 16123 20f1 55       		.byte	0x55
 16124 20f2 40010000 		.4byte	.LVL517
 16125 20f6 56010000 		.4byte	.LVL519
 16126 20fa 0100     		.2byte	0x1
 16127 20fc 55       		.byte	0x55
 16128 20fd 00000000 		.4byte	0
 16129 2101 00000000 		.4byte	0
 16130              	.LLST161:
 16131 2105 72000000 		.4byte	.LVL491
 16132 2109 A2000000 		.4byte	.LVL495
 16133 210d 0100     		.2byte	0x1
 16134 210f 55       		.byte	0x55
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 356


 16135 2110 F2000000 		.4byte	.LVL507
 16136 2114 12010000 		.4byte	.LVL511
 16137 2118 0100     		.2byte	0x1
 16138 211a 55       		.byte	0x55
 16139 211b 00000000 		.4byte	0
 16140 211f 00000000 		.4byte	0
 16141              	.LLST162:
 16142 2123 56000000 		.4byte	.LVL489
 16143 2127 A2000000 		.4byte	.LVL495
 16144 212b 0200     		.2byte	0x2
 16145 212d 91       		.byte	0x91
 16146 212e 5C       		.sleb128 -36
 16147 212f BC000000 		.4byte	.LVL500
 16148 2133 12010000 		.4byte	.LVL511
 16149 2137 0200     		.2byte	0x2
 16150 2139 91       		.byte	0x91
 16151 213a 5C       		.sleb128 -36
 16152 213b 00000000 		.4byte	0
 16153 213f 00000000 		.4byte	0
 16154              	.LLST163:
 16155 2143 08000000 		.4byte	.LVL481
 16156 2147 0A000000 		.4byte	.LVL482
 16157 214b 0200     		.2byte	0x2
 16158 214d 7D       		.byte	0x7d
 16159 214e 00       		.sleb128 0
 16160 214f 42000000 		.4byte	.LVL488
 16161 2153 AA000000 		.4byte	.LVL497
 16162 2157 0200     		.2byte	0x2
 16163 2159 7D       		.byte	0x7d
 16164 215a 00       		.sleb128 0
 16165 215b AA000000 		.4byte	.LVL497
 16166 215f AC000000 		.4byte	.LVL498
 16167 2163 0100     		.2byte	0x1
 16168 2165 53       		.byte	0x53
 16169 2166 AC000000 		.4byte	.LVL498
 16170 216a 58010000 		.4byte	.LVL520
 16171 216e 0200     		.2byte	0x2
 16172 2170 7D       		.byte	0x7d
 16173 2171 00       		.sleb128 0
 16174 2172 00000000 		.4byte	0
 16175 2176 00000000 		.4byte	0
 16176              	.LLST164:
 16177 217a 00000000 		.4byte	.LVL523
 16178 217e 12000000 		.4byte	.LVL528
 16179 2182 0100     		.2byte	0x1
 16180 2184 50       		.byte	0x50
 16181 2185 12000000 		.4byte	.LVL528
 16182 2189 A4010000 		.4byte	.LVL571
 16183 218d 0100     		.2byte	0x1
 16184 218f 54       		.byte	0x54
 16185 2190 A4010000 		.4byte	.LVL571
 16186 2194 A6010000 		.4byte	.LFE31
 16187 2198 0400     		.2byte	0x4
 16188 219a F3       		.byte	0xf3
 16189 219b 01       		.uleb128 0x1
 16190 219c 50       		.byte	0x50
 16191 219d 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 357


 16192 219e 00000000 		.4byte	0
 16193 21a2 00000000 		.4byte	0
 16194              	.LLST165:
 16195 21a6 00000000 		.4byte	.LVL523
 16196 21aa 0E000000 		.4byte	.LVL527
 16197 21ae 0100     		.2byte	0x1
 16198 21b0 51       		.byte	0x51
 16199 21b1 0E000000 		.4byte	.LVL527
 16200 21b5 40000000 		.4byte	.LVL531
 16201 21b9 0200     		.2byte	0x2
 16202 21bb 91       		.byte	0x91
 16203 21bc 5C       		.sleb128 -36
 16204 21bd 40000000 		.4byte	.LVL531
 16205 21c1 A6010000 		.4byte	.LFE31
 16206 21c5 0400     		.2byte	0x4
 16207 21c7 F3       		.byte	0xf3
 16208 21c8 01       		.uleb128 0x1
 16209 21c9 51       		.byte	0x51
 16210 21ca 9F       		.byte	0x9f
 16211 21cb 00000000 		.4byte	0
 16212 21cf 00000000 		.4byte	0
 16213              	.LLST166:
 16214 21d3 00000000 		.4byte	.LVL523
 16215 21d7 17000000 		.4byte	.LVL529-1
 16216 21db 0100     		.2byte	0x1
 16217 21dd 52       		.byte	0x52
 16218 21de 17000000 		.4byte	.LVL529-1
 16219 21e2 4A010000 		.4byte	.LVL560
 16220 21e6 0100     		.2byte	0x1
 16221 21e8 56       		.byte	0x56
 16222 21e9 4A010000 		.4byte	.LVL560
 16223 21ed 4C010000 		.4byte	.LVL561
 16224 21f1 0100     		.2byte	0x1
 16225 21f3 55       		.byte	0x55
 16226 21f4 4C010000 		.4byte	.LVL561
 16227 21f8 84010000 		.4byte	.LVL566
 16228 21fc 0100     		.2byte	0x1
 16229 21fe 56       		.byte	0x56
 16230 21ff 88010000 		.4byte	.LVL567
 16231 2203 A4010000 		.4byte	.LVL572
 16232 2207 0100     		.2byte	0x1
 16233 2209 56       		.byte	0x56
 16234 220a 00000000 		.4byte	0
 16235 220e 00000000 		.4byte	0
 16236              	.LLST167:
 16237 2212 00000000 		.4byte	.LVL523
 16238 2216 06000000 		.4byte	.LVL524
 16239 221a 0100     		.2byte	0x1
 16240 221c 53       		.byte	0x53
 16241 221d 06000000 		.4byte	.LVL524
 16242 2221 A4010000 		.4byte	.LVL573
 16243 2225 0100     		.2byte	0x1
 16244 2227 57       		.byte	0x57
 16245 2228 A4010000 		.4byte	.LVL573
 16246 222c A6010000 		.4byte	.LFE31
 16247 2230 0400     		.2byte	0x4
 16248 2232 F3       		.byte	0xf3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 358


 16249 2233 01       		.uleb128 0x1
 16250 2234 53       		.byte	0x53
 16251 2235 9F       		.byte	0x9f
 16252 2236 00000000 		.4byte	0
 16253 223a 00000000 		.4byte	0
 16254              	.LLST168:
 16255 223e 18000000 		.4byte	.LVL529
 16256 2242 3C000000 		.4byte	.LVL530
 16257 2246 0100     		.2byte	0x1
 16258 2248 50       		.byte	0x50
 16259 2249 00000000 		.4byte	0
 16260 224d 00000000 		.4byte	0
 16261              	.LLST169:
 16262 2251 60000000 		.4byte	.LVL533
 16263 2255 67000000 		.4byte	.LVL534-1
 16264 2259 0100     		.2byte	0x1
 16265 225b 51       		.byte	0x51
 16266 225c 6A000000 		.4byte	.LVL535
 16267 2260 6E000000 		.4byte	.LVL536
 16268 2264 0100     		.2byte	0x1
 16269 2266 50       		.byte	0x50
 16270 2267 76000000 		.4byte	.LVL538
 16271 226b 7A000000 		.4byte	.LVL539
 16272 226f 0100     		.2byte	0x1
 16273 2271 50       		.byte	0x50
 16274 2272 88000000 		.4byte	.LVL540
 16275 2276 92000000 		.4byte	.LVL541
 16276 227a 0100     		.2byte	0x1
 16277 227c 51       		.byte	0x51
 16278 227d 00000000 		.4byte	0
 16279 2281 00000000 		.4byte	0
 16280              	.LLST170:
 16281 2285 B2000000 		.4byte	.LVL543
 16282 2289 B6000000 		.4byte	.LVL544
 16283 228d 0100     		.2byte	0x1
 16284 228f 50       		.byte	0x50
 16285 2290 C4000000 		.4byte	.LVL545
 16286 2294 C8000000 		.4byte	.LVL546
 16287 2298 0100     		.2byte	0x1
 16288 229a 50       		.byte	0x50
 16289 229b C8000000 		.4byte	.LVL546
 16290 229f CA000000 		.4byte	.LVL547
 16291 22a3 0100     		.2byte	0x1
 16292 22a5 53       		.byte	0x53
 16293 22a6 CA000000 		.4byte	.LVL547
 16294 22aa 38010000 		.4byte	.LVL558
 16295 22ae 0200     		.2byte	0x2
 16296 22b0 91       		.byte	0x91
 16297 22b1 64       		.sleb128 -28
 16298 22b2 00000000 		.4byte	0
 16299 22b6 00000000 		.4byte	0
 16300              	.LLST171:
 16301 22ba 18010000 		.4byte	.LVL554
 16302 22be 1A010000 		.4byte	.LVL555
 16303 22c2 0100     		.2byte	0x1
 16304 22c4 55       		.byte	0x55
 16305 22c5 44010000 		.4byte	.LVL559
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 359


 16306 22c9 4C010000 		.4byte	.LVL561
 16307 22cd 0100     		.2byte	0x1
 16308 22cf 53       		.byte	0x53
 16309 22d0 4C010000 		.4byte	.LVL561
 16310 22d4 58010000 		.4byte	.LVL563
 16311 22d8 0100     		.2byte	0x1
 16312 22da 55       		.byte	0x55
 16313 22db 66010000 		.4byte	.LVL564
 16314 22df 96010000 		.4byte	.LVL569
 16315 22e3 0100     		.2byte	0x1
 16316 22e5 55       		.byte	0x55
 16317 22e6 00000000 		.4byte	0
 16318 22ea 00000000 		.4byte	0
 16319              	.LLST172:
 16320 22ee CC000000 		.4byte	.LVL548
 16321 22f2 D0000000 		.4byte	.LVL549
 16322 22f6 0100     		.2byte	0x1
 16323 22f8 53       		.byte	0x53
 16324 22f9 D0000000 		.4byte	.LVL549
 16325 22fd 1A010000 		.4byte	.LVL555
 16326 2301 0200     		.2byte	0x2
 16327 2303 7D       		.byte	0x7d
 16328 2304 00       		.sleb128 0
 16329 2305 1A010000 		.4byte	.LVL555
 16330 2309 1C010000 		.4byte	.LVL556
 16331 230d 0100     		.2byte	0x1
 16332 230f 53       		.byte	0x53
 16333 2310 1C010000 		.4byte	.LVL556
 16334 2314 38010000 		.4byte	.LVL558
 16335 2318 0200     		.2byte	0x2
 16336 231a 7D       		.byte	0x7d
 16337 231b 00       		.sleb128 0
 16338 231c 00000000 		.4byte	0
 16339 2320 00000000 		.4byte	0
 16340              	.LLST173:
 16341 2324 08000000 		.4byte	.LVL525
 16342 2328 0C000000 		.4byte	.LVL526
 16343 232c 0200     		.2byte	0x2
 16344 232e 91       		.byte	0x91
 16345 232f 5C       		.sleb128 -36
 16346 2330 40000000 		.4byte	.LVL531
 16347 2334 88010000 		.4byte	.LVL567
 16348 2338 0200     		.2byte	0x2
 16349 233a 91       		.byte	0x91
 16350 233b 5C       		.sleb128 -36
 16351 233c 88010000 		.4byte	.LVL567
 16352 2340 8A010000 		.4byte	.LVL568
 16353 2344 0100     		.2byte	0x1
 16354 2346 53       		.byte	0x53
 16355 2347 8A010000 		.4byte	.LVL568
 16356 234b A0010000 		.4byte	.LVL570
 16357 234f 0200     		.2byte	0x2
 16358 2351 91       		.byte	0x91
 16359 2352 5C       		.sleb128 -36
 16360 2353 00000000 		.4byte	0
 16361 2357 00000000 		.4byte	0
 16362              	.LLST174:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 360


 16363 235b 56000000 		.4byte	.LVL532
 16364 235f 7A000000 		.4byte	.LVL539
 16365 2363 0100     		.2byte	0x1
 16366 2365 55       		.byte	0x55
 16367 2366 88000000 		.4byte	.LVL540
 16368 236a F0000000 		.4byte	.LVL552
 16369 236e 0100     		.2byte	0x1
 16370 2370 55       		.byte	0x55
 16371 2371 1A010000 		.4byte	.LVL555
 16372 2375 38010000 		.4byte	.LVL558
 16373 2379 0100     		.2byte	0x1
 16374 237b 55       		.byte	0x55
 16375 237c 00000000 		.4byte	0
 16376 2380 00000000 		.4byte	0
 16377              	.LLST175:
 16378 2384 00000000 		.4byte	.LVL574
 16379 2388 08000000 		.4byte	.LVL575
 16380 238c 0100     		.2byte	0x1
 16381 238e 50       		.byte	0x50
 16382 238f 08000000 		.4byte	.LVL575
 16383 2393 78000000 		.4byte	.LVL584
 16384 2397 0100     		.2byte	0x1
 16385 2399 54       		.byte	0x54
 16386 239a 78000000 		.4byte	.LVL584
 16387 239e 7A000000 		.4byte	.LFE32
 16388 23a2 0400     		.2byte	0x4
 16389 23a4 F3       		.byte	0xf3
 16390 23a5 01       		.uleb128 0x1
 16391 23a6 50       		.byte	0x50
 16392 23a7 9F       		.byte	0x9f
 16393 23a8 00000000 		.4byte	0
 16394 23ac 00000000 		.4byte	0
 16395              	.LLST176:
 16396 23b0 0C000000 		.4byte	.LVL576
 16397 23b4 1A000000 		.4byte	.LVL577
 16398 23b8 0100     		.2byte	0x1
 16399 23ba 50       		.byte	0x50
 16400 23bb 20000000 		.4byte	.LVL578
 16401 23bf 57000000 		.4byte	.LVL581-1
 16402 23c3 0100     		.2byte	0x1
 16403 23c5 50       		.byte	0x50
 16404 23c6 78000000 		.4byte	.LVL583
 16405 23ca 7A000000 		.4byte	.LFE32
 16406 23ce 0100     		.2byte	0x1
 16407 23d0 50       		.byte	0x50
 16408 23d1 00000000 		.4byte	0
 16409 23d5 00000000 		.4byte	0
 16410              	.LLST177:
 16411 23d9 24000000 		.4byte	.LVL579
 16412 23dd 78000000 		.4byte	.LVL583
 16413 23e1 0100     		.2byte	0x1
 16414 23e3 54       		.byte	0x54
 16415 23e4 00000000 		.4byte	0
 16416 23e8 00000000 		.4byte	0
 16417              	.LLST178:
 16418 23ec 58000000 		.4byte	.LVL581
 16419 23f0 62000000 		.4byte	.LVL582
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 361


 16420 23f4 0100     		.2byte	0x1
 16421 23f6 50       		.byte	0x50
 16422 23f7 00000000 		.4byte	0
 16423 23fb 00000000 		.4byte	0
 16424              	.LLST179:
 16425 23ff 26000000 		.4byte	.LVL580
 16426 2403 78000000 		.4byte	.LVL583
 16427 2407 0100     		.2byte	0x1
 16428 2409 55       		.byte	0x55
 16429 240a 00000000 		.4byte	0
 16430 240e 00000000 		.4byte	0
 16431              	.LLST180:
 16432 2412 00000000 		.4byte	.LVL585
 16433 2416 07000000 		.4byte	.LVL586-1
 16434 241a 0100     		.2byte	0x1
 16435 241c 50       		.byte	0x50
 16436 241d 07000000 		.4byte	.LVL586-1
 16437 2421 42000000 		.4byte	.LVL597
 16438 2425 0100     		.2byte	0x1
 16439 2427 54       		.byte	0x54
 16440 2428 42000000 		.4byte	.LVL597
 16441 242c 4C000000 		.4byte	.LFE33
 16442 2430 0400     		.2byte	0x4
 16443 2432 F3       		.byte	0xf3
 16444 2433 01       		.uleb128 0x1
 16445 2434 50       		.byte	0x50
 16446 2435 9F       		.byte	0x9f
 16447 2436 00000000 		.4byte	0
 16448 243a 00000000 		.4byte	0
 16449              	.LLST181:
 16450 243e 08000000 		.4byte	.LVL586
 16451 2442 3C000000 		.4byte	.LVL594
 16452 2446 0100     		.2byte	0x1
 16453 2448 50       		.byte	0x50
 16454 2449 3C000000 		.4byte	.LVL594
 16455 244d 3E000000 		.4byte	.LVL595
 16456 2451 0200     		.2byte	0x2
 16457 2453 32       		.byte	0x32
 16458 2454 9F       		.byte	0x9f
 16459 2455 3E000000 		.4byte	.LVL595
 16460 2459 42000000 		.4byte	.LVL596
 16461 245d 0200     		.2byte	0x2
 16462 245f 30       		.byte	0x30
 16463 2460 9F       		.byte	0x9f
 16464 2461 00000000 		.4byte	0
 16465 2465 00000000 		.4byte	0
 16466              	.LLST182:
 16467 2469 0C000000 		.4byte	.LVL587
 16468 246d 10000000 		.4byte	.LVL588
 16469 2471 0200     		.2byte	0x2
 16470 2473 74       		.byte	0x74
 16471 2474 24       		.sleb128 36
 16472 2475 10000000 		.4byte	.LVL588
 16473 2479 2E000000 		.4byte	.LVL591
 16474 247d 0100     		.2byte	0x1
 16475 247f 53       		.byte	0x53
 16476 2480 2E000000 		.4byte	.LVL591
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 362


 16477 2484 3A000000 		.4byte	.LVL593
 16478 2488 0600     		.2byte	0x6
 16479 248a 74       		.byte	0x74
 16480 248b 24       		.sleb128 36
 16481 248c 06       		.byte	0x6
 16482 248d 31       		.byte	0x31
 16483 248e 1C       		.byte	0x1c
 16484 248f 9F       		.byte	0x9f
 16485 2490 3A000000 		.4byte	.LVL593
 16486 2494 3E000000 		.4byte	.LVL595
 16487 2498 0100     		.2byte	0x1
 16488 249a 53       		.byte	0x53
 16489 249b 3E000000 		.4byte	.LVL595
 16490 249f 42000000 		.4byte	.LVL596
 16491 24a3 0600     		.2byte	0x6
 16492 24a5 74       		.byte	0x74
 16493 24a6 24       		.sleb128 36
 16494 24a7 06       		.byte	0x6
 16495 24a8 31       		.byte	0x31
 16496 24a9 1C       		.byte	0x1c
 16497 24aa 9F       		.byte	0x9f
 16498 24ab 00000000 		.4byte	0
 16499 24af 00000000 		.4byte	0
 16500              	.LLST183:
 16501 24b3 22000000 		.4byte	.LVL589
 16502 24b7 2C000000 		.4byte	.LVL590
 16503 24bb 0100     		.2byte	0x1
 16504 24bd 56       		.byte	0x56
 16505 24be 2C000000 		.4byte	.LVL590
 16506 24c2 36000000 		.4byte	.LVL592
 16507 24c6 0100     		.2byte	0x1
 16508 24c8 55       		.byte	0x55
 16509 24c9 36000000 		.4byte	.LVL592
 16510 24cd 3A000000 		.4byte	.LVL593
 16511 24d1 0200     		.2byte	0x2
 16512 24d3 30       		.byte	0x30
 16513 24d4 9F       		.byte	0x9f
 16514 24d5 00000000 		.4byte	0
 16515 24d9 00000000 		.4byte	0
 16516              	.LLST184:
 16517 24dd 00000000 		.4byte	.LVL598
 16518 24e1 0A000000 		.4byte	.LVL600
 16519 24e5 0100     		.2byte	0x1
 16520 24e7 50       		.byte	0x50
 16521 24e8 0A000000 		.4byte	.LVL600
 16522 24ec 28010000 		.4byte	.LVL634
 16523 24f0 0100     		.2byte	0x1
 16524 24f2 54       		.byte	0x54
 16525 24f3 28010000 		.4byte	.LVL634
 16526 24f7 2A010000 		.4byte	.LFE34
 16527 24fb 0400     		.2byte	0x4
 16528 24fd F3       		.byte	0xf3
 16529 24fe 01       		.uleb128 0x1
 16530 24ff 50       		.byte	0x50
 16531 2500 9F       		.byte	0x9f
 16532 2501 00000000 		.4byte	0
 16533 2505 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 363


 16534              	.LLST185:
 16535 2509 00000000 		.4byte	.LVL598
 16536 250d 08000000 		.4byte	.LVL599
 16537 2511 0100     		.2byte	0x1
 16538 2513 51       		.byte	0x51
 16539 2514 08000000 		.4byte	.LVL599
 16540 2518 06010000 		.4byte	.LVL631
 16541 251c 0100     		.2byte	0x1
 16542 251e 55       		.byte	0x55
 16543 251f 00000000 		.4byte	0
 16544 2523 00000000 		.4byte	0
 16545              	.LLST186:
 16546 2527 0E000000 		.4byte	.LVL601
 16547 252b 18000000 		.4byte	.LVL602
 16548 252f 0100     		.2byte	0x1
 16549 2531 50       		.byte	0x50
 16550 2532 00000000 		.4byte	0
 16551 2536 00000000 		.4byte	0
 16552              	.LLST187:
 16553 253a 6C000000 		.4byte	.LVL612
 16554 253e 6E000000 		.4byte	.LVL613
 16555 2542 0100     		.2byte	0x1
 16556 2544 51       		.byte	0x51
 16557 2545 70000000 		.4byte	.LVL614
 16558 2549 79000000 		.4byte	.LVL615-1
 16559 254d 0100     		.2byte	0x1
 16560 254f 51       		.byte	0x51
 16561 2550 7C000000 		.4byte	.LVL616
 16562 2554 86000000 		.4byte	.LVL617
 16563 2558 0100     		.2byte	0x1
 16564 255a 50       		.byte	0x50
 16565 255b 86000000 		.4byte	.LVL617
 16566 255f 8E000000 		.4byte	.LVL618
 16567 2563 0100     		.2byte	0x1
 16568 2565 51       		.byte	0x51
 16569 2566 8E000000 		.4byte	.LVL618
 16570 256a A4000000 		.4byte	.LVL619
 16571 256e 0100     		.2byte	0x1
 16572 2570 50       		.byte	0x50
 16573 2571 A4000000 		.4byte	.LVL619
 16574 2575 B3000000 		.4byte	.LVL620-1
 16575 2579 0100     		.2byte	0x1
 16576 257b 51       		.byte	0x51
 16577 257c B6000000 		.4byte	.LVL621
 16578 2580 C8000000 		.4byte	.LVL622
 16579 2584 0100     		.2byte	0x1
 16580 2586 50       		.byte	0x50
 16581 2587 C8000000 		.4byte	.LVL622
 16582 258b CA000000 		.4byte	.LVL623
 16583 258f 0100     		.2byte	0x1
 16584 2591 51       		.byte	0x51
 16585 2592 CA000000 		.4byte	.LVL623
 16586 2596 D6000000 		.4byte	.LVL624
 16587 259a 0100     		.2byte	0x1
 16588 259c 50       		.byte	0x50
 16589 259d D6000000 		.4byte	.LVL624
 16590 25a1 DB000000 		.4byte	.LVL625-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 364


 16591 25a5 0100     		.2byte	0x1
 16592 25a7 51       		.byte	0x51
 16593 25a8 DE000000 		.4byte	.LVL626
 16594 25ac E2000000 		.4byte	.LVL627
 16595 25b0 0100     		.2byte	0x1
 16596 25b2 50       		.byte	0x50
 16597 25b3 E2000000 		.4byte	.LVL627
 16598 25b7 F1000000 		.4byte	.LVL628-1
 16599 25bb 0100     		.2byte	0x1
 16600 25bd 51       		.byte	0x51
 16601 25be 00000000 		.4byte	0
 16602 25c2 00000000 		.4byte	0
 16603              	.LLST188:
 16604 25c6 40000000 		.4byte	.LVL607
 16605 25ca 08010000 		.4byte	.LVL632
 16606 25ce 0100     		.2byte	0x1
 16607 25d0 56       		.byte	0x56
 16608 25d1 00000000 		.4byte	0
 16609 25d5 00000000 		.4byte	0
 16610              	.LLST189:
 16611 25d9 30000000 		.4byte	.LVL604
 16612 25dd F2000000 		.4byte	.LVL628
 16613 25e1 0200     		.2byte	0x2
 16614 25e3 30       		.byte	0x30
 16615 25e4 9F       		.byte	0x9f
 16616 25e5 F2000000 		.4byte	.LVL628
 16617 25e9 02010000 		.4byte	.LVL629
 16618 25ed 0100     		.2byte	0x1
 16619 25ef 50       		.byte	0x50
 16620 25f0 02010000 		.4byte	.LVL629
 16621 25f4 04010000 		.4byte	.LVL630
 16622 25f8 0300     		.2byte	0x3
 16623 25fa 70       		.byte	0x70
 16624 25fb 7E       		.sleb128 -2
 16625 25fc 9F       		.byte	0x9f
 16626 25fd 04010000 		.4byte	.LVL630
 16627 2601 1A010000 		.4byte	.LVL633
 16628 2605 0100     		.2byte	0x1
 16629 2607 50       		.byte	0x50
 16630 2608 00000000 		.4byte	0
 16631 260c 00000000 		.4byte	0
 16632              	.LLST190:
 16633 2610 30000000 		.4byte	.LVL604
 16634 2614 36000000 		.4byte	.LVL605
 16635 2618 0100     		.2byte	0x1
 16636 261a 53       		.byte	0x53
 16637 261b 3A000000 		.4byte	.LVL606
 16638 261f 46000000 		.4byte	.LVL608
 16639 2623 0100     		.2byte	0x1
 16640 2625 53       		.byte	0x53
 16641 2626 46000000 		.4byte	.LVL608
 16642 262a 4F000000 		.4byte	.LVL609-1
 16643 262e 0300     		.2byte	0x3
 16644 2630 73       		.byte	0x73
 16645 2631 01       		.sleb128 1
 16646 2632 9F       		.byte	0x9f
 16647 2633 4F000000 		.4byte	.LVL609-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 365


 16648 2637 6E000000 		.4byte	.LVL613
 16649 263b 0600     		.2byte	0x6
 16650 263d 7D       		.byte	0x7d
 16651 263e 00       		.sleb128 0
 16652 263f 06       		.byte	0x6
 16653 2640 23       		.byte	0x23
 16654 2641 01       		.uleb128 0x1
 16655 2642 9F       		.byte	0x9f
 16656 2643 00000000 		.4byte	0
 16657 2647 00000000 		.4byte	0
 16658              	.LLST191:
 16659 264b 00000000 		.4byte	.LVL635
 16660 264f 0A000000 		.4byte	.LVL636
 16661 2653 0100     		.2byte	0x1
 16662 2655 50       		.byte	0x50
 16663 2656 0A000000 		.4byte	.LVL636
 16664 265a 60000000 		.4byte	.LVL645
 16665 265e 0100     		.2byte	0x1
 16666 2660 54       		.byte	0x54
 16667 2661 60000000 		.4byte	.LVL645
 16668 2665 62000000 		.4byte	.LFE35
 16669 2669 0400     		.2byte	0x4
 16670 266b F3       		.byte	0xf3
 16671 266c 01       		.uleb128 0x1
 16672 266d 50       		.byte	0x50
 16673 266e 9F       		.byte	0x9f
 16674 266f 00000000 		.4byte	0
 16675 2673 00000000 		.4byte	0
 16676              	.LLST192:
 16677 2677 00000000 		.4byte	.LVL635
 16678 267b 0C000000 		.4byte	.LVL637
 16679 267f 0100     		.2byte	0x1
 16680 2681 51       		.byte	0x51
 16681 2682 0C000000 		.4byte	.LVL637
 16682 2686 11000000 		.4byte	.LVL638-1
 16683 268a 0200     		.2byte	0x2
 16684 268c 70       		.byte	0x70
 16685 268d 00       		.sleb128 0
 16686 268e 11000000 		.4byte	.LVL638-1
 16687 2692 62000000 		.4byte	.LFE35
 16688 2696 0200     		.2byte	0x2
 16689 2698 91       		.byte	0x91
 16690 2699 64       		.sleb128 -28
 16691 269a 00000000 		.4byte	0
 16692 269e 00000000 		.4byte	0
 16693              	.LLST193:
 16694 26a2 12000000 		.4byte	.LVL638
 16695 26a6 1C000000 		.4byte	.LVL639
 16696 26aa 0100     		.2byte	0x1
 16697 26ac 50       		.byte	0x50
 16698 26ad 22000000 		.4byte	.LVL640
 16699 26b1 28000000 		.4byte	.LVL641
 16700 26b5 0100     		.2byte	0x1
 16701 26b7 50       		.byte	0x50
 16702 26b8 4C000000 		.4byte	.LVL642
 16703 26bc 5A000000 		.4byte	.LVL643
 16704 26c0 0200     		.2byte	0x2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 366


 16705 26c2 30       		.byte	0x30
 16706 26c3 9F       		.byte	0x9f
 16707 26c4 5A000000 		.4byte	.LVL643
 16708 26c8 5E000000 		.4byte	.LVL644
 16709 26cc 0100     		.2byte	0x1
 16710 26ce 50       		.byte	0x50
 16711 26cf 00000000 		.4byte	0
 16712 26d3 00000000 		.4byte	0
 16713              	.LLST194:
 16714 26d7 00000000 		.4byte	.LVL646
 16715 26db 0A000000 		.4byte	.LVL648
 16716 26df 0100     		.2byte	0x1
 16717 26e1 50       		.byte	0x50
 16718 26e2 0A000000 		.4byte	.LVL648
 16719 26e6 56000000 		.4byte	.LVL664
 16720 26ea 0100     		.2byte	0x1
 16721 26ec 54       		.byte	0x54
 16722 26ed 56000000 		.4byte	.LVL664
 16723 26f1 58000000 		.4byte	.LFE36
 16724 26f5 0400     		.2byte	0x4
 16725 26f7 F3       		.byte	0xf3
 16726 26f8 01       		.uleb128 0x1
 16727 26f9 50       		.byte	0x50
 16728 26fa 9F       		.byte	0x9f
 16729 26fb 00000000 		.4byte	0
 16730 26ff 00000000 		.4byte	0
 16731              	.LLST195:
 16732 2703 00000000 		.4byte	.LVL646
 16733 2707 08000000 		.4byte	.LVL647
 16734 270b 0100     		.2byte	0x1
 16735 270d 51       		.byte	0x51
 16736 270e 08000000 		.4byte	.LVL647
 16737 2712 56000000 		.4byte	.LVL666
 16738 2716 0100     		.2byte	0x1
 16739 2718 56       		.byte	0x56
 16740 2719 56000000 		.4byte	.LVL666
 16741 271d 58000000 		.4byte	.LFE36
 16742 2721 0400     		.2byte	0x4
 16743 2723 F3       		.byte	0xf3
 16744 2724 01       		.uleb128 0x1
 16745 2725 51       		.byte	0x51
 16746 2726 9F       		.byte	0x9f
 16747 2727 00000000 		.4byte	0
 16748 272b 00000000 		.4byte	0
 16749              	.LLST196:
 16750 272f 10000000 		.4byte	.LVL650
 16751 2733 18000000 		.4byte	.LVL651
 16752 2737 0100     		.2byte	0x1
 16753 2739 50       		.byte	0x50
 16754 273a 20000000 		.4byte	.LVL653
 16755 273e 26000000 		.4byte	.LVL654
 16756 2742 0100     		.2byte	0x1
 16757 2744 50       		.byte	0x50
 16758 2745 2A000000 		.4byte	.LVL655
 16759 2749 30000000 		.4byte	.LVL656
 16760 274d 0100     		.2byte	0x1
 16761 274f 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 367


 16762 2750 30000000 		.4byte	.LVL656
 16763 2754 32000000 		.4byte	.LVL657
 16764 2758 0200     		.2byte	0x2
 16765 275a 30       		.byte	0x30
 16766 275b 9F       		.byte	0x9f
 16767 275c 32000000 		.4byte	.LVL657
 16768 2760 36000000 		.4byte	.LVL658
 16769 2764 0100     		.2byte	0x1
 16770 2766 50       		.byte	0x50
 16771 2767 46000000 		.4byte	.LVL660
 16772 276b 4E000000 		.4byte	.LVL661
 16773 276f 0100     		.2byte	0x1
 16774 2771 50       		.byte	0x50
 16775 2772 4E000000 		.4byte	.LVL661
 16776 2776 50000000 		.4byte	.LVL662
 16777 277a 0200     		.2byte	0x2
 16778 277c 30       		.byte	0x30
 16779 277d 9F       		.byte	0x9f
 16780 277e 52000000 		.4byte	.LVL663
 16781 2782 56000000 		.4byte	.LVL665
 16782 2786 0100     		.2byte	0x1
 16783 2788 55       		.byte	0x55
 16784 2789 00000000 		.4byte	0
 16785 278d 00000000 		.4byte	0
 16786              	.LLST197:
 16787 2791 00000000 		.4byte	.LVL667
 16788 2795 0A000000 		.4byte	.LVL668
 16789 2799 0100     		.2byte	0x1
 16790 279b 50       		.byte	0x50
 16791 279c 0A000000 		.4byte	.LVL668
 16792 27a0 11000000 		.4byte	.LVL670-1
 16793 27a4 0200     		.2byte	0x2
 16794 27a6 70       		.byte	0x70
 16795 27a7 00       		.sleb128 0
 16796 27a8 11000000 		.4byte	.LVL670-1
 16797 27ac 40000000 		.4byte	.LFE37
 16798 27b0 0200     		.2byte	0x2
 16799 27b2 91       		.byte	0x91
 16800 27b3 44       		.sleb128 -60
 16801 27b4 00000000 		.4byte	0
 16802 27b8 00000000 		.4byte	0
 16803              	.LLST198:
 16804 27bc 00000000 		.4byte	.LVL667
 16805 27c0 0C000000 		.4byte	.LVL669
 16806 27c4 0100     		.2byte	0x1
 16807 27c6 51       		.byte	0x51
 16808 27c7 0C000000 		.4byte	.LVL669
 16809 27cb 3E000000 		.4byte	.LVL680
 16810 27cf 0100     		.2byte	0x1
 16811 27d1 55       		.byte	0x55
 16812 27d2 3E000000 		.4byte	.LVL680
 16813 27d6 40000000 		.4byte	.LFE37
 16814 27da 0400     		.2byte	0x4
 16815 27dc F3       		.byte	0xf3
 16816 27dd 01       		.uleb128 0x1
 16817 27de 51       		.byte	0x51
 16818 27df 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 368


 16819 27e0 00000000 		.4byte	0
 16820 27e4 00000000 		.4byte	0
 16821              	.LLST199:
 16822 27e8 14000000 		.4byte	.LVL671
 16823 27ec 1A000000 		.4byte	.LVL672
 16824 27f0 0100     		.2byte	0x1
 16825 27f2 50       		.byte	0x50
 16826 27f3 1A000000 		.4byte	.LVL672
 16827 27f7 24000000 		.4byte	.LVL674
 16828 27fb 0100     		.2byte	0x1
 16829 27fd 54       		.byte	0x54
 16830 27fe 24000000 		.4byte	.LVL674
 16831 2802 30000000 		.4byte	.LVL675
 16832 2806 0100     		.2byte	0x1
 16833 2808 50       		.byte	0x50
 16834 2809 30000000 		.4byte	.LVL675
 16835 280d 38000000 		.4byte	.LVL677
 16836 2811 0100     		.2byte	0x1
 16837 2813 54       		.byte	0x54
 16838 2814 38000000 		.4byte	.LVL677
 16839 2818 3A000000 		.4byte	.LVL678
 16840 281c 0100     		.2byte	0x1
 16841 281e 50       		.byte	0x50
 16842 281f 3A000000 		.4byte	.LVL678
 16843 2823 3E000000 		.4byte	.LVL679
 16844 2827 0100     		.2byte	0x1
 16845 2829 54       		.byte	0x54
 16846 282a 00000000 		.4byte	0
 16847 282e 00000000 		.4byte	0
 16848              	.LLST200:
 16849 2832 00000000 		.4byte	.LVL681
 16850 2836 0E000000 		.4byte	.LVL683
 16851 283a 0100     		.2byte	0x1
 16852 283c 50       		.byte	0x50
 16853 283d 0E000000 		.4byte	.LVL683
 16854 2841 13000000 		.4byte	.LVL685-1
 16855 2845 0200     		.2byte	0x2
 16856 2847 70       		.byte	0x70
 16857 2848 00       		.sleb128 0
 16858 2849 13000000 		.4byte	.LVL685-1
 16859 284d EC000000 		.4byte	.LFE38
 16860 2851 0200     		.2byte	0x2
 16861 2853 91       		.byte	0x91
 16862 2854 64       		.sleb128 -28
 16863 2855 00000000 		.4byte	0
 16864 2859 00000000 		.4byte	0
 16865              	.LLST201:
 16866 285d 00000000 		.4byte	.LVL681
 16867 2861 0C000000 		.4byte	.LVL682
 16868 2865 0100     		.2byte	0x1
 16869 2867 51       		.byte	0x51
 16870 2868 0C000000 		.4byte	.LVL682
 16871 286c EC000000 		.4byte	.LFE38
 16872 2870 0200     		.2byte	0x2
 16873 2872 91       		.byte	0x91
 16874 2873 5C       		.sleb128 -36
 16875 2874 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 369


 16876 2878 00000000 		.4byte	0
 16877              	.LLST202:
 16878 287c 00000000 		.4byte	.LVL681
 16879 2880 10000000 		.4byte	.LVL684
 16880 2884 0100     		.2byte	0x1
 16881 2886 52       		.byte	0x52
 16882 2887 10000000 		.4byte	.LVL684
 16883 288b 13000000 		.4byte	.LVL685-1
 16884 288f 0100     		.2byte	0x1
 16885 2891 51       		.byte	0x51
 16886 2892 13000000 		.4byte	.LVL685-1
 16887 2896 EA000000 		.4byte	.LVL711
 16888 289a 0100     		.2byte	0x1
 16889 289c 56       		.byte	0x56
 16890 289d EA000000 		.4byte	.LVL711
 16891 28a1 EC000000 		.4byte	.LFE38
 16892 28a5 0400     		.2byte	0x4
 16893 28a7 F3       		.byte	0xf3
 16894 28a8 01       		.uleb128 0x1
 16895 28a9 52       		.byte	0x52
 16896 28aa 9F       		.byte	0x9f
 16897 28ab 00000000 		.4byte	0
 16898 28af 00000000 		.4byte	0
 16899              	.LLST203:
 16900 28b3 16000000 		.4byte	.LVL686
 16901 28b7 38000000 		.4byte	.LVL688
 16902 28bb 0100     		.2byte	0x1
 16903 28bd 50       		.byte	0x50
 16904 28be 5A000000 		.4byte	.LVL693
 16905 28c2 64000000 		.4byte	.LVL695
 16906 28c6 0100     		.2byte	0x1
 16907 28c8 50       		.byte	0x50
 16908 28c9 64000000 		.4byte	.LVL695
 16909 28cd 74000000 		.4byte	.LVL698
 16910 28d1 0200     		.2byte	0x2
 16911 28d3 30       		.byte	0x30
 16912 28d4 9F       		.byte	0x9f
 16913 28d5 74000000 		.4byte	.LVL698
 16914 28d9 82000000 		.4byte	.LVL700
 16915 28dd 0100     		.2byte	0x1
 16916 28df 50       		.byte	0x50
 16917 28e0 82000000 		.4byte	.LVL700
 16918 28e4 CA000000 		.4byte	.LVL706
 16919 28e8 0200     		.2byte	0x2
 16920 28ea 30       		.byte	0x30
 16921 28eb 9F       		.byte	0x9f
 16922 28ec D2000000 		.4byte	.LVL707
 16923 28f0 D4000000 		.4byte	.LVL708
 16924 28f4 0100     		.2byte	0x1
 16925 28f6 50       		.byte	0x50
 16926 28f7 D4000000 		.4byte	.LVL708
 16927 28fb EA000000 		.4byte	.LVL710
 16928 28ff 0100     		.2byte	0x1
 16929 2901 54       		.byte	0x54
 16930 2902 00000000 		.4byte	0
 16931 2906 00000000 		.4byte	0
 16932              	.LLST204:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 370


 16933 290a 30000000 		.4byte	.LVL687
 16934 290e 38000000 		.4byte	.LVL688
 16935 2912 0200     		.2byte	0x2
 16936 2914 30       		.byte	0x30
 16937 2915 9F       		.byte	0x9f
 16938 2916 38000000 		.4byte	.LVL688
 16939 291a 5A000000 		.4byte	.LVL693
 16940 291e 0100     		.2byte	0x1
 16941 2920 55       		.byte	0x55
 16942 2921 5A000000 		.4byte	.LVL693
 16943 2925 64000000 		.4byte	.LVL695
 16944 2929 0200     		.2byte	0x2
 16945 292b 30       		.byte	0x30
 16946 292c 9F       		.byte	0x9f
 16947 292d 64000000 		.4byte	.LVL695
 16948 2931 E6000000 		.4byte	.LVL709
 16949 2935 0100     		.2byte	0x1
 16950 2937 55       		.byte	0x55
 16951 2938 00000000 		.4byte	0
 16952 293c 00000000 		.4byte	0
 16953              	.LLST205:
 16954 2940 38000000 		.4byte	.LVL688
 16955 2944 5A000000 		.4byte	.LVL693
 16956 2948 0100     		.2byte	0x1
 16957 294a 57       		.byte	0x57
 16958 294b 5A000000 		.4byte	.LVL693
 16959 294f C4000000 		.4byte	.LVL705
 16960 2953 0200     		.2byte	0x2
 16961 2955 91       		.byte	0x91
 16962 2956 54       		.sleb128 -44
 16963 2957 C4000000 		.4byte	.LVL705
 16964 295b CA000000 		.4byte	.LVL706
 16965 295f 0100     		.2byte	0x1
 16966 2961 52       		.byte	0x52
 16967 2962 CA000000 		.4byte	.LVL706
 16968 2966 D2000000 		.4byte	.LVL707
 16969 296a 0100     		.2byte	0x1
 16970 296c 57       		.byte	0x57
 16971 296d D2000000 		.4byte	.LVL707
 16972 2971 D4000000 		.4byte	.LVL708
 16973 2975 0200     		.2byte	0x2
 16974 2977 91       		.byte	0x91
 16975 2978 54       		.sleb128 -44
 16976 2979 00000000 		.4byte	0
 16977 297d 00000000 		.4byte	0
 16978              	.LLST206:
 16979 2981 60000000 		.4byte	.LVL694
 16980 2985 64000000 		.4byte	.LVL695
 16981 2989 0100     		.2byte	0x1
 16982 298b 53       		.byte	0x53
 16983 298c 64000000 		.4byte	.LVL695
 16984 2990 70000000 		.4byte	.LVL697
 16985 2994 0100     		.2byte	0x1
 16986 2996 5C       		.byte	0x5c
 16987 2997 70000000 		.4byte	.LVL697
 16988 299b 82000000 		.4byte	.LVL700
 16989 299f 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 371


 16990 29a1 57       		.byte	0x57
 16991 29a2 82000000 		.4byte	.LVL700
 16992 29a6 CA000000 		.4byte	.LVL706
 16993 29aa 0100     		.2byte	0x1
 16994 29ac 5C       		.byte	0x5c
 16995 29ad D2000000 		.4byte	.LVL707
 16996 29b1 D4000000 		.4byte	.LVL708
 16997 29b5 0100     		.2byte	0x1
 16998 29b7 57       		.byte	0x57
 16999 29b8 00000000 		.4byte	0
 17000 29bc 00000000 		.4byte	0
 17001              	.LLST207:
 17002 29c0 40000000 		.4byte	.LVL689
 17003 29c4 4C000000 		.4byte	.LVL690
 17004 29c8 0100     		.2byte	0x1
 17005 29ca 50       		.byte	0x50
 17006 29cb CA000000 		.4byte	.LVL706
 17007 29cf D2000000 		.4byte	.LVL707
 17008 29d3 0100     		.2byte	0x1
 17009 29d5 50       		.byte	0x50
 17010 29d6 00000000 		.4byte	0
 17011 29da 00000000 		.4byte	0
 17012              	.LLST208:
 17013 29de 60000000 		.4byte	.LVL694
 17014 29e2 64000000 		.4byte	.LVL695
 17015 29e6 0200     		.2byte	0x2
 17016 29e8 30       		.byte	0x30
 17017 29e9 9F       		.byte	0x9f
 17018 29ea 64000000 		.4byte	.LVL695
 17019 29ee 68000000 		.4byte	.LVL696
 17020 29f2 0100     		.2byte	0x1
 17021 29f4 51       		.byte	0x51
 17022 29f5 68000000 		.4byte	.LVL696
 17023 29f9 82000000 		.4byte	.LVL700
 17024 29fd 0200     		.2byte	0x2
 17025 29ff 30       		.byte	0x30
 17026 2a00 9F       		.byte	0x9f
 17027 2a01 82000000 		.4byte	.LVL700
 17028 2a05 9C000000 		.4byte	.LVL701
 17029 2a09 0100     		.2byte	0x1
 17030 2a0b 51       		.byte	0x51
 17031 2a0c 9C000000 		.4byte	.LVL701
 17032 2a10 9E000000 		.4byte	.LVL702
 17033 2a14 0300     		.2byte	0x3
 17034 2a16 71       		.byte	0x71
 17035 2a17 02       		.sleb128 2
 17036 2a18 9F       		.byte	0x9f
 17037 2a19 9E000000 		.4byte	.LVL702
 17038 2a1d CA000000 		.4byte	.LVL706
 17039 2a21 0100     		.2byte	0x1
 17040 2a23 51       		.byte	0x51
 17041 2a24 D2000000 		.4byte	.LVL707
 17042 2a28 D4000000 		.4byte	.LVL708
 17043 2a2c 0200     		.2byte	0x2
 17044 2a2e 30       		.byte	0x30
 17045 2a2f 9F       		.byte	0x9f
 17046 2a30 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 372


 17047 2a34 00000000 		.4byte	0
 17048              	.LLST209:
 17049 2a38 30000000 		.4byte	.LVL687
 17050 2a3c E6000000 		.4byte	.LVL709
 17051 2a40 0200     		.2byte	0x2
 17052 2a42 91       		.byte	0x91
 17053 2a43 58       		.sleb128 -40
 17054 2a44 00000000 		.4byte	0
 17055 2a48 00000000 		.4byte	0
 17056              	.LLST210:
 17057 2a4c 60000000 		.4byte	.LVL694
 17058 2a50 64000000 		.4byte	.LVL695
 17059 2a54 0200     		.2byte	0x2
 17060 2a56 30       		.byte	0x30
 17061 2a57 9F       		.byte	0x9f
 17062 2a58 78000000 		.4byte	.LVL699
 17063 2a5c 82000000 		.4byte	.LVL700
 17064 2a60 0600     		.2byte	0x6
 17065 2a62 76       		.byte	0x76
 17066 2a63 00       		.sleb128 0
 17067 2a64 06       		.byte	0x6
 17068 2a65 23       		.byte	0x23
 17069 2a66 30       		.uleb128 0x30
 17070 2a67 9F       		.byte	0x9f
 17071 2a68 00000000 		.4byte	0
 17072 2a6c 00000000 		.4byte	0
 17073              	.LLST211:
 17074 2a70 00000000 		.4byte	.LVL712
 17075 2a74 08000000 		.4byte	.LVL713
 17076 2a78 0100     		.2byte	0x1
 17077 2a7a 50       		.byte	0x50
 17078 2a7b 08000000 		.4byte	.LVL713
 17079 2a7f 90000000 		.4byte	.LVL733
 17080 2a83 0100     		.2byte	0x1
 17081 2a85 54       		.byte	0x54
 17082 2a86 90000000 		.4byte	.LVL733
 17083 2a8a 98000000 		.4byte	.LFE39
 17084 2a8e 0400     		.2byte	0x4
 17085 2a90 F3       		.byte	0xf3
 17086 2a91 01       		.uleb128 0x1
 17087 2a92 50       		.byte	0x50
 17088 2a93 9F       		.byte	0x9f
 17089 2a94 00000000 		.4byte	0
 17090 2a98 00000000 		.4byte	0
 17091              	.LLST212:
 17092 2a9c 0E000000 		.4byte	.LVL715
 17093 2aa0 1E000000 		.4byte	.LVL716
 17094 2aa4 0100     		.2byte	0x1
 17095 2aa6 50       		.byte	0x50
 17096 2aa7 1E000000 		.4byte	.LVL716
 17097 2aab 3E000000 		.4byte	.LVL718
 17098 2aaf 0200     		.2byte	0x2
 17099 2ab1 30       		.byte	0x30
 17100 2ab2 9F       		.byte	0x9f
 17101 2ab3 3E000000 		.4byte	.LVL718
 17102 2ab7 40000000 		.4byte	.LVL719
 17103 2abb 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 373


 17104 2abd 50       		.byte	0x50
 17105 2abe 40000000 		.4byte	.LVL719
 17106 2ac2 66000000 		.4byte	.LVL724
 17107 2ac6 0200     		.2byte	0x2
 17108 2ac8 30       		.byte	0x30
 17109 2ac9 9F       		.byte	0x9f
 17110 2aca 66000000 		.4byte	.LVL724
 17111 2ace 6A000000 		.4byte	.LVL725
 17112 2ad2 0100     		.2byte	0x1
 17113 2ad4 50       		.byte	0x50
 17114 2ad5 6A000000 		.4byte	.LVL725
 17115 2ad9 82000000 		.4byte	.LVL729
 17116 2add 0100     		.2byte	0x1
 17117 2adf 55       		.byte	0x55
 17118 2ae0 82000000 		.4byte	.LVL729
 17119 2ae4 88000000 		.4byte	.LVL730
 17120 2ae8 0100     		.2byte	0x1
 17121 2aea 50       		.byte	0x50
 17122 2aeb 88000000 		.4byte	.LVL730
 17123 2aef 8A000000 		.4byte	.LVL731
 17124 2af3 0200     		.2byte	0x2
 17125 2af5 37       		.byte	0x37
 17126 2af6 9F       		.byte	0x9f
 17127 2af7 8A000000 		.4byte	.LVL731
 17128 2afb 8E000000 		.4byte	.LVL732
 17129 2aff 0200     		.2byte	0x2
 17130 2b01 30       		.byte	0x30
 17131 2b02 9F       		.byte	0x9f
 17132 2b03 00000000 		.4byte	0
 17133 2b07 00000000 		.4byte	0
 17134              	.LLST213:
 17135 2b0b 48000000 		.4byte	.LVL721
 17136 2b0f 56000000 		.4byte	.LVL722
 17137 2b13 0100     		.2byte	0x1
 17138 2b15 50       		.byte	0x50
 17139 2b16 56000000 		.4byte	.LVL722
 17140 2b1a 72000000 		.4byte	.LVL727
 17141 2b1e 0100     		.2byte	0x1
 17142 2b20 56       		.byte	0x56
 17143 2b21 8A000000 		.4byte	.LVL731
 17144 2b25 8E000000 		.4byte	.LVL732
 17145 2b29 0100     		.2byte	0x1
 17146 2b2b 50       		.byte	0x50
 17147 2b2c 00000000 		.4byte	0
 17148 2b30 00000000 		.4byte	0
 17149              	.LLST214:
 17150 2b34 00000000 		.4byte	.LVL734
 17151 2b38 0A000000 		.4byte	.LVL735
 17152 2b3c 0100     		.2byte	0x1
 17153 2b3e 50       		.byte	0x50
 17154 2b3f 0A000000 		.4byte	.LVL735
 17155 2b43 0F000000 		.4byte	.LVL736-1
 17156 2b47 0200     		.2byte	0x2
 17157 2b49 70       		.byte	0x70
 17158 2b4a 00       		.sleb128 0
 17159 2b4b 0F000000 		.4byte	.LVL736-1
 17160 2b4f BA000000 		.4byte	.LFE40
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 374


 17161 2b53 0300     		.2byte	0x3
 17162 2b55 91       		.byte	0x91
 17163 2b56 A47F     		.sleb128 -92
 17164 2b58 00000000 		.4byte	0
 17165 2b5c 00000000 		.4byte	0
 17166              	.LLST215:
 17167 2b60 12000000 		.4byte	.LVL737
 17168 2b64 18000000 		.4byte	.LVL738
 17169 2b68 0100     		.2byte	0x1
 17170 2b6a 50       		.byte	0x50
 17171 2b6b 18000000 		.4byte	.LVL738
 17172 2b6f 22000000 		.4byte	.LVL740
 17173 2b73 0100     		.2byte	0x1
 17174 2b75 54       		.byte	0x54
 17175 2b76 22000000 		.4byte	.LVL740
 17176 2b7a 26000000 		.4byte	.LVL741
 17177 2b7e 0100     		.2byte	0x1
 17178 2b80 50       		.byte	0x50
 17179 2b81 26000000 		.4byte	.LVL741
 17180 2b85 2E000000 		.4byte	.LVL743
 17181 2b89 0100     		.2byte	0x1
 17182 2b8b 54       		.byte	0x54
 17183 2b8c 2E000000 		.4byte	.LVL743
 17184 2b90 42000000 		.4byte	.LVL745
 17185 2b94 0100     		.2byte	0x1
 17186 2b96 50       		.byte	0x50
 17187 2b97 42000000 		.4byte	.LVL745
 17188 2b9b 4E000000 		.4byte	.LVL747
 17189 2b9f 0100     		.2byte	0x1
 17190 2ba1 54       		.byte	0x54
 17191 2ba2 4E000000 		.4byte	.LVL747
 17192 2ba6 7C000000 		.4byte	.LVL755
 17193 2baa 0200     		.2byte	0x2
 17194 2bac 30       		.byte	0x30
 17195 2bad 9F       		.byte	0x9f
 17196 2bae 7C000000 		.4byte	.LVL755
 17197 2bb2 80000000 		.4byte	.LVL756
 17198 2bb6 0100     		.2byte	0x1
 17199 2bb8 50       		.byte	0x50
 17200 2bb9 80000000 		.4byte	.LVL756
 17201 2bbd 86000000 		.4byte	.LVL758
 17202 2bc1 0100     		.2byte	0x1
 17203 2bc3 54       		.byte	0x54
 17204 2bc4 86000000 		.4byte	.LVL758
 17205 2bc8 8C000000 		.4byte	.LVL759
 17206 2bcc 0100     		.2byte	0x1
 17207 2bce 50       		.byte	0x50
 17208 2bcf 8C000000 		.4byte	.LVL759
 17209 2bd3 94000000 		.4byte	.LVL761
 17210 2bd7 0200     		.2byte	0x2
 17211 2bd9 30       		.byte	0x30
 17212 2bda 9F       		.byte	0x9f
 17213 2bdb 94000000 		.4byte	.LVL761
 17214 2bdf 9A000000 		.4byte	.LVL762
 17215 2be3 0100     		.2byte	0x1
 17216 2be5 50       		.byte	0x50
 17217 2be6 A2000000 		.4byte	.LVL764
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 375


 17218 2bea A6000000 		.4byte	.LVL765
 17219 2bee 0100     		.2byte	0x1
 17220 2bf0 50       		.byte	0x50
 17221 2bf1 A6000000 		.4byte	.LVL765
 17222 2bf5 AE000000 		.4byte	.LVL767
 17223 2bf9 0100     		.2byte	0x1
 17224 2bfb 54       		.byte	0x54
 17225 2bfc AE000000 		.4byte	.LVL767
 17226 2c00 B4000000 		.4byte	.LVL768
 17227 2c04 0100     		.2byte	0x1
 17228 2c06 50       		.byte	0x50
 17229 2c07 00000000 		.4byte	0
 17230 2c0b 00000000 		.4byte	0
 17231              	.LLST216:
 17232 2c0f 32000000 		.4byte	.LVL744
 17233 2c13 6C000000 		.4byte	.LVL752
 17234 2c17 0100     		.2byte	0x1
 17235 2c19 52       		.byte	0x52
 17236 2c1a 6C000000 		.4byte	.LVL752
 17237 2c1e 6F000000 		.4byte	.LVL753-1
 17238 2c22 0200     		.2byte	0x2
 17239 2c24 91       		.byte	0x91
 17240 2c25 4C       		.sleb128 -52
 17241 2c26 00000000 		.4byte	0
 17242 2c2a 00000000 		.4byte	0
 17243              	.LLST217:
 17244 2c2e 4A000000 		.4byte	.LVL746
 17245 2c32 50000000 		.4byte	.LVL748
 17246 2c36 2600     		.2byte	0x26
 17247 2c38 71       		.byte	0x71
 17248 2c39 00       		.sleb128 0
 17249 2c3a 08       		.byte	0x8
 17250 2c3b FF       		.byte	0xff
 17251 2c3c 1A       		.byte	0x1a
 17252 2c3d 38       		.byte	0x38
 17253 2c3e 24       		.byte	0x24
 17254 2c3f 70       		.byte	0x70
 17255 2c40 00       		.sleb128 0
 17256 2c41 08       		.byte	0x8
 17257 2c42 FF       		.byte	0xff
 17258 2c43 1A       		.byte	0x1a
 17259 2c44 21       		.byte	0x21
 17260 2c45 0A       		.byte	0xa
 17261 2c46 FFFF     		.2byte	0xffff
 17262 2c48 1A       		.byte	0x1a
 17263 2c49 40       		.byte	0x40
 17264 2c4a 24       		.byte	0x24
 17265 2c4b 75       		.byte	0x75
 17266 2c4c 00       		.sleb128 0
 17267 2c4d 08       		.byte	0x8
 17268 2c4e FF       		.byte	0xff
 17269 2c4f 1A       		.byte	0x1a
 17270 2c50 38       		.byte	0x38
 17271 2c51 24       		.byte	0x24
 17272 2c52 73       		.byte	0x73
 17273 2c53 00       		.sleb128 0
 17274 2c54 08       		.byte	0x8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 376


 17275 2c55 FF       		.byte	0xff
 17276 2c56 1A       		.byte	0x1a
 17277 2c57 21       		.byte	0x21
 17278 2c58 0A       		.byte	0xa
 17279 2c59 FFFF     		.2byte	0xffff
 17280 2c5b 1A       		.byte	0x1a
 17281 2c5c 21       		.byte	0x21
 17282 2c5d 9F       		.byte	0x9f
 17283 2c5e 50000000 		.4byte	.LVL748
 17284 2c62 52000000 		.4byte	.LVL749
 17285 2c66 2800     		.2byte	0x28
 17286 2c68 72       		.byte	0x72
 17287 2c69 15       		.sleb128 21
 17288 2c6a 94       		.byte	0x94
 17289 2c6b 01       		.byte	0x1
 17290 2c6c 08       		.byte	0x8
 17291 2c6d FF       		.byte	0xff
 17292 2c6e 1A       		.byte	0x1a
 17293 2c6f 38       		.byte	0x38
 17294 2c70 24       		.byte	0x24
 17295 2c71 70       		.byte	0x70
 17296 2c72 00       		.sleb128 0
 17297 2c73 08       		.byte	0x8
 17298 2c74 FF       		.byte	0xff
 17299 2c75 1A       		.byte	0x1a
 17300 2c76 21       		.byte	0x21
 17301 2c77 0A       		.byte	0xa
 17302 2c78 FFFF     		.2byte	0xffff
 17303 2c7a 1A       		.byte	0x1a
 17304 2c7b 40       		.byte	0x40
 17305 2c7c 24       		.byte	0x24
 17306 2c7d 75       		.byte	0x75
 17307 2c7e 00       		.sleb128 0
 17308 2c7f 08       		.byte	0x8
 17309 2c80 FF       		.byte	0xff
 17310 2c81 1A       		.byte	0x1a
 17311 2c82 38       		.byte	0x38
 17312 2c83 24       		.byte	0x24
 17313 2c84 73       		.byte	0x73
 17314 2c85 00       		.sleb128 0
 17315 2c86 08       		.byte	0x8
 17316 2c87 FF       		.byte	0xff
 17317 2c88 1A       		.byte	0x1a
 17318 2c89 21       		.byte	0x21
 17319 2c8a 0A       		.byte	0xa
 17320 2c8b FFFF     		.2byte	0xffff
 17321 2c8d 1A       		.byte	0x1a
 17322 2c8e 21       		.byte	0x21
 17323 2c8f 9F       		.byte	0x9f
 17324 2c90 52000000 		.4byte	.LVL749
 17325 2c94 58000000 		.4byte	.LVL750
 17326 2c98 2A00     		.2byte	0x2a
 17327 2c9a 72       		.byte	0x72
 17328 2c9b 15       		.sleb128 21
 17329 2c9c 94       		.byte	0x94
 17330 2c9d 01       		.byte	0x1
 17331 2c9e 08       		.byte	0x8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 377


 17332 2c9f FF       		.byte	0xff
 17333 2ca0 1A       		.byte	0x1a
 17334 2ca1 38       		.byte	0x38
 17335 2ca2 24       		.byte	0x24
 17336 2ca3 70       		.byte	0x70
 17337 2ca4 00       		.sleb128 0
 17338 2ca5 08       		.byte	0x8
 17339 2ca6 FF       		.byte	0xff
 17340 2ca7 1A       		.byte	0x1a
 17341 2ca8 21       		.byte	0x21
 17342 2ca9 0A       		.byte	0xa
 17343 2caa FFFF     		.2byte	0xffff
 17344 2cac 1A       		.byte	0x1a
 17345 2cad 40       		.byte	0x40
 17346 2cae 24       		.byte	0x24
 17347 2caf 72       		.byte	0x72
 17348 2cb0 1B       		.sleb128 27
 17349 2cb1 94       		.byte	0x94
 17350 2cb2 01       		.byte	0x1
 17351 2cb3 08       		.byte	0x8
 17352 2cb4 FF       		.byte	0xff
 17353 2cb5 1A       		.byte	0x1a
 17354 2cb6 38       		.byte	0x38
 17355 2cb7 24       		.byte	0x24
 17356 2cb8 73       		.byte	0x73
 17357 2cb9 00       		.sleb128 0
 17358 2cba 08       		.byte	0x8
 17359 2cbb FF       		.byte	0xff
 17360 2cbc 1A       		.byte	0x1a
 17361 2cbd 21       		.byte	0x21
 17362 2cbe 0A       		.byte	0xa
 17363 2cbf FFFF     		.2byte	0xffff
 17364 2cc1 1A       		.byte	0x1a
 17365 2cc2 21       		.byte	0x21
 17366 2cc3 9F       		.byte	0x9f
 17367 2cc4 58000000 		.4byte	.LVL750
 17368 2cc8 68000000 		.4byte	.LVL751
 17369 2ccc 2C00     		.2byte	0x2c
 17370 2cce 72       		.byte	0x72
 17371 2ccf 15       		.sleb128 21
 17372 2cd0 94       		.byte	0x94
 17373 2cd1 01       		.byte	0x1
 17374 2cd2 08       		.byte	0x8
 17375 2cd3 FF       		.byte	0xff
 17376 2cd4 1A       		.byte	0x1a
 17377 2cd5 38       		.byte	0x38
 17378 2cd6 24       		.byte	0x24
 17379 2cd7 70       		.byte	0x70
 17380 2cd8 00       		.sleb128 0
 17381 2cd9 08       		.byte	0x8
 17382 2cda FF       		.byte	0xff
 17383 2cdb 1A       		.byte	0x1a
 17384 2cdc 21       		.byte	0x21
 17385 2cdd 0A       		.byte	0xa
 17386 2cde FFFF     		.2byte	0xffff
 17387 2ce0 1A       		.byte	0x1a
 17388 2ce1 40       		.byte	0x40
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 378


 17389 2ce2 24       		.byte	0x24
 17390 2ce3 72       		.byte	0x72
 17391 2ce4 1B       		.sleb128 27
 17392 2ce5 94       		.byte	0x94
 17393 2ce6 01       		.byte	0x1
 17394 2ce7 08       		.byte	0x8
 17395 2ce8 FF       		.byte	0xff
 17396 2ce9 1A       		.byte	0x1a
 17397 2cea 38       		.byte	0x38
 17398 2ceb 24       		.byte	0x24
 17399 2cec 72       		.byte	0x72
 17400 2ced 1A       		.sleb128 26
 17401 2cee 94       		.byte	0x94
 17402 2cef 01       		.byte	0x1
 17403 2cf0 08       		.byte	0x8
 17404 2cf1 FF       		.byte	0xff
 17405 2cf2 1A       		.byte	0x1a
 17406 2cf3 21       		.byte	0x21
 17407 2cf4 0A       		.byte	0xa
 17408 2cf5 FFFF     		.2byte	0xffff
 17409 2cf7 1A       		.byte	0x1a
 17410 2cf8 21       		.byte	0x21
 17411 2cf9 9F       		.byte	0x9f
 17412 2cfa 68000000 		.4byte	.LVL751
 17413 2cfe 6C000000 		.4byte	.LVL752
 17414 2d02 2E00     		.2byte	0x2e
 17415 2d04 72       		.byte	0x72
 17416 2d05 15       		.sleb128 21
 17417 2d06 94       		.byte	0x94
 17418 2d07 01       		.byte	0x1
 17419 2d08 08       		.byte	0x8
 17420 2d09 FF       		.byte	0xff
 17421 2d0a 1A       		.byte	0x1a
 17422 2d0b 38       		.byte	0x38
 17423 2d0c 24       		.byte	0x24
 17424 2d0d 72       		.byte	0x72
 17425 2d0e 14       		.sleb128 20
 17426 2d0f 94       		.byte	0x94
 17427 2d10 01       		.byte	0x1
 17428 2d11 08       		.byte	0x8
 17429 2d12 FF       		.byte	0xff
 17430 2d13 1A       		.byte	0x1a
 17431 2d14 21       		.byte	0x21
 17432 2d15 0A       		.byte	0xa
 17433 2d16 FFFF     		.2byte	0xffff
 17434 2d18 1A       		.byte	0x1a
 17435 2d19 40       		.byte	0x40
 17436 2d1a 24       		.byte	0x24
 17437 2d1b 72       		.byte	0x72
 17438 2d1c 1B       		.sleb128 27
 17439 2d1d 94       		.byte	0x94
 17440 2d1e 01       		.byte	0x1
 17441 2d1f 08       		.byte	0x8
 17442 2d20 FF       		.byte	0xff
 17443 2d21 1A       		.byte	0x1a
 17444 2d22 38       		.byte	0x38
 17445 2d23 24       		.byte	0x24
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 379


 17446 2d24 72       		.byte	0x72
 17447 2d25 1A       		.sleb128 26
 17448 2d26 94       		.byte	0x94
 17449 2d27 01       		.byte	0x1
 17450 2d28 08       		.byte	0x8
 17451 2d29 FF       		.byte	0xff
 17452 2d2a 1A       		.byte	0x1a
 17453 2d2b 21       		.byte	0x21
 17454 2d2c 0A       		.byte	0xa
 17455 2d2d FFFF     		.2byte	0xffff
 17456 2d2f 1A       		.byte	0x1a
 17457 2d30 21       		.byte	0x21
 17458 2d31 9F       		.byte	0x9f
 17459 2d32 6C000000 		.4byte	.LVL752
 17460 2d36 6F000000 		.4byte	.LVL753-1
 17461 2d3a 3A00     		.2byte	0x3a
 17462 2d3c 91       		.byte	0x91
 17463 2d3d 4C       		.sleb128 -52
 17464 2d3e 06       		.byte	0x6
 17465 2d3f 23       		.byte	0x23
 17466 2d40 15       		.uleb128 0x15
 17467 2d41 94       		.byte	0x94
 17468 2d42 01       		.byte	0x1
 17469 2d43 08       		.byte	0x8
 17470 2d44 FF       		.byte	0xff
 17471 2d45 1A       		.byte	0x1a
 17472 2d46 38       		.byte	0x38
 17473 2d47 24       		.byte	0x24
 17474 2d48 91       		.byte	0x91
 17475 2d49 4C       		.sleb128 -52
 17476 2d4a 06       		.byte	0x6
 17477 2d4b 23       		.byte	0x23
 17478 2d4c 14       		.uleb128 0x14
 17479 2d4d 94       		.byte	0x94
 17480 2d4e 01       		.byte	0x1
 17481 2d4f 08       		.byte	0x8
 17482 2d50 FF       		.byte	0xff
 17483 2d51 1A       		.byte	0x1a
 17484 2d52 21       		.byte	0x21
 17485 2d53 0A       		.byte	0xa
 17486 2d54 FFFF     		.2byte	0xffff
 17487 2d56 1A       		.byte	0x1a
 17488 2d57 40       		.byte	0x40
 17489 2d58 24       		.byte	0x24
 17490 2d59 91       		.byte	0x91
 17491 2d5a 4C       		.sleb128 -52
 17492 2d5b 06       		.byte	0x6
 17493 2d5c 23       		.byte	0x23
 17494 2d5d 1B       		.uleb128 0x1b
 17495 2d5e 94       		.byte	0x94
 17496 2d5f 01       		.byte	0x1
 17497 2d60 08       		.byte	0x8
 17498 2d61 FF       		.byte	0xff
 17499 2d62 1A       		.byte	0x1a
 17500 2d63 38       		.byte	0x38
 17501 2d64 24       		.byte	0x24
 17502 2d65 91       		.byte	0x91
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 380


 17503 2d66 4C       		.sleb128 -52
 17504 2d67 06       		.byte	0x6
 17505 2d68 23       		.byte	0x23
 17506 2d69 1A       		.uleb128 0x1a
 17507 2d6a 94       		.byte	0x94
 17508 2d6b 01       		.byte	0x1
 17509 2d6c 08       		.byte	0x8
 17510 2d6d FF       		.byte	0xff
 17511 2d6e 1A       		.byte	0x1a
 17512 2d6f 21       		.byte	0x21
 17513 2d70 0A       		.byte	0xa
 17514 2d71 FFFF     		.2byte	0xffff
 17515 2d73 1A       		.byte	0x1a
 17516 2d74 21       		.byte	0x21
 17517 2d75 9F       		.byte	0x9f
 17518 2d76 00000000 		.4byte	0
 17519 2d7a 00000000 		.4byte	0
 17520              	.LLST218:
 17521 2d7e 00000000 		.4byte	.LVL769
 17522 2d82 09000000 		.4byte	.LVL770-1
 17523 2d86 0100     		.2byte	0x1
 17524 2d88 50       		.byte	0x50
 17525 2d89 09000000 		.4byte	.LVL770-1
 17526 2d8d 12000000 		.4byte	.LVL772
 17527 2d91 0300     		.2byte	0x3
 17528 2d93 91       		.byte	0x91
 17529 2d94 BC7F     		.sleb128 -68
 17530 2d96 12000000 		.4byte	.LVL772
 17531 2d9a 15000000 		.4byte	.LVL773-1
 17532 2d9e 0200     		.2byte	0x2
 17533 2da0 70       		.byte	0x70
 17534 2da1 00       		.sleb128 0
 17535 2da2 15000000 		.4byte	.LVL773-1
 17536 2da6 EA010000 		.4byte	.LFE41
 17537 2daa 0300     		.2byte	0x3
 17538 2dac 91       		.byte	0x91
 17539 2dad BC7F     		.sleb128 -68
 17540 2daf 00000000 		.4byte	0
 17541 2db3 00000000 		.4byte	0
 17542              	.LLST219:
 17543 2db7 18000000 		.4byte	.LVL774
 17544 2dbb 20000000 		.4byte	.LVL775
 17545 2dbf 0100     		.2byte	0x1
 17546 2dc1 50       		.byte	0x50
 17547 2dc2 2A000000 		.4byte	.LVL777
 17548 2dc6 34000000 		.4byte	.LVL778
 17549 2dca 0100     		.2byte	0x1
 17550 2dcc 50       		.byte	0x50
 17551 2dcd 3C000000 		.4byte	.LVL780
 17552 2dd1 48000000 		.4byte	.LVL781
 17553 2dd5 0200     		.2byte	0x2
 17554 2dd7 30       		.byte	0x30
 17555 2dd8 9F       		.byte	0x9f
 17556 2dd9 48000000 		.4byte	.LVL781
 17557 2ddd 52000000 		.4byte	.LVL783
 17558 2de1 0100     		.2byte	0x1
 17559 2de3 54       		.byte	0x54
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 381


 17560 2de4 52000000 		.4byte	.LVL783
 17561 2de8 54000000 		.4byte	.LVL784
 17562 2dec 0100     		.2byte	0x1
 17563 2dee 50       		.byte	0x50
 17564 2def 54000000 		.4byte	.LVL784
 17565 2df3 56000000 		.4byte	.LVL785
 17566 2df7 0100     		.2byte	0x1
 17567 2df9 54       		.byte	0x54
 17568 2dfa 56000000 		.4byte	.LVL785
 17569 2dfe 66000000 		.4byte	.LVL788
 17570 2e02 0200     		.2byte	0x2
 17571 2e04 30       		.byte	0x30
 17572 2e05 9F       		.byte	0x9f
 17573 2e06 66000000 		.4byte	.LVL788
 17574 2e0a 6E000000 		.4byte	.LVL789
 17575 2e0e 0100     		.2byte	0x1
 17576 2e10 50       		.byte	0x50
 17577 2e11 66010000 		.4byte	.LVL809
 17578 2e15 80010000 		.4byte	.LVL813
 17579 2e19 0200     		.2byte	0x2
 17580 2e1b 30       		.byte	0x30
 17581 2e1c 9F       		.byte	0x9f
 17582 2e1d 80010000 		.4byte	.LVL813
 17583 2e21 98010000 		.4byte	.LVL818
 17584 2e25 0100     		.2byte	0x1
 17585 2e27 50       		.byte	0x50
 17586 2e28 98010000 		.4byte	.LVL818
 17587 2e2c A0010000 		.4byte	.LVL820
 17588 2e30 0200     		.2byte	0x2
 17589 2e32 30       		.byte	0x30
 17590 2e33 9F       		.byte	0x9f
 17591 2e34 A0010000 		.4byte	.LVL820
 17592 2e38 DE010000 		.4byte	.LVL823
 17593 2e3c 0100     		.2byte	0x1
 17594 2e3e 50       		.byte	0x50
 17595 2e3f DE010000 		.4byte	.LVL823
 17596 2e43 E4010000 		.4byte	.LVL825
 17597 2e47 0100     		.2byte	0x1
 17598 2e49 54       		.byte	0x54
 17599 2e4a 00000000 		.4byte	0
 17600 2e4e 00000000 		.4byte	0
 17601              	.LLST220:
 17602 2e52 7C000000 		.4byte	.LVL791
 17603 2e56 A8010000 		.4byte	.LVL821
 17604 2e5a 0200     		.2byte	0x2
 17605 2e5c 7D       		.byte	0x7d
 17606 2e5d 00       		.sleb128 0
 17607 2e5e A8010000 		.4byte	.LVL821
 17608 2e62 D8010000 		.4byte	.LVL822
 17609 2e66 0100     		.2byte	0x1
 17610 2e68 53       		.byte	0x53
 17611 2e69 00000000 		.4byte	0
 17612 2e6d 00000000 		.4byte	0
 17613              	.LLST221:
 17614 2e71 60010000 		.4byte	.LVL808
 17615 2e75 66010000 		.4byte	.LVL809
 17616 2e79 0200     		.2byte	0x2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 382


 17617 2e7b 72       		.byte	0x72
 17618 2e7c 02       		.sleb128 2
 17619 2e7d 00000000 		.4byte	0
 17620 2e81 00000000 		.4byte	0
 17621              	.LLST222:
 17622 2e85 7C000000 		.4byte	.LVL791
 17623 2e89 1C010000 		.4byte	.LVL803
 17624 2e8d 0100     		.2byte	0x1
 17625 2e8f 50       		.byte	0x50
 17626 2e90 1C010000 		.4byte	.LVL803
 17627 2e94 70010000 		.4byte	.LVL810
 17628 2e98 0100     		.2byte	0x1
 17629 2e9a 57       		.byte	0x57
 17630 2e9b 70010000 		.4byte	.LVL810
 17631 2e9f 72010000 		.4byte	.LVL811
 17632 2ea3 0100     		.2byte	0x1
 17633 2ea5 53       		.byte	0x53
 17634 2ea6 72010000 		.4byte	.LVL811
 17635 2eaa 98010000 		.4byte	.LVL818
 17636 2eae 0300     		.2byte	0x3
 17637 2eb0 91       		.byte	0x91
 17638 2eb1 B87F     		.sleb128 -72
 17639 2eb3 98010000 		.4byte	.LVL818
 17640 2eb7 E4010000 		.4byte	.LVL825
 17641 2ebb 0100     		.2byte	0x1
 17642 2ebd 57       		.byte	0x57
 17643 2ebe 00000000 		.4byte	0
 17644 2ec2 00000000 		.4byte	0
 17645              	.LLST223:
 17646 2ec6 3C000000 		.4byte	.LVL780
 17647 2eca 48000000 		.4byte	.LVL781
 17648 2ece 0100     		.2byte	0x1
 17649 2ed0 50       		.byte	0x50
 17650 2ed1 48000000 		.4byte	.LVL781
 17651 2ed5 52000000 		.4byte	.LVL783
 17652 2ed9 0100     		.2byte	0x1
 17653 2edb 55       		.byte	0x55
 17654 2edc 56000000 		.4byte	.LVL785
 17655 2ee0 5E000000 		.4byte	.LVL786
 17656 2ee4 0100     		.2byte	0x1
 17657 2ee6 50       		.byte	0x50
 17658 2ee7 5E000000 		.4byte	.LVL786
 17659 2eeb E4010000 		.4byte	.LVL825
 17660 2eef 0100     		.2byte	0x1
 17661 2ef1 55       		.byte	0x55
 17662 2ef2 00000000 		.4byte	0
 17663 2ef6 00000000 		.4byte	0
 17664              	.LLST224:
 17665 2efa 38010000 		.4byte	.LVL805
 17666 2efe 56010000 		.4byte	.LVL807
 17667 2f02 0100     		.2byte	0x1
 17668 2f04 53       		.byte	0x53
 17669 2f05 00000000 		.4byte	0
 17670 2f09 00000000 		.4byte	0
 17671              	.LLST225:
 17672 2f0d 0E000000 		.4byte	.LVL771
 17673 2f11 12000000 		.4byte	.LVL772
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 383


 17674 2f15 0100     		.2byte	0x1
 17675 2f17 50       		.byte	0x50
 17676 2f18 12000000 		.4byte	.LVL772
 17677 2f1c 48000000 		.4byte	.LVL781
 17678 2f20 0100     		.2byte	0x1
 17679 2f22 56       		.byte	0x56
 17680 2f23 52000000 		.4byte	.LVL783
 17681 2f27 E2000000 		.4byte	.LVL802
 17682 2f2b 0100     		.2byte	0x1
 17683 2f2d 56       		.byte	0x56
 17684 2f2e 00000000 		.4byte	0
 17685 2f32 00000000 		.4byte	0
 17686              	.LLST226:
 17687 2f36 7C000000 		.4byte	.LVL791
 17688 2f3a 84000000 		.4byte	.LVL792
 17689 2f3e 0400     		.2byte	0x4
 17690 2f40 0A       		.byte	0xa
 17691 2f41 0002     		.2byte	0x200
 17692 2f43 9F       		.byte	0x9f
 17693 2f44 84000000 		.4byte	.LVL792
 17694 2f48 90000000 		.4byte	.LVL794
 17695 2f4c 0A00     		.2byte	0xa
 17696 2f4e 7D       		.byte	0x7d
 17697 2f4f 00       		.sleb128 0
 17698 2f50 06       		.byte	0x6
 17699 2f51 73       		.byte	0x73
 17700 2f52 00       		.sleb128 0
 17701 2f53 1C       		.byte	0x1c
 17702 2f54 23       		.byte	0x23
 17703 2f55 FF03     		.uleb128 0x1ff
 17704 2f57 9F       		.byte	0x9f
 17705 2f58 90000000 		.4byte	.LVL794
 17706 2f5c 92000000 		.4byte	.LVL795
 17707 2f60 0A00     		.2byte	0xa
 17708 2f62 7D       		.byte	0x7d
 17709 2f63 00       		.sleb128 0
 17710 2f64 06       		.byte	0x6
 17711 2f65 73       		.byte	0x73
 17712 2f66 00       		.sleb128 0
 17713 2f67 1C       		.byte	0x1c
 17714 2f68 23       		.byte	0x23
 17715 2f69 8004     		.uleb128 0x200
 17716 2f6b 9F       		.byte	0x9f
 17717 2f6c 92000000 		.4byte	.LVL795
 17718 2f70 96000000 		.4byte	.LVL796
 17719 2f74 0A00     		.2byte	0xa
 17720 2f76 7D       		.byte	0x7d
 17721 2f77 00       		.sleb128 0
 17722 2f78 06       		.byte	0x6
 17723 2f79 73       		.byte	0x73
 17724 2f7a 00       		.sleb128 0
 17725 2f7b 1C       		.byte	0x1c
 17726 2f7c 23       		.byte	0x23
 17727 2f7d FF03     		.uleb128 0x1ff
 17728 2f7f 9F       		.byte	0x9f
 17729 2f80 00000000 		.4byte	0
 17730 2f84 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 384


 17731              	.LLST227:
 17732 2f88 7C000000 		.4byte	.LVL791
 17733 2f8c E4010000 		.4byte	.LVL825
 17734 2f90 0200     		.2byte	0x2
 17735 2f92 30       		.byte	0x30
 17736 2f93 9F       		.byte	0x9f
 17737 2f94 00000000 		.4byte	0
 17738 2f98 00000000 		.4byte	0
 17739              	.LLST228:
 17740 2f9c 7C000000 		.4byte	.LVL791
 17741 2fa0 E4010000 		.4byte	.LVL825
 17742 2fa4 0200     		.2byte	0x2
 17743 2fa6 7D       		.byte	0x7d
 17744 2fa7 00       		.sleb128 0
 17745 2fa8 00000000 		.4byte	0
 17746 2fac 00000000 		.4byte	0
 17747              	.LLST229:
 17748 2fb0 7C000000 		.4byte	.LVL791
 17749 2fb4 84000000 		.4byte	.LVL792
 17750 2fb8 0200     		.2byte	0x2
 17751 2fba 7D       		.byte	0x7d
 17752 2fbb 00       		.sleb128 0
 17753 2fbc 84000000 		.4byte	.LVL792
 17754 2fc0 8A000000 		.4byte	.LVL793
 17755 2fc4 0100     		.2byte	0x1
 17756 2fc6 53       		.byte	0x53
 17757 2fc7 8A000000 		.4byte	.LVL793
 17758 2fcb 90000000 		.4byte	.LVL794
 17759 2fcf 0300     		.2byte	0x3
 17760 2fd1 73       		.byte	0x73
 17761 2fd2 01       		.sleb128 1
 17762 2fd3 9F       		.byte	0x9f
 17763 2fd4 90000000 		.4byte	.LVL794
 17764 2fd8 96000000 		.4byte	.LVL796
 17765 2fdc 0100     		.2byte	0x1
 17766 2fde 53       		.byte	0x53
 17767 2fdf 00000000 		.4byte	0
 17768 2fe3 00000000 		.4byte	0
 17769              	.LLST230:
 17770 2fe7 98000000 		.4byte	.LVL797
 17771 2feb A2000000 		.4byte	.LVL799
 17772 2fef 0900     		.2byte	0x9
 17773 2ff1 7D       		.byte	0x7d
 17774 2ff2 00       		.sleb128 0
 17775 2ff3 06       		.byte	0x6
 17776 2ff4 73       		.byte	0x73
 17777 2ff5 00       		.sleb128 0
 17778 2ff6 1C       		.byte	0x1c
 17779 2ff7 23       		.byte	0x23
 17780 2ff8 0A       		.uleb128 0xa
 17781 2ff9 9F       		.byte	0x9f
 17782 2ffa A2000000 		.4byte	.LVL799
 17783 2ffe A4000000 		.4byte	.LVL800
 17784 3002 0900     		.2byte	0x9
 17785 3004 7D       		.byte	0x7d
 17786 3005 00       		.sleb128 0
 17787 3006 06       		.byte	0x6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 385


 17788 3007 73       		.byte	0x73
 17789 3008 00       		.sleb128 0
 17790 3009 1C       		.byte	0x1c
 17791 300a 23       		.byte	0x23
 17792 300b 0B       		.uleb128 0xb
 17793 300c 9F       		.byte	0x9f
 17794 300d A4000000 		.4byte	.LVL800
 17795 3011 A6000000 		.4byte	.LVL801
 17796 3015 0900     		.2byte	0x9
 17797 3017 7D       		.byte	0x7d
 17798 3018 00       		.sleb128 0
 17799 3019 06       		.byte	0x6
 17800 301a 73       		.byte	0x73
 17801 301b 00       		.sleb128 0
 17802 301c 1C       		.byte	0x1c
 17803 301d 23       		.byte	0x23
 17804 301e 0A       		.uleb128 0xa
 17805 301f 9F       		.byte	0x9f
 17806 3020 00000000 		.4byte	0
 17807 3024 00000000 		.4byte	0
 17808              	.LLST231:
 17809 3028 98000000 		.4byte	.LVL797
 17810 302c 9C000000 		.4byte	.LVL798
 17811 3030 0100     		.2byte	0x1
 17812 3032 53       		.byte	0x53
 17813 3033 9C000000 		.4byte	.LVL798
 17814 3037 A2000000 		.4byte	.LVL799
 17815 303b 0300     		.2byte	0x3
 17816 303d 73       		.byte	0x73
 17817 303e 01       		.sleb128 1
 17818 303f 9F       		.byte	0x9f
 17819 3040 A2000000 		.4byte	.LVL799
 17820 3044 A6000000 		.4byte	.LVL801
 17821 3048 0100     		.2byte	0x1
 17822 304a 53       		.byte	0x53
 17823 304b 00000000 		.4byte	0
 17824 304f 00000000 		.4byte	0
 17825              	.LLST232:
 17826 3053 86010000 		.4byte	.LVL814
 17827 3057 92010000 		.4byte	.LVL816
 17828 305b 0A00     		.2byte	0xa
 17829 305d 7D       		.byte	0x7d
 17830 305e 00       		.sleb128 0
 17831 305f 06       		.byte	0x6
 17832 3060 73       		.byte	0x73
 17833 3061 00       		.sleb128 0
 17834 3062 1C       		.byte	0x1c
 17835 3063 23       		.byte	0x23
 17836 3064 FF03     		.uleb128 0x1ff
 17837 3066 9F       		.byte	0x9f
 17838 3067 92010000 		.4byte	.LVL816
 17839 306b 94010000 		.4byte	.LVL817
 17840 306f 0A00     		.2byte	0xa
 17841 3071 7D       		.byte	0x7d
 17842 3072 00       		.sleb128 0
 17843 3073 06       		.byte	0x6
 17844 3074 73       		.byte	0x73
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 386


 17845 3075 00       		.sleb128 0
 17846 3076 1C       		.byte	0x1c
 17847 3077 23       		.byte	0x23
 17848 3078 8004     		.uleb128 0x200
 17849 307a 9F       		.byte	0x9f
 17850 307b 94010000 		.4byte	.LVL817
 17851 307f 98010000 		.4byte	.LVL818
 17852 3083 0A00     		.2byte	0xa
 17853 3085 7D       		.byte	0x7d
 17854 3086 00       		.sleb128 0
 17855 3087 06       		.byte	0x6
 17856 3088 73       		.byte	0x73
 17857 3089 00       		.sleb128 0
 17858 308a 1C       		.byte	0x1c
 17859 308b 23       		.byte	0x23
 17860 308c FF03     		.uleb128 0x1ff
 17861 308e 9F       		.byte	0x9f
 17862 308f 00000000 		.4byte	0
 17863 3093 00000000 		.4byte	0
 17864              	.LLST233:
 17865 3097 86010000 		.4byte	.LVL814
 17866 309b 8C010000 		.4byte	.LVL815
 17867 309f 0100     		.2byte	0x1
 17868 30a1 53       		.byte	0x53
 17869 30a2 8C010000 		.4byte	.LVL815
 17870 30a6 92010000 		.4byte	.LVL816
 17871 30aa 0300     		.2byte	0x3
 17872 30ac 73       		.byte	0x73
 17873 30ad 01       		.sleb128 1
 17874 30ae 9F       		.byte	0x9f
 17875 30af 92010000 		.4byte	.LVL816
 17876 30b3 98010000 		.4byte	.LVL818
 17877 30b7 0100     		.2byte	0x1
 17878 30b9 53       		.byte	0x53
 17879 30ba 00000000 		.4byte	0
 17880 30be 00000000 		.4byte	0
 17881              	.LLST234:
 17882 30c2 00000000 		.4byte	.LVL826
 17883 30c6 0C000000 		.4byte	.LVL827
 17884 30ca 0100     		.2byte	0x1
 17885 30cc 50       		.byte	0x50
 17886 30cd 0C000000 		.4byte	.LVL827
 17887 30d1 13000000 		.4byte	.LVL830-1
 17888 30d5 0200     		.2byte	0x2
 17889 30d7 70       		.byte	0x70
 17890 30d8 00       		.sleb128 0
 17891 30d9 13000000 		.4byte	.LVL830-1
 17892 30dd 4C000000 		.4byte	.LFE42
 17893 30e1 0200     		.2byte	0x2
 17894 30e3 91       		.byte	0x91
 17895 30e4 44       		.sleb128 -60
 17896 30e5 00000000 		.4byte	0
 17897 30e9 00000000 		.4byte	0
 17898              	.LLST235:
 17899 30ed 00000000 		.4byte	.LVL826
 17900 30f1 0E000000 		.4byte	.LVL828
 17901 30f5 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 387


 17902 30f7 51       		.byte	0x51
 17903 30f8 0E000000 		.4byte	.LVL828
 17904 30fc 4C000000 		.4byte	.LFE42
 17905 3100 0400     		.2byte	0x4
 17906 3102 F3       		.byte	0xf3
 17907 3103 01       		.uleb128 0x1
 17908 3104 51       		.byte	0x51
 17909 3105 9F       		.byte	0x9f
 17910 3106 00000000 		.4byte	0
 17911 310a 00000000 		.4byte	0
 17912              	.LLST236:
 17913 310e 00000000 		.4byte	.LVL826
 17914 3112 10000000 		.4byte	.LVL829
 17915 3116 0100     		.2byte	0x1
 17916 3118 52       		.byte	0x52
 17917 3119 10000000 		.4byte	.LVL829
 17918 311d 36000000 		.4byte	.LVL835
 17919 3121 0400     		.2byte	0x4
 17920 3123 F3       		.byte	0xf3
 17921 3124 01       		.uleb128 0x1
 17922 3125 52       		.byte	0x52
 17923 3126 9F       		.byte	0x9f
 17924 3127 36000000 		.4byte	.LVL835
 17925 312b 3A000000 		.4byte	.LVL836
 17926 312f 0100     		.2byte	0x1
 17927 3131 52       		.byte	0x52
 17928 3132 3A000000 		.4byte	.LVL836
 17929 3136 48000000 		.4byte	.LVL839
 17930 313a 0600     		.2byte	0x6
 17931 313c 75       		.byte	0x75
 17932 313d 00       		.sleb128 0
 17933 313e 08       		.byte	0x8
 17934 313f 27       		.byte	0x27
 17935 3140 1A       		.byte	0x1a
 17936 3141 9F       		.byte	0x9f
 17937 3142 00000000 		.4byte	0
 17938 3146 00000000 		.4byte	0
 17939              	.LLST237:
 17940 314a 14000000 		.4byte	.LVL830
 17941 314e 1C000000 		.4byte	.LVL831
 17942 3152 0100     		.2byte	0x1
 17943 3154 50       		.byte	0x50
 17944 3155 24000000 		.4byte	.LVL832
 17945 3159 2C000000 		.4byte	.LVL834
 17946 315d 0100     		.2byte	0x1
 17947 315f 50       		.byte	0x50
 17948 3160 2C000000 		.4byte	.LVL834
 17949 3164 42000000 		.4byte	.LVL838
 17950 3168 0300     		.2byte	0x3
 17951 316a 70       		.byte	0x70
 17952 316b 7A       		.sleb128 -6
 17953 316c 9F       		.byte	0x9f
 17954 316d 48000000 		.4byte	.LVL839
 17955 3171 4C000000 		.4byte	.LFE42
 17956 3175 0100     		.2byte	0x1
 17957 3177 50       		.byte	0x50
 17958 3178 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 388


 17959 317c 00000000 		.4byte	0
 17960              	.LLST238:
 17961 3180 2A000000 		.4byte	.LVL833
 17962 3184 40000000 		.4byte	.LVL837
 17963 3188 0100     		.2byte	0x1
 17964 318a 53       		.byte	0x53
 17965 318b 00000000 		.4byte	0
 17966 318f 00000000 		.4byte	0
 17967              	.LLST239:
 17968 3193 00000000 		.4byte	.LVL840
 17969 3197 0A000000 		.4byte	.LVL841
 17970 319b 0100     		.2byte	0x1
 17971 319d 50       		.byte	0x50
 17972 319e 0A000000 		.4byte	.LVL841
 17973 31a2 11000000 		.4byte	.LVL843-1
 17974 31a6 0200     		.2byte	0x2
 17975 31a8 70       		.byte	0x70
 17976 31a9 00       		.sleb128 0
 17977 31aa 11000000 		.4byte	.LVL843-1
 17978 31ae 50000000 		.4byte	.LFE43
 17979 31b2 0200     		.2byte	0x2
 17980 31b4 91       		.byte	0x91
 17981 31b5 4C       		.sleb128 -52
 17982 31b6 00000000 		.4byte	0
 17983 31ba 00000000 		.4byte	0
 17984              	.LLST240:
 17985 31be 00000000 		.4byte	.LVL840
 17986 31c2 0C000000 		.4byte	.LVL842
 17987 31c6 0100     		.2byte	0x1
 17988 31c8 51       		.byte	0x51
 17989 31c9 0C000000 		.4byte	.LVL842
 17990 31cd 4E000000 		.4byte	.LVL851
 17991 31d1 0100     		.2byte	0x1
 17992 31d3 54       		.byte	0x54
 17993 31d4 4E000000 		.4byte	.LVL851
 17994 31d8 50000000 		.4byte	.LFE43
 17995 31dc 0400     		.2byte	0x4
 17996 31de F3       		.byte	0xf3
 17997 31df 01       		.uleb128 0x1
 17998 31e0 51       		.byte	0x51
 17999 31e1 9F       		.byte	0x9f
 18000 31e2 00000000 		.4byte	0
 18001 31e6 00000000 		.4byte	0
 18002              	.LLST241:
 18003 31ea 12000000 		.4byte	.LVL843
 18004 31ee 1A000000 		.4byte	.LVL844
 18005 31f2 0100     		.2byte	0x1
 18006 31f4 50       		.byte	0x50
 18007 31f5 22000000 		.4byte	.LVL845
 18008 31f9 2A000000 		.4byte	.LVL847
 18009 31fd 0100     		.2byte	0x1
 18010 31ff 50       		.byte	0x50
 18011 3200 2A000000 		.4byte	.LVL847
 18012 3204 32000000 		.4byte	.LVL848
 18013 3208 0300     		.2byte	0x3
 18014 320a 70       		.byte	0x70
 18015 320b 7A       		.sleb128 -6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 389


 18016 320c 9F       		.byte	0x9f
 18017 320d 4C000000 		.4byte	.LVL850
 18018 3211 50000000 		.4byte	.LFE43
 18019 3215 0100     		.2byte	0x1
 18020 3217 50       		.byte	0x50
 18021 3218 00000000 		.4byte	0
 18022 321c 00000000 		.4byte	0
 18023              	.LLST242:
 18024 3220 28000000 		.4byte	.LVL846
 18025 3224 46000000 		.4byte	.LVL849
 18026 3228 0100     		.2byte	0x1
 18027 322a 53       		.byte	0x53
 18028 322b 00000000 		.4byte	0
 18029 322f 00000000 		.4byte	0
 18030              	.LLST243:
 18031 3233 00000000 		.4byte	.LVL852
 18032 3237 0A000000 		.4byte	.LVL853
 18033 323b 0100     		.2byte	0x1
 18034 323d 50       		.byte	0x50
 18035 323e 0A000000 		.4byte	.LVL853
 18036 3242 11000000 		.4byte	.LVL855-1
 18037 3246 0200     		.2byte	0x2
 18038 3248 70       		.byte	0x70
 18039 3249 00       		.sleb128 0
 18040 324a 11000000 		.4byte	.LVL855-1
 18041 324e 28010000 		.4byte	.LFE44
 18042 3252 0300     		.2byte	0x3
 18043 3254 91       		.byte	0x91
 18044 3255 8C7F     		.sleb128 -116
 18045 3257 00000000 		.4byte	0
 18046 325b 00000000 		.4byte	0
 18047              	.LLST244:
 18048 325f 00000000 		.4byte	.LVL852
 18049 3263 0C000000 		.4byte	.LVL854
 18050 3267 0100     		.2byte	0x1
 18051 3269 51       		.byte	0x51
 18052 326a 0C000000 		.4byte	.LVL854
 18053 326e 72000000 		.4byte	.LVL866
 18054 3272 0100     		.2byte	0x1
 18055 3274 55       		.byte	0x55
 18056 3275 72000000 		.4byte	.LVL866
 18057 3279 10010000 		.4byte	.LVL876
 18058 327d 0400     		.2byte	0x4
 18059 327f F3       		.byte	0xf3
 18060 3280 01       		.uleb128 0x1
 18061 3281 51       		.byte	0x51
 18062 3282 9F       		.byte	0x9f
 18063 3283 10010000 		.4byte	.LVL876
 18064 3287 14010000 		.4byte	.LVL878
 18065 328b 0100     		.2byte	0x1
 18066 328d 55       		.byte	0x55
 18067 328e 14010000 		.4byte	.LVL878
 18068 3292 28010000 		.4byte	.LFE44
 18069 3296 0400     		.2byte	0x4
 18070 3298 F3       		.byte	0xf3
 18071 3299 01       		.uleb128 0x1
 18072 329a 51       		.byte	0x51
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 390


 18073 329b 9F       		.byte	0x9f
 18074 329c 00000000 		.4byte	0
 18075 32a0 00000000 		.4byte	0
 18076              	.LLST245:
 18077 32a4 12000000 		.4byte	.LVL855
 18078 32a8 1C000000 		.4byte	.LVL856
 18079 32ac 0100     		.2byte	0x1
 18080 32ae 50       		.byte	0x50
 18081 32af 28000000 		.4byte	.LVL857
 18082 32b3 2E000000 		.4byte	.LVL858
 18083 32b7 0100     		.2byte	0x1
 18084 32b9 50       		.byte	0x50
 18085 32ba 34000000 		.4byte	.LVL859
 18086 32be 3C000000 		.4byte	.LVL860
 18087 32c2 0100     		.2byte	0x1
 18088 32c4 50       		.byte	0x50
 18089 32c5 5E000000 		.4byte	.LVL863
 18090 32c9 68000000 		.4byte	.LVL864
 18091 32cd 0100     		.2byte	0x1
 18092 32cf 50       		.byte	0x50
 18093 32d0 6C000000 		.4byte	.LVL865
 18094 32d4 76000000 		.4byte	.LVL867
 18095 32d8 0100     		.2byte	0x1
 18096 32da 50       		.byte	0x50
 18097 32db D4000000 		.4byte	.LVL872
 18098 32df F6000000 		.4byte	.LVL874
 18099 32e3 0100     		.2byte	0x1
 18100 32e5 50       		.byte	0x50
 18101 32e6 10010000 		.4byte	.LVL876
 18102 32ea 12010000 		.4byte	.LVL877
 18103 32ee 0100     		.2byte	0x1
 18104 32f0 50       		.byte	0x50
 18105 32f1 14010000 		.4byte	.LVL878
 18106 32f5 1A010000 		.4byte	.LVL879
 18107 32f9 0200     		.2byte	0x2
 18108 32fb 30       		.byte	0x30
 18109 32fc 9F       		.byte	0x9f
 18110 32fd 1A010000 		.4byte	.LVL879
 18111 3301 20010000 		.4byte	.LVL880
 18112 3305 0100     		.2byte	0x1
 18113 3307 50       		.byte	0x50
 18114 3308 00000000 		.4byte	0
 18115 330c 00000000 		.4byte	0
 18116              	.LLST246:
 18117 3310 72000000 		.4byte	.LVL866
 18118 3314 D6000000 		.4byte	.LVL873
 18119 3318 0100     		.2byte	0x1
 18120 331a 55       		.byte	0x55
 18121 331b D6000000 		.4byte	.LVL873
 18122 331f 10010000 		.4byte	.LVL876
 18123 3323 0400     		.2byte	0x4
 18124 3325 73       		.byte	0x73
 18125 3326 D000     		.sleb128 80
 18126 3328 9F       		.byte	0x9f
 18127 3329 00000000 		.4byte	0
 18128 332d 00000000 		.4byte	0
 18129              	.LLST247:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 391


 18130 3331 C8000000 		.4byte	.LVL870
 18131 3335 CA000000 		.4byte	.LVL871
 18132 3339 0100     		.2byte	0x1
 18133 333b 50       		.byte	0x50
 18134 333c CA000000 		.4byte	.LVL871
 18135 3340 D3000000 		.4byte	.LVL872-1
 18136 3344 0100     		.2byte	0x1
 18137 3346 51       		.byte	0x51
 18138 3347 F6000000 		.4byte	.LVL874
 18139 334b 02010000 		.4byte	.LVL875
 18140 334f 0100     		.2byte	0x1
 18141 3351 50       		.byte	0x50
 18142 3352 00000000 		.4byte	0
 18143 3356 00000000 		.4byte	0
 18144              		.section	.debug_aranges,"",%progbits
 18145 0000 34010000 		.4byte	0x134
 18146 0004 0200     		.2byte	0x2
 18147 0006 00000000 		.4byte	.Ldebug_info0
 18148 000a 04       		.byte	0x4
 18149 000b 00       		.byte	0
 18150 000c 0000     		.2byte	0
 18151 000e 0000     		.2byte	0
 18152 0010 00000000 		.4byte	.LFB0
 18153 0014 12000000 		.4byte	.LFE0-.LFB0
 18154 0018 00000000 		.4byte	.LFB4
 18155 001c 64000000 		.4byte	.LFE4-.LFB4
 18156 0020 00000000 		.4byte	.LFB23
 18157 0024 82000000 		.4byte	.LFE23-.LFB23
 18158 0028 00000000 		.4byte	.LFB9
 18159 002c 74000000 		.4byte	.LFE9-.LFB9
 18160 0030 00000000 		.4byte	.LFB25
 18161 0034 A4000000 		.4byte	.LFE25-.LFB25
 18162 0038 00000000 		.4byte	.LFB26
 18163 003c 80030000 		.4byte	.LFE26-.LFB26
 18164 0040 00000000 		.4byte	.LFB27
 18165 0044 26000000 		.4byte	.LFE27-.LFB27
 18166 0048 00000000 		.4byte	.LFB10
 18167 004c EC000000 		.4byte	.LFE10-.LFB10
 18168 0050 00000000 		.4byte	.LFB11
 18169 0054 18000000 		.4byte	.LFE11-.LFB11
 18170 0058 00000000 		.4byte	.LFB12
 18171 005c D8000000 		.4byte	.LFE12-.LFB12
 18172 0060 00000000 		.4byte	.LFB16
 18173 0064 88000000 		.4byte	.LFE16-.LFB16
 18174 0068 00000000 		.4byte	.LFB21
 18175 006c 28000000 		.4byte	.LFE21-.LFB21
 18176 0070 00000000 		.4byte	.LFB13
 18177 0074 04010000 		.4byte	.LFE13-.LFB13
 18178 0078 00000000 		.4byte	.LFB15
 18179 007c A8000000 		.4byte	.LFE15-.LFB15
 18180 0080 00000000 		.4byte	.LFB17
 18181 0084 F6000000 		.4byte	.LFE17-.LFB17
 18182 0088 00000000 		.4byte	.LFB24
 18183 008c 9C010000 		.4byte	.LFE24-.LFB24
 18184 0090 00000000 		.4byte	.LFB20
 18185 0094 62000000 		.4byte	.LFE20-.LFB20
 18186 0098 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 392


 18187 009c 4E000000 		.4byte	.LFE19-.LFB19
 18188 00a0 00000000 		.4byte	.LFB14
 18189 00a4 56000000 		.4byte	.LFE14-.LFB14
 18190 00a8 00000000 		.4byte	.LFB28
 18191 00ac 38000000 		.4byte	.LFE28-.LFB28
 18192 00b0 00000000 		.4byte	.LFB29
 18193 00b4 34020000 		.4byte	.LFE29-.LFB29
 18194 00b8 00000000 		.4byte	.LFB30
 18195 00bc 5C010000 		.4byte	.LFE30-.LFB30
 18196 00c0 00000000 		.4byte	.LFB31
 18197 00c4 A6010000 		.4byte	.LFE31-.LFB31
 18198 00c8 00000000 		.4byte	.LFB32
 18199 00cc 7A000000 		.4byte	.LFE32-.LFB32
 18200 00d0 00000000 		.4byte	.LFB33
 18201 00d4 4C000000 		.4byte	.LFE33-.LFB33
 18202 00d8 00000000 		.4byte	.LFB34
 18203 00dc 2A010000 		.4byte	.LFE34-.LFB34
 18204 00e0 00000000 		.4byte	.LFB35
 18205 00e4 62000000 		.4byte	.LFE35-.LFB35
 18206 00e8 00000000 		.4byte	.LFB36
 18207 00ec 58000000 		.4byte	.LFE36-.LFB36
 18208 00f0 00000000 		.4byte	.LFB37
 18209 00f4 40000000 		.4byte	.LFE37-.LFB37
 18210 00f8 00000000 		.4byte	.LFB38
 18211 00fc EC000000 		.4byte	.LFE38-.LFB38
 18212 0100 00000000 		.4byte	.LFB39
 18213 0104 98000000 		.4byte	.LFE39-.LFB39
 18214 0108 00000000 		.4byte	.LFB40
 18215 010c BA000000 		.4byte	.LFE40-.LFB40
 18216 0110 00000000 		.4byte	.LFB41
 18217 0114 EA010000 		.4byte	.LFE41-.LFB41
 18218 0118 00000000 		.4byte	.LFB42
 18219 011c 4C000000 		.4byte	.LFE42-.LFB42
 18220 0120 00000000 		.4byte	.LFB43
 18221 0124 50000000 		.4byte	.LFE43-.LFB43
 18222 0128 00000000 		.4byte	.LFB44
 18223 012c 28010000 		.4byte	.LFE44-.LFB44
 18224 0130 00000000 		.4byte	0
 18225 0134 00000000 		.4byte	0
 18226              		.section	.debug_ranges,"",%progbits
 18227              	.Ldebug_ranges0:
 18228 0000 28000000 		.4byte	.LBB47
 18229 0004 D4000000 		.4byte	.LBE47
 18230 0008 56010000 		.4byte	.LBB58
 18231 000c 92010000 		.4byte	.LBE58
 18232 0010 00000000 		.4byte	0
 18233 0014 00000000 		.4byte	0
 18234 0018 14000000 		.4byte	.LBB69
 18235 001c 26000000 		.4byte	.LBE69
 18236 0020 2A000000 		.4byte	.LBB73
 18237 0024 4E000000 		.4byte	.LBE73
 18238 0028 52000000 		.4byte	.LBB74
 18239 002c 54000000 		.4byte	.LBE74
 18240 0030 00000000 		.4byte	0
 18241 0034 00000000 		.4byte	0
 18242 0038 54000000 		.4byte	.LBB84
 18243 003c 00010000 		.4byte	.LBE84
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 393


 18244 0040 24020000 		.4byte	.LBB89
 18245 0044 2C020000 		.4byte	.LBE89
 18246 0048 00000000 		.4byte	0
 18247 004c 00000000 		.4byte	0
 18248 0050 00000000 		.4byte	.LFB0
 18249 0054 12000000 		.4byte	.LFE0
 18250 0058 00000000 		.4byte	.LFB4
 18251 005c 64000000 		.4byte	.LFE4
 18252 0060 00000000 		.4byte	.LFB23
 18253 0064 82000000 		.4byte	.LFE23
 18254 0068 00000000 		.4byte	.LFB9
 18255 006c 74000000 		.4byte	.LFE9
 18256 0070 00000000 		.4byte	.LFB25
 18257 0074 A4000000 		.4byte	.LFE25
 18258 0078 00000000 		.4byte	.LFB26
 18259 007c 80030000 		.4byte	.LFE26
 18260 0080 00000000 		.4byte	.LFB27
 18261 0084 26000000 		.4byte	.LFE27
 18262 0088 00000000 		.4byte	.LFB10
 18263 008c EC000000 		.4byte	.LFE10
 18264 0090 00000000 		.4byte	.LFB11
 18265 0094 18000000 		.4byte	.LFE11
 18266 0098 00000000 		.4byte	.LFB12
 18267 009c D8000000 		.4byte	.LFE12
 18268 00a0 00000000 		.4byte	.LFB16
 18269 00a4 88000000 		.4byte	.LFE16
 18270 00a8 00000000 		.4byte	.LFB21
 18271 00ac 28000000 		.4byte	.LFE21
 18272 00b0 00000000 		.4byte	.LFB13
 18273 00b4 04010000 		.4byte	.LFE13
 18274 00b8 00000000 		.4byte	.LFB15
 18275 00bc A8000000 		.4byte	.LFE15
 18276 00c0 00000000 		.4byte	.LFB17
 18277 00c4 F6000000 		.4byte	.LFE17
 18278 00c8 00000000 		.4byte	.LFB24
 18279 00cc 9C010000 		.4byte	.LFE24
 18280 00d0 00000000 		.4byte	.LFB20
 18281 00d4 62000000 		.4byte	.LFE20
 18282 00d8 00000000 		.4byte	.LFB19
 18283 00dc 4E000000 		.4byte	.LFE19
 18284 00e0 00000000 		.4byte	.LFB14
 18285 00e4 56000000 		.4byte	.LFE14
 18286 00e8 00000000 		.4byte	.LFB28
 18287 00ec 38000000 		.4byte	.LFE28
 18288 00f0 00000000 		.4byte	.LFB29
 18289 00f4 34020000 		.4byte	.LFE29
 18290 00f8 00000000 		.4byte	.LFB30
 18291 00fc 5C010000 		.4byte	.LFE30
 18292 0100 00000000 		.4byte	.LFB31
 18293 0104 A6010000 		.4byte	.LFE31
 18294 0108 00000000 		.4byte	.LFB32
 18295 010c 7A000000 		.4byte	.LFE32
 18296 0110 00000000 		.4byte	.LFB33
 18297 0114 4C000000 		.4byte	.LFE33
 18298 0118 00000000 		.4byte	.LFB34
 18299 011c 2A010000 		.4byte	.LFE34
 18300 0120 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 394


 18301 0124 62000000 		.4byte	.LFE35
 18302 0128 00000000 		.4byte	.LFB36
 18303 012c 58000000 		.4byte	.LFE36
 18304 0130 00000000 		.4byte	.LFB37
 18305 0134 40000000 		.4byte	.LFE37
 18306 0138 00000000 		.4byte	.LFB38
 18307 013c EC000000 		.4byte	.LFE38
 18308 0140 00000000 		.4byte	.LFB39
 18309 0144 98000000 		.4byte	.LFE39
 18310 0148 00000000 		.4byte	.LFB40
 18311 014c BA000000 		.4byte	.LFE40
 18312 0150 00000000 		.4byte	.LFB41
 18313 0154 EA010000 		.4byte	.LFE41
 18314 0158 00000000 		.4byte	.LFB42
 18315 015c 4C000000 		.4byte	.LFE42
 18316 0160 00000000 		.4byte	.LFB43
 18317 0164 50000000 		.4byte	.LFE43
 18318 0168 00000000 		.4byte	.LFB44
 18319 016c 28010000 		.4byte	.LFE44
 18320 0170 00000000 		.4byte	0
 18321 0174 00000000 		.4byte	0
 18322              		.section	.debug_line,"",%progbits
 18323              	.Ldebug_line0:
 18324 0000 E80A0000 		.section	.debug_str,"MS",%progbits,1
 18324      02002D01 
 18324      00000201 
 18324      FB0E0D00 
 18324      01010101 
 18325              	.LASF57:
 18326 0000 46525F4E 		.ascii	"FR_NOT_READY\000"
 18326      4F545F52 
 18326      45414459 
 18326      00
 18327              	.LASF78:
 18328 000d 5245535F 		.ascii	"RES_WRPRT\000"
 18328      57525052 
 18328      5400
 18329              	.LASF167:
 18330 0017 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 18330      4320342E 
 18330      392E3320 
 18330      32303135 
 18330      30333033 
 18331 004a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 18331      20726576 
 18331      6973696F 
 18331      6E203232 
 18331      31323230 
 18332 007d 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 18332      66756E63 
 18332      74696F6E 
 18332      2D736563 
 18332      74696F6E 
 18333              	.LASF150:
 18334 00a5 64636C73 		.ascii	"dclst\000"
 18334      7400
 18335              	.LASF153:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 395


 18336 00ab 76616C75 		.ascii	"value\000"
 18336      6500
 18337              	.LASF72:
 18338 00b1 46525F54 		.ascii	"FR_TOO_MANY_OPEN_FILES\000"
 18338      4F4F5F4D 
 18338      414E595F 
 18338      4F50454E 
 18338      5F46494C 
 18339              	.LASF90:
 18340 00c8 7075745F 		.ascii	"put_fat\000"
 18340      66617400 
 18341              	.LASF21:
 18342 00d0 66735F74 		.ascii	"fs_type\000"
 18342      79706500 
 18343              	.LASF133:
 18344 00d8 63736563 		.ascii	"csect\000"
 18344      7400
 18345              	.LASF95:
 18346 00de 63686B5F 		.ascii	"chk_chr\000"
 18346      63687200 
 18347              	.LASF93:
 18348 00e6 665F7379 		.ascii	"f_sync\000"
 18348      6E6300
 18349              	.LASF3:
 18350 00ed 5F5F7569 		.ascii	"__uint8_t\000"
 18350      6E74385F 
 18350      7400
 18351              	.LASF129:
 18352 00f7 665F7265 		.ascii	"f_read\000"
 18352      616400
 18353              	.LASF79:
 18354 00fe 5245535F 		.ascii	"RES_NOTRDY\000"
 18354      4E4F5452 
 18354      445900
 18355              	.LASF26:
 18356 0109 6E5F726F 		.ascii	"n_rootdir\000"
 18356      6F746469 
 18356      7200
 18357              	.LASF46:
 18358 0113 6C6F636B 		.ascii	"lockid\000"
 18358      696400
 18359              	.LASF83:
 18360 011a 70617468 		.ascii	"path\000"
 18360      00
 18361              	.LASF134:
 18362 011f 72627566 		.ascii	"rbuff\000"
 18362      6600
 18363              	.LASF10:
 18364 0125 6C6F6E67 		.ascii	"long long unsigned int\000"
 18364      206C6F6E 
 18364      6720756E 
 18364      7369676E 
 18364      65642069 
 18365              	.LASF126:
 18366 013c 696E635F 		.ascii	"inc_lock\000"
 18366      6C6F636B 
 18366      00
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 396


 18367              	.LASF99:
 18368 0145 63686B5F 		.ascii	"chk_lock\000"
 18368      6C6F636B 
 18368      00
 18369              	.LASF155:
 18370 014e 665F7574 		.ascii	"f_utime\000"
 18370      696D6500 
 18371              	.LASF48:
 18372 0156 73656374 		.ascii	"sect\000"
 18372      00
 18373              	.LASF96:
 18374 015b 65786376 		.ascii	"excvt\000"
 18374      7400
 18375              	.LASF63:
 18376 0161 46525F49 		.ascii	"FR_INVALID_OBJECT\000"
 18376      4E56414C 
 18376      49445F4F 
 18376      424A4543 
 18376      5400
 18377              	.LASF107:
 18378 0173 66617369 		.ascii	"fasize\000"
 18378      7A6500
 18379              	.LASF27:
 18380 017a 6C617374 		.ascii	"last_clust\000"
 18380      5F636C75 
 18380      737400
 18381              	.LASF44:
 18382 0185 6469725F 		.ascii	"dir_sect\000"
 18382      73656374 
 18382      00
 18383              	.LASF157:
 18384 018e 70617468 		.ascii	"path_old\000"
 18384      5F6F6C64 
 18384      00
 18385              	.LASF33:
 18386 0197 64697262 		.ascii	"dirbase\000"
 18386      61736500 
 18387              	.LASF9:
 18388 019f 6C6F6E67 		.ascii	"long long int\000"
 18388      206C6F6E 
 18388      6720696E 
 18388      7400
 18389              	.LASF0:
 18390 01ad 7369676E 		.ascii	"signed char\000"
 18390      65642063 
 18390      68617200 
 18391              	.LASF113:
 18392 01b9 636C6561 		.ascii	"clear_lock\000"
 18392      725F6C6F 
 18392      636B00
 18393              	.LASF130:
 18394 01c4 62756666 		.ascii	"buff\000"
 18394      00
 18395              	.LASF73:
 18396 01c9 46525F49 		.ascii	"FR_INVALID_PARAMETER\000"
 18396      4E56414C 
 18396      49445F50 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 397


 18396      4152414D 
 18396      45544552 
 18397              	.LASF31:
 18398 01de 6673697A 		.ascii	"fsize\000"
 18398      6500
 18399              	.LASF30:
 18400 01e4 6E5F6661 		.ascii	"n_fatent\000"
 18400      74656E74 
 18400      00
 18401              	.LASF6:
 18402 01ed 6C6F6E67 		.ascii	"long int\000"
 18402      20696E74 
 18402      00
 18403              	.LASF88:
 18404 01f6 6469725F 		.ascii	"dir_remove\000"
 18404      72656D6F 
 18404      766500
 18405              	.LASF80:
 18406 0201 5245535F 		.ascii	"RES_PARERR\000"
 18406      50415245 
 18406      525200
 18407              	.LASF23:
 18408 020c 6E5F6661 		.ascii	"n_fats\000"
 18408      747300
 18409              	.LASF125:
 18410 0213 656E715F 		.ascii	"enq_lock\000"
 18410      6C6F636B 
 18410      00
 18411              	.LASF159:
 18412 021c 46617446 		.ascii	"FatFs\000"
 18412      7300
 18413              	.LASF67:
 18414 0222 46525F4E 		.ascii	"FR_NO_FILESYSTEM\000"
 18414      4F5F4649 
 18414      4C455359 
 18414      5354454D 
 18414      00
 18415              	.LASF13:
 18416 0233 75696E74 		.ascii	"uint16_t\000"
 18416      31365F74 
 18416      00
 18417              	.LASF71:
 18418 023c 46525F4E 		.ascii	"FR_NOT_ENOUGH_CORE\000"
 18418      4F545F45 
 18418      4E4F5547 
 18418      485F434F 
 18418      524500
 18419              	.LASF62:
 18420 024f 46525F45 		.ascii	"FR_EXIST\000"
 18420      58495354 
 18420      00
 18421              	.LASF32:
 18422 0258 66617462 		.ascii	"fatbase\000"
 18422      61736500 
 18423              	.LASF18:
 18424 0260 44574F52 		.ascii	"DWORD\000"
 18424      4400
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 398


 18425              	.LASF135:
 18426 0266 665F7772 		.ascii	"f_write\000"
 18426      69746500 
 18427              	.LASF120:
 18428 026e 6469725F 		.ascii	"dir_find\000"
 18428      66696E64 
 18428      00
 18429              	.LASF145:
 18430 0277 665F7374 		.ascii	"f_stat\000"
 18430      617400
 18431              	.LASF7:
 18432 027e 5F5F7569 		.ascii	"__uint32_t\000"
 18432      6E743332 
 18432      5F7400
 18433              	.LASF22:
 18434 0289 6373697A 		.ascii	"csize\000"
 18434      6500
 18435              	.LASF165:
 18436 028f 6469736B 		.ascii	"disk_initialize\000"
 18436      5F696E69 
 18436      7469616C 
 18436      697A6500 
 18437              	.LASF82:
 18438 029f 46494C45 		.ascii	"FILESEM\000"
 18438      53454D00 
 18439              	.LASF16:
 18440 02a7 42595445 		.ascii	"BYTE\000"
 18440      00
 18441              	.LASF45:
 18442 02ac 6469725F 		.ascii	"dir_ptr\000"
 18442      70747200 
 18443              	.LASF119:
 18444 02b4 73747265 		.ascii	"stretch\000"
 18444      74636800 
 18445              	.LASF11:
 18446 02bc 756E7369 		.ascii	"unsigned int\000"
 18446      676E6564 
 18446      20696E74 
 18446      00
 18447              	.LASF15:
 18448 02c9 55494E54 		.ascii	"UINT\000"
 18448      00
 18449              	.LASF50:
 18450 02ce 6674696D 		.ascii	"ftime\000"
 18450      6500
 18451              	.LASF8:
 18452 02d4 6C6F6E67 		.ascii	"long unsigned int\000"
 18452      20756E73 
 18452      69676E65 
 18452      6420696E 
 18452      7400
 18453              	.LASF164:
 18454 02e6 6469736B 		.ascii	"disk_status\000"
 18454      5F737461 
 18454      74757300 
 18455              	.LASF139:
 18456 02f2 665F636C 		.ascii	"f_close\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 399


 18456      6F736500 
 18457              	.LASF106:
 18458 02fa 62736563 		.ascii	"bsect\000"
 18458      7400
 18459              	.LASF109:
 18460 0300 73797365 		.ascii	"sysect\000"
 18460      637400
 18461              	.LASF5:
 18462 0307 73686F72 		.ascii	"short unsigned int\000"
 18462      7420756E 
 18462      7369676E 
 18462      65642069 
 18462      6E7400
 18463              	.LASF34:
 18464 031a 64617461 		.ascii	"database\000"
 18464      62617365 
 18464      00
 18465              	.LASF156:
 18466 0323 665F7265 		.ascii	"f_rename\000"
 18466      6E616D65 
 18466      00
 18467              	.LASF87:
 18468 032c 636C7374 		.ascii	"clst\000"
 18468      00
 18469              	.LASF56:
 18470 0331 46525F49 		.ascii	"FR_INT_ERR\000"
 18470      4E545F45 
 18470      525200
 18471              	.LASF140:
 18472 033c 665F6C73 		.ascii	"f_lseek\000"
 18472      65656B00 
 18473              	.LASF55:
 18474 0344 46525F44 		.ascii	"FR_DISK_ERR\000"
 18474      49534B5F 
 18474      45525200 
 18475              	.LASF35:
 18476 0350 77696E73 		.ascii	"winsect\000"
 18476      65637400 
 18477              	.LASF94:
 18478 0358 6D656D5F 		.ascii	"mem_cmp\000"
 18478      636D7000 
 18479              	.LASF101:
 18480 0360 73656374 		.ascii	"sector\000"
 18480      6F7200
 18481              	.LASF111:
 18482 0367 737A6266 		.ascii	"szbfat\000"
 18482      617400
 18483              	.LASF118:
 18484 036e 6469725F 		.ascii	"dir_next\000"
 18484      6E657874 
 18484      00
 18485              	.LASF52:
 18486 0377 666E616D 		.ascii	"fname\000"
 18486      6500
 18487              	.LASF64:
 18488 037d 46525F57 		.ascii	"FR_WRITE_PROTECTED\000"
 18488      52495445 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 400


 18488      5F50524F 
 18488      54454354 
 18488      454400
 18489              	.LASF166:
 18490 0390 6469736B 		.ascii	"disk_ioctl\000"
 18490      5F696F63 
 18490      746C00
 18491              	.LASF37:
 18492 039b 46415446 		.ascii	"FATFS\000"
 18492      5300
 18493              	.LASF151:
 18494 03a1 665F6D6B 		.ascii	"f_mkdir\000"
 18494      64697200 
 18495              	.LASF49:
 18496 03a9 66646174 		.ascii	"fdate\000"
 18496      6500
 18497              	.LASF136:
 18498 03af 77636E74 		.ascii	"wcnt\000"
 18498      00
 18499              	.LASF40:
 18500 03b4 66707472 		.ascii	"fptr\000"
 18500      00
 18501              	.LASF123:
 18502 03b9 636C7573 		.ascii	"clust2sect\000"
 18502      74327365 
 18502      637400
 18503              	.LASF158:
 18504 03c4 70617468 		.ascii	"path_new\000"
 18504      5F6E6577 
 18504      00
 18505              	.LASF114:
 18506 03cd 6D656D5F 		.ascii	"mem_set\000"
 18506      73657400 
 18507              	.LASF36:
 18508 03d5 73697A65 		.ascii	"sizetype\000"
 18508      74797065 
 18508      00
 18509              	.LASF98:
 18510 03de 6765745F 		.ascii	"get_fileinfo\000"
 18510      66696C65 
 18510      696E666F 
 18510      00
 18511              	.LASF103:
 18512 03eb 63686B5F 		.ascii	"chk_mounted\000"
 18512      6D6F756E 
 18512      74656400 
 18513              	.LASF110:
 18514 03f7 6E636C73 		.ascii	"nclst\000"
 18514      7400
 18515              	.LASF69:
 18516 03fd 46525F54 		.ascii	"FR_TIMEOUT\000"
 18516      494D454F 
 18516      555400
 18517              	.LASF17:
 18518 0408 574F5244 		.ascii	"WORD\000"
 18518      00
 18519              	.LASF41:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 401


 18520 040d 73636C75 		.ascii	"sclust\000"
 18520      737400
 18521              	.LASF76:
 18522 0414 5245535F 		.ascii	"RES_OK\000"
 18522      4F4B00
 18523              	.LASF28:
 18524 041b 66726565 		.ascii	"free_clust\000"
 18524      5F636C75 
 18524      737400
 18525              	.LASF152:
 18526 0426 665F6368 		.ascii	"f_chmod\000"
 18526      6D6F6400 
 18527              	.LASF58:
 18528 042e 46525F4E 		.ascii	"FR_NO_FILE\000"
 18528      4F5F4649 
 18528      4C4500
 18529              	.LASF147:
 18530 0439 66617466 		.ascii	"fatfs\000"
 18530      7300
 18531              	.LASF19:
 18532 043f 54434841 		.ascii	"TCHAR\000"
 18532      5200
 18533              	.LASF66:
 18534 0445 46525F4E 		.ascii	"FR_NOT_ENABLED\000"
 18534      4F545F45 
 18534      4E41424C 
 18534      454400
 18535              	.LASF170:
 18536 0454 6765745F 		.ascii	"get_fattime\000"
 18536      66617474 
 18536      696D6500 
 18537              	.LASF81:
 18538 0460 44524553 		.ascii	"DRESULT\000"
 18538      554C5400 
 18539              	.LASF146:
 18540 0468 665F6765 		.ascii	"f_getfree\000"
 18540      74667265 
 18540      6500
 18541              	.LASF124:
 18542 0472 665F6D6F 		.ascii	"f_mount\000"
 18542      756E7400 
 18543              	.LASF89:
 18544 047a 6765745F 		.ascii	"get_fat\000"
 18544      66617400 
 18545              	.LASF117:
 18546 0482 63726561 		.ascii	"create_chain\000"
 18546      74655F63 
 18546      6861696E 
 18546      00
 18547              	.LASF43:
 18548 048f 64736563 		.ascii	"dsect\000"
 18548      7400
 18549              	.LASF1:
 18550 0495 756E7369 		.ascii	"unsigned char\000"
 18550      676E6564 
 18550      20636861 
 18550      7200
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 402


 18551              	.LASF149:
 18552 04a3 665F756E 		.ascii	"f_unlink\000"
 18552      6C696E6B 
 18552      00
 18553              	.LASF142:
 18554 04ac 69667074 		.ascii	"ifptr\000"
 18554      7200
 18555              	.LASF137:
 18556 04b2 77627566 		.ascii	"wbuff\000"
 18556      6600
 18557              	.LASF2:
 18558 04b8 73686F72 		.ascii	"short int\000"
 18558      7420696E 
 18558      7400
 18559              	.LASF38:
 18560 04c2 666C6167 		.ascii	"flag\000"
 18560      00
 18561              	.LASF121:
 18562 04c7 666F6C6C 		.ascii	"follow_path\000"
 18562      6F775F70 
 18562      61746800 
 18563              	.LASF85:
 18564 04d3 63686563 		.ascii	"check_fs\000"
 18564      6B5F6673 
 18564      00
 18565              	.LASF65:
 18566 04dc 46525F49 		.ascii	"FR_INVALID_DRIVE\000"
 18566      4E56414C 
 18566      49445F44 
 18566      52495645 
 18566      00
 18567              	.LASF61:
 18568 04ed 46525F44 		.ascii	"FR_DENIED\000"
 18568      454E4945 
 18568      4400
 18569              	.LASF86:
 18570 04f7 76616C69 		.ascii	"validate\000"
 18570      64617465 
 18570      00
 18571              	.LASF91:
 18572 0500 6469725F 		.ascii	"dir_register\000"
 18572      72656769 
 18572      73746572 
 18572      00
 18573              	.LASF68:
 18574 050d 46525F4D 		.ascii	"FR_MKFS_ABORTED\000"
 18574      4B46535F 
 18574      41424F52 
 18574      54454400 
 18575              	.LASF144:
 18576 051d 665F7265 		.ascii	"f_readdir\000"
 18576      61646469 
 18576      7200
 18577              	.LASF70:
 18578 0527 46525F4C 		.ascii	"FR_LOCKED\000"
 18578      4F434B45 
 18578      4400
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 403


 18579              	.LASF24:
 18580 0531 77666C61 		.ascii	"wflag\000"
 18580      6700
 18581              	.LASF14:
 18582 0537 75696E74 		.ascii	"uint32_t\000"
 18582      33325F74 
 18582      00
 18583              	.LASF169:
 18584 0540 453A5C68 		.ascii	"E:\\home\\jarik\\src\\psoc\\mpi_rom_emu\\mpi_rom_em"
 18584      6F6D655C 
 18584      6A617269 
 18584      6B5C7372 
 18584      635C7073 
 18585 056d 752E6379 		.ascii	"u.cydsn\000"
 18585      64736E00 
 18586              	.LASF141:
 18587 0575 6E736563 		.ascii	"nsect\000"
 18587      7400
 18588              	.LASF20:
 18589 057b 63686172 		.ascii	"char\000"
 18589      00
 18590              	.LASF128:
 18591 0580 6D6F6465 		.ascii	"mode\000"
 18591      00
 18592              	.LASF84:
 18593 0585 63726561 		.ascii	"create_name\000"
 18593      74655F6E 
 18593      616D6500 
 18594              	.LASF4:
 18595 0591 5F5F7569 		.ascii	"__uint16_t\000"
 18595      6E743136 
 18595      5F7400
 18596              	.LASF54:
 18597 059c 46525F4F 		.ascii	"FR_OK\000"
 18597      4B00
 18598              	.LASF47:
 18599 05a2 696E6465 		.ascii	"index\000"
 18599      7800
 18600              	.LASF92:
 18601 05a8 72656D6F 		.ascii	"remove_chain\000"
 18601      76655F63 
 18601      6861696E 
 18601      00
 18602              	.LASF75:
 18603 05b5 44535441 		.ascii	"DSTATUS\000"
 18603      54555300 
 18604              	.LASF104:
 18605 05bd 63686B5F 		.ascii	"chk_wp\000"
 18605      777000
 18606              	.LASF168:
 18607 05c4 2E5C7364 		.ascii	".\\sd\\ff.c\000"
 18607      5C66662E 
 18607      6300
 18608              	.LASF143:
 18609 05ce 665F6F70 		.ascii	"f_opendir\000"
 18609      656E6469 
 18609      7200
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 404


 18610              	.LASF112:
 18611 05d8 6E727376 		.ascii	"nrsv\000"
 18611      00
 18612              	.LASF60:
 18613 05dd 46525F49 		.ascii	"FR_INVALID_NAME\000"
 18613      4E56414C 
 18613      49445F4E 
 18613      414D4500 
 18614              	.LASF162:
 18615 05ed 6469736B 		.ascii	"disk_write\000"
 18615      5F777269 
 18615      746500
 18616              	.LASF100:
 18617 05f8 6D6F7665 		.ascii	"move_window\000"
 18617      5F77696E 
 18617      646F7700 
 18618              	.LASF25:
 18619 0604 6673695F 		.ascii	"fsi_flag\000"
 18619      666C6167 
 18619      00
 18620              	.LASF97:
 18621 060d 6D656D5F 		.ascii	"mem_cpy\000"
 18621      63707900 
 18622              	.LASF131:
 18623 0615 72656D61 		.ascii	"remain\000"
 18623      696E00
 18624              	.LASF39:
 18625 061c 70616431 		.ascii	"pad1\000"
 18625      00
 18626              	.LASF51:
 18627 0621 66617474 		.ascii	"fattrib\000"
 18627      72696200 
 18628              	.LASF161:
 18629 0629 46696C65 		.ascii	"Files\000"
 18629      7300
 18630              	.LASF154:
 18631 062f 6D61736B 		.ascii	"mask\000"
 18631      00
 18632              	.LASF102:
 18633 0634 77736563 		.ascii	"wsect\000"
 18633      7400
 18634              	.LASF148:
 18635 063a 665F7472 		.ascii	"f_truncate\000"
 18635      756E6361 
 18635      746500
 18636              	.LASF53:
 18637 0645 46494C49 		.ascii	"FILINFO\000"
 18637      4E464F00 
 18638              	.LASF12:
 18639 064d 75696E74 		.ascii	"uint8_t\000"
 18639      385F7400 
 18640              	.LASF132:
 18641 0655 72636E74 		.ascii	"rcnt\000"
 18641      00
 18642              	.LASF115:
 18643 065a 73796E63 		.ascii	"sync\000"
 18643      00
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccASvTaK.s 			page 405


 18644              	.LASF29:
 18645 065f 6673695F 		.ascii	"fsi_sector\000"
 18645      73656374 
 18645      6F7200
 18646              	.LASF105:
 18647 066a 73746174 		.ascii	"stat\000"
 18647      00
 18648              	.LASF74:
 18649 066f 46524553 		.ascii	"FRESULT\000"
 18649      554C5400 
 18650              	.LASF77:
 18651 0677 5245535F 		.ascii	"RES_ERROR\000"
 18651      4552524F 
 18651      5200
 18652              	.LASF138:
 18653 0681 6465635F 		.ascii	"dec_lock\000"
 18653      6C6F636B 
 18653      00
 18654              	.LASF122:
 18655 068a 6469725F 		.ascii	"dir_read\000"
 18655      72656164 
 18655      00
 18656              	.LASF127:
 18657 0693 665F6F70 		.ascii	"f_open\000"
 18657      656E00
 18658              	.LASF59:
 18659 069a 46525F4E 		.ascii	"FR_NO_PATH\000"
 18659      4F5F5041 
 18659      544800
 18660              	.LASF163:
 18661 06a5 6469736B 		.ascii	"disk_read\000"
 18661      5F726561 
 18661      6400
 18662              	.LASF116:
 18663 06af 6469725F 		.ascii	"dir_sdi\000"
 18663      73646900 
 18664              	.LASF160:
 18665 06b7 46736964 		.ascii	"Fsid\000"
 18665      00
 18666              	.LASF42:
 18667 06bc 636C7573 		.ascii	"clust\000"
 18667      7400
 18668              	.LASF108:
 18669 06c2 74736563 		.ascii	"tsect\000"
 18669      7400
 18670              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

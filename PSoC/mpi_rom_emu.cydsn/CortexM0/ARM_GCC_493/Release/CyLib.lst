ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	1
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CyLib.c **** * File Name: CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * Version 5.30
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** *  Description:
   6:.\Generated_Source\PSoC4/CyLib.c **** *   Provides a system API for the Clocking, Interrupts, SysTick, and Voltage
   7:.\Generated_Source\PSoC4/CyLib.c **** *   Detect.
   8:.\Generated_Source\PSoC4/CyLib.c **** *
   9:.\Generated_Source\PSoC4/CyLib.c **** *  Note:
  10:.\Generated_Source\PSoC4/CyLib.c **** *   Documentation of the API's in this file is located in the PSoC 4 System
  11:.\Generated_Source\PSoC4/CyLib.c **** *   Reference Guide provided with PSoC Creator.
  12:.\Generated_Source\PSoC4/CyLib.c **** *
  13:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  14:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2015, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC4/CyLib.c **** 
  20:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/CyLib.c **** 
  22:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  23:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  24:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  25:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  26:.\Generated_Source\PSoC4/CyLib.c **** 
  27:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  29:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  30:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  31:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  32:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** 
  35:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  36:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  37:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** 
  43:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  44:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:.\Generated_Source\PSoC4/CyLib.c **** *
  47:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:.\Generated_Source\PSoC4/CyLib.c **** *
  50:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** 
  57:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:.\Generated_Source\PSoC4/CyLib.c **** 
  74:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:.\Generated_Source\PSoC4/CyLib.c **** 
  85:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
  87:.\Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkImoTrim4 = 0u;
  88:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
  89:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** 
  91:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  94:.\Generated_Source\PSoC4/CyLib.c **** *
  95:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
  96:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the IMO.
  97:.\Generated_Source\PSoC4/CyLib.c **** *
  98:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M / PSoC 4200M devices, this function will also enable WCO lock
  99:.\Generated_Source\PSoC4/CyLib.c **** *  if selected in the Design Wide Resources tab.
 100:.\Generated_Source\PSoC4/CyLib.c **** *
 101:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L devices, this function will also enable USB lock if selected
 102:.\Generated_Source\PSoC4/CyLib.c **** *  in the Design Wide Resources tab.
 103:.\Generated_Source\PSoC4/CyLib.c **** *
 104:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 105:.\Generated_Source\PSoC4/CyLib.c **** *  None
 106:.\Generated_Source\PSoC4/CyLib.c **** *
 107:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 108:.\Generated_Source\PSoC4/CyLib.c **** *  None
 109:.\Generated_Source\PSoC4/CyLib.c **** *
 110:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 111:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 112:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 112 0
  27              		.cfi_startproc
 113:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 113 0
  29 0000 8021     		mov	r1, #128
  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** 
 122:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 123:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 124:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 125:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 126:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 127:.\Generated_Source\PSoC4/CyLib.c **** 
 128:.\Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 128 0
  34              		@ sp needed
 113:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  35              		.loc 1 113 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 128 0
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 4


  43 0010 08010B40 		.word	1074462984
  44              		.cfi_endproc
  45              	.LFE0:
  46              		.size	CySysClkImoStart, .-CySysClkImoStart
  47              		.section	.text.CySysClkImoStop,"ax",%progbits
  48              		.align	1
  49              		.global	CySysClkImoStop
  50              		.code	16
  51              		.thumb_func
  52              		.type	CySysClkImoStop, %function
  53              	CySysClkImoStop:
  54              	.LFB1:
 129:.\Generated_Source\PSoC4/CyLib.c **** 
 130:.\Generated_Source\PSoC4/CyLib.c **** 
 131:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 132:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 133:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 136:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the IMO.
 137:.\Generated_Source\PSoC4/CyLib.c **** *
 138:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4100M/PSoC 4200M devices, this function will also disable WCO lock.
 139:.\Generated_Source\PSoC4/CyLib.c **** *
 140:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC PSoC 4200L devices, this function will also disable USB lock.
 141:.\Generated_Source\PSoC4/CyLib.c **** *
 142:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 143:.\Generated_Source\PSoC4/CyLib.c **** *  None
 144:.\Generated_Source\PSoC4/CyLib.c **** *
 145:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 146:.\Generated_Source\PSoC4/CyLib.c **** *  None
 147:.\Generated_Source\PSoC4/CyLib.c **** *
 148:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 149:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 150:.\Generated_Source\PSoC4/CyLib.c **** {
  55              		.loc 1 150 0
  56              		.cfi_startproc
 151:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 153:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 154:.\Generated_Source\PSoC4/CyLib.c **** 
 155:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 156:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 157:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 158:.\Generated_Source\PSoC4/CyLib.c **** 
 159:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  57              		.loc 1 159 0
  58 0000 024A     		ldr	r2, .L5
 160:.\Generated_Source\PSoC4/CyLib.c **** }
  59              		.loc 1 160 0
  60              		@ sp needed
 159:.\Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 159 0
  62 0002 1368     		ldr	r3, [r2]
  63 0004 5B00     		lsl	r3, r3, #1
  64 0006 5B08     		lsr	r3, r3, #1
  65 0008 1360     		str	r3, [r2]
  66              		.loc 1 160 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 5


  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 08010B40 		.word	1074462984
  72              		.cfi_endproc
  73              	.LFE1:
  74              		.size	CySysClkImoStop, .-CySysClkImoStop
  75              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  76              		.align	1
  77              		.global	CySysClkWriteHfclkDirect
  78              		.code	16
  79              		.thumb_func
  80              		.type	CySysClkWriteHfclkDirect, %function
  81              	CySysClkWriteHfclkDirect:
  82              	.LFB2:
 161:.\Generated_Source\PSoC4/CyLib.c **** 
 162:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 163:.\Generated_Source\PSoC4/CyLib.c **** 
 164:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 165:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 166:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 169:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to WCO lock feature. This function works only if the WCO is
 170:.\Generated_Source\PSoC4/CyLib.c ****     *  already enabled. If the WCO is not enabled then this function returns
 171:.\Generated_Source\PSoC4/CyLib.c ****     *  without enabling the lock feature.
 172:.\Generated_Source\PSoC4/CyLib.c ****     *
 173:.\Generated_Source\PSoC4/CyLib.c ****     *  It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 174:.\Generated_Source\PSoC4/CyLib.c ****     *  CyDelay() function. The delay interval is measured based on the system
 175:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency defined by PSoC Creator at build time. If System clock frequency
 176:.\Generated_Source\PSoC4/CyLib.c ****     *  is changed in runtime, the CyDelayFreq() with the appropriate parameter
 177:.\Generated_Source\PSoC4/CyLib.c ****     *  should be called.
 178:.\Generated_Source\PSoC4/CyLib.c ****     *
 179:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 180:.\Generated_Source\PSoC4/CyLib.c ****     *  but not both.
 181:.\Generated_Source\PSoC4/CyLib.c ****     *
 182:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 183:.\Generated_Source\PSoC4/CyLib.c ****     *
 184:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 185:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 186:.\Generated_Source\PSoC4/CyLib.c ****     *
 187:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 188:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 189:.\Generated_Source\PSoC4/CyLib.c ****     *
 190:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 191:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 192:.\Generated_Source\PSoC4/CyLib.c ****     {
 193:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 194:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 195:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 196:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 197:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 198:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 199:.\Generated_Source\PSoC4/CyLib.c **** 
 200:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 201:.\Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 6


 202:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 203:.\Generated_Source\PSoC4/CyLib.c **** 
 204:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 205:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 206:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 207:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 208:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 209:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 210:.\Generated_Source\PSoC4/CyLib.c **** 
 211:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 212:.\Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 213:.\Generated_Source\PSoC4/CyLib.c ****             {
 214:.\Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 215:.\Generated_Source\PSoC4/CyLib.c ****                 {
 216:.\Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 217:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 218:.\Generated_Source\PSoC4/CyLib.c ****                 }
 219:.\Generated_Source\PSoC4/CyLib.c ****             }
 220:.\Generated_Source\PSoC4/CyLib.c **** 
 221:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 222:.\Generated_Source\PSoC4/CyLib.c ****             if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****             {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			    CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_M
 225:.\Generated_Source\PSoC4/CyLib.c **** 			             				    CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****             }
 227:.\Generated_Source\PSoC4/CyLib.c **** 
 228:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 229:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 232:.\Generated_Source\PSoC4/CyLib.c **** 
 233:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 234:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 235:.\Generated_Source\PSoC4/CyLib.c **** 
 236:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 237:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 238:.\Generated_Source\PSoC4/CyLib.c **** 
 239:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 240:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 241:.\Generated_Source\PSoC4/CyLib.c ****             {
 242:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 243:.\Generated_Source\PSoC4/CyLib.c ****             }
 244:.\Generated_Source\PSoC4/CyLib.c ****             else
 245:.\Generated_Source\PSoC4/CyLib.c ****             {
 246:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 247:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 248:.\Generated_Source\PSoC4/CyLib.c **** 
 249:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 250:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 251:.\Generated_Source\PSoC4/CyLib.c **** 
 252:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 253:.\Generated_Source\PSoC4/CyLib.c ****             }
 254:.\Generated_Source\PSoC4/CyLib.c **** 
 255:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 256:.\Generated_Source\PSoC4/CyLib.c **** 
 257:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 258:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 7


 259:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 260:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 261:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 262:.\Generated_Source\PSoC4/CyLib.c **** 
 263:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 264:.\Generated_Source\PSoC4/CyLib.c ****         }
 265:.\Generated_Source\PSoC4/CyLib.c ****     }
 266:.\Generated_Source\PSoC4/CyLib.c **** 
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 269:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 270:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 271:.\Generated_Source\PSoC4/CyLib.c ****     *
 272:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 273:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 276:.\Generated_Source\PSoC4/CyLib.c ****     *
 277:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 278:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 279:.\Generated_Source\PSoC4/CyLib.c ****     *
 280:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 281:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 282:.\Generated_Source\PSoC4/CyLib.c ****     *
 283:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 284:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 285:.\Generated_Source\PSoC4/CyLib.c ****     {
 286:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 287:.\Generated_Source\PSoC4/CyLib.c ****     }
 288:.\Generated_Source\PSoC4/CyLib.c **** 
 289:.\Generated_Source\PSoC4/CyLib.c **** 
 290:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 291:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 292:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 295:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to WCO lock enable state.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4100M, PSoC 4200M and  PSoC 4200L.
 298:.\Generated_Source\PSoC4/CyLib.c ****     *
 299:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 300:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 301:.\Generated_Source\PSoC4/CyLib.c ****     *
 302:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 303:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to WCO lock is enabled, and 0 if IMO to WCO lock is disabled.
 304:.\Generated_Source\PSoC4/CyLib.c ****     *
 305:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 306:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 307:.\Generated_Source\PSoC4/CyLib.c ****     {
 308:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 309:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 310:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 311:.\Generated_Source\PSoC4/CyLib.c ****     }
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 314:.\Generated_Source\PSoC4/CyLib.c **** 
 315:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 8


 316:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 317:.\Generated_Source\PSoC4/CyLib.c **** 
 318:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 319:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 320:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 321:.\Generated_Source\PSoC4/CyLib.c ****     *
 322:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 323:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the IMO to USB lock feature.
 324:.\Generated_Source\PSoC4/CyLib.c ****     *
 325:.\Generated_Source\PSoC4/CyLib.c ****     *  This function must be called before CySysClkWriteImoFreq().
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStart() function if USB lock
 328:.\Generated_Source\PSoC4/CyLib.c ****     *  selected in the Design Wide Resources tab.
 329:.\Generated_Source\PSoC4/CyLib.c ****     *
 330:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 331:.\Generated_Source\PSoC4/CyLib.c ****     *  devices, the IMO can lock to either WCO or USB, but not both.
 332:.\Generated_Source\PSoC4/CyLib.c ****     *
 333:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 334:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 335:.\Generated_Source\PSoC4/CyLib.c ****     *
 336:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 337:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 338:.\Generated_Source\PSoC4/CyLib.c ****     *
 339:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 340:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 341:.\Generated_Source\PSoC4/CyLib.c ****     {
 342:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 343:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 344:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 345:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 346:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 347:.\Generated_Source\PSoC4/CyLib.c **** 
 348:.\Generated_Source\PSoC4/CyLib.c ****         /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 349:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 350:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 351:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 352:.\Generated_Source\PSoC4/CyLib.c **** 
 353:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 354:.\Generated_Source\PSoC4/CyLib.c ****     }
 355:.\Generated_Source\PSoC4/CyLib.c **** 
 356:.\Generated_Source\PSoC4/CyLib.c **** 
 357:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 358:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 359:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 360:.\Generated_Source\PSoC4/CyLib.c ****     *
 361:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 362:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the IMO to USB lock feature.
 363:.\Generated_Source\PSoC4/CyLib.c ****     *
 364:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is called from CySysClkImoStop() function if USB lock selected
 365:.\Generated_Source\PSoC4/CyLib.c ****     *  in the Design Wide Resources tab.
 366:.\Generated_Source\PSoC4/CyLib.c ****     *
 367:.\Generated_Source\PSoC4/CyLib.c ****     *  This is applicable for PSoC 4200L family of devices only.
 368:.\Generated_Source\PSoC4/CyLib.c ****     *
 369:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 370:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 371:.\Generated_Source\PSoC4/CyLib.c ****     *
 372:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 9


 373:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 374:.\Generated_Source\PSoC4/CyLib.c ****     *
 375:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 376:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 377:.\Generated_Source\PSoC4/CyLib.c ****     {
 378:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 379:.\Generated_Source\PSoC4/CyLib.c **** 
 380:.\Generated_Source\PSoC4/CyLib.c ****         /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 381:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 382:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 383:.\Generated_Source\PSoC4/CyLib.c ****     }
 384:.\Generated_Source\PSoC4/CyLib.c **** 
 385:.\Generated_Source\PSoC4/CyLib.c **** 
 386:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 387:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 388:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 389:.\Generated_Source\PSoC4/CyLib.c ****     *
 390:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 391:.\Generated_Source\PSoC4/CyLib.c ****     *  Reports the IMO to USB lock enable state.
 392:.\Generated_Source\PSoC4/CyLib.c ****     *
 393:.\Generated_Source\PSoC4/CyLib.c ****     *  This function is applicable for PSoC 4200L devices only.
 394:.\Generated_Source\PSoC4/CyLib.c ****     *
 395:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 396:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 397:.\Generated_Source\PSoC4/CyLib.c ****     *
 398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 399:.\Generated_Source\PSoC4/CyLib.c ****     *  1 if IMO to USB lock is enabled, and 0 if IMO to USB lock is disabled.
 400:.\Generated_Source\PSoC4/CyLib.c ****     *
 401:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 403:.\Generated_Source\PSoC4/CyLib.c ****     {
 404:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 405:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 406:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 407:.\Generated_Source\PSoC4/CyLib.c ****     }
 408:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 409:.\Generated_Source\PSoC4/CyLib.c **** 
 410:.\Generated_Source\PSoC4/CyLib.c **** 
 411:.\Generated_Source\PSoC4/CyLib.c **** 
 412:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 413:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 414:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 415:.\Generated_Source\PSoC4/CyLib.c **** *
 416:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 417:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the direct source for the HFCLK.
 418:.\Generated_Source\PSoC4/CyLib.c **** *
 419:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 420:.\Generated_Source\PSoC4/CyLib.c **** *  clkSelect: One of the available HFCLK direct sources:
 421:.\Generated_Source\PSoC4/CyLib.c **** *   Define                    Source
 422:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_IMO     IMO
 423:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_EXTCLK  External clock pin
 424:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_ECO     External crystal oscillator
 425:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4100-BL / PSoC 4200-BL)
 426:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL0    PLL#0
 427:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
 428:.\Generated_Source\PSoC4/CyLib.c **** *    CY_SYS_CLK_HFCLK_PLL1    PLL#1
 429:.\Generated_Source\PSoC4/CyLib.c **** *                             (applicable only for PSoC 4200L)
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 10


 430:.\Generated_Source\PSoC4/CyLib.c **** *
 431:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 432:.\Generated_Source\PSoC4/CyLib.c **** *  None
 433:.\Generated_Source\PSoC4/CyLib.c **** *
 434:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 435:.\Generated_Source\PSoC4/CyLib.c **** *  The new source must be running and stable before calling this function.
 436:.\Generated_Source\PSoC4/CyLib.c **** *
 437:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000:
 438:.\Generated_Source\PSoC4/CyLib.c **** *  The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 439:.\Generated_Source\PSoC4/CyLib.c **** *  be selected in a way to not to exceed 16 MHz for the System clock.
 440:.\Generated_Source\PSoC4/CyLib.c **** *
 441:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during device operation, call
 442:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 443:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 444:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 445:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 446:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 447:.\Generated_Source\PSoC4/CyLib.c **** *
 448:.\Generated_Source\PSoC4/CyLib.c **** *  Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 449:.\Generated_Source\PSoC4/CyLib.c **** *  maximum permissible value for HFCLK.
 450:.\Generated_Source\PSoC4/CyLib.c **** *
 451:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 452:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 453:.\Generated_Source\PSoC4/CyLib.c **** {
  83              		.loc 1 453 0
  84              		.cfi_startproc
  85              	.LVL0:
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90              		.loc 1 453 0
  91 0002 041C     		mov	r4, r0
 454:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 455:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 456:.\Generated_Source\PSoC4/CyLib.c **** 
 457:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  92              		.loc 1 457 0
  93 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  94              	.LVL1:
 458:.\Generated_Source\PSoC4/CyLib.c **** 
 459:.\Generated_Source\PSoC4/CyLib.c **** 
 460:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  95              		.loc 1 460 0
  96 0008 0723     		mov	r3, #7
  97 000a 0449     		ldr	r1, .L8
 461:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 462:.\Generated_Source\PSoC4/CyLib.c **** 
 463:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 464:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 465:.\Generated_Source\PSoC4/CyLib.c ****     {
 466:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 467:.\Generated_Source\PSoC4/CyLib.c ****     }
 468:.\Generated_Source\PSoC4/CyLib.c ****     else
 469:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 470:.\Generated_Source\PSoC4/CyLib.c ****     {
 471:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 11


 472:.\Generated_Source\PSoC4/CyLib.c ****     }
 473:.\Generated_Source\PSoC4/CyLib.c **** 
 474:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 475:.\Generated_Source\PSoC4/CyLib.c **** 
 476:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 477:.\Generated_Source\PSoC4/CyLib.c **** }
  98              		.loc 1 477 0
  99              		@ sp needed
 460:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 100              		.loc 1 460 0
 101 000c 0A68     		ldr	r2, [r1]
 102 000e 9A43     		bic	r2, r3
 103              	.LVL2:
 471:.\Generated_Source\PSoC4/CyLib.c ****     }
 104              		.loc 1 471 0
 105 0010 2340     		and	r3, r4
 106 0012 1343     		orr	r3, r2
 107              	.LVL3:
 474:.\Generated_Source\PSoC4/CyLib.c **** 
 108              		.loc 1 474 0
 109 0014 0B60     		str	r3, [r1]
 476:.\Generated_Source\PSoC4/CyLib.c **** }
 110              		.loc 1 476 0
 111 0016 FFF7FEFF 		bl	CyExitCriticalSection
 112              	.LVL4:
 113              	.LVL5:
 114              		.loc 1 477 0
 115 001a 10BD     		pop	{r4, pc}
 116              	.L9:
 117              		.align	2
 118              	.L8:
 119 001c 00010B40 		.word	1074462976
 120              		.cfi_endproc
 121              	.LFE2:
 122              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 123              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 124              		.align	1
 125              		.global	CySysClkGetSysclkSource
 126              		.code	16
 127              		.thumb_func
 128              		.type	CySysClkGetSysclkSource, %function
 129              	CySysClkGetSysclkSource:
 130              	.LFB3:
 478:.\Generated_Source\PSoC4/CyLib.c **** 
 479:.\Generated_Source\PSoC4/CyLib.c **** 
 480:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 482:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 483:.\Generated_Source\PSoC4/CyLib.c **** *
 484:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 485:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the source of the System clock.
 486:.\Generated_Source\PSoC4/CyLib.c **** *
 487:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 488:.\Generated_Source\PSoC4/CyLib.c **** *  None
 489:.\Generated_Source\PSoC4/CyLib.c **** *
 490:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 491:.\Generated_Source\PSoC4/CyLib.c **** *  The same as CySysClkWriteHfclkDirect() function parameters.
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 12


 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 495:.\Generated_Source\PSoC4/CyLib.c **** {
 131              		.loc 1 495 0
 132              		.cfi_startproc
 133 0000 10B5     		push	{r4, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 4, -8
 136              		.cfi_offset 14, -4
 496:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 497:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 498:.\Generated_Source\PSoC4/CyLib.c **** 
 499:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 137              		.loc 1 499 0
 138 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 139              	.LVL6:
 500:.\Generated_Source\PSoC4/CyLib.c **** 
 501:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 502:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 503:.\Generated_Source\PSoC4/CyLib.c ****     {
 504:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 505:.\Generated_Source\PSoC4/CyLib.c ****     }
 506:.\Generated_Source\PSoC4/CyLib.c ****     else
 507:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 508:.\Generated_Source\PSoC4/CyLib.c ****     {
 509:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 140              		.loc 1 509 0
 141 0006 034B     		ldr	r3, .L11
 510:.\Generated_Source\PSoC4/CyLib.c ****     }
 511:.\Generated_Source\PSoC4/CyLib.c **** 
 512:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 513:.\Generated_Source\PSoC4/CyLib.c **** 
 514:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 515:.\Generated_Source\PSoC4/CyLib.c **** }
 142              		.loc 1 515 0
 143              		@ sp needed
 509:.\Generated_Source\PSoC4/CyLib.c ****     }
 144              		.loc 1 509 0
 145 0008 1C68     		ldr	r4, [r3]
 146              	.LVL7:
 512:.\Generated_Source\PSoC4/CyLib.c **** 
 147              		.loc 1 512 0
 148 000a FFF7FEFF 		bl	CyExitCriticalSection
 149              	.LVL8:
 509:.\Generated_Source\PSoC4/CyLib.c ****     }
 150              		.loc 1 509 0
 151 000e 0720     		mov	r0, #7
 152 0010 2040     		and	r0, r4
 153              	.LVL9:
 154              		.loc 1 515 0
 155 0012 10BD     		pop	{r4, pc}
 156              	.L12:
 157              		.align	2
 158              	.L11:
 159 0014 00010B40 		.word	1074462976
 160              		.cfi_endproc
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 13


 161              	.LFE3:
 162              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 163              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 164              		.align	1
 165              		.global	CySysClkWriteSysclkDiv
 166              		.code	16
 167              		.thumb_func
 168              		.type	CySysClkWriteSysclkDiv, %function
 169              	CySysClkWriteSysclkDiv:
 170              	.LFB4:
 516:.\Generated_Source\PSoC4/CyLib.c **** 
 517:.\Generated_Source\PSoC4/CyLib.c **** 
 518:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 519:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 520:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 521:.\Generated_Source\PSoC4/CyLib.c **** *
 522:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 523:.\Generated_Source\PSoC4/CyLib.c **** *  Selects the prescaler divide amount for SYSCLK from HFCLK.
 524:.\Generated_Source\PSoC4/CyLib.c **** *
 525:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 526:.\Generated_Source\PSoC4/CyLib.c **** *  divider: Power of 2 prescaler selection
 527:.\Generated_Source\PSoC4/CyLib.c **** *
 528:.\Generated_Source\PSoC4/CyLib.c **** *   Define                        Description
 529:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 530:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 531:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 532:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 533:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 534:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 535:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 536:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 537:.\Generated_Source\PSoC4/CyLib.c **** *
 538:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 539:.\Generated_Source\PSoC4/CyLib.c **** *  None
 540:.\Generated_Source\PSoC4/CyLib.c **** *
 541:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 542:.\Generated_Source\PSoC4/CyLib.c **** *  4000 Family:
 543:.\Generated_Source\PSoC4/CyLib.c **** *  The SYS_CLK has the speed of 16 MHz, so dividers HF_CLK and SYS_CLK
 544:.\Generated_Source\PSoC4/CyLib.c **** *  dividers should be selected in a way, not to exceed 16 MHz for SYS_CLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 547:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 548:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 549:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 550:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 551:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 552:.\Generated_Source\PSoC4/CyLib.c **** *
 553:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 554:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 555:.\Generated_Source\PSoC4/CyLib.c **** {
 171              		.loc 1 555 0
 172              		.cfi_startproc
 173              	.LVL10:
 174 0000 38B5     		push	{r3, r4, r5, lr}
 175              		.cfi_def_cfa_offset 16
 176              		.cfi_offset 3, -16
 177              		.cfi_offset 4, -12
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 14


 178              		.cfi_offset 5, -8
 179              		.cfi_offset 14, -4
 180              		.loc 1 555 0
 181 0002 051C     		mov	r5, r0
 556:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 557:.\Generated_Source\PSoC4/CyLib.c **** 
 558:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 182              		.loc 1 558 0
 183 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 184              	.LVL11:
 559:.\Generated_Source\PSoC4/CyLib.c **** 
 560:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 185              		.loc 1 560 0
 186 0008 0721     		mov	r1, #7
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 562:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 187              		.loc 1 562 0
 188 000a 054C     		ldr	r4, .L14
 189 000c 054A     		ldr	r2, .L14+4
 190 000e 2368     		ldr	r3, [r4]
 560:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 191              		.loc 1 560 0
 192 0010 2940     		and	r1, r5
 193 0012 C904     		lsl	r1, r1, #19
 194              		.loc 1 562 0
 195 0014 1340     		and	r3, r2
 561:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 196              		.loc 1 561 0
 197 0016 0B43     		orr	r3, r1
 560:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 198              		.loc 1 560 0
 199 0018 2360     		str	r3, [r4]
 563:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 564:.\Generated_Source\PSoC4/CyLib.c **** 
 565:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 200              		.loc 1 565 0
 201 001a FFF7FEFF 		bl	CyExitCriticalSection
 202              	.LVL12:
 566:.\Generated_Source\PSoC4/CyLib.c **** }
 203              		.loc 1 566 0
 204              		@ sp needed
 205              	.LVL13:
 206 001e 38BD     		pop	{r3, r4, r5, pc}
 207              	.L15:
 208              		.align	2
 209              	.L14:
 210 0020 00010B40 		.word	1074462976
 211 0024 FFFFC7FF 		.word	-3670017
 212              		.cfi_endproc
 213              	.LFE4:
 214              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 215              		.section	.text.CySysLvdDisable,"ax",%progbits
 216              		.align	1
 217              		.global	CySysLvdDisable
 218              		.code	16
 219              		.thumb_func
 220              		.type	CySysLvdDisable, %function
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 15


 221              	CySysLvdDisable:
 222              	.LFB7:
 567:.\Generated_Source\PSoC4/CyLib.c **** 
 568:.\Generated_Source\PSoC4/CyLib.c **** 
 569:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 571:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
 572:.\Generated_Source\PSoC4/CyLib.c **** *
 573:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
 574:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the frequency of the IMO.
 575:.\Generated_Source\PSoC4/CyLib.c **** *
 576:.\Generated_Source\PSoC4/CyLib.c **** *  If IMO is currently driving the HFCLK, and if the HFCLK frequency decreases,
 577:.\Generated_Source\PSoC4/CyLib.c **** *  you can call CySysFlashSetWaitCycles () to improve CPU performance. See
 578:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles () for more information.
 579:.\Generated_Source\PSoC4/CyLib.c **** *
 580:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4000 family of devices, maximum HFCLK frequency is 16 MHz. If IMO is
 581:.\Generated_Source\PSoC4/CyLib.c **** *  configured to frequencies above 16 MHz, ensure to set the appropriate HFCLK
 582:.\Generated_Source\PSoC4/CyLib.c **** *  predivider value first.
 583:.\Generated_Source\PSoC4/CyLib.c **** *
 584:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 585:.\Generated_Source\PSoC4/CyLib.c **** *  then this API will disable the lock, write the new IMO frequency and then
 586:.\Generated_Source\PSoC4/CyLib.c **** *  re-enable the lock.
 587:.\Generated_Source\PSoC4/CyLib.c **** *
 588:.\Generated_Source\PSoC4/CyLib.c **** *  For PSoC 4200L device families, this function enables the USB lock when 24 or
 589:.\Generated_Source\PSoC4/CyLib.c **** *  48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 590:.\Generated_Source\PSoC4/CyLib.c **** *  Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 591:.\Generated_Source\PSoC4/CyLib.c **** *  lock is disabled during IMO frequency change.
 592:.\Generated_Source\PSoC4/CyLib.c **** *
 593:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is compiled
 594:.\Generated_Source\PSoC4/CyLib.c **** *  in debug mode.
 595:.\Generated_Source\PSoC4/CyLib.c **** *
 596:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
 597:.\Generated_Source\PSoC4/CyLib.c **** *  All PSoC 4 families excluding PSoC 4000: Valid range [3-48] with step size
 598:.\Generated_Source\PSoC4/CyLib.c **** *  equals 1.
 599:.\Generated_Source\PSoC4/CyLib.c **** *
 600:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: Valid range [24-48] with step size equals 4.
 601:.\Generated_Source\PSoC4/CyLib.c **** *
 602:.\Generated_Source\PSoC4/CyLib.c **** *  Note: The CPU is halted if new frequency is invalid and project is
 603:.\Generated_Source\PSoC4/CyLib.c **** *  compiled in debug mode.
 604:.\Generated_Source\PSoC4/CyLib.c **** *
 605:.\Generated_Source\PSoC4/CyLib.c **** * Return:
 606:.\Generated_Source\PSoC4/CyLib.c **** *  None
 607:.\Generated_Source\PSoC4/CyLib.c **** *
 608:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
 609:.\Generated_Source\PSoC4/CyLib.c **** *  If the SYSCLK clock frequency increases during the device operation, call
 610:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 611:.\Generated_Source\PSoC4/CyLib.c **** *  of clock cycles the cache will wait before sampling data comes back from
 612:.\Generated_Source\PSoC4/CyLib.c **** *  Flash. If the SYSCLK clock frequency decreases, you can call
 613:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 614:.\Generated_Source\PSoC4/CyLib.c **** *  CySysFlashSetWaitCycles() description for more information.
 615:.\Generated_Source\PSoC4/CyLib.c **** *
 616:.\Generated_Source\PSoC4/CyLib.c **** *  PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 617:.\Generated_Source\PSoC4/CyLib.c **** *  and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 618:.\Generated_Source\PSoC4/CyLib.c **** *  the System clock.
 619:.\Generated_Source\PSoC4/CyLib.c **** *
 620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 621:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 16


 622:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 623:.\Generated_Source\PSoC4/CyLib.c ****     {
 624:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 625:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 626:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 627:.\Generated_Source\PSoC4/CyLib.c ****         #else
 628:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 629:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 630:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 631:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 632:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 633:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 634:.\Generated_Source\PSoC4/CyLib.c **** 
 635:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 636:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 637:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 640:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 641:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 642:.\Generated_Source\PSoC4/CyLib.c **** 
 643:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 644:.\Generated_Source\PSoC4/CyLib.c **** 
 645:.\Generated_Source\PSoC4/CyLib.c **** 
 646:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 649:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 650:.\Generated_Source\PSoC4/CyLib.c ****             {
 651:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 652:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 653:.\Generated_Source\PSoC4/CyLib.c ****             }
 654:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 655:.\Generated_Source\PSoC4/CyLib.c **** 
 656:.\Generated_Source\PSoC4/CyLib.c **** 
 657:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 658:.\Generated_Source\PSoC4/CyLib.c **** 
 659:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 660:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 661:.\Generated_Source\PSoC4/CyLib.c ****                 {
 662:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 663:.\Generated_Source\PSoC4/CyLib.c **** 
 664:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 665:.\Generated_Source\PSoC4/CyLib.c ****                 {
 666:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 667:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 668:.\Generated_Source\PSoC4/CyLib.c ****                 }
 669:.\Generated_Source\PSoC4/CyLib.c **** 
 670:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 671:.\Generated_Source\PSoC4/CyLib.c ****                 }
 672:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 673:.\Generated_Source\PSoC4/CyLib.c **** 
 674:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 675:.\Generated_Source\PSoC4/CyLib.c **** 
 676:.\Generated_Source\PSoC4/CyLib.c **** 
 677:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 678:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 17


 679:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 680:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 681:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 682:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 683:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 684:.\Generated_Source\PSoC4/CyLib.c **** 
 685:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 686:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 687:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 688:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 689:.\Generated_Source\PSoC4/CyLib.c **** 
 690:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 691:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 692:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 693:.\Generated_Source\PSoC4/CyLib.c **** 
 694:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 695:.\Generated_Source\PSoC4/CyLib.c **** 
 696:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 697:.\Generated_Source\PSoC4/CyLib.c ****         {
 698:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 699:.\Generated_Source\PSoC4/CyLib.c ****             {
 700:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 701:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 702:.\Generated_Source\PSoC4/CyLib.c ****             }
 703:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 704:.\Generated_Source\PSoC4/CyLib.c ****             {
 705:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 706:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 707:.\Generated_Source\PSoC4/CyLib.c ****             }
 708:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 709:.\Generated_Source\PSoC4/CyLib.c ****             {
 710:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 711:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 712:.\Generated_Source\PSoC4/CyLib.c ****             }
 713:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 714:.\Generated_Source\PSoC4/CyLib.c ****             {
 715:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 716:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 717:.\Generated_Source\PSoC4/CyLib.c ****             }
 718:.\Generated_Source\PSoC4/CyLib.c ****             else
 719:.\Generated_Source\PSoC4/CyLib.c ****             {
 720:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 721:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 722:.\Generated_Source\PSoC4/CyLib.c ****             }
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 725:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 726:.\Generated_Source\PSoC4/CyLib.c **** 
 727:.\Generated_Source\PSoC4/CyLib.c **** 
 728:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 729:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 730:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 731:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 732:.\Generated_Source\PSoC4/CyLib.c ****             *
 733:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 734:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 735:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 18


 736:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 737:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 738:.\Generated_Source\PSoC4/CyLib.c ****             {
 739:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 740:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 741:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 742:.\Generated_Source\PSoC4/CyLib.c **** 
 743:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 744:.\Generated_Source\PSoC4/CyLib.c **** 
 745:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 746:.\Generated_Source\PSoC4/CyLib.c ****             }
 747:.\Generated_Source\PSoC4/CyLib.c ****             else
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 750:.\Generated_Source\PSoC4/CyLib.c ****             }
 751:.\Generated_Source\PSoC4/CyLib.c **** 
 752:.\Generated_Source\PSoC4/CyLib.c **** 
 753:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 754:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 755:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 756:.\Generated_Source\PSoC4/CyLib.c ****             *
 757:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 758:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 759:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 760:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 761:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 762:.\Generated_Source\PSoC4/CyLib.c ****             {
 763:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 764:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c **** 
 768:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 769:.\Generated_Source\PSoC4/CyLib.c **** 
 770:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 771:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 772:.\Generated_Source\PSoC4/CyLib.c ****                 {
 773:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 774:.\Generated_Source\PSoC4/CyLib.c ****                 }
 775:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 776:.\Generated_Source\PSoC4/CyLib.c ****                 {
 777:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 778:.\Generated_Source\PSoC4/CyLib.c ****                 }
 779:.\Generated_Source\PSoC4/CyLib.c ****                 else
 780:.\Generated_Source\PSoC4/CyLib.c ****                 {
 781:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 782:.\Generated_Source\PSoC4/CyLib.c ****                 }
 783:.\Generated_Source\PSoC4/CyLib.c ****             #else
 784:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 785:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 786:.\Generated_Source\PSoC4/CyLib.c **** 
 787:.\Generated_Source\PSoC4/CyLib.c **** 
 788:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 789:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 790:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 791:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 792:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 19


 793:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 794:.\Generated_Source\PSoC4/CyLib.c ****             {
 795:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 796:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 797:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 798:.\Generated_Source\PSoC4/CyLib.c ****             }
 799:.\Generated_Source\PSoC4/CyLib.c ****         }
 800:.\Generated_Source\PSoC4/CyLib.c ****         else
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 803:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 804:.\Generated_Source\PSoC4/CyLib.c ****         }
 805:.\Generated_Source\PSoC4/CyLib.c **** 
 806:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 807:.\Generated_Source\PSoC4/CyLib.c **** 
 808:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 809:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 810:.\Generated_Source\PSoC4/CyLib.c ****             {
 811:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 812:.\Generated_Source\PSoC4/CyLib.c ****             }
 813:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 814:.\Generated_Source\PSoC4/CyLib.c **** 
 815:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 816:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 817:.\Generated_Source\PSoC4/CyLib.c ****             {
 818:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 819:.\Generated_Source\PSoC4/CyLib.c ****             }
 820:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 821:.\Generated_Source\PSoC4/CyLib.c **** 
 822:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 823:.\Generated_Source\PSoC4/CyLib.c ****     }
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c **** #else
 826:.\Generated_Source\PSoC4/CyLib.c **** 
 827:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 828:.\Generated_Source\PSoC4/CyLib.c ****     {
 829:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 832:.\Generated_Source\PSoC4/CyLib.c ****         {
 833:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 836:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 837:.\Generated_Source\PSoC4/CyLib.c **** 
 838:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 839:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (CY_SYS_CLK_IMO_TRIM1_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM1_
 840:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM1_
 841:.\Generated_Source\PSoC4/CyLib.c **** 
 842:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 843:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 844:.\Generated_Source\PSoC4/CyLib.c **** 
 845:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 846:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 847:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 848:.\Generated_Source\PSoC4/CyLib.c **** 
 849:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 20


 850:.\Generated_Source\PSoC4/CyLib.c **** 
 851:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 852:.\Generated_Source\PSoC4/CyLib.c ****             {
 853:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 854:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 855:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 856:.\Generated_Source\PSoC4/CyLib.c **** 
 857:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_US);
 858:.\Generated_Source\PSoC4/CyLib.c **** 
 859:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 860:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 861:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 862:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 863:.\Generated_Source\PSoC4/CyLib.c ****             }
 864:.\Generated_Source\PSoC4/CyLib.c **** 
 865:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 866:.\Generated_Source\PSoC4/CyLib.c ****         }
 867:.\Generated_Source\PSoC4/CyLib.c ****         else
 868:.\Generated_Source\PSoC4/CyLib.c ****         {
 869:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 870:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 871:.\Generated_Source\PSoC4/CyLib.c ****         }
 872:.\Generated_Source\PSoC4/CyLib.c ****     }
 873:.\Generated_Source\PSoC4/CyLib.c **** 
 874:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 875:.\Generated_Source\PSoC4/CyLib.c **** 
 876:.\Generated_Source\PSoC4/CyLib.c **** 
 877:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 878:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 879:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 880:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 881:.\Generated_Source\PSoC4/CyLib.c ****     *
 882:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 883:.\Generated_Source\PSoC4/CyLib.c ****     *  Selects the pre-scaler divider value for HFCLK from IMO.
 884:.\Generated_Source\PSoC4/CyLib.c ****     *
 885:.\Generated_Source\PSoC4/CyLib.c ****     *  The HFCLK predivider allows the device to divide the HFCLK selection mux
 886:.\Generated_Source\PSoC4/CyLib.c ****     *  input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 887:.\Generated_Source\PSoC4/CyLib.c ****     *  powers of 2 between 1 and 8.
 888:.\Generated_Source\PSoC4/CyLib.c ****     *
 889:.\Generated_Source\PSoC4/CyLib.c ****     *  Note HFCLK's frequency cannot exceed 16 MHz. This API is applicable for
 890:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4000 family of devices only.
 891:.\Generated_Source\PSoC4/CyLib.c ****     *
 892:.\Generated_Source\PSoC4/CyLib.c ****     *
 893:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 894:.\Generated_Source\PSoC4/CyLib.c ****     *  divider: HF clock divider value
 895:.\Generated_Source\PSoC4/CyLib.c ****     *   Define                        Description
 896:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 897:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 898:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 899:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 900:.\Generated_Source\PSoC4/CyLib.c ****     *
 901:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 902:.\Generated_Source\PSoC4/CyLib.c ****     *  None
 903:.\Generated_Source\PSoC4/CyLib.c ****     *
 904:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
 905:.\Generated_Source\PSoC4/CyLib.c ****     *  If the SYSCLK clock frequency increases during the device operation, call
 906:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 21


 907:.\Generated_Source\PSoC4/CyLib.c ****     *  of clock cycles the cache will wait before sampling data comes back from
 908:.\Generated_Source\PSoC4/CyLib.c ****     *  Flash. If the SYSCLK clock frequency decreases, you can call
 909:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() to improve the CPU performance. See
 910:.\Generated_Source\PSoC4/CyLib.c ****     *  CySysFlashSetWaitCycles() description for more information.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 913:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 914:.\Generated_Source\PSoC4/CyLib.c ****     {
 915:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 916:.\Generated_Source\PSoC4/CyLib.c **** 
 917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 918:.\Generated_Source\PSoC4/CyLib.c **** 
 919:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 920:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 921:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 922:.\Generated_Source\PSoC4/CyLib.c **** 
 923:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 924:.\Generated_Source\PSoC4/CyLib.c ****     }
 925:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 926:.\Generated_Source\PSoC4/CyLib.c **** 
 927:.\Generated_Source\PSoC4/CyLib.c **** 
 928:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 929:.\Generated_Source\PSoC4/CyLib.c **** 
 930:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 931:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 932:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
 933:.\Generated_Source\PSoC4/CyLib.c ****     *
 934:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
 935:.\Generated_Source\PSoC4/CyLib.c ****     *  Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 936:.\Generated_Source\PSoC4/CyLib.c ****     *  for the ECO startup time.
 937:.\Generated_Source\PSoC4/CyLib.c ****     *
 938:.\Generated_Source\PSoC4/CyLib.c ****     *  The timeout interval is measured based on the system frequency defined by
 939:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC Creator at build time. If System clock frequency is changed in
 940:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
 941:.\Generated_Source\PSoC4/CyLib.c ****     *
 942:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
 943:.\Generated_Source\PSoC4/CyLib.c ****     *  timeoutUs: Timeout in microseconds. If zero is specified, the function
 944:.\Generated_Source\PSoC4/CyLib.c ****     *             starts the crystal and returns CYRET_SUCCESS. If non-zero
 945:.\Generated_Source\PSoC4/CyLib.c ****     *             value is passed, the CYRET_SUCCESS is returned once crystal
 946:.\Generated_Source\PSoC4/CyLib.c ****     *             is oscillating and amplitude reached 60% and it does not mean
 947:.\Generated_Source\PSoC4/CyLib.c ****     *             24 MHz crystal is within 50 ppm. If it is not oscillating or
 948:.\Generated_Source\PSoC4/CyLib.c ****     *             amplitude didn't reach 60% after specified amount of time, the
 949:.\Generated_Source\PSoC4/CyLib.c ****     *             CYRET_TIMEOUT is returned.
 950:.\Generated_Source\PSoC4/CyLib.c ****     *
 951:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
 952:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_SUCCESS - Completed successfully. The ECO is oscillating and amplitude
 953:.\Generated_Source\PSoC4/CyLib.c ****     *                   reached 60% and it does not mean 24 MHz crystal is within
 954:.\Generated_Source\PSoC4/CyLib.c ****     *                   50 ppm.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *   CYRET_TIMEOUT - Timeout occurred.
 956:.\Generated_Source\PSoC4/CyLib.c ****     *
 957:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 958:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 959:.\Generated_Source\PSoC4/CyLib.c ****     {
 960:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 961:.\Generated_Source\PSoC4/CyLib.c **** 
 962:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 963:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 22


 964:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 965:.\Generated_Source\PSoC4/CyLib.c **** 
 966:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 967:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 968:.\Generated_Source\PSoC4/CyLib.c **** 
 969:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 970:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 971:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 972:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 973:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 974:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 975:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 976:.\Generated_Source\PSoC4/CyLib.c **** 
 977:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 978:.\Generated_Source\PSoC4/CyLib.c ****         {
 979:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 980:.\Generated_Source\PSoC4/CyLib.c **** 
 981:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 982:.\Generated_Source\PSoC4/CyLib.c ****             {
 983:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 984:.\Generated_Source\PSoC4/CyLib.c **** 
 985:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 986:.\Generated_Source\PSoC4/CyLib.c ****                 {
 987:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 988:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 989:.\Generated_Source\PSoC4/CyLib.c ****                 }
 990:.\Generated_Source\PSoC4/CyLib.c ****             }
 991:.\Generated_Source\PSoC4/CyLib.c **** 
 992:.\Generated_Source\PSoC4/CyLib.c ****         }
 993:.\Generated_Source\PSoC4/CyLib.c **** 
 994:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 995:.\Generated_Source\PSoC4/CyLib.c ****     }
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c **** 
 998:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1000:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC4/CyLib.c ****     *
1002:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1003:.\Generated_Source\PSoC4/CyLib.c ****     *  Stops the megahertz crystal.
1004:.\Generated_Source\PSoC4/CyLib.c ****     *
1005:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1006:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1007:.\Generated_Source\PSoC4/CyLib.c ****     *
1008:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1009:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1010:.\Generated_Source\PSoC4/CyLib.c ****     *
1011:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1012:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1013:.\Generated_Source\PSoC4/CyLib.c ****     {
1014:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1015:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1016:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1019:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1020:.\Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 23


1021:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1022:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1023:.\Generated_Source\PSoC4/CyLib.c ****     }
1024:.\Generated_Source\PSoC4/CyLib.c **** 
1025:.\Generated_Source\PSoC4/CyLib.c **** 
1026:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1027:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1028:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1029:.\Generated_Source\PSoC4/CyLib.c ****     *
1030:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1031:.\Generated_Source\PSoC4/CyLib.c ****     *  Reads the status bit for the megahertz crystal.
1032:.\Generated_Source\PSoC4/CyLib.c ****     *
1033:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4100 BLE/PSoC 4200 BLE devices, the status bit is the XO_AMP_DETECT
1034:.\Generated_Source\PSoC4/CyLib.c ****     *  bit in FSM register.
1035:.\Generated_Source\PSoC4/CyLib.c ****     *
1036:.\Generated_Source\PSoC4/CyLib.c ****     *  For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1037:.\Generated_Source\PSoC4/CyLib.c ****     *  ECO_STATUS register.
1038:.\Generated_Source\PSoC4/CyLib.c ****     *
1039:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1040:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1041:.\Generated_Source\PSoC4/CyLib.c ****     *
1042:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1043:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4100 BLE/PSoC 4200 BLE:
1044:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO output reached 50 ppm and is oscillating in valid
1045:.\Generated_Source\PSoC4/CyLib.c ****     *  range.
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     *  PSoC 4200L:
1048:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero indicates that ECO is running.
1049:.\Generated_Source\PSoC4/CyLib.c ****     *
1050:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1051:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1052:.\Generated_Source\PSoC4/CyLib.c ****     {
1053:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1054:.\Generated_Source\PSoC4/CyLib.c **** 
1055:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1056:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1057:.\Generated_Source\PSoC4/CyLib.c ****         #else
1058:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1059:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1060:.\Generated_Source\PSoC4/CyLib.c **** 
1061:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1062:.\Generated_Source\PSoC4/CyLib.c ****     }
1063:.\Generated_Source\PSoC4/CyLib.c **** 
1064:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1065:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1066:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1067:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1068:.\Generated_Source\PSoC4/CyLib.c ****         *
1069:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1070:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects value for the ECO divider.
1071:.\Generated_Source\PSoC4/CyLib.c ****         *
1072:.\Generated_Source\PSoC4/CyLib.c ****         *  The ECO must not be the HFCLK clock source when this function is called.
1073:.\Generated_Source\PSoC4/CyLib.c ****         *  The HFCLK source can be changed to the other clock source by call to the
1074:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1075:.\Generated_Source\PSoC4/CyLib.c ****         *  function will not have any effect if compiler in release mode, and halt the
1076:.\Generated_Source\PSoC4/CyLib.c ****         *  CPU when compiler in debug mode.
1077:.\Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 24


1078:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1079:.\Generated_Source\PSoC4/CyLib.c ****         *  divider: Power of 2 divider selection.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         *   Define                        Description
1082:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV1             HFCLK = ECO / 1
1083:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV2             HFCLK = ECO / 2
1084:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV4             HFCLK = ECO / 4
1085:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_DIV8             HFCLK = ECO / 8
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1088:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1089:.\Generated_Source\PSoC4/CyLib.c ****         *
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1091:.\Generated_Source\PSoC4/CyLib.c ****         *  If the SYSCLK clock frequency increases during the device operation, call
1092:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1093:.\Generated_Source\PSoC4/CyLib.c ****         *  of clock cycles the cache will wait before sampling data comes back from
1094:.\Generated_Source\PSoC4/CyLib.c ****         *  Flash. If the SYSCLK clock frequency decreases, you can call
1095:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() to improve the CPU performance. See
1096:.\Generated_Source\PSoC4/CyLib.c ****         *  CySysFlashSetWaitCycles() description for more information.
1097:.\Generated_Source\PSoC4/CyLib.c ****         *
1098:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1099:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1100:.\Generated_Source\PSoC4/CyLib.c ****         {
1101:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1102:.\Generated_Source\PSoC4/CyLib.c **** 
1103:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1104:.\Generated_Source\PSoC4/CyLib.c ****             {
1105:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1106:.\Generated_Source\PSoC4/CyLib.c **** 
1107:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1108:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1109:.\Generated_Source\PSoC4/CyLib.c **** 
1110:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1111:.\Generated_Source\PSoC4/CyLib.c ****             }
1112:.\Generated_Source\PSoC4/CyLib.c ****             else
1113:.\Generated_Source\PSoC4/CyLib.c ****             {
1114:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1115:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1116:.\Generated_Source\PSoC4/CyLib.c ****             }
1117:.\Generated_Source\PSoC4/CyLib.c ****         }
1118:.\Generated_Source\PSoC4/CyLib.c **** 
1119:.\Generated_Source\PSoC4/CyLib.c ****     #else
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1122:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1123:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         *
1125:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1126:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO. This API is available only for PSoC
1127:.\Generated_Source\PSoC4/CyLib.c ****         *  4200L devices only.
1128:.\Generated_Source\PSoC4/CyLib.c ****         *
1129:.\Generated_Source\PSoC4/CyLib.c ****         *  The following parameters can be trimmed for ECO. The affected registers are
1130:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_TRIM0 and ECO_TRIM1.
1131:.\Generated_Source\PSoC4/CyLib.c ****         *
1132:.\Generated_Source\PSoC4/CyLib.c ****         *  Watchdog trim - This bit field sets the error threshold below the steady
1133:.\Generated_Source\PSoC4/CyLib.c ****         *  state amplitude level.
1134:.\Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 25


1135:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplitude trim - This bit field is to set the crystal drive level when
1136:.\Generated_Source\PSoC4/CyLib.c ****         *  ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1137:.\Generated_Source\PSoC4/CyLib.c ****         *  driving a crystal beyond its rated limit can permanently damage the crystal.
1138:.\Generated_Source\PSoC4/CyLib.c ****         *
1139:.\Generated_Source\PSoC4/CyLib.c ****         *  Filter frequency trim - This bit field sets LPF frequency trim and affects
1140:.\Generated_Source\PSoC4/CyLib.c ****         *  the 3rd harmonic content.
1141:.\Generated_Source\PSoC4/CyLib.c ****         *
1142:.\Generated_Source\PSoC4/CyLib.c ****         *  Feedback resistor trim - This bit field sets the feedback resistor trim and
1143:.\Generated_Source\PSoC4/CyLib.c ****         *  impacts the oscillation amplitude.
1144:.\Generated_Source\PSoC4/CyLib.c ****         *
1145:.\Generated_Source\PSoC4/CyLib.c ****         *  Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1146:.\Generated_Source\PSoC4/CyLib.c ****         *  the startup time of the crystal.
1147:.\Generated_Source\PSoC4/CyLib.c ****         *
1148:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1149:.\Generated_Source\PSoC4/CyLib.c ****         *  wDTrim: Watchdog trim
1150:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1151:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1152:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1153:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         *
1156:.\Generated_Source\PSoC4/CyLib.c ****         *  aTrim: Amplitude trim
1157:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1158:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1159:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         *
1167:.\Generated_Source\PSoC4/CyLib.c ****         *  fTrim: Filter frequency trim
1168:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1169:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         *  rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1176:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz        *
1180:.\Generated_Source\PSoC4/CyLib.c ****         *
1181:.\Generated_Source\PSoC4/CyLib.c ****         *  gTrim: Amplifier gain trim. Calculate the minimum required gm
1182:.\Generated_Source\PSoC4/CyLib.c ****         *         (trans-conductance value). Divide the calculated gm value by
1183:.\Generated_Source\PSoC4/CyLib.c ****         *         4.5 to obtain an integer value 'result'. For more information
1184:.\Generated_Source\PSoC4/CyLib.c ****         *         please refer to the device TRM.
1185:.\Generated_Source\PSoC4/CyLib.c ****         *       Parameter                   Value Description
1186:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM0       If result = 1
1187:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM1       If result = 0
1188:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 2
1189:.\Generated_Source\PSoC4/CyLib.c ****         *   CY_SYS_CLK_ECO_GTRIM2       If result = 3
1190:.\Generated_Source\PSoC4/CyLib.c **** 
1191:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 26


1192:.\Generated_Source\PSoC4/CyLib.c ****         *  None
1193:.\Generated_Source\PSoC4/CyLib.c ****         *
1194:.\Generated_Source\PSoC4/CyLib.c ****         * Side Effects:
1195:.\Generated_Source\PSoC4/CyLib.c ****         *  Use care when setting the amplitude trim field because driving a crystal
1196:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1197:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1198:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1199:.\Generated_Source\PSoC4/CyLib.c ****         {
1200:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1201:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1202:.\Generated_Source\PSoC4/CyLib.c **** 
1203:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1204:.\Generated_Source\PSoC4/CyLib.c **** 
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1208:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1209:.\Generated_Source\PSoC4/CyLib.c **** 
1210:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1211:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1212:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1213:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1214:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1215:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1216:.\Generated_Source\PSoC4/CyLib.c **** 
1217:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1218:.\Generated_Source\PSoC4/CyLib.c **** 
1219:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1220:.\Generated_Source\PSoC4/CyLib.c ****         }
1221:.\Generated_Source\PSoC4/CyLib.c **** 
1222:.\Generated_Source\PSoC4/CyLib.c **** 
1223:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1224:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1225:.\Generated_Source\PSoC4/CyLib.c ****         ********************************************************************************
1226:.\Generated_Source\PSoC4/CyLib.c ****         *
1227:.\Generated_Source\PSoC4/CyLib.c ****         * Summary:
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  Selects trim setting values for ECO based on crystal parameters. Use care
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  when setting the driveLevel parameter because driving a crystal beyond its
1230:.\Generated_Source\PSoC4/CyLib.c ****         *  rated limit can permanently damage the crystal.
1231:.\Generated_Source\PSoC4/CyLib.c ****         *
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4200L devices only.
1233:.\Generated_Source\PSoC4/CyLib.c ****         *
1234:.\Generated_Source\PSoC4/CyLib.c ****         * Parameters:
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  freq: frequency of the crystal in kHz.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *  cLoad: crystal load capacitance in pF.
1237:.\Generated_Source\PSoC4/CyLib.c ****         *  esr: equivalent series resistance of the crystal in ohm.
1238:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1239:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1240:.\Generated_Source\PSoC4/CyLib.c ****         *
1241:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1242:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1243:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1244:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1245:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1246:.\Generated_Source\PSoC4/CyLib.c ****         *
1247:.\Generated_Source\PSoC4/CyLib.c ****         * Return:
1248:.\Generated_Source\PSoC4/CyLib.c ****         *  status:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 27


1249:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_SUCCESS - ECO configuration completed successfully.
1250:.\Generated_Source\PSoC4/CyLib.c ****         *  CYRET_BAD_PARAM - One or more invalid parameters
1251:.\Generated_Source\PSoC4/CyLib.c ****         *
1252:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1253:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1254:.\Generated_Source\PSoC4/CyLib.c ****         {
1255:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1256:.\Generated_Source\PSoC4/CyLib.c **** 
1257:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1258:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1259:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1260:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1261:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1262:.\Generated_Source\PSoC4/CyLib.c **** 
1263:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1264:.\Generated_Source\PSoC4/CyLib.c **** 
1265:.\Generated_Source\PSoC4/CyLib.c **** 
1266:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1267:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1268:.\Generated_Source\PSoC4/CyLib.c ****             {
1269:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1270:.\Generated_Source\PSoC4/CyLib.c ****             }
1271:.\Generated_Source\PSoC4/CyLib.c ****             else
1272:.\Generated_Source\PSoC4/CyLib.c ****             {
1273:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1274:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1275:.\Generated_Source\PSoC4/CyLib.c **** 
1276:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1297:.\Generated_Source\PSoC4/CyLib.c ****                 {
1298:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1299:.\Generated_Source\PSoC4/CyLib.c ****                 }
1300:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1301:.\Generated_Source\PSoC4/CyLib.c ****                 {
1302:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1303:.\Generated_Source\PSoC4/CyLib.c ****                 }
1304:.\Generated_Source\PSoC4/CyLib.c ****                 else
1305:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 28


1306:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1307:.\Generated_Source\PSoC4/CyLib.c ****                 }
1308:.\Generated_Source\PSoC4/CyLib.c **** 
1309:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1310:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1311:.\Generated_Source\PSoC4/CyLib.c **** 
1312:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1313:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1314:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1315:.\Generated_Source\PSoC4/CyLib.c ****                 {
1316:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1317:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1318:.\Generated_Source\PSoC4/CyLib.c ****                 }
1319:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1320:.\Generated_Source\PSoC4/CyLib.c ****                 {
1321:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1322:.\Generated_Source\PSoC4/CyLib.c ****                 }
1323:.\Generated_Source\PSoC4/CyLib.c ****                 else
1324:.\Generated_Source\PSoC4/CyLib.c ****                 {
1325:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1326:.\Generated_Source\PSoC4/CyLib.c ****                 }
1327:.\Generated_Source\PSoC4/CyLib.c **** 
1328:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1329:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1334:.\Generated_Source\PSoC4/CyLib.c ****                 {
1335:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1336:.\Generated_Source\PSoC4/CyLib.c ****                 }
1337:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1338:.\Generated_Source\PSoC4/CyLib.c ****                 {
1339:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1340:.\Generated_Source\PSoC4/CyLib.c ****                 }
1341:.\Generated_Source\PSoC4/CyLib.c ****                 else
1342:.\Generated_Source\PSoC4/CyLib.c ****                 {
1343:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c **** 
1346:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1347:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1348:.\Generated_Source\PSoC4/CyLib.c **** 
1349:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1350:.\Generated_Source\PSoC4/CyLib.c **** 
1351:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1352:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1353:.\Generated_Source\PSoC4/CyLib.c ****                 {
1354:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1355:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1356:.\Generated_Source\PSoC4/CyLib.c ****                 }
1357:.\Generated_Source\PSoC4/CyLib.c ****                 else
1358:.\Generated_Source\PSoC4/CyLib.c ****                 {
1359:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1360:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1361:.\Generated_Source\PSoC4/CyLib.c ****                     */
1362:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 29


1363:.\Generated_Source\PSoC4/CyLib.c ****                 }
1364:.\Generated_Source\PSoC4/CyLib.c ****             }
1365:.\Generated_Source\PSoC4/CyLib.c **** 
1366:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1367:.\Generated_Source\PSoC4/CyLib.c ****         }
1368:.\Generated_Source\PSoC4/CyLib.c **** 
1369:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1370:.\Generated_Source\PSoC4/CyLib.c **** 
1371:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1372:.\Generated_Source\PSoC4/CyLib.c **** 
1373:.\Generated_Source\PSoC4/CyLib.c **** 
1374:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1375:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1376:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1377:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1380:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the PLL. Optionally waits for it to become stable. Waits at least
1381:.\Generated_Source\PSoC4/CyLib.c ****     *  250 us or until it is detected that the PLL is stable.
1382:.\Generated_Source\PSoC4/CyLib.c ****     *
1383:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1384:.\Generated_Source\PSoC4/CyLib.c ****     *  once the PLL is locked if the wait parameter is 1).
1385:.\Generated_Source\PSoC4/CyLib.c ****     *
1386:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1387:.\Generated_Source\PSoC4/CyLib.c ****     *
1388:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1389:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1390:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1391:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1392:.\Generated_Source\PSoC4/CyLib.c ****     *
1393:.\Generated_Source\PSoC4/CyLib.c ****     *  wait:
1394:.\Generated_Source\PSoC4/CyLib.c ****     *  0 - Return immediately after configuration.
1395:.\Generated_Source\PSoC4/CyLib.c ****     *  1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1396:.\Generated_Source\PSoC4/CyLib.c ****     *  implement the timeout feature.
1397:.\Generated_Source\PSoC4/CyLib.c ****     *
1398:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1399:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1400:.\Generated_Source\PSoC4/CyLib.c ****     *
1401:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_TIMEOUT - The timeout occurred without detecting a stable clock.  If the
1402:.\Generated_Source\PSoC4/CyLib.c ****     *  input source of the clock is jittery, then the lock indication may not occur.
1403:.\Generated_Source\PSoC4/CyLib.c ****     *  However, after the timeout has expired, the generated PLL clock can still be
1404:.\Generated_Source\PSoC4/CyLib.c ****     *  used.
1405:.\Generated_Source\PSoC4/CyLib.c ****     *
1406:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1407:.\Generated_Source\PSoC4/CyLib.c ****     *
1408:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1409:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1410:.\Generated_Source\PSoC4/CyLib.c ****     {
1411:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1412:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1413:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1414:.\Generated_Source\PSoC4/CyLib.c **** 
1415:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1416:.\Generated_Source\PSoC4/CyLib.c ****         {
1417:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1418:.\Generated_Source\PSoC4/CyLib.c **** 
1419:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 30


1420:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1421:.\Generated_Source\PSoC4/CyLib.c **** 
1422:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1423:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1424:.\Generated_Source\PSoC4/CyLib.c **** 
1425:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1426:.\Generated_Source\PSoC4/CyLib.c **** 
1427:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1428:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1429:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1430:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1431:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1432:.\Generated_Source\PSoC4/CyLib.c **** 
1433:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1434:.\Generated_Source\PSoC4/CyLib.c ****             {
1435:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1436:.\Generated_Source\PSoC4/CyLib.c **** 
1437:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1438:.\Generated_Source\PSoC4/CyLib.c ****                 {
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1441:.\Generated_Source\PSoC4/CyLib.c ****                     {
1442:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1443:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1444:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1445:.\Generated_Source\PSoC4/CyLib.c ****                     }
1446:.\Generated_Source\PSoC4/CyLib.c **** 
1447:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1448:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1449:.\Generated_Source\PSoC4/CyLib.c ****                 }
1450:.\Generated_Source\PSoC4/CyLib.c ****             }
1451:.\Generated_Source\PSoC4/CyLib.c ****         }
1452:.\Generated_Source\PSoC4/CyLib.c ****         else
1453:.\Generated_Source\PSoC4/CyLib.c ****         {
1454:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1455:.\Generated_Source\PSoC4/CyLib.c ****         }
1456:.\Generated_Source\PSoC4/CyLib.c **** 
1457:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1458:.\Generated_Source\PSoC4/CyLib.c ****     }
1459:.\Generated_Source\PSoC4/CyLib.c **** 
1460:.\Generated_Source\PSoC4/CyLib.c **** 
1461:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1462:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1463:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1464:.\Generated_Source\PSoC4/CyLib.c ****     *
1465:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1466:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero if the output of the specified PLL output is locked.
1467:.\Generated_Source\PSoC4/CyLib.c ****     *
1468:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1469:.\Generated_Source\PSoC4/CyLib.c ****     *
1470:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1471:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1472:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1473:.\Generated_Source\PSoC4/CyLib.c ****     *
1474:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1475:.\Generated_Source\PSoC4/CyLib.c ****     *  A non-zero value when the specified PLL is locked.
1476:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 31


1477:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1478:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1479:.\Generated_Source\PSoC4/CyLib.c ****     {
1480:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1481:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1482:.\Generated_Source\PSoC4/CyLib.c **** 
1483:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1484:.\Generated_Source\PSoC4/CyLib.c **** 
1485:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1486:.\Generated_Source\PSoC4/CyLib.c **** 
1487:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1488:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1489:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1490:.\Generated_Source\PSoC4/CyLib.c ****         {
1491:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1492:.\Generated_Source\PSoC4/CyLib.c ****         }
1493:.\Generated_Source\PSoC4/CyLib.c **** 
1494:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1495:.\Generated_Source\PSoC4/CyLib.c **** 
1496:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1497:.\Generated_Source\PSoC4/CyLib.c ****     }
1498:.\Generated_Source\PSoC4/CyLib.c **** 
1499:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1500:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1501:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1502:.\Generated_Source\PSoC4/CyLib.c ****     *
1503:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1504:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the PLL and isolates its outputs.
1505:.\Generated_Source\PSoC4/CyLib.c ****     *
1506:.\Generated_Source\PSoC4/CyLib.c ****     *  Ensures that either PLL is not the source of HFCLK before it is disabled,
1507:.\Generated_Source\PSoC4/CyLib.c ****     *  otherwise, the CPU will halt.
1508:.\Generated_Source\PSoC4/CyLib.c ****     *
1509:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1510:.\Generated_Source\PSoC4/CyLib.c ****     *
1511:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters: PLL:
1512:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1513:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1514:.\Generated_Source\PSoC4/CyLib.c ****     *
1515:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1516:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1519:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1520:.\Generated_Source\PSoC4/CyLib.c ****     {
1521:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1522:.\Generated_Source\PSoC4/CyLib.c **** 
1523:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1524:.\Generated_Source\PSoC4/CyLib.c ****         {
1525:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1526:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1527:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1528:.\Generated_Source\PSoC4/CyLib.c ****         }
1529:.\Generated_Source\PSoC4/CyLib.c ****     }
1530:.\Generated_Source\PSoC4/CyLib.c **** 
1531:.\Generated_Source\PSoC4/CyLib.c **** 
1532:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1533:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 32


1534:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1537:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets feedback (P) and reference the (Q) divider value. This API also sets the
1538:.\Generated_Source\PSoC4/CyLib.c ****     *  programmable charge pump current value. Note that the PLL has to be disabled
1539:.\Generated_Source\PSoC4/CyLib.c ****     *  before calling this API. If this function is called while any PLL is sourcing,
1540:.\Generated_Source\PSoC4/CyLib.c ****     *  the SYSCLK will return an error.
1541:.\Generated_Source\PSoC4/CyLib.c ****     *
1542:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1543:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1544:.\Generated_Source\PSoC4/CyLib.c ****     *
1545:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1546:.\Generated_Source\PSoC4/CyLib.c ****     *
1547:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1548:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1549:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1550:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1551:.\Generated_Source\PSoC4/CyLib.c ****     *
1552:.\Generated_Source\PSoC4/CyLib.c ****     *  feedback: P divider
1553:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 4 - 259. Control bits for the feedback divider
1554:.\Generated_Source\PSoC4/CyLib.c ****     *
1555:.\Generated_Source\PSoC4/CyLib.c ****     *  reference: The Q divider.
1556:.\Generated_Source\PSoC4/CyLib.c ****     *   Range 1 - 64. Divide by the reference.
1557:.\Generated_Source\PSoC4/CyLib.c ****     *
1558:.\Generated_Source\PSoC4/CyLib.c ****     *  current: Charge the pump current in uA. The 2 uA for output frequencies
1559:.\Generated_Source\PSoC4/CyLib.c ****     *  of 67 MHz or less, and 3 uA for higher output frequencies. The default
1560:.\Generated_Source\PSoC4/CyLib.c ****     *  value is 2 uA.
1561:.\Generated_Source\PSoC4/CyLib.c ****     *
1562:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1563:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - Completed successfully.
1564:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL sources
1565:.\Generated_Source\PSoC4/CyLib.c ****     *  the system clock.
1566:.\Generated_Source\PSoC4/CyLib.c ****     *
1567:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1568:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1569:.\Generated_Source\PSoC4/CyLib.c ****     {
1570:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1571:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1572:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1573:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1574:.\Generated_Source\PSoC4/CyLib.c **** 
1575:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1578:.\Generated_Source\PSoC4/CyLib.c **** 
1579:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1580:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1581:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1582:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1583:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1584:.\Generated_Source\PSoC4/CyLib.c ****         {
1585:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1586:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1587:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1588:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1589:.\Generated_Source\PSoC4/CyLib.c **** 
1590:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 33


1591:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1592:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1593:.\Generated_Source\PSoC4/CyLib.c **** 
1594:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1595:.\Generated_Source\PSoC4/CyLib.c **** 
1596:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1597:.\Generated_Source\PSoC4/CyLib.c ****         }
1598:.\Generated_Source\PSoC4/CyLib.c **** 
1599:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1600:.\Generated_Source\PSoC4/CyLib.c **** 
1601:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1602:.\Generated_Source\PSoC4/CyLib.c ****     }
1603:.\Generated_Source\PSoC4/CyLib.c **** 
1604:.\Generated_Source\PSoC4/CyLib.c **** 
1605:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1606:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1607:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1608:.\Generated_Source\PSoC4/CyLib.c ****     *
1609:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1610:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the bypass mode for the specified PLL.
1611:.\Generated_Source\PSoC4/CyLib.c ****     *
1612:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function.
1613:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL output will glitch during this function call.
1614:.\Generated_Source\PSoC4/CyLib.c ****     *
1615:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1616:.\Generated_Source\PSoC4/CyLib.c ****     *
1617:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1618:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1619:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1620:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1621:.\Generated_Source\PSoC4/CyLib.c ****     *
1622:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: The bypass mode.
1623:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1624:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects PLL the reference input (bypass mode). When locked,
1625:.\Generated_Source\PSoC4/CyLib.c ****     *   automatically selects the PLL output.
1626:.\Generated_Source\PSoC4/CyLib.c ****     *
1627:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1628:.\Generated_Source\PSoC4/CyLib.c ****     *   Ignores the lock indicator.
1629:.\Generated_Source\PSoC4/CyLib.c ****     *
1630:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1631:.\Generated_Source\PSoC4/CyLib.c ****     *
1632:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1633:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1634:.\Generated_Source\PSoC4/CyLib.c ****     *
1635:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1636:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1637:.\Generated_Source\PSoC4/CyLib.c ****     {
1638:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1639:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1640:.\Generated_Source\PSoC4/CyLib.c **** 
1641:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1642:.\Generated_Source\PSoC4/CyLib.c **** 
1643:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1644:.\Generated_Source\PSoC4/CyLib.c ****         {
1645:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1646:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1647:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 34


1648:.\Generated_Source\PSoC4/CyLib.c ****         }
1649:.\Generated_Source\PSoC4/CyLib.c **** 
1650:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1651:.\Generated_Source\PSoC4/CyLib.c ****     }
1652:.\Generated_Source\PSoC4/CyLib.c **** 
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1655:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1656:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1657:.\Generated_Source\PSoC4/CyLib.c ****     *
1658:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1659:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1660:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1661:.\Generated_Source\PSoC4/CyLib.c ****     *
1662:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1663:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1664:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1665:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  Return
1668:.\Generated_Source\PSoC4/CyLib.c ****     *  bypass: Bypass mode.
1669:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1670:.\Generated_Source\PSoC4/CyLib.c ****     *
1671:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1672:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1673:.\Generated_Source\PSoC4/CyLib.c ****     {
1674:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1675:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1676:.\Generated_Source\PSoC4/CyLib.c **** 
1677:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1678:.\Generated_Source\PSoC4/CyLib.c **** 
1679:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1680:.\Generated_Source\PSoC4/CyLib.c **** 
1681:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1682:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1683:.\Generated_Source\PSoC4/CyLib.c **** 
1684:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1687:.\Generated_Source\PSoC4/CyLib.c ****     }
1688:.\Generated_Source\PSoC4/CyLib.c **** 
1689:.\Generated_Source\PSoC4/CyLib.c **** 
1690:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1691:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1692:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1693:.\Generated_Source\PSoC4/CyLib.c ****     *
1694:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1695:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1696:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1697:.\Generated_Source\PSoC4/CyLib.c ****     *
1698:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1699:.\Generated_Source\PSoC4/CyLib.c ****     *
1700:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1702:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1703:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1704:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 35


1705:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL sources the System clock and the PLL
1707:.\Generated_Source\PSoC4/CyLib.c ****     *  is not in the bypass mode.
1708:.\Generated_Source\PSoC4/CyLib.c ****     *
1709:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1710:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1711:.\Generated_Source\PSoC4/CyLib.c ****     {
1712:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1713:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1714:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1715:.\Generated_Source\PSoC4/CyLib.c **** 
1716:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1717:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1718:.\Generated_Source\PSoC4/CyLib.c **** 
1719:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1720:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1721:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1722:.\Generated_Source\PSoC4/CyLib.c ****         {
1723:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1724:.\Generated_Source\PSoC4/CyLib.c ****         }
1725:.\Generated_Source\PSoC4/CyLib.c **** 
1726:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1727:.\Generated_Source\PSoC4/CyLib.c ****     }
1728:.\Generated_Source\PSoC4/CyLib.c **** 
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1731:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1732:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1733:.\Generated_Source\PSoC4/CyLib.c ****     *
1734:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1735:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1736:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1737:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1738:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1739:.\Generated_Source\PSoC4/CyLib.c ****     *
1740:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1743:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1744:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1745:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1746:.\Generated_Source\PSoC4/CyLib.c ****     *
1747:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1748:.\Generated_Source\PSoC4/CyLib.c ****     *  Non-zero value when the specified PLL was unlocked.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1751:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1752:.\Generated_Source\PSoC4/CyLib.c ****     {
1753:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1754:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1755:.\Generated_Source\PSoC4/CyLib.c **** 
1756:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1757:.\Generated_Source\PSoC4/CyLib.c **** 
1758:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1759:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1760:.\Generated_Source\PSoC4/CyLib.c **** 
1761:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 36


1762:.\Generated_Source\PSoC4/CyLib.c **** 
1763:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1764:.\Generated_Source\PSoC4/CyLib.c ****     }
1765:.\Generated_Source\PSoC4/CyLib.c **** 
1766:.\Generated_Source\PSoC4/CyLib.c **** 
1767:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1768:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1769:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1770:.\Generated_Source\PSoC4/CyLib.c ****     *
1771:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1772:.\Generated_Source\PSoC4/CyLib.c ****     *  Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1773:.\Generated_Source\PSoC4/CyLib.c ****     *  The input frequency is the frequency of the source to the PLL. The source is
1774:.\Generated_Source\PSoC4/CyLib.c ****     *  set using the CySysClkPllSetSource() function.
1775:.\Generated_Source\PSoC4/CyLib.c ****     *
1776:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the system clock source when calling this function. The
1777:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1778:.\Generated_Source\PSoC4/CyLib.c ****     *
1779:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1780:.\Generated_Source\PSoC4/CyLib.c ****     *
1781:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1782:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1783:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1784:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1785:.\Generated_Source\PSoC4/CyLib.c ****     *
1786:.\Generated_Source\PSoC4/CyLib.c ****     *  inputFreq:
1787:.\Generated_Source\PSoC4/CyLib.c ****     *   The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1788:.\Generated_Source\PSoC4/CyLib.c ****     *
1789:.\Generated_Source\PSoC4/CyLib.c ****     *  pllFreq:
1790:.\Generated_Source\PSoC4/CyLib.c ****     *   The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1791:.\Generated_Source\PSoC4/CyLib.c ****     *
1792:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1793:.\Generated_Source\PSoC4/CyLib.c ****     *  The output clock divider for the PLL:
1794:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1795:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1796:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1797:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1798:.\Generated_Source\PSoC4/CyLib.c ****     *
1799:.\Generated_Source\PSoC4/CyLib.c ****     * freqTol:
1800:.\Generated_Source\PSoC4/CyLib.c ****     *  The tolerance in ppm, 10 ppm is equal to 0.001%.
1801:.\Generated_Source\PSoC4/CyLib.c ****     *
1802:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1803:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS - The PLL was successfully configured for the requested
1804:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency.
1805:.\Generated_Source\PSoC4/CyLib.c ****     *
1806:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The PLL was not able to successfully configure for the
1807:.\Generated_Source\PSoC4/CyLib.c ****     *  requested frequency.
1808:.\Generated_Source\PSoC4/CyLib.c ****     *
1809:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1810:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1811:.\Generated_Source\PSoC4/CyLib.c ****     {
1812:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1813:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1814:.\Generated_Source\PSoC4/CyLib.c **** 
1815:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1816:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1817:.\Generated_Source\PSoC4/CyLib.c **** 
1818:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 37


1819:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1820:.\Generated_Source\PSoC4/CyLib.c **** 
1821:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1822:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1823:.\Generated_Source\PSoC4/CyLib.c **** 
1824:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1825:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c **** 
1828:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1829:.\Generated_Source\PSoC4/CyLib.c **** 
1830:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1831:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1832:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1833:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1834:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1835:.\Generated_Source\PSoC4/CyLib.c ****         {
1836:.\Generated_Source\PSoC4/CyLib.c **** 
1837:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1838:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1839:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1842:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1843:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1844:.\Generated_Source\PSoC4/CyLib.c **** 
1845:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1846:.\Generated_Source\PSoC4/CyLib.c ****             {
1847:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1848:.\Generated_Source\PSoC4/CyLib.c ****                 {
1849:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1850:.\Generated_Source\PSoC4/CyLib.c **** 
1851:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1852:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1853:.\Generated_Source\PSoC4/CyLib.c **** 
1854:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1855:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1856:.\Generated_Source\PSoC4/CyLib.c **** 
1857:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1858:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1859:.\Generated_Source\PSoC4/CyLib.c **** 
1860:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1861:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1862:.\Generated_Source\PSoC4/CyLib.c ****                     {
1863:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1864:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1865:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1866:.\Generated_Source\PSoC4/CyLib.c ****                     }
1867:.\Generated_Source\PSoC4/CyLib.c ****                 }
1868:.\Generated_Source\PSoC4/CyLib.c **** 
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1871:.\Generated_Source\PSoC4/CyLib.c ****                 {
1872:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1873:.\Generated_Source\PSoC4/CyLib.c ****                     {
1874:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1875:.\Generated_Source\PSoC4/CyLib.c ****                     }
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 38


1876:.\Generated_Source\PSoC4/CyLib.c ****                 }
1877:.\Generated_Source\PSoC4/CyLib.c ****             }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         }
1880:.\Generated_Source\PSoC4/CyLib.c **** 
1881:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1882:.\Generated_Source\PSoC4/CyLib.c ****     }
1883:.\Generated_Source\PSoC4/CyLib.c **** 
1884:.\Generated_Source\PSoC4/CyLib.c **** 
1885:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1886:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1887:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must not be the system clock
1891:.\Generated_Source\PSoC4/CyLib.c ****     *  source when calling this function. The PLL output will glitch during this
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  function call.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1895:.\Generated_Source\PSoC4/CyLib.c ****     *
1896:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1897:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1898:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1900:.\Generated_Source\PSoC4/CyLib.c ****     *
1901:.\Generated_Source\PSoC4/CyLib.c ****     * source:
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1903:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1904:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1905:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1906:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1907:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1908:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1909:.\Generated_Source\PSoC4/CyLib.c ****     *
1910:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1911:.\Generated_Source\PSoC4/CyLib.c ****     *  None
1912:.\Generated_Source\PSoC4/CyLib.c ****     *
1913:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1914:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1915:.\Generated_Source\PSoC4/CyLib.c ****     {
1916:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1917:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1924:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1925:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1926:.\Generated_Source\PSoC4/CyLib.c ****         }
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1929:.\Generated_Source\PSoC4/CyLib.c ****     }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c **** 
1932:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 39


1933:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1934:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1935:.\Generated_Source\PSoC4/CyLib.c ****     *
1936:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1937:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1938:.\Generated_Source\PSoC4/CyLib.c ****     *
1939:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1940:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1941:.\Generated_Source\PSoC4/CyLib.c ****     *
1942:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL:
1946:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1947:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1948:.\Generated_Source\PSoC4/CyLib.c ****     *
1949:.\Generated_Source\PSoC4/CyLib.c ****     * divider:
1950:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1951:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1952:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1953:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1954:.\Generated_Source\PSoC4/CyLib.c ****     *
1955:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
1956:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_SUCCESS   - Completed successfully.
1957:.\Generated_Source\PSoC4/CyLib.c ****     *  CYRET_BAD_PARAM - The parameters are out of range or the specified PLL
1958:.\Generated_Source\PSoC4/CyLib.c ****     *                    sources the System clock.
1959:.\Generated_Source\PSoC4/CyLib.c ****     *
1960:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1961:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1962:.\Generated_Source\PSoC4/CyLib.c ****     {
1963:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1964:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1965:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1966:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1967:.\Generated_Source\PSoC4/CyLib.c **** 
1968:.\Generated_Source\PSoC4/CyLib.c **** 
1969:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1970:.\Generated_Source\PSoC4/CyLib.c **** 
1971:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1972:.\Generated_Source\PSoC4/CyLib.c **** 
1973:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1974:.\Generated_Source\PSoC4/CyLib.c ****         {
1975:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1976:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1979:.\Generated_Source\PSoC4/CyLib.c **** 
1980:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1981:.\Generated_Source\PSoC4/CyLib.c ****         }
1982:.\Generated_Source\PSoC4/CyLib.c **** 
1983:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1984:.\Generated_Source\PSoC4/CyLib.c **** 
1985:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1986:.\Generated_Source\PSoC4/CyLib.c ****     }
1987:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1988:.\Generated_Source\PSoC4/CyLib.c **** 
1989:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 40


1990:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
1997:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1998:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1999:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2000:.\Generated_Source\PSoC4/CyLib.c ****     *
2001:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2002:.\Generated_Source\PSoC4/CyLib.c ****     *  threshold: Threshold selection for Low Voltage Detect circuit.
2003:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2004:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2005:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2006:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2007:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2008:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2009:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2010:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2011:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2012:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2013:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2015:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2016:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2017:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2018:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2019:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2020:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2021:.\Generated_Source\PSoC4/CyLib.c ****     *
2022:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2023:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2024:.\Generated_Source\PSoC4/CyLib.c ****     *
2025:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2026:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2027:.\Generated_Source\PSoC4/CyLib.c ****     {
2028:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2029:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2030:.\Generated_Source\PSoC4/CyLib.c **** 
2031:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2032:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2033:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2034:.\Generated_Source\PSoC4/CyLib.c **** 
2035:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2036:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2039:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2042:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2043:.\Generated_Source\PSoC4/CyLib.c **** 
2044:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2045:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2046:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 41


2047:.\Generated_Source\PSoC4/CyLib.c **** 
2048:.\Generated_Source\PSoC4/CyLib.c **** 
2049:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2050:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2051:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2052:.\Generated_Source\PSoC4/CyLib.c ****     *
2053:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2054:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2055:.\Generated_Source\PSoC4/CyLib.c ****     *
2056:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2057:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2058:.\Generated_Source\PSoC4/CyLib.c ****     *
2059:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2060:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2061:.\Generated_Source\PSoC4/CyLib.c ****     *
2062:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2063:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2064:.\Generated_Source\PSoC4/CyLib.c ****     {
 223              		.loc 1 2064 0
 224              		.cfi_startproc
2065:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 225              		.loc 1 2065 0
 226 0000 0221     		mov	r1, #2
 227 0002 054A     		ldr	r2, .L17
2066:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2067:.\Generated_Source\PSoC4/CyLib.c ****     }
 228              		.loc 1 2067 0
 229              		@ sp needed
2065:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 230              		.loc 1 2065 0
 231 0004 1368     		ldr	r3, [r2]
 232 0006 8B43     		bic	r3, r1
 233 0008 1360     		str	r3, [r2]
2066:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 234              		.loc 1 2066 0
 235 000a 044A     		ldr	r2, .L17+4
 236 000c 0139     		sub	r1, r1, #1
 237 000e 1368     		ldr	r3, [r2]
 238 0010 8B43     		bic	r3, r1
 239 0012 1360     		str	r3, [r2]
 240              		.loc 1 2067 0
 241 0014 7047     		bx	lr
 242              	.L18:
 243 0016 C046     		.align	2
 244              	.L17:
 245 0018 08000B40 		.word	1074462728
 246 001c 18000B40 		.word	1074462744
 247              		.cfi_endproc
 248              	.LFE7:
 249              		.size	CySysLvdDisable, .-CySysLvdDisable
 250              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 251              		.align	1
 252              		.global	CySysLvdGetInterruptSource
 253              		.code	16
 254              		.thumb_func
 255              		.type	CySysLvdGetInterruptSource, %function
 256              	CySysLvdGetInterruptSource:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 42


 257              	.LFB8:
2068:.\Generated_Source\PSoC4/CyLib.c **** 
2069:.\Generated_Source\PSoC4/CyLib.c **** 
2070:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2071:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2072:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c ****     *
2074:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2075:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2076:.\Generated_Source\PSoC4/CyLib.c ****     *
2077:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2078:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2079:.\Generated_Source\PSoC4/CyLib.c ****     *
2080:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2081:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2082:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2083:.\Generated_Source\PSoC4/CyLib.c ****     *
2084:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2085:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2086:.\Generated_Source\PSoC4/CyLib.c ****     {
 258              		.loc 1 2086 0
 259              		.cfi_startproc
2087:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 260              		.loc 1 2087 0
 261 0000 024B     		ldr	r3, .L20
2088:.\Generated_Source\PSoC4/CyLib.c ****     }
 262              		.loc 1 2088 0
 263              		@ sp needed
2087:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 264              		.loc 1 2087 0
 265 0002 1868     		ldr	r0, [r3]
 266 0004 0223     		mov	r3, #2
 267 0006 1840     		and	r0, r3
 268              		.loc 1 2088 0
 269 0008 7047     		bx	lr
 270              	.L21:
 271 000a C046     		.align	2
 272              	.L20:
 273 000c 04000B40 		.word	1074462724
 274              		.cfi_endproc
 275              	.LFE8:
 276              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 277              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 278              		.align	1
 279              		.global	CySysLvdClearInterrupt
 280              		.code	16
 281              		.thumb_func
 282              		.type	CySysLvdClearInterrupt, %function
 283              	CySysLvdClearInterrupt:
 284              	.LFB9:
2089:.\Generated_Source\PSoC4/CyLib.c **** 
2090:.\Generated_Source\PSoC4/CyLib.c **** 
2091:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2093:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2094:.\Generated_Source\PSoC4/CyLib.c ****     *
2095:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 43


2096:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2097:.\Generated_Source\PSoC4/CyLib.c ****     *
2098:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2099:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2100:.\Generated_Source\PSoC4/CyLib.c ****     *
2101:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2102:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2103:.\Generated_Source\PSoC4/CyLib.c ****     *
2104:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2106:.\Generated_Source\PSoC4/CyLib.c ****     {
 285              		.loc 1 2106 0
 286              		.cfi_startproc
2107:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 287              		.loc 1 2107 0
 288 0000 0222     		mov	r2, #2
 289 0002 014B     		ldr	r3, .L23
2108:.\Generated_Source\PSoC4/CyLib.c ****     }
 290              		.loc 1 2108 0
 291              		@ sp needed
2107:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 292              		.loc 1 2107 0
 293 0004 1A60     		str	r2, [r3]
 294              		.loc 1 2108 0
 295 0006 7047     		bx	lr
 296              	.L24:
 297              		.align	2
 298              	.L23:
 299 0008 04000B40 		.word	1074462724
 300              		.cfi_endproc
 301              	.LFE9:
 302              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 303              		.section	.text.CySysGetResetReason,"ax",%progbits
 304              		.align	1
 305              		.global	CySysGetResetReason
 306              		.code	16
 307              		.thumb_func
 308              		.type	CySysGetResetReason, %function
 309              	CySysGetResetReason:
 310              	.LFB10:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2111:.\Generated_Source\PSoC4/CyLib.c **** 
2112:.\Generated_Source\PSoC4/CyLib.c **** 
2113:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2114:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2115:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2116:.\Generated_Source\PSoC4/CyLib.c **** *
2117:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2118:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2119:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2120:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2121:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2122:.\Generated_Source\PSoC4/CyLib.c **** *
2123:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2124:.\Generated_Source\PSoC4/CyLib.c **** *  reason: bits in the RES_CAUSE register to clear.
2125:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 44


2126:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2127:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2130:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2131:.\Generated_Source\PSoC4/CyLib.c **** *
2132:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2133:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2134:.\Generated_Source\PSoC4/CyLib.c **** {
 311              		.loc 1 2134 0
 312              		.cfi_startproc
 313              	.LVL14:
2135:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 314              		.loc 1 2137 0
 315 0000 1923     		mov	r3, #25
 316 0002 021C     		mov	r2, r0
2138:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 317              		.loc 1 2138 0
 318 0004 0249     		ldr	r1, .L26
2137:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 319              		.loc 1 2137 0
 320 0006 1A40     		and	r2, r3
 321              	.LVL15:
 322              		.loc 1 2138 0
 323 0008 0868     		ldr	r0, [r1]
 324              	.LVL16:
2139:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2140:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2141:.\Generated_Source\PSoC4/CyLib.c **** 
2142:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2143:.\Generated_Source\PSoC4/CyLib.c **** }
 325              		.loc 1 2143 0
 326              		@ sp needed
2138:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 327              		.loc 1 2138 0
 328 000a 1840     		and	r0, r3
 329              	.LVL17:
2140:.\Generated_Source\PSoC4/CyLib.c **** 
 330              		.loc 1 2140 0
 331 000c 0A60     		str	r2, [r1]
 332              		.loc 1 2143 0
 333 000e 7047     		bx	lr
 334              	.L27:
 335              		.align	2
 336              	.L26:
 337 0010 00030B40 		.word	1074463488
 338              		.cfi_endproc
 339              	.LFE10:
 340              		.size	CySysGetResetReason, .-CySysGetResetReason
 341              		.section	.text.CyDisableInts,"ax",%progbits
 342              		.align	1
 343              		.global	CyDisableInts
 344              		.code	16
 345              		.thumb_func
 346              		.type	CyDisableInts, %function
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 45


 347              	CyDisableInts:
 348              	.LFB11:
2144:.\Generated_Source\PSoC4/CyLib.c **** 
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2147:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2148:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2149:.\Generated_Source\PSoC4/CyLib.c **** *
2150:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2151:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2152:.\Generated_Source\PSoC4/CyLib.c **** *
2153:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2154:.\Generated_Source\PSoC4/CyLib.c **** *  None
2155:.\Generated_Source\PSoC4/CyLib.c **** *
2156:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2157:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2158:.\Generated_Source\PSoC4/CyLib.c **** *
2159:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2160:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2161:.\Generated_Source\PSoC4/CyLib.c **** {
 349              		.loc 1 2161 0
 350              		.cfi_startproc
2162:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2163:.\Generated_Source\PSoC4/CyLib.c **** 
2164:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2165:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2166:.\Generated_Source\PSoC4/CyLib.c **** 
2167:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2168:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 351              		.loc 1 2168 0
 352 0000 0122     		mov	r2, #1
2165:.\Generated_Source\PSoC4/CyLib.c **** 
 353              		.loc 1 2165 0
 354 0002 024B     		ldr	r3, .L29
 355              		.loc 1 2168 0
 356 0004 5242     		neg	r2, r2
2165:.\Generated_Source\PSoC4/CyLib.c **** 
 357              		.loc 1 2165 0
 358 0006 1868     		ldr	r0, [r3]
 359              	.LVL18:
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
2171:.\Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 2171 0
 361              		@ sp needed
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 362              		.loc 1 2168 0
 363 0008 1A60     		str	r2, [r3]
 364              		.loc 1 2171 0
 365 000a 7047     		bx	lr
 366              	.L30:
 367              		.align	2
 368              	.L29:
 369 000c 80E100E0 		.word	-536813184
 370              		.cfi_endproc
 371              	.LFE11:
 372              		.size	CyDisableInts, .-CyDisableInts
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 46


 373              		.section	.text.CyEnableInts,"ax",%progbits
 374              		.align	1
 375              		.global	CyEnableInts
 376              		.code	16
 377              		.thumb_func
 378              		.type	CyEnableInts, %function
 379              	CyEnableInts:
 380              	.LFB12:
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2176:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2179:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2180:.\Generated_Source\PSoC4/CyLib.c **** *
2181:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2182:.\Generated_Source\PSoC4/CyLib.c **** *   mask, 32 bit mask of interrupts to enable.
2183:.\Generated_Source\PSoC4/CyLib.c **** *
2184:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2185:.\Generated_Source\PSoC4/CyLib.c **** *  None
2186:.\Generated_Source\PSoC4/CyLib.c **** *
2187:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2188:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2189:.\Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 2189 0
 382              		.cfi_startproc
 383              	.LVL19:
2190:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 384              		.loc 1 2190 0
 385 0000 014B     		ldr	r3, .L32
2191:.\Generated_Source\PSoC4/CyLib.c **** }
 386              		.loc 1 2191 0
 387              		@ sp needed
2190:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 388              		.loc 1 2190 0
 389 0002 1860     		str	r0, [r3]
 390              		.loc 1 2191 0
 391 0004 7047     		bx	lr
 392              	.L33:
 393 0006 C046     		.align	2
 394              	.L32:
 395 0008 00E100E0 		.word	-536813312
 396              		.cfi_endproc
 397              	.LFE12:
 398              		.size	CyEnableInts, .-CyEnableInts
 399              		.section	.text.CyIntSetSysVector,"ax",%progbits
 400              		.align	1
 401              		.global	CyIntSetSysVector
 402              		.code	16
 403              		.thumb_func
 404              		.type	CyIntSetSysVector, %function
 405              	CyIntSetSysVector:
 406              	.LFB13:
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 47


2194:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2195:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2196:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2197:.\Generated_Source\PSoC4/CyLib.c **** *
2198:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2199:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2200:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2201:.\Generated_Source\PSoC4/CyLib.c **** *
2202:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2203:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2204:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2205:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2206:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2207:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2208:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2209:.\Generated_Source\PSoC4/CyLib.c **** *
2210:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine.
2211:.\Generated_Source\PSoC4/CyLib.c **** *
2212:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2213:.\Generated_Source\PSoC4/CyLib.c **** *  The old ISR vector at this location.
2214:.\Generated_Source\PSoC4/CyLib.c **** *
2215:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2216:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2217:.\Generated_Source\PSoC4/CyLib.c **** {
 407              		.loc 1 2217 0
 408              		.cfi_startproc
 409              	.LVL20:
2218:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2219:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2220:.\Generated_Source\PSoC4/CyLib.c **** 
2221:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2224:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 410              		.loc 1 2224 0
 411 0000 8023     		mov	r3, #128
 412 0002 8000     		lsl	r0, r0, #2
 413              	.LVL21:
 414 0004 9B05     		lsl	r3, r3, #22
 415 0006 C318     		add	r3, r0, r3
 416 0008 1868     		ldr	r0, [r3]
 417              	.LVL22:
2225:.\Generated_Source\PSoC4/CyLib.c **** 
2226:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2227:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2228:.\Generated_Source\PSoC4/CyLib.c **** 
2229:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2230:.\Generated_Source\PSoC4/CyLib.c **** }
 418              		.loc 1 2230 0
 419              		@ sp needed
2227:.\Generated_Source\PSoC4/CyLib.c **** 
 420              		.loc 1 2227 0
 421 000a 1960     		str	r1, [r3]
 422              		.loc 1 2230 0
 423 000c 7047     		bx	lr
 424              		.cfi_endproc
 425              	.LFE13:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 48


 426              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 427              		.section	.text.CyIntGetSysVector,"ax",%progbits
 428              		.align	1
 429              		.global	CyIntGetSysVector
 430              		.code	16
 431              		.thumb_func
 432              		.type	CyIntGetSysVector, %function
 433              	CyIntGetSysVector:
 434              	.LFB14:
2231:.\Generated_Source\PSoC4/CyLib.c **** 
2232:.\Generated_Source\PSoC4/CyLib.c **** 
2233:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2234:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2235:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2236:.\Generated_Source\PSoC4/CyLib.c **** *
2237:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2238:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2239:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2240:.\Generated_Source\PSoC4/CyLib.c **** *
2241:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2242:.\Generated_Source\PSoC4/CyLib.c **** *  number: System interrupt number:
2243:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2244:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2245:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2246:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2247:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2248:.\Generated_Source\PSoC4/CyLib.c **** *
2249:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2250:.\Generated_Source\PSoC4/CyLib.c **** *   Address of the ISR in the interrupt vector table.
2251:.\Generated_Source\PSoC4/CyLib.c **** *
2252:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2253:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2254:.\Generated_Source\PSoC4/CyLib.c **** {
 435              		.loc 1 2254 0
 436              		.cfi_startproc
 437              	.LVL23:
2255:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2256:.\Generated_Source\PSoC4/CyLib.c **** 
2257:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2258:.\Generated_Source\PSoC4/CyLib.c **** 
2259:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 438              		.loc 1 2259 0
 439 0000 8023     		mov	r3, #128
 440 0002 8000     		lsl	r0, r0, #2
 441              	.LVL24:
 442 0004 9B05     		lsl	r3, r3, #22
 443 0006 C018     		add	r0, r0, r3
 444 0008 0068     		ldr	r0, [r0]
2260:.\Generated_Source\PSoC4/CyLib.c **** }
 445              		.loc 1 2260 0
 446              		@ sp needed
 447 000a 7047     		bx	lr
 448              		.cfi_endproc
 449              	.LFE14:
 450              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 451              		.section	.text.CyIntSetVector,"ax",%progbits
 452              		.align	1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 49


 453              		.global	CyIntSetVector
 454              		.code	16
 455              		.thumb_func
 456              		.type	CyIntSetVector, %function
 457              	CyIntSetVector:
 458              	.LFB15:
2261:.\Generated_Source\PSoC4/CyLib.c **** 
2262:.\Generated_Source\PSoC4/CyLib.c **** 
2263:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2264:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2265:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2266:.\Generated_Source\PSoC4/CyLib.c **** *
2267:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2268:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2269:.\Generated_Source\PSoC4/CyLib.c **** *
2270:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2271:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2272:.\Generated_Source\PSoC4/CyLib.c **** *  address: Pointer to an interrupt service routine
2273:.\Generated_Source\PSoC4/CyLib.c **** *
2274:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2275:.\Generated_Source\PSoC4/CyLib.c **** *   Previous interrupt vector value.
2276:.\Generated_Source\PSoC4/CyLib.c **** *
2277:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2278:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2279:.\Generated_Source\PSoC4/CyLib.c **** {
 459              		.loc 1 2279 0
 460              		.cfi_startproc
 461              	.LVL25:
2280:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2281:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2282:.\Generated_Source\PSoC4/CyLib.c **** 
2283:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2284:.\Generated_Source\PSoC4/CyLib.c **** 
2285:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2286:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 462              		.loc 1 2286 0
 463 0000 024B     		ldr	r3, .L37
 464 0002 8000     		lsl	r0, r0, #2
 465              	.LVL26:
 466 0004 C318     		add	r3, r0, r3
 467 0006 1868     		ldr	r0, [r3]
 468              	.LVL27:
2287:.\Generated_Source\PSoC4/CyLib.c **** 
2288:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2289:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2290:.\Generated_Source\PSoC4/CyLib.c **** 
2291:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2292:.\Generated_Source\PSoC4/CyLib.c **** }
 469              		.loc 1 2292 0
 470              		@ sp needed
2289:.\Generated_Source\PSoC4/CyLib.c **** 
 471              		.loc 1 2289 0
 472 0008 1960     		str	r1, [r3]
 473              		.loc 1 2292 0
 474 000a 7047     		bx	lr
 475              	.L38:
 476              		.align	2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 50


 477              	.L37:
 478 000c 40000020 		.word	536870976
 479              		.cfi_endproc
 480              	.LFE15:
 481              		.size	CyIntSetVector, .-CyIntSetVector
 482              		.section	.text.CyIntGetVector,"ax",%progbits
 483              		.align	1
 484              		.global	CyIntGetVector
 485              		.code	16
 486              		.thumb_func
 487              		.type	CyIntGetVector, %function
 488              	CyIntGetVector:
 489              	.LFB16:
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** 
2295:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2296:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2297:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2298:.\Generated_Source\PSoC4/CyLib.c **** *
2299:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2300:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2303:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2306:.\Generated_Source\PSoC4/CyLib.c **** *  Address of the ISR in the interrupt vector table.
2307:.\Generated_Source\PSoC4/CyLib.c **** *
2308:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2309:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2310:.\Generated_Source\PSoC4/CyLib.c **** {
 490              		.loc 1 2310 0
 491              		.cfi_startproc
 492              	.LVL28:
2311:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2314:.\Generated_Source\PSoC4/CyLib.c **** 
2315:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 493              		.loc 1 2315 0
 494 0000 024B     		ldr	r3, .L40
 495 0002 8000     		lsl	r0, r0, #2
 496              	.LVL29:
 497 0004 C018     		add	r0, r0, r3
 498 0006 0068     		ldr	r0, [r0]
2316:.\Generated_Source\PSoC4/CyLib.c **** }
 499              		.loc 1 2316 0
 500              		@ sp needed
 501 0008 7047     		bx	lr
 502              	.L41:
 503 000a C046     		.align	2
 504              	.L40:
 505 000c 40000020 		.word	536870976
 506              		.cfi_endproc
 507              	.LFE16:
 508              		.size	CyIntGetVector, .-CyIntGetVector
 509              		.section	.text.CyIntSetPriority,"ax",%progbits
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 51


 510              		.align	1
 511              		.global	CyIntSetPriority
 512              		.code	16
 513              		.thumb_func
 514              		.type	CyIntSetPriority, %function
 515              	CyIntSetPriority:
 516              	.LFB17:
2317:.\Generated_Source\PSoC4/CyLib.c **** 
2318:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2319:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2320:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2321:.\Generated_Source\PSoC4/CyLib.c **** *
2322:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2323:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2324:.\Generated_Source\PSoC4/CyLib.c **** *
2325:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2326:.\Generated_Source\PSoC4/CyLib.c **** *  priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2327:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2328:.\Generated_Source\PSoC4/CyLib.c **** *
2329:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2330:.\Generated_Source\PSoC4/CyLib.c **** *  None
2331:.\Generated_Source\PSoC4/CyLib.c **** *
2332:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2333:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2334:.\Generated_Source\PSoC4/CyLib.c **** {
 517              		.loc 1 2334 0
 518              		.cfi_startproc
 519              	.LVL30:
 520 0000 38B5     		push	{r3, r4, r5, lr}
 521              		.cfi_def_cfa_offset 16
 522              		.cfi_offset 3, -16
 523              		.cfi_offset 4, -12
 524              		.cfi_offset 5, -8
 525              		.cfi_offset 14, -4
 526              		.loc 1 2334 0
 527 0002 041C     		mov	r4, r0
 528              	.LVL31:
 529 0004 0D1C     		mov	r5, r1
2335:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2336:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2337:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2338:.\Generated_Source\PSoC4/CyLib.c **** 
2339:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2340:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2343:.\Generated_Source\PSoC4/CyLib.c **** 
2344:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 530              		.loc 1 2344 0
 531 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 532              	.LVL32:
2345:.\Generated_Source\PSoC4/CyLib.c **** 
2346:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 533              		.loc 1 2346 0
 534 000a A308     		lsr	r3, r4, #2
 535 000c 074A     		ldr	r2, .L43
 536 000e 9B00     		lsl	r3, r3, #2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 52


 537 0010 9B18     		add	r3, r3, r2
2342:.\Generated_Source\PSoC4/CyLib.c **** 
 538              		.loc 1 2342 0
 539 0012 0322     		mov	r2, #3
 540 0014 1440     		and	r4, r2
 541              	.LVL33:
 542 0016 9440     		lsl	r4, r4, r2
 543 0018 0634     		add	r4, r4, #6
2347:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 544              		.loc 1 2347 0
 545 001a A240     		lsl	r2, r2, r4
2348:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 546              		.loc 1 2348 0
 547 001c A540     		lsl	r5, r5, r4
2346:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 548              		.loc 1 2346 0
 549 001e 1968     		ldr	r1, [r3]
 550              	.LVL34:
2349:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2350:.\Generated_Source\PSoC4/CyLib.c **** 
2351:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2352:.\Generated_Source\PSoC4/CyLib.c **** }
 551              		.loc 1 2352 0
 552              		@ sp needed
2347:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 553              		.loc 1 2347 0
 554 0020 9143     		bic	r1, r2
 555              	.LVL35:
2348:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 556              		.loc 1 2348 0
 557 0022 2943     		orr	r1, r5
 558              	.LVL36:
2349:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 559              		.loc 1 2349 0
 560 0024 1960     		str	r1, [r3]
2351:.\Generated_Source\PSoC4/CyLib.c **** }
 561              		.loc 1 2351 0
 562 0026 FFF7FEFF 		bl	CyExitCriticalSection
 563              	.LVL37:
 564              		.loc 1 2352 0
 565 002a 38BD     		pop	{r3, r4, r5, pc}
 566              	.L44:
 567              		.align	2
 568              	.L43:
 569 002c 00E400E0 		.word	-536812544
 570              		.cfi_endproc
 571              	.LFE17:
 572              		.size	CyIntSetPriority, .-CyIntSetPriority
 573              		.section	.text.CyIntGetPriority,"ax",%progbits
 574              		.align	1
 575              		.global	CyIntGetPriority
 576              		.code	16
 577              		.thumb_func
 578              		.type	CyIntGetPriority, %function
 579              	CyIntGetPriority:
 580              	.LFB18:
2353:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 53


2354:.\Generated_Source\PSoC4/CyLib.c **** 
2355:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2356:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2357:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** *
2359:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2360:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2361:.\Generated_Source\PSoC4/CyLib.c **** *
2362:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2363:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the interrupt, 0 - 31.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2366:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2367:.\Generated_Source\PSoC4/CyLib.c **** *
2368:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2369:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2370:.\Generated_Source\PSoC4/CyLib.c **** {
 581              		.loc 1 2370 0
 582              		.cfi_startproc
 583              	.LVL38:
2371:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2372:.\Generated_Source\PSoC4/CyLib.c **** 
2373:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2374:.\Generated_Source\PSoC4/CyLib.c **** 
2375:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 584              		.loc 1 2375 0
 585 0000 8308     		lsr	r3, r0, #2
 586 0002 064A     		ldr	r2, .L46
 587 0004 9B00     		lsl	r3, r3, #2
 588 0006 9B18     		add	r3, r3, r2
 589 0008 1968     		ldr	r1, [r3]
 590              	.LVL39:
 591 000a 0322     		mov	r2, #3
 592 000c 031C     		mov	r3, r0
 593 000e 1340     		and	r3, r2
 594 0010 9340     		lsl	r3, r3, r2
 595 0012 0633     		add	r3, r3, #6
 596 0014 D940     		lsr	r1, r1, r3
 597              	.LVL40:
 598 0016 081C     		mov	r0, r1
 599              	.LVL41:
2376:.\Generated_Source\PSoC4/CyLib.c **** 
2377:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2378:.\Generated_Source\PSoC4/CyLib.c **** }
 600              		.loc 1 2378 0
 601              		@ sp needed
2377:.\Generated_Source\PSoC4/CyLib.c **** }
 602              		.loc 1 2377 0
 603 0018 1040     		and	r0, r2
 604              		.loc 1 2378 0
 605 001a 7047     		bx	lr
 606              	.L47:
 607              		.align	2
 608              	.L46:
 609 001c 00E400E0 		.word	-536812544
 610              		.cfi_endproc
 611              	.LFE18:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 54


 612              		.size	CyIntGetPriority, .-CyIntGetPriority
 613              		.section	.text.CyIntEnable,"ax",%progbits
 614              		.align	1
 615              		.global	CyIntEnable
 616              		.code	16
 617              		.thumb_func
 618              		.type	CyIntEnable, %function
 619              	CyIntEnable:
 620              	.LFB19:
2379:.\Generated_Source\PSoC4/CyLib.c **** 
2380:.\Generated_Source\PSoC4/CyLib.c **** 
2381:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2382:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2383:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** *
2385:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2386:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2387:.\Generated_Source\PSoC4/CyLib.c **** *
2388:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2389:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number
2390:.\Generated_Source\PSoC4/CyLib.c **** *
2391:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2392:.\Generated_Source\PSoC4/CyLib.c **** *  None
2393:.\Generated_Source\PSoC4/CyLib.c **** *
2394:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2395:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2396:.\Generated_Source\PSoC4/CyLib.c **** {
 621              		.loc 1 2396 0
 622              		.cfi_startproc
 623              	.LVL42:
2397:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 624              		.loc 1 2397 0
 625 0000 1F23     		mov	r3, #31
 626 0002 1840     		and	r0, r3
 627              	.LVL43:
 628 0004 1E3B     		sub	r3, r3, #30
 629 0006 8340     		lsl	r3, r3, r0
 630 0008 181C     		mov	r0, r3
 631 000a 014B     		ldr	r3, .L49
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 632              		.loc 1 2398 0
 633              		@ sp needed
2397:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 634              		.loc 1 2397 0
 635 000c 1860     		str	r0, [r3]
 636              		.loc 1 2398 0
 637 000e 7047     		bx	lr
 638              	.L50:
 639              		.align	2
 640              	.L49:
 641 0010 00E100E0 		.word	-536813312
 642              		.cfi_endproc
 643              	.LFE19:
 644              		.size	CyIntEnable, .-CyIntEnable
 645              		.section	.text.CyIntGetState,"ax",%progbits
 646              		.align	1
 647              		.global	CyIntGetState
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 55


 648              		.code	16
 649              		.thumb_func
 650              		.type	CyIntGetState, %function
 651              	CyIntGetState:
 652              	.LFB20:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2403:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2406:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2407:.\Generated_Source\PSoC4/CyLib.c **** *
2408:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2409:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2410:.\Generated_Source\PSoC4/CyLib.c **** *
2411:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2412:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2413:.\Generated_Source\PSoC4/CyLib.c **** *
2414:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2415:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2416:.\Generated_Source\PSoC4/CyLib.c **** {
 653              		.loc 1 2416 0
 654              		.cfi_startproc
 655              	.LVL44:
2417:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2418:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 656              		.loc 1 2418 0
 657 0000 1F22     		mov	r2, #31
 658 0002 044B     		ldr	r3, .L52
 659 0004 1040     		and	r0, r2
 660              	.LVL45:
 661 0006 1B68     		ldr	r3, [r3]
2419:.\Generated_Source\PSoC4/CyLib.c **** }
 662              		.loc 1 2419 0
 663              		@ sp needed
2418:.\Generated_Source\PSoC4/CyLib.c **** }
 664              		.loc 1 2418 0
 665 0008 C340     		lsr	r3, r3, r0
 666 000a 181C     		mov	r0, r3
 667 000c 0123     		mov	r3, #1
 668 000e 1840     		and	r0, r3
 669              		.loc 1 2419 0
 670 0010 7047     		bx	lr
 671              	.L53:
 672 0012 C046     		.align	2
 673              	.L52:
 674 0014 00E100E0 		.word	-536813312
 675              		.cfi_endproc
 676              	.LFE20:
 677              		.size	CyIntGetState, .-CyIntGetState
 678              		.section	.text.CyIntDisable,"ax",%progbits
 679              		.align	1
 680              		.global	CyIntDisable
 681              		.code	16
 682              		.thumb_func
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 56


 683              		.type	CyIntDisable, %function
 684              	CyIntDisable:
 685              	.LFB21:
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c **** 
2422:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2423:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2424:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2425:.\Generated_Source\PSoC4/CyLib.c **** *
2426:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2427:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2428:.\Generated_Source\PSoC4/CyLib.c **** *
2429:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2430:.\Generated_Source\PSoC4/CyLib.c **** *   number: Valid range [0-31].  Interrupt number.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2433:.\Generated_Source\PSoC4/CyLib.c **** *  None
2434:.\Generated_Source\PSoC4/CyLib.c **** *
2435:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2436:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2437:.\Generated_Source\PSoC4/CyLib.c **** {
 686              		.loc 1 2437 0
 687              		.cfi_startproc
 688              	.LVL46:
2438:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 689              		.loc 1 2438 0
 690 0000 1F23     		mov	r3, #31
 691 0002 1840     		and	r0, r3
 692              	.LVL47:
 693 0004 1E3B     		sub	r3, r3, #30
 694 0006 8340     		lsl	r3, r3, r0
 695 0008 181C     		mov	r0, r3
 696 000a 014B     		ldr	r3, .L55
2439:.\Generated_Source\PSoC4/CyLib.c **** }
 697              		.loc 1 2439 0
 698              		@ sp needed
2438:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 699              		.loc 1 2438 0
 700 000c 1860     		str	r0, [r3]
 701              		.loc 1 2439 0
 702 000e 7047     		bx	lr
 703              	.L56:
 704              		.align	2
 705              	.L55:
 706 0010 80E100E0 		.word	-536813184
 707              		.cfi_endproc
 708              	.LFE21:
 709              		.size	CyIntDisable, .-CyIntDisable
 710              		.section	.text.CyIntSetPending,"ax",%progbits
 711              		.align	1
 712              		.global	CyIntSetPending
 713              		.code	16
 714              		.thumb_func
 715              		.type	CyIntSetPending, %function
 716              	CyIntSetPending:
 717              	.LFB22:
2440:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 57


2441:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2442:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2443:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2444:.\Generated_Source\PSoC4/CyLib.c **** *
2445:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2446:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2447:.\Generated_Source\PSoC4/CyLib.c **** *
2448:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2449:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2450:.\Generated_Source\PSoC4/CyLib.c **** *
2451:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2452:.\Generated_Source\PSoC4/CyLib.c **** *  None
2453:.\Generated_Source\PSoC4/CyLib.c **** *
2454:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2456:.\Generated_Source\PSoC4/CyLib.c **** {
 718              		.loc 1 2456 0
 719              		.cfi_startproc
 720              	.LVL48:
2457:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 721              		.loc 1 2457 0
 722 0000 1F23     		mov	r3, #31
 723 0002 1840     		and	r0, r3
 724              	.LVL49:
 725 0004 1E3B     		sub	r3, r3, #30
 726 0006 8340     		lsl	r3, r3, r0
 727 0008 181C     		mov	r0, r3
 728 000a 014B     		ldr	r3, .L58
2458:.\Generated_Source\PSoC4/CyLib.c **** }
 729              		.loc 1 2458 0
 730              		@ sp needed
2457:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 731              		.loc 1 2457 0
 732 000c 1860     		str	r0, [r3]
 733              		.loc 1 2458 0
 734 000e 7047     		bx	lr
 735              	.L59:
 736              		.align	2
 737              	.L58:
 738 0010 00E200E0 		.word	-536813056
 739              		.cfi_endproc
 740              	.LFE22:
 741              		.size	CyIntSetPending, .-CyIntSetPending
 742              		.section	.text.CyIntClearPending,"ax",%progbits
 743              		.align	1
 744              		.global	CyIntClearPending
 745              		.code	16
 746              		.thumb_func
 747              		.type	CyIntClearPending, %function
 748              	CyIntClearPending:
 749              	.LFB23:
2459:.\Generated_Source\PSoC4/CyLib.c **** 
2460:.\Generated_Source\PSoC4/CyLib.c **** 
2461:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2462:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2463:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2464:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 58


2465:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2466:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2469:.\Generated_Source\PSoC4/CyLib.c **** *  number: Valid range [0-31].  Interrupt number.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2472:.\Generated_Source\PSoC4/CyLib.c **** *  None
2473:.\Generated_Source\PSoC4/CyLib.c **** *
2474:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2475:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2476:.\Generated_Source\PSoC4/CyLib.c **** {
 750              		.loc 1 2476 0
 751              		.cfi_startproc
 752              	.LVL50:
2477:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 753              		.loc 1 2477 0
 754 0000 1F23     		mov	r3, #31
 755 0002 1840     		and	r0, r3
 756              	.LVL51:
 757 0004 1E3B     		sub	r3, r3, #30
 758 0006 8340     		lsl	r3, r3, r0
 759 0008 181C     		mov	r0, r3
 760 000a 014B     		ldr	r3, .L61
2478:.\Generated_Source\PSoC4/CyLib.c **** }
 761              		.loc 1 2478 0
 762              		@ sp needed
2477:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 763              		.loc 1 2477 0
 764 000c 1860     		str	r0, [r3]
 765              		.loc 1 2478 0
 766 000e 7047     		bx	lr
 767              	.L62:
 768              		.align	2
 769              	.L61:
 770 0010 80E200E0 		.word	-536812928
 771              		.cfi_endproc
 772              	.LFE23:
 773              		.size	CyIntClearPending, .-CyIntClearPending
 774              		.section	.text.CyHalt,"ax",%progbits
 775              		.align	1
 776              		.global	CyHalt
 777              		.code	16
 778              		.thumb_func
 779              		.type	CyHalt, %function
 780              	CyHalt:
 781              	.LFB24:
2479:.\Generated_Source\PSoC4/CyLib.c **** 
2480:.\Generated_Source\PSoC4/CyLib.c **** 
2481:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2482:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2483:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2484:.\Generated_Source\PSoC4/CyLib.c **** *
2485:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2486:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2487:.\Generated_Source\PSoC4/CyLib.c **** *
2488:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 59


2489:.\Generated_Source\PSoC4/CyLib.c **** *  reason: Value to be used during debugging.
2490:.\Generated_Source\PSoC4/CyLib.c **** *
2491:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2492:.\Generated_Source\PSoC4/CyLib.c **** *  None
2493:.\Generated_Source\PSoC4/CyLib.c **** *
2494:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2495:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2496:.\Generated_Source\PSoC4/CyLib.c **** {
 782              		.loc 1 2496 0
 783              		.cfi_startproc
 784              	.LVL52:
2497:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2498:.\Generated_Source\PSoC4/CyLib.c ****     {
2499:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2500:.\Generated_Source\PSoC4/CyLib.c ****     }
2501:.\Generated_Source\PSoC4/CyLib.c **** 
2502:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2503:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2504:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2505:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 785              		.loc 1 2505 0
 786              	@ 2505 ".\Generated_Source\PSoC4\CyLib.c" 1
 787 0000 01BE     		    bkpt    1
 788              	@ 0 "" 2
2506:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2507:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2508:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2509:.\Generated_Source\PSoC4/CyLib.c **** }
 789              		.loc 1 2509 0
 790              		.code	16
 791              		@ sp needed
 792 0002 7047     		bx	lr
 793              		.cfi_endproc
 794              	.LFE24:
 795              		.size	CyHalt, .-CyHalt
 796              		.section	.text.CySoftwareReset,"ax",%progbits
 797              		.align	1
 798              		.global	CySoftwareReset
 799              		.code	16
 800              		.thumb_func
 801              		.type	CySoftwareReset, %function
 802              	CySoftwareReset:
 803              	.LFB25:
2510:.\Generated_Source\PSoC4/CyLib.c **** 
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2513:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2514:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2515:.\Generated_Source\PSoC4/CyLib.c **** *
2516:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2517:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2518:.\Generated_Source\PSoC4/CyLib.c **** *
2519:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2520:.\Generated_Source\PSoC4/CyLib.c **** *  None
2521:.\Generated_Source\PSoC4/CyLib.c **** *
2522:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2523:.\Generated_Source\PSoC4/CyLib.c **** *  None
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 60


2524:.\Generated_Source\PSoC4/CyLib.c **** *
2525:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2526:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2527:.\Generated_Source\PSoC4/CyLib.c **** {
 804              		.loc 1 2527 0
 805              		.cfi_startproc
2528:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2529:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2530:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2531:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2532:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CM0_AIRCR_REG = (CY_SYS_CM0_AIRCR_REG & (uint32)(~CY_SYS_CM0_AIRCR_VECTKEY_MASK)) |
 806              		.loc 1 2532 0
 807 0000 034A     		ldr	r2, .L65
2533:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 808              		.loc 1 2533 0
 809 0002 0449     		ldr	r1, .L65+4
2532:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 810              		.loc 1 2532 0
 811 0004 1368     		ldr	r3, [r2]
2534:.\Generated_Source\PSoC4/CyLib.c **** }
 812              		.loc 1 2534 0
 813              		@ sp needed
2532:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 814              		.loc 1 2532 0
 815 0006 9BB2     		uxth	r3, r3
2533:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 816              		.loc 1 2533 0
 817 0008 0B43     		orr	r3, r1
2532:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_CM0_AIRCR_VECTKEY | CY_SYS_CM0_AIRCR_SYSRESETREQ;
 818              		.loc 1 2532 0
 819 000a 1360     		str	r3, [r2]
 820              		.loc 1 2534 0
 821 000c 7047     		bx	lr
 822              	.L66:
 823 000e C046     		.align	2
 824              	.L65:
 825 0010 0CED00E0 		.word	-536810228
 826 0014 0400FA05 		.word	100270084
 827              		.cfi_endproc
 828              	.LFE25:
 829              		.size	CySoftwareReset, .-CySoftwareReset
 830              		.section	.text.CyDelay,"ax",%progbits
 831              		.align	1
 832              		.global	CyDelay
 833              		.code	16
 834              		.thumb_func
 835              		.type	CyDelay, %function
 836              	CyDelay:
 837              	.LFB26:
2535:.\Generated_Source\PSoC4/CyLib.c **** 
2536:.\Generated_Source\PSoC4/CyLib.c **** 
2537:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2538:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2539:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2540:.\Generated_Source\PSoC4/CyLib.c **** *
2541:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2542:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 61


2543:.\Generated_Source\PSoC4/CyLib.c **** *
2544:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2545:.\Generated_Source\PSoC4/CyLib.c **** *  milliseconds: number of milliseconds to delay.
2546:.\Generated_Source\PSoC4/CyLib.c **** *
2547:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2548:.\Generated_Source\PSoC4/CyLib.c **** *  None
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2551:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2552:.\Generated_Source\PSoC4/CyLib.c **** {
 838              		.loc 1 2552 0
 839              		.cfi_startproc
 840              	.LVL53:
 841 0000 10B5     		push	{r4, lr}
 842              		.cfi_def_cfa_offset 8
 843              		.cfi_offset 4, -8
 844              		.cfi_offset 14, -4
 845 0002 041C     		mov	r4, r0
 846              	.LVL54:
 847              	.L68:
2553:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 848              		.loc 1 2553 0
 849 0004 8022     		mov	r2, #128
 850 0006 074B     		ldr	r3, .L72
 851 0008 1202     		lsl	r2, r2, #8
 852 000a 9442     		cmp	r4, r2
 853 000c 05D9     		bls	.L71
2554:.\Generated_Source\PSoC4/CyLib.c ****     {
2555:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2556:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2557:.\Generated_Source\PSoC4/CyLib.c ****          */
2558:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 854              		.loc 1 2558 0
 855 000e 1868     		ldr	r0, [r3]
 856 0010 FFF7FEFF 		bl	CyDelayCycles
 857              	.LVL55:
2559:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 858              		.loc 1 2559 0
 859 0014 044B     		ldr	r3, .L72+4
 860 0016 E418     		add	r4, r4, r3
 861              	.LVL56:
 862 0018 F4E7     		b	.L68
 863              	.L71:
2560:.\Generated_Source\PSoC4/CyLib.c ****     }
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 864              		.loc 1 2562 0
 865 001a 5868     		ldr	r0, [r3, #4]
2563:.\Generated_Source\PSoC4/CyLib.c **** }
 866              		.loc 1 2563 0
 867              		@ sp needed
2562:.\Generated_Source\PSoC4/CyLib.c **** }
 868              		.loc 1 2562 0
 869 001c 6043     		mul	r0, r4
 870 001e FFF7FEFF 		bl	CyDelayCycles
 871              	.LVL57:
 872              	.LVL58:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 62


 873              		.loc 1 2563 0
 874 0022 10BD     		pop	{r4, pc}
 875              	.L73:
 876              		.align	2
 877              	.L72:
 878 0024 00000000 		.word	.LANCHOR0
 879 0028 0080FFFF 		.word	-32768
 880              		.cfi_endproc
 881              	.LFE26:
 882              		.size	CyDelay, .-CyDelay
 883              		.section	.text.CyDelayUs,"ax",%progbits
 884              		.align	1
 885              		.global	CyDelayUs
 886              		.code	16
 887              		.thumb_func
 888              		.type	CyDelayUs, %function
 889              	CyDelayUs:
 890              	.LFB27:
2564:.\Generated_Source\PSoC4/CyLib.c **** 
2565:.\Generated_Source\PSoC4/CyLib.c **** 
2566:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2567:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2568:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2569:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2570:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2571:.\Generated_Source\PSoC4/CyLib.c **** *
2572:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2573:.\Generated_Source\PSoC4/CyLib.c **** *  microseconds: number of microseconds to delay.
2574:.\Generated_Source\PSoC4/CyLib.c **** *
2575:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2576:.\Generated_Source\PSoC4/CyLib.c **** *  None
2577:.\Generated_Source\PSoC4/CyLib.c **** *
2578:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2579:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2580:.\Generated_Source\PSoC4/CyLib.c **** {
 891              		.loc 1 2580 0
 892              		.cfi_startproc
 893              	.LVL59:
 894 0000 08B5     		push	{r3, lr}
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 3, -8
 897              		.cfi_offset 14, -4
2581:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 898              		.loc 1 2581 0
 899 0002 034B     		ldr	r3, .L75
2582:.\Generated_Source\PSoC4/CyLib.c **** }
 900              		.loc 1 2582 0
 901              		@ sp needed
2581:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 902              		.loc 1 2581 0
 903 0004 1B7A     		ldrb	r3, [r3, #8]
 904 0006 5843     		mul	r0, r3
 905              	.LVL60:
 906 0008 FFF7FEFF 		bl	CyDelayCycles
 907              	.LVL61:
 908              		.loc 1 2582 0
 909 000c 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 63


 910              	.L76:
 911 000e C046     		.align	2
 912              	.L75:
 913 0010 00000000 		.word	.LANCHOR0
 914              		.cfi_endproc
 915              	.LFE27:
 916              		.size	CyDelayUs, .-CyDelayUs
 917              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 918              		.align	1
 919              		.global	CySysClkWriteImoFreq
 920              		.code	16
 921              		.thumb_func
 922              		.type	CySysClkWriteImoFreq, %function
 923              	CySysClkWriteImoFreq:
 924              	.LFB5:
 623:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 925              		.loc 1 623 0
 926              		.cfi_startproc
 927              	.LVL62:
 928 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 929              		.cfi_def_cfa_offset 20
 930              		.cfi_offset 4, -20
 931              		.cfi_offset 5, -16
 932              		.cfi_offset 6, -12
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 051C     		mov	r5, r0
 936 0004 87B0     		sub	sp, sp, #28
 937              		.cfi_def_cfa_offset 48
 646:.\Generated_Source\PSoC4/CyLib.c **** 
 938              		.loc 1 646 0
 939 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 940              	.LVL63:
 696:.\Generated_Source\PSoC4/CyLib.c ****         {
 941              		.loc 1 696 0
 942 000a EB1E     		sub	r3, r5, #3
 646:.\Generated_Source\PSoC4/CyLib.c **** 
 943              		.loc 1 646 0
 944 000c 0490     		str	r0, [sp, #16]
 945              	.LVL64:
 696:.\Generated_Source\PSoC4/CyLib.c ****         {
 946              		.loc 1 696 0
 947 000e 0393     		str	r3, [sp, #12]
 948 0010 2D2B     		cmp	r3, #45
 949 0012 5BD8     		bhi	.L79
 698:.\Generated_Source\PSoC4/CyLib.c ****             {
 950              		.loc 1 698 0
 951 0014 304B     		ldr	r3, .L90
 952 0016 1B78     		ldrb	r3, [r3]
 953 0018 9D42     		cmp	r5, r3
 954 001a 04D8     		bhi	.L80
 700:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 955              		.loc 1 700 0
 956 001c 2F4B     		ldr	r3, .L90+4
 957 001e 1C78     		ldrb	r4, [r3]
 701:.\Generated_Source\PSoC4/CyLib.c ****             }
 958              		.loc 1 701 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 64


 959 0020 2F4B     		ldr	r3, .L90+8
 700:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 960              		.loc 1 700 0
 961 0022 E4B2     		uxtb	r4, r4
 962              	.LVL65:
 963 0024 1EE0     		b	.L88
 964              	.LVL66:
 965              	.L80:
 703:.\Generated_Source\PSoC4/CyLib.c ****             {
 966              		.loc 1 703 0
 967 0026 2F4B     		ldr	r3, .L90+12
 968 0028 1B78     		ldrb	r3, [r3]
 969 002a 9D42     		cmp	r5, r3
 970 002c 04D8     		bhi	.L82
 705:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 971              		.loc 1 705 0
 972 002e 2E4B     		ldr	r3, .L90+16
 973 0030 1C78     		ldrb	r4, [r3]
 706:.\Generated_Source\PSoC4/CyLib.c ****             }
 974              		.loc 1 706 0
 975 0032 2E4B     		ldr	r3, .L90+20
 705:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 976              		.loc 1 705 0
 977 0034 E4B2     		uxtb	r4, r4
 978              	.LVL67:
 979 0036 15E0     		b	.L88
 980              	.LVL68:
 981              	.L82:
 708:.\Generated_Source\PSoC4/CyLib.c ****             {
 982              		.loc 1 708 0
 983 0038 2D4B     		ldr	r3, .L90+24
 984 003a 1B78     		ldrb	r3, [r3]
 985 003c 9D42     		cmp	r5, r3
 986 003e 04D8     		bhi	.L83
 710:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 987              		.loc 1 710 0
 988 0040 2C4B     		ldr	r3, .L90+28
 989 0042 1C78     		ldrb	r4, [r3]
 711:.\Generated_Source\PSoC4/CyLib.c ****             }
 990              		.loc 1 711 0
 991 0044 2C4B     		ldr	r3, .L90+32
 710:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 992              		.loc 1 710 0
 993 0046 E4B2     		uxtb	r4, r4
 994              	.LVL69:
 995 0048 0CE0     		b	.L88
 996              	.LVL70:
 997              	.L83:
 713:.\Generated_Source\PSoC4/CyLib.c ****             {
 998              		.loc 1 713 0
 999 004a 2C4B     		ldr	r3, .L90+36
 1000 004c 1B78     		ldrb	r3, [r3]
 1001 004e 9D42     		cmp	r5, r3
 1002 0050 04D8     		bhi	.L84
 715:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1003              		.loc 1 715 0
 1004 0052 2B4B     		ldr	r3, .L90+40
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 65


 1005 0054 1C78     		ldrb	r4, [r3]
 716:.\Generated_Source\PSoC4/CyLib.c ****             }
 1006              		.loc 1 716 0
 1007 0056 2B4B     		ldr	r3, .L90+44
 715:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1008              		.loc 1 715 0
 1009 0058 E4B2     		uxtb	r4, r4
 1010              	.LVL71:
 1011 005a 03E0     		b	.L88
 1012              	.LVL72:
 1013              	.L84:
 720:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1014              		.loc 1 720 0
 1015 005c 2A4B     		ldr	r3, .L90+48
 1016 005e 1C78     		ldrb	r4, [r3]
 721:.\Generated_Source\PSoC4/CyLib.c ****             }
 1017              		.loc 1 721 0
 1018 0060 2A4B     		ldr	r3, .L90+52
 720:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1019              		.loc 1 720 0
 1020 0062 E4B2     		uxtb	r4, r4
 1021              	.LVL73:
 1022              	.L88:
 721:.\Generated_Source\PSoC4/CyLib.c ****             }
 1023              		.loc 1 721 0
 1024 0064 1B78     		ldrb	r3, [r3]
 725:.\Generated_Source\PSoC4/CyLib.c **** 
 1025              		.loc 1 725 0
 1026 0066 039A     		ldr	r2, [sp, #12]
 721:.\Generated_Source\PSoC4/CyLib.c ****             }
 1027              		.loc 1 721 0
 1028 0068 DBB2     		uxtb	r3, r3
 1029 006a 0193     		str	r3, [sp, #4]
 1030              	.LVL74:
 725:.\Generated_Source\PSoC4/CyLib.c **** 
 1031              		.loc 1 725 0
 1032 006c 284B     		ldr	r3, .L90+56
 1033 006e 294F     		ldr	r7, .L90+60
 1034 0070 9A5C     		ldrb	r2, [r3, r2]
 1035 0072 0593     		str	r3, [sp, #20]
 1036 0074 0292     		str	r2, [sp, #8]
 1037              	.LVL75:
 737:.\Generated_Source\PSoC4/CyLib.c ****             {
 1038              		.loc 1 737 0
 1039 0076 2F2A     		cmp	r2, #47
 1040 0078 04D9     		bls	.L85
 737:.\Generated_Source\PSoC4/CyLib.c ****             {
 1041              		.loc 1 737 0 is_stmt 0 discriminator 1
 1042 007a 2A2D     		cmp	r5, #42
 1043 007c 02D9     		bls	.L85
 740:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1044              		.loc 1 740 0 is_stmt 1
 1045 007e 1926     		mov	r6, #25
 1046 0080 3E60     		str	r6, [r7]
 1047 0082 08E0     		b	.L89
 1048              	.L85:
 749:.\Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 66


 1049              		.loc 1 749 0
 1050 0084 3F23     		mov	r3, #63
 1051 0086 3E68     		ldr	r6, [r7]
 1052 0088 1E40     		and	r6, r3
 1053              	.LVL76:
 761:.\Generated_Source\PSoC4/CyLib.c ****             {
 1054              		.loc 1 761 0
 1055 008a 029B     		ldr	r3, [sp, #8]
 1056 008c B342     		cmp	r3, r6
 1057 008e 05D2     		bcs	.L86
 764:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1058              		.loc 1 764 0
 1059 0090 204B     		ldr	r3, .L90+60
 1060 0092 029A     		ldr	r2, [sp, #8]
 1061 0094 1A60     		str	r2, [r3]
 1062              	.LVL77:
 1063              	.L89:
 765:.\Generated_Source\PSoC4/CyLib.c ****             }
 1064              		.loc 1 765 0
 1065 0096 0520     		mov	r0, #5
 1066 0098 FFF7FEFF 		bl	CyDelayCycles
 1067              	.LVL78:
 1068              	.L86:
 784:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1069              		.loc 1 784 0
 1070 009c 1B4B     		ldr	r3, .L90+52
 788:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1071              		.loc 1 788 0
 1072 009e 1E4A     		ldr	r2, .L90+64
 784:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1073              		.loc 1 784 0
 1074 00a0 ED18     		add	r5, r5, r3
 1075              	.LVL79:
 1076 00a2 2B78     		ldrb	r3, [r5]
 791:.\Generated_Source\PSoC4/CyLib.c **** 
 1077              		.loc 1 791 0
 1078 00a4 0520     		mov	r0, #5
 784:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1079              		.loc 1 784 0
 1080 00a6 DBB2     		uxtb	r3, r3
 1081              	.LVL80:
 788:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1082              		.loc 1 788 0
 1083 00a8 1360     		str	r3, [r2]
 789:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1084              		.loc 1 789 0
 1085 00aa 1C4B     		ldr	r3, .L90+68
 1086              	.LVL81:
 790:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1087              		.loc 1 790 0
 1088 00ac 019A     		ldr	r2, [sp, #4]
 1089              	.LVL82:
 789:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1090              		.loc 1 789 0
 1091 00ae 1C60     		str	r4, [r3]
 1092              	.LVL83:
 790:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 67


 1093              		.loc 1 790 0
 1094 00b0 1B4B     		ldr	r3, .L90+72
 1095 00b2 1A60     		str	r2, [r3]
 791:.\Generated_Source\PSoC4/CyLib.c **** 
 1096              		.loc 1 791 0
 1097 00b4 FFF7FEFF 		bl	CyDelayUs
 1098              	.LVL84:
 793:.\Generated_Source\PSoC4/CyLib.c ****             {
 1099              		.loc 1 793 0
 1100 00b8 029B     		ldr	r3, [sp, #8]
 1101 00ba B342     		cmp	r3, r6
 1102 00bc 06D9     		bls	.L79
 796:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1103              		.loc 1 796 0
 1104 00be 059B     		ldr	r3, [sp, #20]
 1105 00c0 039A     		ldr	r2, [sp, #12]
 797:.\Generated_Source\PSoC4/CyLib.c ****             }
 1106              		.loc 1 797 0
 1107 00c2 0520     		mov	r0, #5
 796:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1108              		.loc 1 796 0
 1109 00c4 9B5C     		ldrb	r3, [r3, r2]
 1110 00c6 3B60     		str	r3, [r7]
 797:.\Generated_Source\PSoC4/CyLib.c ****             }
 1111              		.loc 1 797 0
 1112 00c8 FFF7FEFF 		bl	CyDelayCycles
 1113              	.LVL85:
 1114              	.L79:
 822:.\Generated_Source\PSoC4/CyLib.c ****     }
 1115              		.loc 1 822 0
 1116 00cc 0498     		ldr	r0, [sp, #16]
 1117 00ce FFF7FEFF 		bl	CyExitCriticalSection
 1118              	.LVL86:
 823:.\Generated_Source\PSoC4/CyLib.c **** 
 1119              		.loc 1 823 0
 1120 00d2 07B0     		add	sp, sp, #28
 1121              		@ sp needed
 1122 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1123              	.L91:
 1124 00d6 C046     		.align	2
 1125              	.L90:
 1126 00d8 C0F1FF0F 		.word	268431808
 1127 00dc C1F1FF0F 		.word	268431809
 1128 00e0 C2F1FF0F 		.word	268431810
 1129 00e4 C3F1FF0F 		.word	268431811
 1130 00e8 C4F1FF0F 		.word	268431812
 1131 00ec C5F1FF0F 		.word	268431813
 1132 00f0 C6F1FF0F 		.word	268431814
 1133 00f4 C7F1FF0F 		.word	268431815
 1134 00f8 C8F1FF0F 		.word	268431816
 1135 00fc C9F1FF0F 		.word	268431817
 1136 0100 CAF1FF0F 		.word	268431818
 1137 0104 CBF1FF0F 		.word	268431819
 1138 0108 CCF1FF0F 		.word	268431820
 1139 010c CDF1FF0F 		.word	268431821
 1140 0110 00000000 		.word	.LANCHOR1
 1141 0114 2CFF0B40 		.word	1074528044
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 68


 1142 0118 28FF0B40 		.word	1074528040
 1143 011c 1CFF0B40 		.word	1074528028
 1144 0120 20FF0B40 		.word	1074528032
 1145              		.cfi_endproc
 1146              	.LFE5:
 1147              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1148              		.section	.text.CySysLvdEnable,"ax",%progbits
 1149              		.align	1
 1150              		.global	CySysLvdEnable
 1151              		.code	16
 1152              		.thumb_func
 1153              		.type	CySysLvdEnable, %function
 1154              	CySysLvdEnable:
 1155              	.LFB6:
2027:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1156              		.loc 1 2027 0
 1157              		.cfi_startproc
 1158              	.LVL87:
 1159 0000 38B5     		push	{r3, r4, r5, lr}
 1160              		.cfi_def_cfa_offset 16
 1161              		.cfi_offset 3, -16
 1162              		.cfi_offset 4, -12
 1163              		.cfi_offset 5, -8
 1164              		.cfi_offset 14, -4
2029:.\Generated_Source\PSoC4/CyLib.c **** 
 1165              		.loc 1 2029 0
 1166 0002 0225     		mov	r5, #2
2033:.\Generated_Source\PSoC4/CyLib.c **** 
 1167              		.loc 1 2033 0
 1168 0004 1E21     		mov	r1, #30
2029:.\Generated_Source\PSoC4/CyLib.c **** 
 1169              		.loc 1 2029 0
 1170 0006 0C4C     		ldr	r4, .L93
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1171              		.loc 1 2032 0
 1172 0008 0C4A     		ldr	r2, .L93+4
2029:.\Generated_Source\PSoC4/CyLib.c **** 
 1173              		.loc 1 2029 0
 1174 000a 2368     		ldr	r3, [r4]
2033:.\Generated_Source\PSoC4/CyLib.c **** 
 1175              		.loc 1 2033 0
 1176 000c 4000     		lsl	r0, r0, #1
 1177              	.LVL88:
2029:.\Generated_Source\PSoC4/CyLib.c **** 
 1178              		.loc 1 2029 0
 1179 000e AB43     		bic	r3, r5
 1180 0010 2360     		str	r3, [r4]
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1181              		.loc 1 2032 0
 1182 0012 1368     		ldr	r3, [r2]
2033:.\Generated_Source\PSoC4/CyLib.c **** 
 1183              		.loc 1 2033 0
 1184 0014 0840     		and	r0, r1
2032:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1185              		.loc 1 2032 0
 1186 0016 8B43     		bic	r3, r1
 1187 0018 1843     		orr	r0, r3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 69


 1188 001a 1060     		str	r0, [r2]
2039:.\Generated_Source\PSoC4/CyLib.c **** 
 1189              		.loc 1 2039 0
 1190 001c FA20     		mov	r0, #250
2036:.\Generated_Source\PSoC4/CyLib.c **** 
 1191              		.loc 1 2036 0
 1192 001e 1368     		ldr	r3, [r2]
 1193 0020 1D39     		sub	r1, r1, #29
 1194 0022 0B43     		orr	r3, r1
 1195 0024 1360     		str	r3, [r2]
2039:.\Generated_Source\PSoC4/CyLib.c **** 
 1196              		.loc 1 2039 0
 1197 0026 8000     		lsl	r0, r0, #2
 1198 0028 FFF7FEFF 		bl	CyDelayUs
 1199              	.LVL89:
 1200              	.LBB8:
 1201              	.LBB9:
2107:.\Generated_Source\PSoC4/CyLib.c ****     }
 1202              		.loc 1 2107 0
 1203 002c 044B     		ldr	r3, .L93+8
 1204              	.LBE9:
 1205              	.LBE8:
2046:.\Generated_Source\PSoC4/CyLib.c **** 
 1206              		.loc 1 2046 0
 1207              		@ sp needed
 1208              	.LBB11:
 1209              	.LBB10:
2107:.\Generated_Source\PSoC4/CyLib.c ****     }
 1210              		.loc 1 2107 0
 1211 002e 1D60     		str	r5, [r3]
 1212              	.LBE10:
 1213              	.LBE11:
2045:.\Generated_Source\PSoC4/CyLib.c ****     }
 1214              		.loc 1 2045 0
 1215 0030 2368     		ldr	r3, [r4]
 1216 0032 1D43     		orr	r5, r3
 1217 0034 2560     		str	r5, [r4]
2046:.\Generated_Source\PSoC4/CyLib.c **** 
 1218              		.loc 1 2046 0
 1219 0036 38BD     		pop	{r3, r4, r5, pc}
 1220              	.L94:
 1221              		.align	2
 1222              	.L93:
 1223 0038 08000B40 		.word	1074462728
 1224 003c 18000B40 		.word	1074462744
 1225 0040 04000B40 		.word	1074462724
 1226              		.cfi_endproc
 1227              	.LFE6:
 1228              		.size	CySysLvdEnable, .-CySysLvdEnable
 1229              		.global	__aeabi_uidiv
 1230              		.section	.text.CyDelayFreq,"ax",%progbits
 1231              		.align	1
 1232              		.global	CyDelayFreq
 1233              		.code	16
 1234              		.thumb_func
 1235              		.type	CyDelayFreq, %function
 1236              	CyDelayFreq:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 70


 1237              	.LFB28:
2583:.\Generated_Source\PSoC4/CyLib.c **** 
2584:.\Generated_Source\PSoC4/CyLib.c **** 
2585:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2586:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2587:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2588:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2589:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2590:.\Generated_Source\PSoC4/CyLib.c **** *
2591:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2592:.\Generated_Source\PSoC4/CyLib.c **** *  freq: Frequency of bus clock in Hertz.
2593:.\Generated_Source\PSoC4/CyLib.c **** *
2594:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2595:.\Generated_Source\PSoC4/CyLib.c **** *  None
2596:.\Generated_Source\PSoC4/CyLib.c **** *
2597:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2598:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2599:.\Generated_Source\PSoC4/CyLib.c **** {
 1238              		.loc 1 2599 0
 1239              		.cfi_startproc
 1240              	.LVL90:
 1241 0000 38B5     		push	{r3, r4, r5, lr}
 1242              		.cfi_def_cfa_offset 16
 1243              		.cfi_offset 3, -16
 1244              		.cfi_offset 4, -12
 1245              		.cfi_offset 5, -8
 1246              		.cfi_offset 14, -4
 1247 0002 0C4C     		ldr	r4, .L98
2600:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1248              		.loc 1 2600 0
 1249 0004 0028     		cmp	r0, #0
 1250 0006 01D0     		beq	.L96
2601:.\Generated_Source\PSoC4/CyLib.c ****     {
2602:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1251              		.loc 1 2602 0
 1252 0008 E060     		str	r0, [r4, #12]
 1253 000a 01E0     		b	.L97
 1254              	.L96:
2603:.\Generated_Source\PSoC4/CyLib.c ****     }
2604:.\Generated_Source\PSoC4/CyLib.c ****     else
2605:.\Generated_Source\PSoC4/CyLib.c ****     {
2606:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1255              		.loc 1 2606 0
 1256 000c 0A4B     		ldr	r3, .L98+4
 1257 000e E360     		str	r3, [r4, #12]
 1258              	.L97:
2607:.\Generated_Source\PSoC4/CyLib.c ****     }
2608:.\Generated_Source\PSoC4/CyLib.c **** 
2609:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1259              		.loc 1 2609 0
 1260 0010 E568     		ldr	r5, [r4, #12]
 1261 0012 0A4B     		ldr	r3, .L98+8
 1262 0014 0A49     		ldr	r1, .L98+12
 1263 0016 E818     		add	r0, r5, r3
 1264              	.LVL91:
 1265 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1266              	.LVL92:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 71


2610:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1267              		.loc 1 2610 0
 1268 001c FA21     		mov	r1, #250
 1269 001e 094B     		ldr	r3, .L98+16
2609:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1270              		.loc 1 2609 0
 1271 0020 2072     		strb	r0, [r4, #8]
 1272              		.loc 1 2610 0
 1273 0022 8900     		lsl	r1, r1, #2
 1274 0024 E818     		add	r0, r5, r3
 1275 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1276              	.LVL93:
 1277 002a 6060     		str	r0, [r4, #4]
2611:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1278              		.loc 1 2611 0
 1279 002c C003     		lsl	r0, r0, #15
 1280 002e 2060     		str	r0, [r4]
2612:.\Generated_Source\PSoC4/CyLib.c **** }
 1281              		.loc 1 2612 0
 1282              		@ sp needed
 1283 0030 38BD     		pop	{r3, r4, r5, pc}
 1284              	.L99:
 1285 0032 C046     		.align	2
 1286              	.L98:
 1287 0034 00000000 		.word	.LANCHOR0
 1288 0038 006CDC02 		.word	48000000
 1289 003c 3F420F00 		.word	999999
 1290 0040 40420F00 		.word	1000000
 1291 0044 E7030000 		.word	999
 1292              		.cfi_endproc
 1293              	.LFE28:
 1294              		.size	CyDelayFreq, .-CyDelayFreq
 1295              		.section	.text.CySysTickInit,"ax",%progbits
 1296              		.align	1
 1297              		.global	CySysTickInit
 1298              		.code	16
 1299              		.thumb_func
 1300              		.type	CySysTickInit, %function
 1301              	CySysTickInit:
 1302              	.LFB30:
2613:.\Generated_Source\PSoC4/CyLib.c **** 
2614:.\Generated_Source\PSoC4/CyLib.c **** 
2615:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2616:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStart
2617:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2618:.\Generated_Source\PSoC4/CyLib.c **** *
2619:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2620:.\Generated_Source\PSoC4/CyLib.c **** *  Configures the SysTick timer to generate an interrupt every 1 ms and enables
2621:.\Generated_Source\PSoC4/CyLib.c **** *  the interrupt. Refer to the corresponding function description for details.
2622:.\Generated_Source\PSoC4/CyLib.c **** *
2623:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2624:.\Generated_Source\PSoC4/CyLib.c **** *  None
2625:.\Generated_Source\PSoC4/CyLib.c **** *
2626:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2627:.\Generated_Source\PSoC4/CyLib.c **** *  None
2628:.\Generated_Source\PSoC4/CyLib.c **** *
2629:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 72


2630:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2631:.\Generated_Source\PSoC4/CyLib.c **** *
2632:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2633:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2634:.\Generated_Source\PSoC4/CyLib.c **** {
2635:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2636:.\Generated_Source\PSoC4/CyLib.c ****     {
2637:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2638:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2639:.\Generated_Source\PSoC4/CyLib.c ****     }
2640:.\Generated_Source\PSoC4/CyLib.c **** 
2641:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2642:.\Generated_Source\PSoC4/CyLib.c **** }
2643:.\Generated_Source\PSoC4/CyLib.c **** 
2644:.\Generated_Source\PSoC4/CyLib.c **** 
2645:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2646:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2647:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2648:.\Generated_Source\PSoC4/CyLib.c **** *
2649:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Initializes the callback addresses with pointers to NULL, associates the
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  SysTick system vector with the function that is responsible for calling
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  registered callback functions, configures SysTick timer to generate interrupt
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  every 1 ms.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2657:.\Generated_Source\PSoC4/CyLib.c ****     *
2658:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2660:.\Generated_Source\PSoC4/CyLib.c ****     *
2661:.\Generated_Source\PSoC4/CyLib.c ****     * Side Effects:
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set.
2663:.\Generated_Source\PSoC4/CyLib.c ****     *
2664:.\Generated_Source\PSoC4/CyLib.c ****     *  The 1 ms interrupt interval is configured based on the frequency determined
2665:.\Generated_Source\PSoC4/CyLib.c ****     *  by PSoC Creator at build time. If System clock frequency is changed in
2666:.\Generated_Source\PSoC4/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2667:.\Generated_Source\PSoC4/CyLib.c ****     *
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickInit(void)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
 1303              		.loc 1 2670 0
 1304              		.cfi_startproc
 1305              	.LVL94:
 1306 0000 10B5     		push	{r4, lr}
 1307              		.cfi_def_cfa_offset 8
 1308              		.cfi_offset 4, -8
 1309              		.cfi_offset 14, -4
2671:.\Generated_Source\PSoC4/CyLib.c ****         uint32 i;
2672:.\Generated_Source\PSoC4/CyLib.c **** 
2673:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2674:.\Generated_Source\PSoC4/CyLib.c ****     {
2675:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1310              		.loc 1 2675 0
 1311 0002 0024     		mov	r4, #0
2676:.\Generated_Source\PSoC4/CyLib.c ****     }
2677:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 73


2678:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2679:.\Generated_Source\PSoC4/CyLib.c **** 
2680:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2681:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2682:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2683:.\Generated_Source\PSoC4/CyLib.c **** 
2684:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1312              		.loc 1 2684 0
 1313 0004 FA21     		mov	r1, #250
2675:.\Generated_Source\PSoC4/CyLib.c ****     }
 1314              		.loc 1 2675 0
 1315 0006 0B4B     		ldr	r3, .L101
 1316              	.LBB20:
 1317              	.LBB21:
2227:.\Generated_Source\PSoC4/CyLib.c **** 
 1318              		.loc 1 2227 0
 1319 0008 0B4A     		ldr	r2, .L101+4
 1320              	.LBE21:
 1321              	.LBE20:
2675:.\Generated_Source\PSoC4/CyLib.c ****     }
 1322              		.loc 1 2675 0
 1323 000a 1C60     		str	r4, [r3]
 1324              	.LVL95:
 1325 000c DC60     		str	r4, [r3, #12]
 1326 000e 5C60     		str	r4, [r3, #4]
 1327              	.LVL96:
 1328 0010 9C60     		str	r4, [r3, #8]
 1329              	.LVL97:
 1330 0012 1C61     		str	r4, [r3, #16]
 1331              	.LVL98:
 1332              	.LBB24:
 1333              	.LBB22:
2227:.\Generated_Source\PSoC4/CyLib.c **** 
 1334              		.loc 1 2227 0
 1335 0014 094B     		ldr	r3, .L101+8
 1336              	.LVL99:
 1337              	.LBE22:
 1338              	.LBE24:
 1339              		.loc 1 2684 0
 1340 0016 8900     		lsl	r1, r1, #2
 1341              	.LBB25:
 1342              	.LBB23:
2227:.\Generated_Source\PSoC4/CyLib.c **** 
 1343              		.loc 1 2227 0
 1344 0018 1A60     		str	r2, [r3]
 1345              	.LVL100:
 1346              	.LBE23:
 1347              	.LBE25:
 1348              		.loc 1 2684 0
 1349 001a 094B     		ldr	r3, .L101+12
2685:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2686:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2687:.\Generated_Source\PSoC4/CyLib.c **** }
 1350              		.loc 1 2687 0
 1351              		@ sp needed
2684:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1352              		.loc 1 2684 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 74


 1353 001c D868     		ldr	r0, [r3, #12]
 1354 001e FFF7FEFF 		bl	__aeabi_uidiv
 1355              	.LVL101:
 1356              	.LBB26:
 1357              	.LBB27:
2397:.\Generated_Source\PSoC4/CyLib.c **** }
 1358              		.loc 1 2397 0
 1359 0022 8022     		mov	r2, #128
 1360              	.LBE27:
 1361              	.LBE26:
 1362              	.LBB30:
 1363              	.LBB31:
2688:.\Generated_Source\PSoC4/CyLib.c **** 
2689:.\Generated_Source\PSoC4/CyLib.c **** 
2690:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2691:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2692:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2698:.\Generated_Source\PSoC4/CyLib.c **** *  None
2699:.\Generated_Source\PSoC4/CyLib.c **** *
2700:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2701:.\Generated_Source\PSoC4/CyLib.c **** *  None
2702:.\Generated_Source\PSoC4/CyLib.c **** *
2703:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2704:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2705:.\Generated_Source\PSoC4/CyLib.c **** *
2706:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2707:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2708:.\Generated_Source\PSoC4/CyLib.c **** {
2709:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2710:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2711:.\Generated_Source\PSoC4/CyLib.c **** }
2712:.\Generated_Source\PSoC4/CyLib.c **** 
2713:.\Generated_Source\PSoC4/CyLib.c **** 
2714:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2715:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2716:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2717:.\Generated_Source\PSoC4/CyLib.c **** *
2718:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2719:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2722:.\Generated_Source\PSoC4/CyLib.c **** *  None
2723:.\Generated_Source\PSoC4/CyLib.c **** *
2724:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2725:.\Generated_Source\PSoC4/CyLib.c **** *  None
2726:.\Generated_Source\PSoC4/CyLib.c **** *
2727:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2729:.\Generated_Source\PSoC4/CyLib.c **** *
2730:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2731:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2732:.\Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 75


2733:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2734:.\Generated_Source\PSoC4/CyLib.c **** }
2735:.\Generated_Source\PSoC4/CyLib.c **** 
2736:.\Generated_Source\PSoC4/CyLib.c **** 
2737:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2738:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2739:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2740:.\Generated_Source\PSoC4/CyLib.c **** *
2741:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2742:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2743:.\Generated_Source\PSoC4/CyLib.c **** *
2744:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2745:.\Generated_Source\PSoC4/CyLib.c **** *  None
2746:.\Generated_Source\PSoC4/CyLib.c **** *
2747:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2748:.\Generated_Source\PSoC4/CyLib.c **** *  None
2749:.\Generated_Source\PSoC4/CyLib.c **** *
2750:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2751:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2752:.\Generated_Source\PSoC4/CyLib.c **** *
2753:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2755:.\Generated_Source\PSoC4/CyLib.c **** {
2756:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2757:.\Generated_Source\PSoC4/CyLib.c **** }
2758:.\Generated_Source\PSoC4/CyLib.c **** 
2759:.\Generated_Source\PSoC4/CyLib.c **** 
2760:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2762:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2763:.\Generated_Source\PSoC4/CyLib.c **** *
2764:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2765:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2766:.\Generated_Source\PSoC4/CyLib.c **** *
2767:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2768:.\Generated_Source\PSoC4/CyLib.c **** *  None
2769:.\Generated_Source\PSoC4/CyLib.c **** *
2770:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2771:.\Generated_Source\PSoC4/CyLib.c **** *  None
2772:.\Generated_Source\PSoC4/CyLib.c **** *
2773:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2774:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2775:.\Generated_Source\PSoC4/CyLib.c **** *
2776:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2777:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2778:.\Generated_Source\PSoC4/CyLib.c **** {
2779:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2780:.\Generated_Source\PSoC4/CyLib.c **** }
2781:.\Generated_Source\PSoC4/CyLib.c **** 
2782:.\Generated_Source\PSoC4/CyLib.c **** 
2783:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2784:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2785:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2786:.\Generated_Source\PSoC4/CyLib.c **** *
2787:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2788:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2789:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 76


2790:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2791:.\Generated_Source\PSoC4/CyLib.c **** *
2792:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2793:.\Generated_Source\PSoC4/CyLib.c **** *  value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2794:.\Generated_Source\PSoC4/CyLib.c **** *
2795:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2796:.\Generated_Source\PSoC4/CyLib.c **** *  None
2797:.\Generated_Source\PSoC4/CyLib.c **** *
2798:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2799:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2800:.\Generated_Source\PSoC4/CyLib.c **** {
2801:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1364              		.loc 1 2801 0
 1365 0024 074B     		ldr	r3, .L101+16
 1366              	.LBE31:
 1367              	.LBE30:
 1368              	.LBB33:
 1369              	.LBB28:
2397:.\Generated_Source\PSoC4/CyLib.c **** }
 1370              		.loc 1 2397 0
 1371 0026 1202     		lsl	r2, r2, #8
 1372              	.LBE28:
 1373              	.LBE33:
 1374              	.LBB34:
 1375              	.LBB32:
 1376              		.loc 1 2801 0
 1377 0028 1860     		str	r0, [r3]
 1378              	.LBE32:
 1379              	.LBE34:
 1380              	.LBB35:
 1381              	.LBB36:
2802:.\Generated_Source\PSoC4/CyLib.c **** }
2803:.\Generated_Source\PSoC4/CyLib.c **** 
2804:.\Generated_Source\PSoC4/CyLib.c **** 
2805:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2806:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2807:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2808:.\Generated_Source\PSoC4/CyLib.c **** *
2809:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2810:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero.
2811:.\Generated_Source\PSoC4/CyLib.c **** *
2812:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2813:.\Generated_Source\PSoC4/CyLib.c **** *  None
2814:.\Generated_Source\PSoC4/CyLib.c **** *
2815:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2816:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2817:.\Generated_Source\PSoC4/CyLib.c **** *
2818:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2819:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2820:.\Generated_Source\PSoC4/CyLib.c **** {
2821:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2822:.\Generated_Source\PSoC4/CyLib.c **** }
2823:.\Generated_Source\PSoC4/CyLib.c **** 
2824:.\Generated_Source\PSoC4/CyLib.c **** 
2825:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2826:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2827:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 77


2828:.\Generated_Source\PSoC4/CyLib.c **** *
2829:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2830:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2831:.\Generated_Source\PSoC4/CyLib.c **** *
2832:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2833:.\Generated_Source\PSoC4/CyLib.c **** *  None
2834:.\Generated_Source\PSoC4/CyLib.c **** *
2835:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2836:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2837:.\Generated_Source\PSoC4/CyLib.c **** *
2838:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2839:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2840:.\Generated_Source\PSoC4/CyLib.c **** {
2841:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2842:.\Generated_Source\PSoC4/CyLib.c **** }
2843:.\Generated_Source\PSoC4/CyLib.c **** 
2844:.\Generated_Source\PSoC4/CyLib.c **** 
2845:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2846:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2847:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2848:.\Generated_Source\PSoC4/CyLib.c ****     ********************************************************************************
2849:.\Generated_Source\PSoC4/CyLib.c ****     *
2850:.\Generated_Source\PSoC4/CyLib.c ****     * Summary:
2851:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2852:.\Generated_Source\PSoC4/CyLib.c ****     *
2853:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2854:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2855:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2856:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2857:.\Generated_Source\PSoC4/CyLib.c ****     *
2858:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2859:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2860:.\Generated_Source\PSoC4/CyLib.c ****     *
2861:.\Generated_Source\PSoC4/CyLib.c ****     * Parameters:
2862:.\Generated_Source\PSoC4/CyLib.c ****     *  clockSource: Clock source for SysTick counter
2863:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2864:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2865:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2866:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2867:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2868:.\Generated_Source\PSoC4/CyLib.c ****     *
2869:.\Generated_Source\PSoC4/CyLib.c ****     * Return:
2870:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2871:.\Generated_Source\PSoC4/CyLib.c ****     *
2872:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2873:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2874:.\Generated_Source\PSoC4/CyLib.c ****     {
2875:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2876:.\Generated_Source\PSoC4/CyLib.c ****         {
2877:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2878:.\Generated_Source\PSoC4/CyLib.c ****         }
2879:.\Generated_Source\PSoC4/CyLib.c ****         else
2880:.\Generated_Source\PSoC4/CyLib.c ****         {
2881:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2882:.\Generated_Source\PSoC4/CyLib.c ****         }
2883:.\Generated_Source\PSoC4/CyLib.c ****     }
2884:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 78


2885:.\Generated_Source\PSoC4/CyLib.c **** 
2886:.\Generated_Source\PSoC4/CyLib.c **** 
2887:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2888:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2889:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2890:.\Generated_Source\PSoC4/CyLib.c **** *
2891:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2892:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2893:.\Generated_Source\PSoC4/CyLib.c **** *   The flag cleared on read.
2894:.\Generated_Source\PSoC4/CyLib.c **** *
2895:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2896:.\Generated_Source\PSoC4/CyLib.c **** *  None
2897:.\Generated_Source\PSoC4/CyLib.c **** *
2898:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2899:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2900:.\Generated_Source\PSoC4/CyLib.c **** *
2901:.\Generated_Source\PSoC4/CyLib.c **** *
2902:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2903:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2904:.\Generated_Source\PSoC4/CyLib.c **** *
2905:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2906:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2907:.\Generated_Source\PSoC4/CyLib.c **** {
2908:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2909:.\Generated_Source\PSoC4/CyLib.c **** }
2910:.\Generated_Source\PSoC4/CyLib.c **** 
2911:.\Generated_Source\PSoC4/CyLib.c **** 
2912:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2913:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2914:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2915:.\Generated_Source\PSoC4/CyLib.c **** *
2916:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2917:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2918:.\Generated_Source\PSoC4/CyLib.c **** *
2919:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2920:.\Generated_Source\PSoC4/CyLib.c **** *  None
2921:.\Generated_Source\PSoC4/CyLib.c **** *
2922:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2923:.\Generated_Source\PSoC4/CyLib.c **** *  None
2924:.\Generated_Source\PSoC4/CyLib.c **** *
2925:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2927:.\Generated_Source\PSoC4/CyLib.c **** {
2928:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1382              		.loc 1 2928 0
 1383 002a 074B     		ldr	r3, .L101+20
 1384 002c 1C60     		str	r4, [r3]
 1385              	.LVL102:
 1386              	.LBE36:
 1387              	.LBE35:
 1388              	.LBB37:
 1389              	.LBB29:
2397:.\Generated_Source\PSoC4/CyLib.c **** }
 1390              		.loc 1 2397 0
 1391 002e 074B     		ldr	r3, .L101+24
 1392 0030 1A60     		str	r2, [r3]
 1393              	.LBE29:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 79


 1394              	.LBE37:
2687:.\Generated_Source\PSoC4/CyLib.c **** 
 1395              		.loc 1 2687 0
 1396 0032 10BD     		pop	{r4, pc}
 1397              	.L102:
 1398              		.align	2
 1399              	.L101:
 1400 0034 00000000 		.word	.LANCHOR2
 1401 0038 00000000 		.word	CySysTickServiceCallbacks
 1402 003c 3C000020 		.word	536870972
 1403 0040 00000000 		.word	.LANCHOR0
 1404 0044 14E000E0 		.word	-536813548
 1405 0048 18E000E0 		.word	-536813544
 1406 004c 00E100E0 		.word	-536813312
 1407              		.cfi_endproc
 1408              	.LFE30:
 1409              		.size	CySysTickInit, .-CySysTickInit
 1410              		.section	.text.CySysTickStop,"ax",%progbits
 1411              		.align	1
 1412              		.global	CySysTickStop
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	CySysTickStop, %function
 1416              	CySysTickStop:
 1417              	.LFB32:
2732:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1418              		.loc 1 2732 0
 1419              		.cfi_startproc
2733:.\Generated_Source\PSoC4/CyLib.c **** }
 1420              		.loc 1 2733 0
 1421 0000 0121     		mov	r1, #1
 1422 0002 024A     		ldr	r2, .L104
2734:.\Generated_Source\PSoC4/CyLib.c **** 
 1423              		.loc 1 2734 0
 1424              		@ sp needed
2733:.\Generated_Source\PSoC4/CyLib.c **** }
 1425              		.loc 1 2733 0
 1426 0004 1368     		ldr	r3, [r2]
 1427 0006 8B43     		bic	r3, r1
 1428 0008 1360     		str	r3, [r2]
2734:.\Generated_Source\PSoC4/CyLib.c **** 
 1429              		.loc 1 2734 0
 1430 000a 7047     		bx	lr
 1431              	.L105:
 1432              		.align	2
 1433              	.L104:
 1434 000c 10E000E0 		.word	-536813552
 1435              		.cfi_endproc
 1436              	.LFE32:
 1437              		.size	CySysTickStop, .-CySysTickStop
 1438              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1439              		.align	1
 1440              		.global	CySysTickEnableInterrupt
 1441              		.code	16
 1442              		.thumb_func
 1443              		.type	CySysTickEnableInterrupt, %function
 1444              	CySysTickEnableInterrupt:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 80


 1445              	.LFB33:
2755:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1446              		.loc 1 2755 0
 1447              		.cfi_startproc
2756:.\Generated_Source\PSoC4/CyLib.c **** }
 1448              		.loc 1 2756 0
 1449 0000 0221     		mov	r1, #2
 1450 0002 024A     		ldr	r2, .L107
2757:.\Generated_Source\PSoC4/CyLib.c **** 
 1451              		.loc 1 2757 0
 1452              		@ sp needed
2756:.\Generated_Source\PSoC4/CyLib.c **** }
 1453              		.loc 1 2756 0
 1454 0004 1368     		ldr	r3, [r2]
 1455 0006 0B43     		orr	r3, r1
 1456 0008 1360     		str	r3, [r2]
2757:.\Generated_Source\PSoC4/CyLib.c **** 
 1457              		.loc 1 2757 0
 1458 000a 7047     		bx	lr
 1459              	.L108:
 1460              		.align	2
 1461              	.L107:
 1462 000c 10E000E0 		.word	-536813552
 1463              		.cfi_endproc
 1464              	.LFE33:
 1465              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1466              		.section	.text.CySysTickEnable,"ax",%progbits
 1467              		.align	1
 1468              		.global	CySysTickEnable
 1469              		.code	16
 1470              		.thumb_func
 1471              		.type	CySysTickEnable, %function
 1472              	CySysTickEnable:
 1473              	.LFB31:
2708:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1474              		.loc 1 2708 0
 1475              		.cfi_startproc
 1476 0000 08B5     		push	{r3, lr}
 1477              		.cfi_def_cfa_offset 8
 1478              		.cfi_offset 3, -8
 1479              		.cfi_offset 14, -4
2709:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1480              		.loc 1 2709 0
 1481 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1482              	.LVL103:
2710:.\Generated_Source\PSoC4/CyLib.c **** }
 1483              		.loc 1 2710 0
 1484 0006 0121     		mov	r1, #1
 1485 0008 024A     		ldr	r2, .L110
2711:.\Generated_Source\PSoC4/CyLib.c **** 
 1486              		.loc 1 2711 0
 1487              		@ sp needed
2710:.\Generated_Source\PSoC4/CyLib.c **** }
 1488              		.loc 1 2710 0
 1489 000a 1368     		ldr	r3, [r2]
 1490 000c 0B43     		orr	r3, r1
 1491 000e 1360     		str	r3, [r2]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 81


2711:.\Generated_Source\PSoC4/CyLib.c **** 
 1492              		.loc 1 2711 0
 1493 0010 08BD     		pop	{r3, pc}
 1494              	.L111:
 1495 0012 C046     		.align	2
 1496              	.L110:
 1497 0014 10E000E0 		.word	-536813552
 1498              		.cfi_endproc
 1499              	.LFE31:
 1500              		.size	CySysTickEnable, .-CySysTickEnable
 1501              		.section	.text.CySysTickStart,"ax",%progbits
 1502              		.align	1
 1503              		.global	CySysTickStart
 1504              		.code	16
 1505              		.thumb_func
 1506              		.type	CySysTickStart, %function
 1507              	CySysTickStart:
 1508              	.LFB29:
2634:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1509              		.loc 1 2634 0
 1510              		.cfi_startproc
 1511 0000 10B5     		push	{r4, lr}
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 4, -8
 1514              		.cfi_offset 14, -4
2635:.\Generated_Source\PSoC4/CyLib.c ****     {
 1515              		.loc 1 2635 0
 1516 0002 054C     		ldr	r4, .L114
 1517 0004 6369     		ldr	r3, [r4, #20]
 1518 0006 002B     		cmp	r3, #0
 1519 0008 03D1     		bne	.L113
2637:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1520              		.loc 1 2637 0
 1521 000a FFF7FEFF 		bl	CySysTickInit
 1522              	.LVL104:
2638:.\Generated_Source\PSoC4/CyLib.c ****     }
 1523              		.loc 1 2638 0
 1524 000e 0123     		mov	r3, #1
 1525 0010 6361     		str	r3, [r4, #20]
 1526              	.L113:
2641:.\Generated_Source\PSoC4/CyLib.c **** }
 1527              		.loc 1 2641 0
 1528 0012 FFF7FEFF 		bl	CySysTickEnable
 1529              	.LVL105:
2642:.\Generated_Source\PSoC4/CyLib.c **** 
 1530              		.loc 1 2642 0
 1531              		@ sp needed
 1532 0016 10BD     		pop	{r4, pc}
 1533              	.L115:
 1534              		.align	2
 1535              	.L114:
 1536 0018 00000000 		.word	.LANCHOR2
 1537              		.cfi_endproc
 1538              	.LFE29:
 1539              		.size	CySysTickStart, .-CySysTickStart
 1540              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1541              		.align	1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 82


 1542              		.global	CySysTickDisableInterrupt
 1543              		.code	16
 1544              		.thumb_func
 1545              		.type	CySysTickDisableInterrupt, %function
 1546              	CySysTickDisableInterrupt:
 1547              	.LFB34:
2778:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1548              		.loc 1 2778 0
 1549              		.cfi_startproc
2779:.\Generated_Source\PSoC4/CyLib.c **** }
 1550              		.loc 1 2779 0
 1551 0000 0221     		mov	r1, #2
 1552 0002 024A     		ldr	r2, .L117
2780:.\Generated_Source\PSoC4/CyLib.c **** 
 1553              		.loc 1 2780 0
 1554              		@ sp needed
2779:.\Generated_Source\PSoC4/CyLib.c **** }
 1555              		.loc 1 2779 0
 1556 0004 1368     		ldr	r3, [r2]
 1557 0006 8B43     		bic	r3, r1
 1558 0008 1360     		str	r3, [r2]
2780:.\Generated_Source\PSoC4/CyLib.c **** 
 1559              		.loc 1 2780 0
 1560 000a 7047     		bx	lr
 1561              	.L118:
 1562              		.align	2
 1563              	.L117:
 1564 000c 10E000E0 		.word	-536813552
 1565              		.cfi_endproc
 1566              	.LFE34:
 1567              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1568              		.section	.text.CySysTickSetReload,"ax",%progbits
 1569              		.align	1
 1570              		.global	CySysTickSetReload
 1571              		.code	16
 1572              		.thumb_func
 1573              		.type	CySysTickSetReload, %function
 1574              	CySysTickSetReload:
 1575              	.LFB35:
2800:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1576              		.loc 1 2800 0
 1577              		.cfi_startproc
 1578              	.LVL106:
2801:.\Generated_Source\PSoC4/CyLib.c **** }
 1579              		.loc 1 2801 0
 1580 0000 024B     		ldr	r3, .L120
 1581 0002 0002     		lsl	r0, r0, #8
 1582              	.LVL107:
 1583 0004 000A     		lsr	r0, r0, #8
 1584 0006 1860     		str	r0, [r3]
2802:.\Generated_Source\PSoC4/CyLib.c **** 
 1585              		.loc 1 2802 0
 1586              		@ sp needed
 1587 0008 7047     		bx	lr
 1588              	.L121:
 1589 000a C046     		.align	2
 1590              	.L120:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 83


 1591 000c 14E000E0 		.word	-536813548
 1592              		.cfi_endproc
 1593              	.LFE35:
 1594              		.size	CySysTickSetReload, .-CySysTickSetReload
 1595              		.section	.text.CySysTickGetReload,"ax",%progbits
 1596              		.align	1
 1597              		.global	CySysTickGetReload
 1598              		.code	16
 1599              		.thumb_func
 1600              		.type	CySysTickGetReload, %function
 1601              	CySysTickGetReload:
 1602              	.LFB36:
2820:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1603              		.loc 1 2820 0
 1604              		.cfi_startproc
2821:.\Generated_Source\PSoC4/CyLib.c **** }
 1605              		.loc 1 2821 0
 1606 0000 024B     		ldr	r3, .L123
2822:.\Generated_Source\PSoC4/CyLib.c **** 
 1607              		.loc 1 2822 0
 1608              		@ sp needed
2821:.\Generated_Source\PSoC4/CyLib.c **** }
 1609              		.loc 1 2821 0
 1610 0002 1868     		ldr	r0, [r3]
 1611 0004 0002     		lsl	r0, r0, #8
 1612 0006 000A     		lsr	r0, r0, #8
2822:.\Generated_Source\PSoC4/CyLib.c **** 
 1613              		.loc 1 2822 0
 1614 0008 7047     		bx	lr
 1615              	.L124:
 1616 000a C046     		.align	2
 1617              	.L123:
 1618 000c 14E000E0 		.word	-536813548
 1619              		.cfi_endproc
 1620              	.LFE36:
 1621              		.size	CySysTickGetReload, .-CySysTickGetReload
 1622              		.section	.text.CySysTickGetValue,"ax",%progbits
 1623              		.align	1
 1624              		.global	CySysTickGetValue
 1625              		.code	16
 1626              		.thumb_func
 1627              		.type	CySysTickGetValue, %function
 1628              	CySysTickGetValue:
 1629              	.LFB37:
2840:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1630              		.loc 1 2840 0
 1631              		.cfi_startproc
2841:.\Generated_Source\PSoC4/CyLib.c **** }
 1632              		.loc 1 2841 0
 1633 0000 024B     		ldr	r3, .L126
2842:.\Generated_Source\PSoC4/CyLib.c **** 
 1634              		.loc 1 2842 0
 1635              		@ sp needed
2841:.\Generated_Source\PSoC4/CyLib.c **** }
 1636              		.loc 1 2841 0
 1637 0002 1868     		ldr	r0, [r3]
 1638 0004 0002     		lsl	r0, r0, #8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 84


 1639 0006 000A     		lsr	r0, r0, #8
2842:.\Generated_Source\PSoC4/CyLib.c **** 
 1640              		.loc 1 2842 0
 1641 0008 7047     		bx	lr
 1642              	.L127:
 1643 000a C046     		.align	2
 1644              	.L126:
 1645 000c 18E000E0 		.word	-536813544
 1646              		.cfi_endproc
 1647              	.LFE37:
 1648              		.size	CySysTickGetValue, .-CySysTickGetValue
 1649              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1650              		.align	1
 1651              		.global	CySysTickGetCountFlag
 1652              		.code	16
 1653              		.thumb_func
 1654              		.type	CySysTickGetCountFlag, %function
 1655              	CySysTickGetCountFlag:
 1656              	.LFB38:
2907:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1657              		.loc 1 2907 0
 1658              		.cfi_startproc
2908:.\Generated_Source\PSoC4/CyLib.c **** }
 1659              		.loc 1 2908 0
 1660 0000 024B     		ldr	r3, .L129
2909:.\Generated_Source\PSoC4/CyLib.c **** 
 1661              		.loc 1 2909 0
 1662              		@ sp needed
2908:.\Generated_Source\PSoC4/CyLib.c **** }
 1663              		.loc 1 2908 0
 1664 0002 1868     		ldr	r0, [r3]
 1665 0004 C003     		lsl	r0, r0, #15
 1666 0006 C00F     		lsr	r0, r0, #31
2909:.\Generated_Source\PSoC4/CyLib.c **** 
 1667              		.loc 1 2909 0
 1668 0008 7047     		bx	lr
 1669              	.L130:
 1670 000a C046     		.align	2
 1671              	.L129:
 1672 000c 10E000E0 		.word	-536813552
 1673              		.cfi_endproc
 1674              	.LFE38:
 1675              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1676              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1677              		.align	1
 1678              		.code	16
 1679              		.thumb_func
 1680              		.type	CySysTickServiceCallbacks, %function
 1681              	CySysTickServiceCallbacks:
 1682              	.LFB42:
2929:.\Generated_Source\PSoC4/CyLib.c **** }
2930:.\Generated_Source\PSoC4/CyLib.c **** 
2931:.\Generated_Source\PSoC4/CyLib.c **** 
2932:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2933:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2934:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2935:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 85


2936:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2937:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2938:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2939:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2940:.\Generated_Source\PSoC4/CyLib.c **** *
2941:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2942:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2943:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2944:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2945:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2946:.\Generated_Source\PSoC4/CyLib.c **** *
2947:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2948:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of the callback function addresses to be set. The valid
2949:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2950:.\Generated_Source\PSoC4/CyLib.c **** *
2951:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2952:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2953:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2954:.\Generated_Source\PSoC4/CyLib.c **** *
2955:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2956:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2957:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2958:.\Generated_Source\PSoC4/CyLib.c **** *
2959:.\Generated_Source\PSoC4/CyLib.c **** * Side Effects:
2960:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2961:.\Generated_Source\PSoC4/CyLib.c **** *
2962:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2963:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2964:.\Generated_Source\PSoC4/CyLib.c **** {
2965:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2966:.\Generated_Source\PSoC4/CyLib.c **** 
2967:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2968:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2969:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2970:.\Generated_Source\PSoC4/CyLib.c **** }
2971:.\Generated_Source\PSoC4/CyLib.c **** 
2972:.\Generated_Source\PSoC4/CyLib.c **** 
2973:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2974:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2975:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2976:.\Generated_Source\PSoC4/CyLib.c **** *
2977:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
2978:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2979:.\Generated_Source\PSoC4/CyLib.c **** *
2980:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
2981:.\Generated_Source\PSoC4/CyLib.c **** *  number: The number of callback function address to get. The valid
2982:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2983:.\Generated_Source\PSoC4/CyLib.c **** *
2984:.\Generated_Source\PSoC4/CyLib.c **** * Return:
2985:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2986:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2987:.\Generated_Source\PSoC4/CyLib.c **** *
2988:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2989:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2990:.\Generated_Source\PSoC4/CyLib.c **** {
2991:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2992:.\Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 86


2993:.\Generated_Source\PSoC4/CyLib.c **** 
2994:.\Generated_Source\PSoC4/CyLib.c **** 
2995:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2996:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2997:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
2998:.\Generated_Source\PSoC4/CyLib.c **** *
2999:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3000:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3001:.\Generated_Source\PSoC4/CyLib.c **** *
3002:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3003:.\Generated_Source\PSoC4/CyLib.c **** *  None
3004:.\Generated_Source\PSoC4/CyLib.c **** *
3005:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3006:.\Generated_Source\PSoC4/CyLib.c **** *  None
3007:.\Generated_Source\PSoC4/CyLib.c **** *
3008:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3009:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3010:.\Generated_Source\PSoC4/CyLib.c **** {
 1683              		.loc 1 3010 0
 1684              		.cfi_startproc
 1685 0000 10B5     		push	{r4, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 4, -8
 1688              		.cfi_offset 14, -4
3011:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3012:.\Generated_Source\PSoC4/CyLib.c **** 
3013:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3014:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1689              		.loc 1 3014 0
 1690 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1691              	.LVL108:
 1692 0006 0128     		cmp	r0, #1
 1693 0008 08D1     		bne	.L131
 1694 000a 0024     		mov	r4, #0
 1695              	.L132:
 1696              	.LBB40:
3015:.\Generated_Source\PSoC4/CyLib.c ****     {
3016:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3017:.\Generated_Source\PSoC4/CyLib.c ****         {
3018:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1697              		.loc 1 3018 0
 1698 000c 044B     		ldr	r3, .L139
 1699 000e E358     		ldr	r3, [r4, r3]
 1700 0010 002B     		cmp	r3, #0
 1701 0012 00D0     		beq	.L133
3019:.\Generated_Source\PSoC4/CyLib.c ****             {
3020:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1702              		.loc 1 3020 0
 1703 0014 9847     		blx	r3
 1704              	.LVL109:
 1705              	.L133:
 1706 0016 0434     		add	r4, r4, #4
3016:.\Generated_Source\PSoC4/CyLib.c ****         {
 1707              		.loc 1 3016 0
 1708 0018 142C     		cmp	r4, #20
 1709 001a F7D1     		bne	.L132
 1710              	.L131:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 87


 1711              	.LBE40:
3021:.\Generated_Source\PSoC4/CyLib.c ****             }
3022:.\Generated_Source\PSoC4/CyLib.c ****         }
3023:.\Generated_Source\PSoC4/CyLib.c ****     }
3024:.\Generated_Source\PSoC4/CyLib.c **** }
 1712              		.loc 1 3024 0
 1713              		@ sp needed
 1714 001c 10BD     		pop	{r4, pc}
 1715              	.L140:
 1716 001e C046     		.align	2
 1717              	.L139:
 1718 0020 00000000 		.word	.LANCHOR2
 1719              		.cfi_endproc
 1720              	.LFE42:
 1721              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1722              		.section	.text.CySysTickClear,"ax",%progbits
 1723              		.align	1
 1724              		.global	CySysTickClear
 1725              		.code	16
 1726              		.thumb_func
 1727              		.type	CySysTickClear, %function
 1728              	CySysTickClear:
 1729              	.LFB39:
2927:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1730              		.loc 1 2927 0
 1731              		.cfi_startproc
2928:.\Generated_Source\PSoC4/CyLib.c **** }
 1732              		.loc 1 2928 0
 1733 0000 0022     		mov	r2, #0
 1734 0002 014B     		ldr	r3, .L142
2929:.\Generated_Source\PSoC4/CyLib.c **** 
 1735              		.loc 1 2929 0
 1736              		@ sp needed
2928:.\Generated_Source\PSoC4/CyLib.c **** }
 1737              		.loc 1 2928 0
 1738 0004 1A60     		str	r2, [r3]
2929:.\Generated_Source\PSoC4/CyLib.c **** 
 1739              		.loc 1 2929 0
 1740 0006 7047     		bx	lr
 1741              	.L143:
 1742              		.align	2
 1743              	.L142:
 1744 0008 18E000E0 		.word	-536813544
 1745              		.cfi_endproc
 1746              	.LFE39:
 1747              		.size	CySysTickClear, .-CySysTickClear
 1748              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1749              		.align	1
 1750              		.global	CySysTickSetCallback
 1751              		.code	16
 1752              		.thumb_func
 1753              		.type	CySysTickSetCallback, %function
 1754              	CySysTickSetCallback:
 1755              	.LFB40:
2964:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1756              		.loc 1 2964 0
 1757              		.cfi_startproc
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 88


 1758              	.LVL110:
2967:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1759              		.loc 1 2967 0
 1760 0000 024A     		ldr	r2, .L145
 1761 0002 8300     		lsl	r3, r0, #2
 1762 0004 9858     		ldr	r0, [r3, r2]
 1763              	.LVL111:
2970:.\Generated_Source\PSoC4/CyLib.c **** 
 1764              		.loc 1 2970 0
 1765              		@ sp needed
2968:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1766              		.loc 1 2968 0
 1767 0006 9950     		str	r1, [r3, r2]
2970:.\Generated_Source\PSoC4/CyLib.c **** 
 1768              		.loc 1 2970 0
 1769 0008 7047     		bx	lr
 1770              	.L146:
 1771 000a C046     		.align	2
 1772              	.L145:
 1773 000c 00000000 		.word	.LANCHOR2
 1774              		.cfi_endproc
 1775              	.LFE40:
 1776              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1777              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1778              		.align	1
 1779              		.global	CySysTickGetCallback
 1780              		.code	16
 1781              		.thumb_func
 1782              		.type	CySysTickGetCallback, %function
 1783              	CySysTickGetCallback:
 1784              	.LFB41:
2990:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1785              		.loc 1 2990 0
 1786              		.cfi_startproc
 1787              	.LVL112:
2991:.\Generated_Source\PSoC4/CyLib.c **** }
 1788              		.loc 1 2991 0
 1789 0000 014B     		ldr	r3, .L148
 1790 0002 8000     		lsl	r0, r0, #2
 1791              	.LVL113:
 1792 0004 C058     		ldr	r0, [r0, r3]
2992:.\Generated_Source\PSoC4/CyLib.c **** 
 1793              		.loc 1 2992 0
 1794              		@ sp needed
 1795 0006 7047     		bx	lr
 1796              	.L149:
 1797              		.align	2
 1798              	.L148:
 1799 0008 00000000 		.word	.LANCHOR2
 1800              		.cfi_endproc
 1801              	.LFE41:
 1802              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1803              		.section	.text.CyGetUniqueId,"ax",%progbits
 1804              		.align	1
 1805              		.global	CyGetUniqueId
 1806              		.code	16
 1807              		.thumb_func
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 89


 1808              		.type	CyGetUniqueId, %function
 1809              	CyGetUniqueId:
 1810              	.LFB43:
3025:.\Generated_Source\PSoC4/CyLib.c **** 
3026:.\Generated_Source\PSoC4/CyLib.c **** 
3027:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3028:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3029:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
3030:.\Generated_Source\PSoC4/CyLib.c **** *
3031:.\Generated_Source\PSoC4/CyLib.c **** * Summary:
3032:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3033:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3034:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3035:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3036:.\Generated_Source\PSoC4/CyLib.c **** *
3037:.\Generated_Source\PSoC4/CyLib.c **** * Parameters:
3038:.\Generated_Source\PSoC4/CyLib.c **** *  uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3039:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3040:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3041:.\Generated_Source\PSoC4/CyLib.c **** *
3042:.\Generated_Source\PSoC4/CyLib.c **** * Return:
3043:.\Generated_Source\PSoC4/CyLib.c **** *  None
3044:.\Generated_Source\PSoC4/CyLib.c **** *
3045:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3046:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3047:.\Generated_Source\PSoC4/CyLib.c **** {
 1811              		.loc 1 3047 0
 1812              		.cfi_startproc
 1813              	.LVL114:
3048:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3049:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1814              		.loc 1 3049 0
 1815 0000 134B     		ldr	r3, .L151
3050:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
3051:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
3052:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
3053:.\Generated_Source\PSoC4/CyLib.c **** 
3054:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
3055:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
3056:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
3057:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
3058:.\Generated_Source\PSoC4/CyLib.c **** #else
3059:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3060:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3061:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3062:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3063:.\Generated_Source\PSoC4/CyLib.c **** 
3064:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3065:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3066:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3067:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3068:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3069:.\Generated_Source\PSoC4/CyLib.c **** }
 1816              		.loc 1 3069 0
 1817              		@ sp needed
3049:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1818              		.loc 1 3049 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 90


 1819 0002 1B78     		ldrb	r3, [r3]
 1820 0004 DAB2     		uxtb	r2, r3
3050:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1821              		.loc 1 3050 0
 1822 0006 134B     		ldr	r3, .L151+4
3049:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1823              		.loc 1 3049 0
 1824 0008 0260     		str	r2, [r0]
3050:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1825              		.loc 1 3050 0
 1826 000a 1B78     		ldrb	r3, [r3]
 1827 000c 1B02     		lsl	r3, r3, #8
 1828 000e 1343     		orr	r3, r2
3051:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1829              		.loc 1 3051 0
 1830 0010 114A     		ldr	r2, .L151+8
3050:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1831              		.loc 1 3050 0
 1832 0012 0360     		str	r3, [r0]
3051:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1833              		.loc 1 3051 0
 1834 0014 1278     		ldrb	r2, [r2]
 1835 0016 1204     		lsl	r2, r2, #16
 1836 0018 1343     		orr	r3, r2
3052:.\Generated_Source\PSoC4/CyLib.c **** 
 1837              		.loc 1 3052 0
 1838 001a 104A     		ldr	r2, .L151+12
3051:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1839              		.loc 1 3051 0
 1840 001c 0360     		str	r3, [r0]
3052:.\Generated_Source\PSoC4/CyLib.c **** 
 1841              		.loc 1 3052 0
 1842 001e 1278     		ldrb	r2, [r2]
 1843 0020 1206     		lsl	r2, r2, #24
 1844 0022 1343     		orr	r3, r2
 1845 0024 0360     		str	r3, [r0]
3054:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1846              		.loc 1 3054 0
 1847 0026 0E4B     		ldr	r3, .L151+16
 1848 0028 1B78     		ldrb	r3, [r3]
 1849 002a DAB2     		uxtb	r2, r3
3055:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1850              		.loc 1 3055 0
 1851 002c 0D4B     		ldr	r3, .L151+20
3054:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1852              		.loc 1 3054 0
 1853 002e 4260     		str	r2, [r0, #4]
3055:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1854              		.loc 1 3055 0
 1855 0030 1B78     		ldrb	r3, [r3]
 1856 0032 1B02     		lsl	r3, r3, #8
 1857 0034 1343     		orr	r3, r2
3056:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1858              		.loc 1 3056 0
 1859 0036 0C4A     		ldr	r2, .L151+24
3055:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1860              		.loc 1 3055 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 91


 1861 0038 4360     		str	r3, [r0, #4]
3056:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1862              		.loc 1 3056 0
 1863 003a 1278     		ldrb	r2, [r2]
 1864 003c 1204     		lsl	r2, r2, #16
 1865 003e 1343     		orr	r3, r2
3057:.\Generated_Source\PSoC4/CyLib.c **** #else
 1866              		.loc 1 3057 0
 1867 0040 0A4A     		ldr	r2, .L151+28
3056:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1868              		.loc 1 3056 0
 1869 0042 4360     		str	r3, [r0, #4]
3057:.\Generated_Source\PSoC4/CyLib.c **** #else
 1870              		.loc 1 3057 0
 1871 0044 1278     		ldrb	r2, [r2]
 1872 0046 1206     		lsl	r2, r2, #24
 1873 0048 1343     		orr	r3, r2
 1874 004a 4360     		str	r3, [r0, #4]
 1875              		.loc 1 3069 0
 1876 004c 7047     		bx	lr
 1877              	.L152:
 1878 004e C046     		.align	2
 1879              	.L151:
 1880 0050 78F1FF0F 		.word	268431736
 1881 0054 79F1FF0F 		.word	268431737
 1882 0058 7AF1FF0F 		.word	268431738
 1883 005c 7BF1FF0F 		.word	268431739
 1884 0060 7CF1FF0F 		.word	268431740
 1885 0064 7DF1FF0F 		.word	268431741
 1886 0068 7EF1FF0F 		.word	268431742
 1887 006c 7FF1FF0F 		.word	268431743
 1888              		.cfi_endproc
 1889              	.LFE43:
 1890              		.size	CyGetUniqueId, .-CyGetUniqueId
 1891              		.global	cyImoFreqMhz2Reg
 1892              		.global	CySysTickInitVar
 1893              		.global	cydelay32kMs
 1894              		.global	cydelayFreqMhz
 1895              		.global	cydelayFreqKhz
 1896              		.global	cydelayFreqHz
 1897              		.section	.rodata
 1898              		.set	.LANCHOR1,. + 0
 1899              		.type	cyImoFreqMhz2Reg, %object
 1900              		.size	cyImoFreqMhz2Reg, 46
 1901              	cyImoFreqMhz2Reg:
 1902 0000 03       		.byte	3
 1903 0001 04       		.byte	4
 1904 0002 05       		.byte	5
 1905 0003 06       		.byte	6
 1906 0004 07       		.byte	7
 1907 0005 08       		.byte	8
 1908 0006 09       		.byte	9
 1909 0007 0A       		.byte	10
 1910 0008 0B       		.byte	11
 1911 0009 0C       		.byte	12
 1912 000a 0E       		.byte	14
 1913 000b 0F       		.byte	15
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 92


 1914 000c 10       		.byte	16
 1915 000d 11       		.byte	17
 1916 000e 12       		.byte	18
 1917 000f 13       		.byte	19
 1918 0010 14       		.byte	20
 1919 0011 15       		.byte	21
 1920 0012 16       		.byte	22
 1921 0013 17       		.byte	23
 1922 0014 18       		.byte	24
 1923 0015 19       		.byte	25
 1924 0016 1B       		.byte	27
 1925 0017 1C       		.byte	28
 1926 0018 1D       		.byte	29
 1927 0019 1E       		.byte	30
 1928 001a 1F       		.byte	31
 1929 001b 20       		.byte	32
 1930 001c 21       		.byte	33
 1931 001d 22       		.byte	34
 1932 001e 23       		.byte	35
 1933 001f 25       		.byte	37
 1934 0020 26       		.byte	38
 1935 0021 27       		.byte	39
 1936 0022 28       		.byte	40
 1937 0023 29       		.byte	41
 1938 0024 2A       		.byte	42
 1939 0025 2B       		.byte	43
 1940 0026 2E       		.byte	46
 1941 0027 2F       		.byte	47
 1942 0028 30       		.byte	48
 1943 0029 31       		.byte	49
 1944 002a 32       		.byte	50
 1945 002b 33       		.byte	51
 1946 002c 34       		.byte	52
 1947 002d 35       		.byte	53
 1948              		.data
 1949              		.align	2
 1950              		.set	.LANCHOR0,. + 0
 1951              		.type	cydelay32kMs, %object
 1952              		.size	cydelay32kMs, 4
 1953              	cydelay32kMs:
 1954 0000 0000C05D 		.word	1572864000
 1955              		.type	cydelayFreqKhz, %object
 1956              		.size	cydelayFreqKhz, 4
 1957              	cydelayFreqKhz:
 1958 0004 80BB0000 		.word	48000
 1959              		.type	cydelayFreqMhz, %object
 1960              		.size	cydelayFreqMhz, 1
 1961              	cydelayFreqMhz:
 1962 0008 30       		.byte	48
 1963 0009 000000   		.space	3
 1964              		.type	cydelayFreqHz, %object
 1965              		.size	cydelayFreqHz, 4
 1966              	cydelayFreqHz:
 1967 000c 006CDC02 		.word	48000000
 1968              		.bss
 1969              		.align	2
 1970              		.set	.LANCHOR2,. + 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 93


 1971              		.type	CySysTickCallbacks, %object
 1972              		.size	CySysTickCallbacks, 20
 1973              	CySysTickCallbacks:
 1974 0000 00000000 		.space	20
 1974      00000000 
 1974      00000000 
 1974      00000000 
 1974      00000000 
 1975              		.type	CySysTickInitVar, %object
 1976              		.size	CySysTickInitVar, 4
 1977              	CySysTickInitVar:
 1978 0014 00000000 		.space	4
 1979              		.text
 1980              	.Letext0:
 1981              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1982              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1983              		.section	.debug_info,"",%progbits
 1984              	.Ldebug_info0:
 1985 0000 E90A0000 		.4byte	0xae9
 1986 0004 0400     		.2byte	0x4
 1987 0006 00000000 		.4byte	.Ldebug_abbrev0
 1988 000a 04       		.byte	0x4
 1989 000b 01       		.uleb128 0x1
 1990 000c 1E000000 		.4byte	.LASF98
 1991 0010 01       		.byte	0x1
 1992 0011 5D030000 		.4byte	.LASF99
 1993 0015 31050000 		.4byte	.LASF100
 1994 0019 70000000 		.4byte	.Ldebug_ranges0+0x70
 1995 001d 00000000 		.4byte	0
 1996 0021 00000000 		.4byte	.Ldebug_line0
 1997 0025 02       		.uleb128 0x2
 1998 0026 01       		.byte	0x1
 1999 0027 06       		.byte	0x6
 2000 0028 79010000 		.4byte	.LASF0
 2001 002c 02       		.uleb128 0x2
 2002 002d 01       		.byte	0x1
 2003 002e 08       		.byte	0x8
 2004 002f D0040000 		.4byte	.LASF1
 2005 0033 02       		.uleb128 0x2
 2006 0034 02       		.byte	0x2
 2007 0035 05       		.byte	0x5
 2008 0036 E5040000 		.4byte	.LASF2
 2009 003a 02       		.uleb128 0x2
 2010 003b 02       		.byte	0x2
 2011 003c 07       		.byte	0x7
 2012 003d 3B030000 		.4byte	.LASF3
 2013 0041 02       		.uleb128 0x2
 2014 0042 04       		.byte	0x4
 2015 0043 05       		.byte	0x5
 2016 0044 B8010000 		.4byte	.LASF4
 2017 0048 02       		.uleb128 0x2
 2018 0049 04       		.byte	0x4
 2019 004a 07       		.byte	0x7
 2020 004b C3020000 		.4byte	.LASF5
 2021 004f 02       		.uleb128 0x2
 2022 0050 08       		.byte	0x8
 2023 0051 05       		.byte	0x5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 94


 2024 0052 6B010000 		.4byte	.LASF6
 2025 0056 02       		.uleb128 0x2
 2026 0057 08       		.byte	0x8
 2027 0058 07       		.byte	0x7
 2028 0059 FF000000 		.4byte	.LASF7
 2029 005d 03       		.uleb128 0x3
 2030 005e 04       		.byte	0x4
 2031 005f 05       		.byte	0x5
 2032 0060 696E7400 		.ascii	"int\000"
 2033 0064 02       		.uleb128 0x2
 2034 0065 04       		.byte	0x4
 2035 0066 07       		.byte	0x7
 2036 0067 A7020000 		.4byte	.LASF8
 2037 006b 04       		.uleb128 0x4
 2038 006c E3010000 		.4byte	.LASF9
 2039 0070 02       		.byte	0x2
 2040 0071 3801     		.2byte	0x138
 2041 0073 2C000000 		.4byte	0x2c
 2042 0077 04       		.uleb128 0x4
 2043 0078 17000000 		.4byte	.LASF10
 2044 007c 02       		.byte	0x2
 2045 007d 3901     		.2byte	0x139
 2046 007f 3A000000 		.4byte	0x3a
 2047 0083 04       		.uleb128 0x4
 2048 0084 26020000 		.4byte	.LASF11
 2049 0088 02       		.byte	0x2
 2050 0089 3A01     		.2byte	0x13a
 2051 008b 48000000 		.4byte	0x48
 2052 008f 02       		.uleb128 0x2
 2053 0090 04       		.byte	0x4
 2054 0091 04       		.byte	0x4
 2055 0092 53040000 		.4byte	.LASF12
 2056 0096 02       		.uleb128 0x2
 2057 0097 08       		.byte	0x8
 2058 0098 04       		.byte	0x4
 2059 0099 02020000 		.4byte	.LASF13
 2060 009d 02       		.uleb128 0x2
 2061 009e 01       		.byte	0x1
 2062 009f 08       		.byte	0x8
 2063 00a0 66050000 		.4byte	.LASF14
 2064 00a4 04       		.uleb128 0x4
 2065 00a5 BA040000 		.4byte	.LASF15
 2066 00a9 02       		.byte	0x2
 2067 00aa E201     		.2byte	0x1e2
 2068 00ac B0000000 		.4byte	0xb0
 2069 00b0 05       		.uleb128 0x5
 2070 00b1 6B000000 		.4byte	0x6b
 2071 00b5 04       		.uleb128 0x4
 2072 00b6 AE030000 		.4byte	.LASF16
 2073 00ba 02       		.byte	0x2
 2074 00bb E401     		.2byte	0x1e4
 2075 00bd C1000000 		.4byte	0xc1
 2076 00c1 05       		.uleb128 0x5
 2077 00c2 83000000 		.4byte	0x83
 2078 00c6 04       		.uleb128 0x4
 2079 00c7 6B050000 		.4byte	.LASF17
 2080 00cb 02       		.byte	0x2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 95


 2081 00cc F401     		.2byte	0x1f4
 2082 00ce D2000000 		.4byte	0xd2
 2083 00d2 06       		.uleb128 0x6
 2084 00d3 04       		.byte	0x4
 2085 00d4 D8000000 		.4byte	0xd8
 2086 00d8 07       		.uleb128 0x7
 2087 00d9 02       		.uleb128 0x2
 2088 00da 04       		.byte	0x4
 2089 00db 07       		.byte	0x7
 2090 00dc D0030000 		.4byte	.LASF18
 2091 00e0 08       		.uleb128 0x8
 2092 00e1 7E040000 		.4byte	.LASF19
 2093 00e5 03       		.byte	0x3
 2094 00e6 6A       		.byte	0x6a
 2095 00e7 D2000000 		.4byte	0xd2
 2096 00eb 09       		.uleb128 0x9
 2097 00ec 0F020000 		.4byte	.LASF20
 2098 00f0 01       		.byte	0x1
 2099 00f1 3908     		.2byte	0x839
 2100 00f3 01       		.byte	0x1
 2101 00f4 0A       		.uleb128 0xa
 2102 00f5 17050000 		.4byte	.LASF101
 2103 00f9 01       		.byte	0x1
 2104 00fa C10B     		.2byte	0xbc1
 2105 00fc 01       		.byte	0x1
 2106 00fd 0C010000 		.4byte	0x10c
 2107 0101 0B       		.uleb128 0xb
 2108 0102 6900     		.ascii	"i\000"
 2109 0104 01       		.byte	0x1
 2110 0105 C30B     		.2byte	0xbc3
 2111 0107 83000000 		.4byte	0x83
 2112 010b 00       		.byte	0
 2113 010c 0C       		.uleb128 0xc
 2114 010d 6B060000 		.4byte	.LASF52
 2115 0111 01       		.byte	0x1
 2116 0112 EF0A     		.2byte	0xaef
 2117 0114 01       		.byte	0x1
 2118 0115 26010000 		.4byte	0x126
 2119 0119 0D       		.uleb128 0xd
 2120 011a 7D020000 		.4byte	.LASF40
 2121 011e 01       		.byte	0x1
 2122 011f EF0A     		.2byte	0xaef
 2123 0121 83000000 		.4byte	0x83
 2124 0125 00       		.byte	0
 2125 0126 09       		.uleb128 0x9
 2126 0127 B4020000 		.4byte	.LASF21
 2127 012b 01       		.byte	0x1
 2128 012c 6E0B     		.2byte	0xb6e
 2129 012e 01       		.byte	0x1
 2130 012f 0E       		.uleb128 0xe
 2131 0130 35060000 		.4byte	.LASF22
 2132 0134 01       		.byte	0x1
 2133 0135 6F       		.byte	0x6f
 2134 0136 00000000 		.4byte	.LFB0
 2135 013a 14000000 		.4byte	.LFE0-.LFB0
 2136 013e 01       		.uleb128 0x1
 2137 013f 9C       		.byte	0x9c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 96


 2138 0140 0E       		.uleb128 0xe
 2139 0141 F0020000 		.4byte	.LASF23
 2140 0145 01       		.byte	0x1
 2141 0146 95       		.byte	0x95
 2142 0147 00000000 		.4byte	.LFB1
 2143 014b 10000000 		.4byte	.LFE1-.LFB1
 2144 014f 01       		.uleb128 0x1
 2145 0150 9C       		.byte	0x9c
 2146 0151 0F       		.uleb128 0xf
 2147 0152 B5000000 		.4byte	.LASF27
 2148 0156 01       		.byte	0x1
 2149 0157 C401     		.2byte	0x1c4
 2150 0159 00000000 		.4byte	.LFB2
 2151 015d 20000000 		.4byte	.LFE2-.LFB2
 2152 0161 01       		.uleb128 0x1
 2153 0162 9C       		.byte	0x9c
 2154 0163 AA010000 		.4byte	0x1aa
 2155 0167 10       		.uleb128 0x10
 2156 0168 0D050000 		.4byte	.LASF29
 2157 016c 01       		.byte	0x1
 2158 016d C401     		.2byte	0x1c4
 2159 016f 83000000 		.4byte	0x83
 2160 0173 00000000 		.4byte	.LLST0
 2161 0177 11       		.uleb128 0x11
 2162 0178 96010000 		.4byte	.LASF24
 2163 017c 01       		.byte	0x1
 2164 017d C601     		.2byte	0x1c6
 2165 017f 6B000000 		.4byte	0x6b
 2166 0183 2C000000 		.4byte	.LLST1
 2167 0187 11       		.uleb128 0x11
 2168 0188 64060000 		.4byte	.LASF25
 2169 018c 01       		.byte	0x1
 2170 018d C701     		.2byte	0x1c7
 2171 018f 83000000 		.4byte	0x83
 2172 0193 3F000000 		.4byte	.LLST2
 2173 0197 12       		.uleb128 0x12
 2174 0198 08000000 		.4byte	.LVL1
 2175 019c C30A0000 		.4byte	0xac3
 2176 01a0 12       		.uleb128 0x12
 2177 01a1 1A000000 		.4byte	.LVL4
 2178 01a5 CE0A0000 		.4byte	0xace
 2179 01a9 00       		.byte	0
 2180 01aa 13       		.uleb128 0x13
 2181 01ab 39020000 		.4byte	.LASF32
 2182 01af 01       		.byte	0x1
 2183 01b0 EE01     		.2byte	0x1ee
 2184 01b2 83000000 		.4byte	0x83
 2185 01b6 00000000 		.4byte	.LFB3
 2186 01ba 18000000 		.4byte	.LFE3-.LFB3
 2187 01be 01       		.uleb128 0x1
 2188 01bf 9C       		.byte	0x9c
 2189 01c0 F7010000 		.4byte	0x1f7
 2190 01c4 11       		.uleb128 0x11
 2191 01c5 96010000 		.4byte	.LASF24
 2192 01c9 01       		.byte	0x1
 2193 01ca F001     		.2byte	0x1f0
 2194 01cc 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 97


 2195 01d0 5D000000 		.4byte	.LLST3
 2196 01d4 11       		.uleb128 0x11
 2197 01d5 FB030000 		.4byte	.LASF26
 2198 01d9 01       		.byte	0x1
 2199 01da F101     		.2byte	0x1f1
 2200 01dc 83000000 		.4byte	0x83
 2201 01e0 70000000 		.4byte	.LLST4
 2202 01e4 12       		.uleb128 0x12
 2203 01e5 06000000 		.4byte	.LVL6
 2204 01e9 C30A0000 		.4byte	0xac3
 2205 01ed 12       		.uleb128 0x12
 2206 01ee 0E000000 		.4byte	.LVL8
 2207 01f2 CE0A0000 		.4byte	0xace
 2208 01f6 00       		.byte	0
 2209 01f7 0F       		.uleb128 0xf
 2210 01f8 88050000 		.4byte	.LASF28
 2211 01fc 01       		.byte	0x1
 2212 01fd 2A02     		.2byte	0x22a
 2213 01ff 00000000 		.4byte	.LFB4
 2214 0203 28000000 		.4byte	.LFE4-.LFB4
 2215 0207 01       		.uleb128 0x1
 2216 0208 9C       		.byte	0x9c
 2217 0209 40020000 		.4byte	0x240
 2218 020d 10       		.uleb128 0x10
 2219 020e 2D060000 		.4byte	.LASF30
 2220 0212 01       		.byte	0x1
 2221 0213 2A02     		.2byte	0x22a
 2222 0215 83000000 		.4byte	0x83
 2223 0219 92000000 		.4byte	.LLST5
 2224 021d 11       		.uleb128 0x11
 2225 021e 96010000 		.4byte	.LASF24
 2226 0222 01       		.byte	0x1
 2227 0223 2C02     		.2byte	0x22c
 2228 0225 6B000000 		.4byte	0x6b
 2229 0229 BE000000 		.4byte	.LLST6
 2230 022d 12       		.uleb128 0x12
 2231 022e 08000000 		.4byte	.LVL11
 2232 0232 C30A0000 		.4byte	0xac3
 2233 0236 12       		.uleb128 0x12
 2234 0237 1E000000 		.4byte	.LVL12
 2235 023b CE0A0000 		.4byte	0xace
 2236 023f 00       		.byte	0
 2237 0240 14       		.uleb128 0x14
 2238 0241 00060000 		.4byte	.LASF31
 2239 0245 01       		.byte	0x1
 2240 0246 0F08     		.2byte	0x80f
 2241 0248 00000000 		.4byte	.LFB7
 2242 024c 20000000 		.4byte	.LFE7-.LFB7
 2243 0250 01       		.uleb128 0x1
 2244 0251 9C       		.byte	0x9c
 2245 0252 15       		.uleb128 0x15
 2246 0253 D5020000 		.4byte	.LASF80
 2247 0257 01       		.byte	0x1
 2248 0258 2508     		.2byte	0x825
 2249 025a 83000000 		.4byte	0x83
 2250 025e 00000000 		.4byte	.LFB8
 2251 0262 10000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 98


 2252 0266 01       		.uleb128 0x1
 2253 0267 9C       		.byte	0x9c
 2254 0268 16       		.uleb128 0x16
 2255 0269 EB000000 		.4byte	0xeb
 2256 026d 00000000 		.4byte	.LFB9
 2257 0271 0C000000 		.4byte	.LFE9-.LFB9
 2258 0275 01       		.uleb128 0x1
 2259 0276 9C       		.byte	0x9c
 2260 0277 13       		.uleb128 0x13
 2261 0278 27030000 		.4byte	.LASF33
 2262 027c 01       		.byte	0x1
 2263 027d 5508     		.2byte	0x855
 2264 027f 83000000 		.4byte	0x83
 2265 0283 00000000 		.4byte	.LFB10
 2266 0287 14000000 		.4byte	.LFE10-.LFB10
 2267 028b 01       		.uleb128 0x1
 2268 028c 9C       		.byte	0x9c
 2269 028d B2020000 		.4byte	0x2b2
 2270 0291 10       		.uleb128 0x10
 2271 0292 DE040000 		.4byte	.LASF34
 2272 0296 01       		.byte	0x1
 2273 0297 5508     		.2byte	0x855
 2274 0299 83000000 		.4byte	0x83
 2275 029d D1000000 		.4byte	.LLST7
 2276 02a1 11       		.uleb128 0x11
 2277 02a2 C3030000 		.4byte	.LASF35
 2278 02a6 01       		.byte	0x1
 2279 02a7 5708     		.2byte	0x857
 2280 02a9 83000000 		.4byte	0x83
 2281 02ad EF000000 		.4byte	.LLST8
 2282 02b1 00       		.byte	0
 2283 02b2 13       		.uleb128 0x13
 2284 02b3 DC000000 		.4byte	.LASF36
 2285 02b7 01       		.byte	0x1
 2286 02b8 7008     		.2byte	0x870
 2287 02ba 83000000 		.4byte	0x83
 2288 02be 00000000 		.4byte	.LFB11
 2289 02c2 10000000 		.4byte	.LFE11-.LFB11
 2290 02c6 01       		.uleb128 0x1
 2291 02c7 9C       		.byte	0x9c
 2292 02c8 DB020000 		.4byte	0x2db
 2293 02cc 17       		.uleb128 0x17
 2294 02cd AC000000 		.4byte	.LASF37
 2295 02d1 01       		.byte	0x1
 2296 02d2 7208     		.2byte	0x872
 2297 02d4 83000000 		.4byte	0x83
 2298 02d8 01       		.uleb128 0x1
 2299 02d9 50       		.byte	0x50
 2300 02da 00       		.byte	0
 2301 02db 0F       		.uleb128 0xf
 2302 02dc 27010000 		.4byte	.LASF38
 2303 02e0 01       		.byte	0x1
 2304 02e1 8C08     		.2byte	0x88c
 2305 02e3 00000000 		.4byte	.LFB12
 2306 02e7 0C000000 		.4byte	.LFE12-.LFB12
 2307 02eb 01       		.uleb128 0x1
 2308 02ec 9C       		.byte	0x9c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 99


 2309 02ed 00030000 		.4byte	0x300
 2310 02f1 18       		.uleb128 0x18
 2311 02f2 34020000 		.4byte	.LASF39
 2312 02f6 01       		.byte	0x1
 2313 02f7 8C08     		.2byte	0x88c
 2314 02f9 83000000 		.4byte	0x83
 2315 02fd 01       		.uleb128 0x1
 2316 02fe 50       		.byte	0x50
 2317 02ff 00       		.byte	0
 2318 0300 19       		.uleb128 0x19
 2319 0301 9C030000 		.4byte	.LASF102
 2320 0305 01       		.byte	0x1
 2321 0306 A808     		.2byte	0x8a8
 2322 0308 C6000000 		.4byte	0xc6
 2323 030c 01       		.byte	0x1
 2324 030d 42030000 		.4byte	0x342
 2325 0311 0D       		.uleb128 0xd
 2326 0312 2D020000 		.4byte	.LASF41
 2327 0316 01       		.byte	0x1
 2328 0317 A808     		.2byte	0x8a8
 2329 0319 6B000000 		.4byte	0x6b
 2330 031d 0D       		.uleb128 0xd
 2331 031e EB030000 		.4byte	.LASF42
 2332 0322 01       		.byte	0x1
 2333 0323 A808     		.2byte	0x8a8
 2334 0325 C6000000 		.4byte	0xc6
 2335 0329 1A       		.uleb128 0x1a
 2336 032a CE000000 		.4byte	.LASF43
 2337 032e 01       		.byte	0x1
 2338 032f AA08     		.2byte	0x8aa
 2339 0331 C6000000 		.4byte	0xc6
 2340 0335 1A       		.uleb128 0x1a
 2341 0336 00000000 		.4byte	.LASF44
 2342 033a 01       		.byte	0x1
 2343 033b AB08     		.2byte	0x8ab
 2344 033d 42030000 		.4byte	0x342
 2345 0341 00       		.byte	0
 2346 0342 06       		.uleb128 0x6
 2347 0343 04       		.byte	0x4
 2348 0344 C6000000 		.4byte	0xc6
 2349 0348 1B       		.uleb128 0x1b
 2350 0349 00030000 		.4byte	0x300
 2351 034d 00000000 		.4byte	.LFB13
 2352 0351 0E000000 		.4byte	.LFE13-.LFB13
 2353 0355 01       		.uleb128 0x1
 2354 0356 9C       		.byte	0x9c
 2355 0357 7C030000 		.4byte	0x37c
 2356 035b 1C       		.uleb128 0x1c
 2357 035c 11030000 		.4byte	0x311
 2358 0360 11010000 		.4byte	.LLST9
 2359 0364 1D       		.uleb128 0x1d
 2360 0365 1D030000 		.4byte	0x31d
 2361 0369 01       		.uleb128 0x1
 2362 036a 51       		.byte	0x51
 2363 036b 1E       		.uleb128 0x1e
 2364 036c 29030000 		.4byte	0x329
 2365 0370 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 100


 2366 0371 50       		.byte	0x50
 2367 0372 1F       		.uleb128 0x1f
 2368 0373 35030000 		.4byte	0x335
 2369 0377 00000020 		.4byte	0x20000000
 2370 037b 00       		.byte	0
 2371 037c 13       		.uleb128 0x13
 2372 037d FB040000 		.4byte	.LASF45
 2373 0381 01       		.byte	0x1
 2374 0382 CD08     		.2byte	0x8cd
 2375 0384 C6000000 		.4byte	0xc6
 2376 0388 00000000 		.4byte	.LFB14
 2377 038c 0C000000 		.4byte	.LFE14-.LFB14
 2378 0390 01       		.uleb128 0x1
 2379 0391 9C       		.byte	0x9c
 2380 0392 B7030000 		.4byte	0x3b7
 2381 0396 10       		.uleb128 0x10
 2382 0397 2D020000 		.4byte	.LASF41
 2383 039b 01       		.byte	0x1
 2384 039c CD08     		.2byte	0x8cd
 2385 039e 6B000000 		.4byte	0x6b
 2386 03a2 32010000 		.4byte	.LLST10
 2387 03a6 20       		.uleb128 0x20
 2388 03a7 00000000 		.4byte	.LASF44
 2389 03ab 01       		.byte	0x1
 2390 03ac CF08     		.2byte	0x8cf
 2391 03ae 42030000 		.4byte	0x342
 2392 03b2 00000020 		.4byte	0x20000000
 2393 03b6 00       		.byte	0
 2394 03b7 13       		.uleb128 0x13
 2395 03b8 4E030000 		.4byte	.LASF46
 2396 03bc 01       		.byte	0x1
 2397 03bd E608     		.2byte	0x8e6
 2398 03bf C6000000 		.4byte	0xc6
 2399 03c3 00000000 		.4byte	.LFB15
 2400 03c7 10000000 		.4byte	.LFE15-.LFB15
 2401 03cb 01       		.uleb128 0x1
 2402 03cc 9C       		.byte	0x9c
 2403 03cd 0E040000 		.4byte	0x40e
 2404 03d1 10       		.uleb128 0x10
 2405 03d2 2D020000 		.4byte	.LASF41
 2406 03d6 01       		.byte	0x1
 2407 03d7 E608     		.2byte	0x8e6
 2408 03d9 6B000000 		.4byte	0x6b
 2409 03dd 53010000 		.4byte	.LLST11
 2410 03e1 18       		.uleb128 0x18
 2411 03e2 EB030000 		.4byte	.LASF42
 2412 03e6 01       		.byte	0x1
 2413 03e7 E608     		.2byte	0x8e6
 2414 03e9 C6000000 		.4byte	0xc6
 2415 03ed 01       		.uleb128 0x1
 2416 03ee 51       		.byte	0x51
 2417 03ef 17       		.uleb128 0x17
 2418 03f0 CE000000 		.4byte	.LASF43
 2419 03f4 01       		.byte	0x1
 2420 03f5 E808     		.2byte	0x8e8
 2421 03f7 C6000000 		.4byte	0xc6
 2422 03fb 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 101


 2423 03fc 50       		.byte	0x50
 2424 03fd 20       		.uleb128 0x20
 2425 03fe 00000000 		.4byte	.LASF44
 2426 0402 01       		.byte	0x1
 2427 0403 E908     		.2byte	0x8e9
 2428 0405 42030000 		.4byte	0x342
 2429 0409 00000020 		.4byte	0x20000000
 2430 040d 00       		.byte	0
 2431 040e 13       		.uleb128 0x13
 2432 040f 90040000 		.4byte	.LASF47
 2433 0413 01       		.byte	0x1
 2434 0414 0509     		.2byte	0x905
 2435 0416 C6000000 		.4byte	0xc6
 2436 041a 00000000 		.4byte	.LFB16
 2437 041e 10000000 		.4byte	.LFE16-.LFB16
 2438 0422 01       		.uleb128 0x1
 2439 0423 9C       		.byte	0x9c
 2440 0424 49040000 		.4byte	0x449
 2441 0428 10       		.uleb128 0x10
 2442 0429 2D020000 		.4byte	.LASF41
 2443 042d 01       		.byte	0x1
 2444 042e 0509     		.2byte	0x905
 2445 0430 6B000000 		.4byte	0x6b
 2446 0434 74010000 		.4byte	.LLST12
 2447 0438 20       		.uleb128 0x20
 2448 0439 00000000 		.4byte	.LASF44
 2449 043d 01       		.byte	0x1
 2450 043e 0709     		.2byte	0x907
 2451 0440 42030000 		.4byte	0x342
 2452 0444 00000020 		.4byte	0x20000000
 2453 0448 00       		.byte	0
 2454 0449 0F       		.uleb128 0xf
 2455 044a 42040000 		.4byte	.LASF48
 2456 044e 01       		.byte	0x1
 2457 044f 1D09     		.2byte	0x91d
 2458 0451 00000000 		.4byte	.LFB17
 2459 0455 30000000 		.4byte	.LFE17-.LFB17
 2460 0459 01       		.uleb128 0x1
 2461 045a 9C       		.byte	0x9c
 2462 045b C2040000 		.4byte	0x4c2
 2463 045f 10       		.uleb128 0x10
 2464 0460 2D020000 		.4byte	.LASF41
 2465 0464 01       		.byte	0x1
 2466 0465 1D09     		.2byte	0x91d
 2467 0467 6B000000 		.4byte	0x6b
 2468 046b 95010000 		.4byte	.LLST13
 2469 046f 10       		.uleb128 0x10
 2470 0470 7E030000 		.4byte	.LASF49
 2471 0474 01       		.byte	0x1
 2472 0475 1D09     		.2byte	0x91d
 2473 0477 6B000000 		.4byte	0x6b
 2474 047b B6010000 		.4byte	.LLST14
 2475 047f 11       		.uleb128 0x11
 2476 0480 96010000 		.4byte	.LASF24
 2477 0484 01       		.byte	0x1
 2478 0485 1F09     		.2byte	0x91f
 2479 0487 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 102


 2480 048b D7010000 		.4byte	.LLST15
 2481 048f 11       		.uleb128 0x11
 2482 0490 09020000 		.4byte	.LASF50
 2483 0494 01       		.byte	0x1
 2484 0495 2009     		.2byte	0x920
 2485 0497 83000000 		.4byte	0x83
 2486 049b EA010000 		.4byte	.LLST16
 2487 049f 11       		.uleb128 0x11
 2488 04a0 7D020000 		.4byte	.LASF40
 2489 04a4 01       		.byte	0x1
 2490 04a5 2109     		.2byte	0x921
 2491 04a7 83000000 		.4byte	0x83
 2492 04ab 08020000 		.4byte	.LLST17
 2493 04af 12       		.uleb128 0x12
 2494 04b0 0A000000 		.4byte	.LVL32
 2495 04b4 C30A0000 		.4byte	0xac3
 2496 04b8 12       		.uleb128 0x12
 2497 04b9 2A000000 		.4byte	.LVL37
 2498 04bd CE0A0000 		.4byte	0xace
 2499 04c1 00       		.byte	0
 2500 04c2 13       		.uleb128 0x13
 2501 04c3 51020000 		.4byte	.LASF51
 2502 04c7 01       		.byte	0x1
 2503 04c8 4109     		.2byte	0x941
 2504 04ca 6B000000 		.4byte	0x6b
 2505 04ce 00000000 		.4byte	.LFB18
 2506 04d2 20000000 		.4byte	.LFE18-.LFB18
 2507 04d6 01       		.uleb128 0x1
 2508 04d7 9C       		.byte	0x9c
 2509 04d8 FD040000 		.4byte	0x4fd
 2510 04dc 10       		.uleb128 0x10
 2511 04dd 2D020000 		.4byte	.LASF41
 2512 04e1 01       		.byte	0x1
 2513 04e2 4109     		.2byte	0x941
 2514 04e4 6B000000 		.4byte	0x6b
 2515 04e8 1B020000 		.4byte	.LLST18
 2516 04ec 11       		.uleb128 0x11
 2517 04ed 7E030000 		.4byte	.LASF49
 2518 04f1 01       		.byte	0x1
 2519 04f2 4309     		.2byte	0x943
 2520 04f4 6B000000 		.4byte	0x6b
 2521 04f8 3C020000 		.4byte	.LLST19
 2522 04fc 00       		.byte	0
 2523 04fd 0C       		.uleb128 0xc
 2524 04fe EF040000 		.4byte	.LASF53
 2525 0502 01       		.byte	0x1
 2526 0503 5B09     		.2byte	0x95b
 2527 0505 01       		.byte	0x1
 2528 0506 17050000 		.4byte	0x517
 2529 050a 0D       		.uleb128 0xd
 2530 050b 2D020000 		.4byte	.LASF41
 2531 050f 01       		.byte	0x1
 2532 0510 5B09     		.2byte	0x95b
 2533 0512 6B000000 		.4byte	0x6b
 2534 0516 00       		.byte	0
 2535 0517 1B       		.uleb128 0x1b
 2536 0518 FD040000 		.4byte	0x4fd
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 103


 2537 051c 00000000 		.4byte	.LFB19
 2538 0520 14000000 		.4byte	.LFE19-.LFB19
 2539 0524 01       		.uleb128 0x1
 2540 0525 9C       		.byte	0x9c
 2541 0526 34050000 		.4byte	0x534
 2542 052a 1C       		.uleb128 0x1c
 2543 052b 0A050000 		.4byte	0x50a
 2544 052f 5D020000 		.4byte	.LLST20
 2545 0533 00       		.byte	0
 2546 0534 13       		.uleb128 0x13
 2547 0535 5D010000 		.4byte	.LASF54
 2548 0539 01       		.byte	0x1
 2549 053a 6F09     		.2byte	0x96f
 2550 053c 6B000000 		.4byte	0x6b
 2551 0540 00000000 		.4byte	.LFB20
 2552 0544 18000000 		.4byte	.LFE20-.LFB20
 2553 0548 01       		.uleb128 0x1
 2554 0549 9C       		.byte	0x9c
 2555 054a 5F050000 		.4byte	0x55f
 2556 054e 10       		.uleb128 0x10
 2557 054f 2D020000 		.4byte	.LASF41
 2558 0553 01       		.byte	0x1
 2559 0554 6F09     		.2byte	0x96f
 2560 0556 6B000000 		.4byte	0x6b
 2561 055a 7E020000 		.4byte	.LLST21
 2562 055e 00       		.byte	0
 2563 055f 0F       		.uleb128 0xf
 2564 0560 C1010000 		.4byte	.LASF55
 2565 0564 01       		.byte	0x1
 2566 0565 8409     		.2byte	0x984
 2567 0567 00000000 		.4byte	.LFB21
 2568 056b 14000000 		.4byte	.LFE21-.LFB21
 2569 056f 01       		.uleb128 0x1
 2570 0570 9C       		.byte	0x9c
 2571 0571 86050000 		.4byte	0x586
 2572 0575 10       		.uleb128 0x10
 2573 0576 2D020000 		.4byte	.LASF41
 2574 057a 01       		.byte	0x1
 2575 057b 8409     		.2byte	0x984
 2576 057d 6B000000 		.4byte	0x6b
 2577 0581 9F020000 		.4byte	.LLST22
 2578 0585 00       		.byte	0
 2579 0586 0F       		.uleb128 0xf
 2580 0587 17030000 		.4byte	.LASF56
 2581 058b 01       		.byte	0x1
 2582 058c 9709     		.2byte	0x997
 2583 058e 00000000 		.4byte	.LFB22
 2584 0592 14000000 		.4byte	.LFE22-.LFB22
 2585 0596 01       		.uleb128 0x1
 2586 0597 9C       		.byte	0x9c
 2587 0598 AD050000 		.4byte	0x5ad
 2588 059c 10       		.uleb128 0x10
 2589 059d 2D020000 		.4byte	.LASF41
 2590 05a1 01       		.byte	0x1
 2591 05a2 9709     		.2byte	0x997
 2592 05a4 6B000000 		.4byte	0x6b
 2593 05a8 C0020000 		.4byte	.LLST23
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 104


 2594 05ac 00       		.byte	0
 2595 05ad 0F       		.uleb128 0xf
 2596 05ae D9030000 		.4byte	.LASF57
 2597 05b2 01       		.byte	0x1
 2598 05b3 AB09     		.2byte	0x9ab
 2599 05b5 00000000 		.4byte	.LFB23
 2600 05b9 14000000 		.4byte	.LFE23-.LFB23
 2601 05bd 01       		.uleb128 0x1
 2602 05be 9C       		.byte	0x9c
 2603 05bf D4050000 		.4byte	0x5d4
 2604 05c3 10       		.uleb128 0x10
 2605 05c4 2D020000 		.4byte	.LASF41
 2606 05c8 01       		.byte	0x1
 2607 05c9 AB09     		.2byte	0x9ab
 2608 05cb 6B000000 		.4byte	0x6b
 2609 05cf E1020000 		.4byte	.LLST24
 2610 05d3 00       		.byte	0
 2611 05d4 0F       		.uleb128 0xf
 2612 05d5 C9040000 		.4byte	.LASF58
 2613 05d9 01       		.byte	0x1
 2614 05da BF09     		.2byte	0x9bf
 2615 05dc 00000000 		.4byte	.LFB24
 2616 05e0 04000000 		.4byte	.LFE24-.LFB24
 2617 05e4 01       		.uleb128 0x1
 2618 05e5 9C       		.byte	0x9c
 2619 05e6 F9050000 		.4byte	0x5f9
 2620 05ea 18       		.uleb128 0x18
 2621 05eb DE040000 		.4byte	.LASF34
 2622 05ef 01       		.byte	0x1
 2623 05f0 BF09     		.2byte	0x9bf
 2624 05f2 6B000000 		.4byte	0x6b
 2625 05f6 01       		.uleb128 0x1
 2626 05f7 50       		.byte	0x50
 2627 05f8 00       		.byte	0
 2628 05f9 14       		.uleb128 0x14
 2629 05fa 34010000 		.4byte	.LASF59
 2630 05fe 01       		.byte	0x1
 2631 05ff DE09     		.2byte	0x9de
 2632 0601 00000000 		.4byte	.LFB25
 2633 0605 18000000 		.4byte	.LFE25-.LFB25
 2634 0609 01       		.uleb128 0x1
 2635 060a 9C       		.byte	0x9c
 2636 060b 0F       		.uleb128 0xf
 2637 060c DE050000 		.4byte	.LASF60
 2638 0610 01       		.byte	0x1
 2639 0611 F709     		.2byte	0x9f7
 2640 0613 00000000 		.4byte	.LFB26
 2641 0617 2C000000 		.4byte	.LFE26-.LFB26
 2642 061b 01       		.uleb128 0x1
 2643 061c 9C       		.byte	0x9c
 2644 061d 44060000 		.4byte	0x644
 2645 0621 10       		.uleb128 0x10
 2646 0622 9F040000 		.4byte	.LASF61
 2647 0626 01       		.byte	0x1
 2648 0627 F709     		.2byte	0x9f7
 2649 0629 83000000 		.4byte	0x83
 2650 062d 02030000 		.4byte	.LLST25
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 105


 2651 0631 12       		.uleb128 0x12
 2652 0632 14000000 		.4byte	.LVL55
 2653 0636 DF0A0000 		.4byte	0xadf
 2654 063a 12       		.uleb128 0x12
 2655 063b 22000000 		.4byte	.LVL57
 2656 063f DF0A0000 		.4byte	0xadf
 2657 0643 00       		.byte	0
 2658 0644 0F       		.uleb128 0xf
 2659 0645 F8010000 		.4byte	.LASF62
 2660 0649 01       		.byte	0x1
 2661 064a 130A     		.2byte	0xa13
 2662 064c 00000000 		.4byte	.LFB27
 2663 0650 14000000 		.4byte	.LFE27-.LFB27
 2664 0654 01       		.uleb128 0x1
 2665 0655 9C       		.byte	0x9c
 2666 0656 74060000 		.4byte	0x674
 2667 065a 10       		.uleb128 0x10
 2668 065b 57060000 		.4byte	.LASF63
 2669 065f 01       		.byte	0x1
 2670 0660 130A     		.2byte	0xa13
 2671 0662 77000000 		.4byte	0x77
 2672 0666 20030000 		.4byte	.LLST26
 2673 066a 12       		.uleb128 0x12
 2674 066b 0C000000 		.4byte	.LVL61
 2675 066f DF0A0000 		.4byte	0xadf
 2676 0673 00       		.byte	0
 2677 0674 0F       		.uleb128 0xf
 2678 0675 87030000 		.4byte	.LASF64
 2679 0679 01       		.byte	0x1
 2680 067a 6E02     		.2byte	0x26e
 2681 067c 00000000 		.4byte	.LFB5
 2682 0680 24010000 		.4byte	.LFE5-.LFB5
 2683 0684 01       		.uleb128 0x1
 2684 0685 9C       		.byte	0x9c
 2685 0686 4E070000 		.4byte	0x74e
 2686 068a 10       		.uleb128 0x10
 2687 068b 85010000 		.4byte	.LASF65
 2688 068f 01       		.byte	0x1
 2689 0690 6E02     		.2byte	0x26e
 2690 0692 83000000 		.4byte	0x83
 2691 0696 41030000 		.4byte	.LLST27
 2692 069a 11       		.uleb128 0x11
 2693 069b 0F000000 		.4byte	.LASF66
 2694 069f 01       		.byte	0x1
 2695 06a0 7402     		.2byte	0x274
 2696 06a2 6B000000 		.4byte	0x6b
 2697 06a6 80030000 		.4byte	.LLST28
 2698 06aa 11       		.uleb128 0x11
 2699 06ab F3030000 		.4byte	.LASF67
 2700 06af 01       		.byte	0x1
 2701 06b0 7502     		.2byte	0x275
 2702 06b2 6B000000 		.4byte	0x6b
 2703 06b6 BF030000 		.4byte	.LLST29
 2704 06ba 11       		.uleb128 0x11
 2705 06bb 46060000 		.4byte	.LASF68
 2706 06bf 01       		.byte	0x1
 2707 06c0 7602     		.2byte	0x276
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 106


 2708 06c2 6B000000 		.4byte	0x6b
 2709 06c6 D3030000 		.4byte	.LLST30
 2710 06ca 11       		.uleb128 0x11
 2711 06cb EA000000 		.4byte	.LASF69
 2712 06cf 01       		.byte	0x1
 2713 06d0 7702     		.2byte	0x277
 2714 06d2 6B000000 		.4byte	0x6b
 2715 06d6 E7030000 		.4byte	.LLST31
 2716 06da 11       		.uleb128 0x11
 2717 06db C7050000 		.4byte	.LASF70
 2718 06df 01       		.byte	0x1
 2719 06e0 7802     		.2byte	0x278
 2720 06e2 6B000000 		.4byte	0x6b
 2721 06e6 FA030000 		.4byte	.LLST32
 2722 06ea 17       		.uleb128 0x17
 2723 06eb 96010000 		.4byte	.LASF24
 2724 06ef 01       		.byte	0x1
 2725 06f0 8302     		.2byte	0x283
 2726 06f2 6B000000 		.4byte	0x6b
 2727 06f6 02       		.uleb128 0x2
 2728 06f7 91       		.byte	0x91
 2729 06f8 60       		.sleb128 -32
 2730 06f9 12       		.uleb128 0x12
 2731 06fa 0A000000 		.4byte	.LVL63
 2732 06fe C30A0000 		.4byte	0xac3
 2733 0702 21       		.uleb128 0x21
 2734 0703 9C000000 		.4byte	.LVL78
 2735 0707 DF0A0000 		.4byte	0xadf
 2736 070b 15070000 		.4byte	0x715
 2737 070f 22       		.uleb128 0x22
 2738 0710 01       		.uleb128 0x1
 2739 0711 50       		.byte	0x50
 2740 0712 01       		.uleb128 0x1
 2741 0713 35       		.byte	0x35
 2742 0714 00       		.byte	0
 2743 0715 21       		.uleb128 0x21
 2744 0716 B8000000 		.4byte	.LVL84
 2745 071a 44060000 		.4byte	0x644
 2746 071e 28070000 		.4byte	0x728
 2747 0722 22       		.uleb128 0x22
 2748 0723 01       		.uleb128 0x1
 2749 0724 50       		.byte	0x50
 2750 0725 01       		.uleb128 0x1
 2751 0726 35       		.byte	0x35
 2752 0727 00       		.byte	0
 2753 0728 21       		.uleb128 0x21
 2754 0729 CC000000 		.4byte	.LVL85
 2755 072d DF0A0000 		.4byte	0xadf
 2756 0731 3B070000 		.4byte	0x73b
 2757 0735 22       		.uleb128 0x22
 2758 0736 01       		.uleb128 0x1
 2759 0737 50       		.byte	0x50
 2760 0738 01       		.uleb128 0x1
 2761 0739 35       		.byte	0x35
 2762 073a 00       		.byte	0
 2763 073b 23       		.uleb128 0x23
 2764 073c D2000000 		.4byte	.LVL86
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 107


 2765 0740 CE0A0000 		.4byte	0xace
 2766 0744 22       		.uleb128 0x22
 2767 0745 01       		.uleb128 0x1
 2768 0746 50       		.byte	0x50
 2769 0747 04       		.uleb128 0x4
 2770 0748 91       		.byte	0x91
 2771 0749 60       		.sleb128 -32
 2772 074a 94       		.byte	0x94
 2773 074b 01       		.byte	0x1
 2774 074c 00       		.byte	0
 2775 074d 00       		.byte	0
 2776 074e 0F       		.uleb128 0xf
 2777 074f 6F040000 		.4byte	.LASF71
 2778 0753 01       		.byte	0x1
 2779 0754 EA07     		.2byte	0x7ea
 2780 0756 00000000 		.4byte	.LFB6
 2781 075a 44000000 		.4byte	.LFE6-.LFB6
 2782 075e 01       		.uleb128 0x1
 2783 075f 9C       		.byte	0x9c
 2784 0760 96070000 		.4byte	0x796
 2785 0764 10       		.uleb128 0x10
 2786 0765 BF040000 		.4byte	.LASF72
 2787 0769 01       		.byte	0x1
 2788 076a EA07     		.2byte	0x7ea
 2789 076c 83000000 		.4byte	0x83
 2790 0770 2C040000 		.4byte	.LLST33
 2791 0774 24       		.uleb128 0x24
 2792 0775 EB000000 		.4byte	0xeb
 2793 0779 2C000000 		.4byte	.LBB8
 2794 077d 00000000 		.4byte	.Ldebug_ranges0+0
 2795 0781 01       		.byte	0x1
 2796 0782 FA07     		.2byte	0x7fa
 2797 0784 23       		.uleb128 0x23
 2798 0785 2C000000 		.4byte	.LVL89
 2799 0789 44060000 		.4byte	0x644
 2800 078d 22       		.uleb128 0x22
 2801 078e 01       		.uleb128 0x1
 2802 078f 50       		.byte	0x50
 2803 0790 03       		.uleb128 0x3
 2804 0791 0A       		.byte	0xa
 2805 0792 E803     		.2byte	0x3e8
 2806 0794 00       		.byte	0
 2807 0795 00       		.byte	0
 2808 0796 25       		.uleb128 0x25
 2809 0797 8A010000 		.4byte	.LASF73
 2810 079b 01       		.byte	0x1
 2811 079c 260A     		.2byte	0xa26
 2812 079e 00000000 		.4byte	.LFB28
 2813 07a2 48000000 		.4byte	.LFE28-.LFB28
 2814 07a6 01       		.uleb128 0x1
 2815 07a7 9C       		.byte	0x9c
 2816 07a8 BD070000 		.4byte	0x7bd
 2817 07ac 10       		.uleb128 0x10
 2818 07ad 85010000 		.4byte	.LASF65
 2819 07b1 01       		.byte	0x1
 2820 07b2 260A     		.2byte	0xa26
 2821 07b4 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 108


 2822 07b8 4D040000 		.4byte	.LLST34
 2823 07bc 00       		.byte	0
 2824 07bd 25       		.uleb128 0x25
 2825 07be 6F020000 		.4byte	.LASF74
 2826 07c2 01       		.byte	0x1
 2827 07c3 6D0A     		.2byte	0xa6d
 2828 07c5 00000000 		.4byte	.LFB30
 2829 07c9 50000000 		.4byte	.LFE30-.LFB30
 2830 07cd 01       		.uleb128 0x1
 2831 07ce 9C       		.byte	0x9c
 2832 07cf 68080000 		.4byte	0x868
 2833 07d3 26       		.uleb128 0x26
 2834 07d4 6900     		.ascii	"i\000"
 2835 07d6 01       		.byte	0x1
 2836 07d7 6F0A     		.2byte	0xa6f
 2837 07d9 83000000 		.4byte	0x83
 2838 07dd 6E040000 		.4byte	.LLST35
 2839 07e1 27       		.uleb128 0x27
 2840 07e2 00030000 		.4byte	0x300
 2841 07e6 08000000 		.4byte	.LBB20
 2842 07ea 18000000 		.4byte	.Ldebug_ranges0+0x18
 2843 07ee 01       		.byte	0x1
 2844 07ef 760A     		.2byte	0xa76
 2845 07f1 20080000 		.4byte	0x820
 2846 07f5 1D       		.uleb128 0x1d
 2847 07f6 1D030000 		.4byte	0x31d
 2848 07fa 06       		.uleb128 0x6
 2849 07fb 03       		.byte	0x3
 2850 07fc 00000000 		.4byte	CySysTickServiceCallbacks
 2851 0800 9F       		.byte	0x9f
 2852 0801 28       		.uleb128 0x28
 2853 0802 11030000 		.4byte	0x311
 2854 0806 0F       		.byte	0xf
 2855 0807 29       		.uleb128 0x29
 2856 0808 18000000 		.4byte	.Ldebug_ranges0+0x18
 2857 080c 2A       		.uleb128 0x2a
 2858 080d 29030000 		.4byte	0x329
 2859 0811 B2040000 		.4byte	.LLST36
 2860 0815 1F       		.uleb128 0x1f
 2861 0816 35030000 		.4byte	0x335
 2862 081a 00000020 		.4byte	0x20000000
 2863 081e 00       		.byte	0
 2864 081f 00       		.byte	0
 2865 0820 27       		.uleb128 0x27
 2866 0821 FD040000 		.4byte	0x4fd
 2867 0825 22000000 		.4byte	.LBB26
 2868 0829 38000000 		.4byte	.Ldebug_ranges0+0x38
 2869 082d 01       		.byte	0x1
 2870 082e 7E0A     		.2byte	0xa7e
 2871 0830 3B080000 		.4byte	0x83b
 2872 0834 28       		.uleb128 0x28
 2873 0835 0A050000 		.4byte	0x50a
 2874 0839 0F       		.byte	0xf
 2875 083a 00       		.byte	0
 2876 083b 27       		.uleb128 0x27
 2877 083c 0C010000 		.4byte	0x10c
 2878 0840 24000000 		.4byte	.LBB30
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 109


 2879 0844 58000000 		.4byte	.Ldebug_ranges0+0x58
 2880 0848 01       		.byte	0x1
 2881 0849 7C0A     		.2byte	0xa7c
 2882 084b 57080000 		.4byte	0x857
 2883 084f 1D       		.uleb128 0x1d
 2884 0850 19010000 		.4byte	0x119
 2885 0854 01       		.uleb128 0x1
 2886 0855 50       		.byte	0x50
 2887 0856 00       		.byte	0
 2888 0857 2B       		.uleb128 0x2b
 2889 0858 26010000 		.4byte	0x126
 2890 085c 2A000000 		.4byte	.LBB35
 2891 0860 04000000 		.4byte	.LBE35-.LBB35
 2892 0864 01       		.byte	0x1
 2893 0865 7D0A     		.2byte	0xa7d
 2894 0867 00       		.byte	0
 2895 0868 14       		.uleb128 0x14
 2896 0869 1F060000 		.4byte	.LASF75
 2897 086d 01       		.byte	0x1
 2898 086e AB0A     		.2byte	0xaab
 2899 0870 00000000 		.4byte	.LFB32
 2900 0874 10000000 		.4byte	.LFE32-.LFB32
 2901 0878 01       		.uleb128 0x1
 2902 0879 9C       		.byte	0x9c
 2903 087a 14       		.uleb128 0x14
 2904 087b 44010000 		.4byte	.LASF76
 2905 087f 01       		.byte	0x1
 2906 0880 C20A     		.2byte	0xac2
 2907 0882 00000000 		.4byte	.LFB33
 2908 0886 10000000 		.4byte	.LFE33-.LFB33
 2909 088a 01       		.uleb128 0x1
 2910 088b 9C       		.byte	0x9c
 2911 088c 0F       		.uleb128 0xf
 2912 088d 78050000 		.4byte	.LASF77
 2913 0891 01       		.byte	0x1
 2914 0892 930A     		.2byte	0xa93
 2915 0894 00000000 		.4byte	.LFB31
 2916 0898 18000000 		.4byte	.LFE31-.LFB31
 2917 089c 01       		.uleb128 0x1
 2918 089d 9C       		.byte	0x9c
 2919 089e AC080000 		.4byte	0x8ac
 2920 08a2 12       		.uleb128 0x12
 2921 08a3 06000000 		.4byte	.LVL103
 2922 08a7 7A080000 		.4byte	0x87a
 2923 08ab 00       		.byte	0
 2924 08ac 0F       		.uleb128 0xf
 2925 08ad B4030000 		.4byte	.LASF78
 2926 08b1 01       		.byte	0x1
 2927 08b2 490A     		.2byte	0xa49
 2928 08b4 00000000 		.4byte	.LFB29
 2929 08b8 1C000000 		.4byte	.LFE29-.LFB29
 2930 08bc 01       		.uleb128 0x1
 2931 08bd 9C       		.byte	0x9c
 2932 08be D5080000 		.4byte	0x8d5
 2933 08c2 12       		.uleb128 0x12
 2934 08c3 0E000000 		.4byte	.LVL104
 2935 08c7 BD070000 		.4byte	0x7bd
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 110


 2936 08cb 12       		.uleb128 0x12
 2937 08cc 16000000 		.4byte	.LVL105
 2938 08d0 8C080000 		.4byte	0x88c
 2939 08d4 00       		.byte	0
 2940 08d5 14       		.uleb128 0x14
 2941 08d6 E6050000 		.4byte	.LASF79
 2942 08da 01       		.byte	0x1
 2943 08db D90A     		.2byte	0xad9
 2944 08dd 00000000 		.4byte	.LFB34
 2945 08e1 10000000 		.4byte	.LFE34-.LFB34
 2946 08e5 01       		.uleb128 0x1
 2947 08e6 9C       		.byte	0x9c
 2948 08e7 1B       		.uleb128 0x1b
 2949 08e8 0C010000 		.4byte	0x10c
 2950 08ec 00000000 		.4byte	.LFB35
 2951 08f0 10000000 		.4byte	.LFE35-.LFB35
 2952 08f4 01       		.uleb128 0x1
 2953 08f5 9C       		.byte	0x9c
 2954 08f6 04090000 		.4byte	0x904
 2955 08fa 1C       		.uleb128 0x1c
 2956 08fb 19010000 		.4byte	0x119
 2957 08ff D5040000 		.4byte	.LLST37
 2958 0903 00       		.byte	0
 2959 0904 15       		.uleb128 0x15
 2960 0905 A5010000 		.4byte	.LASF81
 2961 0909 01       		.byte	0x1
 2962 090a 030B     		.2byte	0xb03
 2963 090c 83000000 		.4byte	0x83
 2964 0910 00000000 		.4byte	.LFB36
 2965 0914 10000000 		.4byte	.LFE36-.LFB36
 2966 0918 01       		.uleb128 0x1
 2967 0919 9C       		.byte	0x9c
 2968 091a 15       		.uleb128 0x15
 2969 091b 22040000 		.4byte	.LASF82
 2970 091f 01       		.byte	0x1
 2971 0920 170B     		.2byte	0xb17
 2972 0922 83000000 		.4byte	0x83
 2973 0926 00000000 		.4byte	.LFB37
 2974 092a 10000000 		.4byte	.LFE37-.LFB37
 2975 092e 01       		.uleb128 0x1
 2976 092f 9C       		.byte	0x9c
 2977 0930 15       		.uleb128 0x15
 2978 0931 91020000 		.4byte	.LASF83
 2979 0935 01       		.byte	0x1
 2980 0936 5A0B     		.2byte	0xb5a
 2981 0938 83000000 		.4byte	0x83
 2982 093c 00000000 		.4byte	.LFB38
 2983 0940 10000000 		.4byte	.LFE38-.LFB38
 2984 0944 01       		.uleb128 0x1
 2985 0945 9C       		.byte	0x9c
 2986 0946 2C       		.uleb128 0x2c
 2987 0947 F4000000 		.4byte	0xf4
 2988 094b 00000000 		.4byte	.LFB42
 2989 094f 24000000 		.4byte	.LFE42-.LFB42
 2990 0953 01       		.uleb128 0x1
 2991 0954 9C       		.byte	0x9c
 2992 0955 7B090000 		.4byte	0x97b
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 111


 2993 0959 2D       		.uleb128 0x2d
 2994 095a 01010000 		.4byte	0x101
 2995 095e 2E       		.uleb128 0x2e
 2996 095f 0C000000 		.4byte	.LBB40
 2997 0963 10000000 		.4byte	.LBE40-.LBB40
 2998 0967 71090000 		.4byte	0x971
 2999 096b 2D       		.uleb128 0x2d
 3000 096c 01010000 		.4byte	0x101
 3001 0970 00       		.byte	0
 3002 0971 12       		.uleb128 0x12
 3003 0972 06000000 		.4byte	.LVL108
 3004 0976 30090000 		.4byte	0x930
 3005 097a 00       		.byte	0
 3006 097b 16       		.uleb128 0x16
 3007 097c 26010000 		.4byte	0x126
 3008 0980 00000000 		.4byte	.LFB39
 3009 0984 0C000000 		.4byte	.LFE39-.LFB39
 3010 0988 01       		.uleb128 0x1
 3011 0989 9C       		.byte	0x9c
 3012 098a 13       		.uleb128 0x13
 3013 098b 9F050000 		.4byte	.LASF84
 3014 098f 01       		.byte	0x1
 3015 0990 930B     		.2byte	0xb93
 3016 0992 E0000000 		.4byte	0xe0
 3017 0996 00000000 		.4byte	.LFB40
 3018 099a 10000000 		.4byte	.LFE40-.LFB40
 3019 099e 01       		.uleb128 0x1
 3020 099f 9C       		.byte	0x9c
 3021 09a0 D1090000 		.4byte	0x9d1
 3022 09a4 10       		.uleb128 0x10
 3023 09a5 2D020000 		.4byte	.LASF41
 3024 09a9 01       		.byte	0x1
 3025 09aa 930B     		.2byte	0xb93
 3026 09ac 83000000 		.4byte	0x83
 3027 09b0 F6040000 		.4byte	.LLST38
 3028 09b4 18       		.uleb128 0x18
 3029 09b5 08040000 		.4byte	.LASF85
 3030 09b9 01       		.byte	0x1
 3031 09ba 930B     		.2byte	0xb93
 3032 09bc E0000000 		.4byte	0xe0
 3033 09c0 01       		.uleb128 0x1
 3034 09c1 51       		.byte	0x51
 3035 09c2 17       		.uleb128 0x17
 3036 09c3 D5000000 		.4byte	.LASF86
 3037 09c7 01       		.byte	0x1
 3038 09c8 950B     		.2byte	0xb95
 3039 09ca E0000000 		.4byte	0xe0
 3040 09ce 01       		.uleb128 0x1
 3041 09cf 50       		.byte	0x50
 3042 09d0 00       		.byte	0
 3043 09d1 13       		.uleb128 0x13
 3044 09d2 CE010000 		.4byte	.LASF87
 3045 09d6 01       		.byte	0x1
 3046 09d7 AD0B     		.2byte	0xbad
 3047 09d9 E0000000 		.4byte	0xe0
 3048 09dd 00000000 		.4byte	.LFB41
 3049 09e1 0C000000 		.4byte	.LFE41-.LFB41
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 112


 3050 09e5 01       		.uleb128 0x1
 3051 09e6 9C       		.byte	0x9c
 3052 09e7 FC090000 		.4byte	0x9fc
 3053 09eb 10       		.uleb128 0x10
 3054 09ec 2D020000 		.4byte	.LASF41
 3055 09f0 01       		.byte	0x1
 3056 09f1 AD0B     		.2byte	0xbad
 3057 09f3 83000000 		.4byte	0x83
 3058 09f7 17050000 		.4byte	.LLST39
 3059 09fb 00       		.byte	0
 3060 09fc 0F       		.uleb128 0xf
 3061 09fd 83020000 		.4byte	.LASF88
 3062 0a01 01       		.byte	0x1
 3063 0a02 E60B     		.2byte	0xbe6
 3064 0a04 00000000 		.4byte	.LFB43
 3065 0a08 70000000 		.4byte	.LFE43-.LFB43
 3066 0a0c 01       		.uleb128 0x1
 3067 0a0d 9C       		.byte	0x9c
 3068 0a0e 210A0000 		.4byte	0xa21
 3069 0a12 18       		.uleb128 0x18
 3070 0a13 D5050000 		.4byte	.LASF89
 3071 0a17 01       		.byte	0x1
 3072 0a18 E60B     		.2byte	0xbe6
 3073 0a1a 210A0000 		.4byte	0xa21
 3074 0a1e 01       		.uleb128 0x1
 3075 0a1f 50       		.byte	0x50
 3076 0a20 00       		.byte	0
 3077 0a21 06       		.uleb128 0x6
 3078 0a22 04       		.byte	0x4
 3079 0a23 83000000 		.4byte	0x83
 3080 0a27 2F       		.uleb128 0x2f
 3081 0a28 E0000000 		.4byte	0xe0
 3082 0a2c 370A0000 		.4byte	0xa37
 3083 0a30 30       		.uleb128 0x30
 3084 0a31 D9000000 		.4byte	0xd9
 3085 0a35 04       		.byte	0x4
 3086 0a36 00       		.byte	0
 3087 0a37 31       		.uleb128 0x31
 3088 0a38 B4050000 		.4byte	.LASF90
 3089 0a3c 01       		.byte	0x1
 3090 0a3d 23       		.byte	0x23
 3091 0a3e 270A0000 		.4byte	0xa27
 3092 0a42 05       		.uleb128 0x5
 3093 0a43 03       		.byte	0x3
 3094 0a44 00000000 		.4byte	CySysTickCallbacks
 3095 0a48 32       		.uleb128 0x32
 3096 0a49 16010000 		.4byte	.LASF91
 3097 0a4d 01       		.byte	0x1
 3098 0a4e 36       		.byte	0x36
 3099 0a4f 83000000 		.4byte	0x83
 3100 0a53 05       		.uleb128 0x5
 3101 0a54 03       		.byte	0x3
 3102 0a55 00000000 		.4byte	CySysTickInitVar
 3103 0a59 32       		.uleb128 0x32
 3104 0a5a 34040000 		.4byte	.LASF92
 3105 0a5e 01       		.byte	0x1
 3106 0a5f 1C       		.byte	0x1c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 113


 3107 0a60 83000000 		.4byte	0x83
 3108 0a64 05       		.uleb128 0x5
 3109 0a65 03       		.byte	0x3
 3110 0a66 00000000 		.4byte	cydelayFreqHz
 3111 0a6a 32       		.uleb128 0x32
 3112 0a6b E9010000 		.4byte	.LASF93
 3113 0a6f 01       		.byte	0x1
 3114 0a70 1D       		.byte	0x1d
 3115 0a71 83000000 		.4byte	0x83
 3116 0a75 05       		.uleb128 0x5
 3117 0a76 03       		.byte	0x3
 3118 0a77 00000000 		.4byte	cydelayFreqKhz
 3119 0a7b 32       		.uleb128 0x32
 3120 0a7c 10060000 		.4byte	.LASF94
 3121 0a80 01       		.byte	0x1
 3122 0a81 1E       		.byte	0x1e
 3123 0a82 6B000000 		.4byte	0x6b
 3124 0a86 05       		.uleb128 0x5
 3125 0a87 03       		.byte	0x3
 3126 0a88 00000000 		.4byte	cydelayFreqMhz
 3127 0a8c 32       		.uleb128 0x32
 3128 0a8d 62020000 		.4byte	.LASF95
 3129 0a91 01       		.byte	0x1
 3130 0a92 1F       		.byte	0x1f
 3131 0a93 83000000 		.4byte	0x83
 3132 0a97 05       		.uleb128 0x5
 3133 0a98 03       		.byte	0x3
 3134 0a99 00000000 		.4byte	cydelay32kMs
 3135 0a9d 2F       		.uleb128 0x2f
 3136 0a9e 6B000000 		.4byte	0x6b
 3137 0aa2 AD0A0000 		.4byte	0xaad
 3138 0aa6 30       		.uleb128 0x30
 3139 0aa7 D9000000 		.4byte	0xd9
 3140 0aab 2D       		.byte	0x2d
 3141 0aac 00       		.byte	0
 3142 0aad 32       		.uleb128 0x32
 3143 0aae 11040000 		.4byte	.LASF96
 3144 0ab2 01       		.byte	0x1
 3145 0ab3 3B       		.byte	0x3b
 3146 0ab4 BE0A0000 		.4byte	0xabe
 3147 0ab8 05       		.uleb128 0x5
 3148 0ab9 03       		.byte	0x3
 3149 0aba 00000000 		.4byte	cyImoFreqMhz2Reg
 3150 0abe 33       		.uleb128 0x33
 3151 0abf 9D0A0000 		.4byte	0xa9d
 3152 0ac3 34       		.uleb128 0x34
 3153 0ac4 00030000 		.4byte	.LASF103
 3154 0ac8 03       		.byte	0x3
 3155 0ac9 61       		.byte	0x61
 3156 0aca 6B000000 		.4byte	0x6b
 3157 0ace 35       		.uleb128 0x35
 3158 0acf 59040000 		.4byte	.LASF97
 3159 0ad3 03       		.byte	0x3
 3160 0ad4 62       		.byte	0x62
 3161 0ad5 DF0A0000 		.4byte	0xadf
 3162 0ad9 36       		.uleb128 0x36
 3163 0ada 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 114


 3164 0ade 00       		.byte	0
 3165 0adf 37       		.uleb128 0x37
 3166 0ae0 AC040000 		.4byte	.LASF104
 3167 0ae4 03       		.byte	0x3
 3168 0ae5 5D       		.byte	0x5d
 3169 0ae6 36       		.uleb128 0x36
 3170 0ae7 83000000 		.4byte	0x83
 3171 0aeb 00       		.byte	0
 3172 0aec 00       		.byte	0
 3173              		.section	.debug_abbrev,"",%progbits
 3174              	.Ldebug_abbrev0:
 3175 0000 01       		.uleb128 0x1
 3176 0001 11       		.uleb128 0x11
 3177 0002 01       		.byte	0x1
 3178 0003 25       		.uleb128 0x25
 3179 0004 0E       		.uleb128 0xe
 3180 0005 13       		.uleb128 0x13
 3181 0006 0B       		.uleb128 0xb
 3182 0007 03       		.uleb128 0x3
 3183 0008 0E       		.uleb128 0xe
 3184 0009 1B       		.uleb128 0x1b
 3185 000a 0E       		.uleb128 0xe
 3186 000b 55       		.uleb128 0x55
 3187 000c 17       		.uleb128 0x17
 3188 000d 11       		.uleb128 0x11
 3189 000e 01       		.uleb128 0x1
 3190 000f 10       		.uleb128 0x10
 3191 0010 17       		.uleb128 0x17
 3192 0011 00       		.byte	0
 3193 0012 00       		.byte	0
 3194 0013 02       		.uleb128 0x2
 3195 0014 24       		.uleb128 0x24
 3196 0015 00       		.byte	0
 3197 0016 0B       		.uleb128 0xb
 3198 0017 0B       		.uleb128 0xb
 3199 0018 3E       		.uleb128 0x3e
 3200 0019 0B       		.uleb128 0xb
 3201 001a 03       		.uleb128 0x3
 3202 001b 0E       		.uleb128 0xe
 3203 001c 00       		.byte	0
 3204 001d 00       		.byte	0
 3205 001e 03       		.uleb128 0x3
 3206 001f 24       		.uleb128 0x24
 3207 0020 00       		.byte	0
 3208 0021 0B       		.uleb128 0xb
 3209 0022 0B       		.uleb128 0xb
 3210 0023 3E       		.uleb128 0x3e
 3211 0024 0B       		.uleb128 0xb
 3212 0025 03       		.uleb128 0x3
 3213 0026 08       		.uleb128 0x8
 3214 0027 00       		.byte	0
 3215 0028 00       		.byte	0
 3216 0029 04       		.uleb128 0x4
 3217 002a 16       		.uleb128 0x16
 3218 002b 00       		.byte	0
 3219 002c 03       		.uleb128 0x3
 3220 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 115


 3221 002e 3A       		.uleb128 0x3a
 3222 002f 0B       		.uleb128 0xb
 3223 0030 3B       		.uleb128 0x3b
 3224 0031 05       		.uleb128 0x5
 3225 0032 49       		.uleb128 0x49
 3226 0033 13       		.uleb128 0x13
 3227 0034 00       		.byte	0
 3228 0035 00       		.byte	0
 3229 0036 05       		.uleb128 0x5
 3230 0037 35       		.uleb128 0x35
 3231 0038 00       		.byte	0
 3232 0039 49       		.uleb128 0x49
 3233 003a 13       		.uleb128 0x13
 3234 003b 00       		.byte	0
 3235 003c 00       		.byte	0
 3236 003d 06       		.uleb128 0x6
 3237 003e 0F       		.uleb128 0xf
 3238 003f 00       		.byte	0
 3239 0040 0B       		.uleb128 0xb
 3240 0041 0B       		.uleb128 0xb
 3241 0042 49       		.uleb128 0x49
 3242 0043 13       		.uleb128 0x13
 3243 0044 00       		.byte	0
 3244 0045 00       		.byte	0
 3245 0046 07       		.uleb128 0x7
 3246 0047 15       		.uleb128 0x15
 3247 0048 00       		.byte	0
 3248 0049 27       		.uleb128 0x27
 3249 004a 19       		.uleb128 0x19
 3250 004b 00       		.byte	0
 3251 004c 00       		.byte	0
 3252 004d 08       		.uleb128 0x8
 3253 004e 16       		.uleb128 0x16
 3254 004f 00       		.byte	0
 3255 0050 03       		.uleb128 0x3
 3256 0051 0E       		.uleb128 0xe
 3257 0052 3A       		.uleb128 0x3a
 3258 0053 0B       		.uleb128 0xb
 3259 0054 3B       		.uleb128 0x3b
 3260 0055 0B       		.uleb128 0xb
 3261 0056 49       		.uleb128 0x49
 3262 0057 13       		.uleb128 0x13
 3263 0058 00       		.byte	0
 3264 0059 00       		.byte	0
 3265 005a 09       		.uleb128 0x9
 3266 005b 2E       		.uleb128 0x2e
 3267 005c 00       		.byte	0
 3268 005d 3F       		.uleb128 0x3f
 3269 005e 19       		.uleb128 0x19
 3270 005f 03       		.uleb128 0x3
 3271 0060 0E       		.uleb128 0xe
 3272 0061 3A       		.uleb128 0x3a
 3273 0062 0B       		.uleb128 0xb
 3274 0063 3B       		.uleb128 0x3b
 3275 0064 05       		.uleb128 0x5
 3276 0065 27       		.uleb128 0x27
 3277 0066 19       		.uleb128 0x19
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 116


 3278 0067 20       		.uleb128 0x20
 3279 0068 0B       		.uleb128 0xb
 3280 0069 00       		.byte	0
 3281 006a 00       		.byte	0
 3282 006b 0A       		.uleb128 0xa
 3283 006c 2E       		.uleb128 0x2e
 3284 006d 01       		.byte	0x1
 3285 006e 03       		.uleb128 0x3
 3286 006f 0E       		.uleb128 0xe
 3287 0070 3A       		.uleb128 0x3a
 3288 0071 0B       		.uleb128 0xb
 3289 0072 3B       		.uleb128 0x3b
 3290 0073 05       		.uleb128 0x5
 3291 0074 27       		.uleb128 0x27
 3292 0075 19       		.uleb128 0x19
 3293 0076 20       		.uleb128 0x20
 3294 0077 0B       		.uleb128 0xb
 3295 0078 01       		.uleb128 0x1
 3296 0079 13       		.uleb128 0x13
 3297 007a 00       		.byte	0
 3298 007b 00       		.byte	0
 3299 007c 0B       		.uleb128 0xb
 3300 007d 34       		.uleb128 0x34
 3301 007e 00       		.byte	0
 3302 007f 03       		.uleb128 0x3
 3303 0080 08       		.uleb128 0x8
 3304 0081 3A       		.uleb128 0x3a
 3305 0082 0B       		.uleb128 0xb
 3306 0083 3B       		.uleb128 0x3b
 3307 0084 05       		.uleb128 0x5
 3308 0085 49       		.uleb128 0x49
 3309 0086 13       		.uleb128 0x13
 3310 0087 00       		.byte	0
 3311 0088 00       		.byte	0
 3312 0089 0C       		.uleb128 0xc
 3313 008a 2E       		.uleb128 0x2e
 3314 008b 01       		.byte	0x1
 3315 008c 3F       		.uleb128 0x3f
 3316 008d 19       		.uleb128 0x19
 3317 008e 03       		.uleb128 0x3
 3318 008f 0E       		.uleb128 0xe
 3319 0090 3A       		.uleb128 0x3a
 3320 0091 0B       		.uleb128 0xb
 3321 0092 3B       		.uleb128 0x3b
 3322 0093 05       		.uleb128 0x5
 3323 0094 27       		.uleb128 0x27
 3324 0095 19       		.uleb128 0x19
 3325 0096 20       		.uleb128 0x20
 3326 0097 0B       		.uleb128 0xb
 3327 0098 01       		.uleb128 0x1
 3328 0099 13       		.uleb128 0x13
 3329 009a 00       		.byte	0
 3330 009b 00       		.byte	0
 3331 009c 0D       		.uleb128 0xd
 3332 009d 05       		.uleb128 0x5
 3333 009e 00       		.byte	0
 3334 009f 03       		.uleb128 0x3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 117


 3335 00a0 0E       		.uleb128 0xe
 3336 00a1 3A       		.uleb128 0x3a
 3337 00a2 0B       		.uleb128 0xb
 3338 00a3 3B       		.uleb128 0x3b
 3339 00a4 05       		.uleb128 0x5
 3340 00a5 49       		.uleb128 0x49
 3341 00a6 13       		.uleb128 0x13
 3342 00a7 00       		.byte	0
 3343 00a8 00       		.byte	0
 3344 00a9 0E       		.uleb128 0xe
 3345 00aa 2E       		.uleb128 0x2e
 3346 00ab 00       		.byte	0
 3347 00ac 3F       		.uleb128 0x3f
 3348 00ad 19       		.uleb128 0x19
 3349 00ae 03       		.uleb128 0x3
 3350 00af 0E       		.uleb128 0xe
 3351 00b0 3A       		.uleb128 0x3a
 3352 00b1 0B       		.uleb128 0xb
 3353 00b2 3B       		.uleb128 0x3b
 3354 00b3 0B       		.uleb128 0xb
 3355 00b4 27       		.uleb128 0x27
 3356 00b5 19       		.uleb128 0x19
 3357 00b6 11       		.uleb128 0x11
 3358 00b7 01       		.uleb128 0x1
 3359 00b8 12       		.uleb128 0x12
 3360 00b9 06       		.uleb128 0x6
 3361 00ba 40       		.uleb128 0x40
 3362 00bb 18       		.uleb128 0x18
 3363 00bc 9742     		.uleb128 0x2117
 3364 00be 19       		.uleb128 0x19
 3365 00bf 00       		.byte	0
 3366 00c0 00       		.byte	0
 3367 00c1 0F       		.uleb128 0xf
 3368 00c2 2E       		.uleb128 0x2e
 3369 00c3 01       		.byte	0x1
 3370 00c4 3F       		.uleb128 0x3f
 3371 00c5 19       		.uleb128 0x19
 3372 00c6 03       		.uleb128 0x3
 3373 00c7 0E       		.uleb128 0xe
 3374 00c8 3A       		.uleb128 0x3a
 3375 00c9 0B       		.uleb128 0xb
 3376 00ca 3B       		.uleb128 0x3b
 3377 00cb 05       		.uleb128 0x5
 3378 00cc 27       		.uleb128 0x27
 3379 00cd 19       		.uleb128 0x19
 3380 00ce 11       		.uleb128 0x11
 3381 00cf 01       		.uleb128 0x1
 3382 00d0 12       		.uleb128 0x12
 3383 00d1 06       		.uleb128 0x6
 3384 00d2 40       		.uleb128 0x40
 3385 00d3 18       		.uleb128 0x18
 3386 00d4 9742     		.uleb128 0x2117
 3387 00d6 19       		.uleb128 0x19
 3388 00d7 01       		.uleb128 0x1
 3389 00d8 13       		.uleb128 0x13
 3390 00d9 00       		.byte	0
 3391 00da 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 118


 3392 00db 10       		.uleb128 0x10
 3393 00dc 05       		.uleb128 0x5
 3394 00dd 00       		.byte	0
 3395 00de 03       		.uleb128 0x3
 3396 00df 0E       		.uleb128 0xe
 3397 00e0 3A       		.uleb128 0x3a
 3398 00e1 0B       		.uleb128 0xb
 3399 00e2 3B       		.uleb128 0x3b
 3400 00e3 05       		.uleb128 0x5
 3401 00e4 49       		.uleb128 0x49
 3402 00e5 13       		.uleb128 0x13
 3403 00e6 02       		.uleb128 0x2
 3404 00e7 17       		.uleb128 0x17
 3405 00e8 00       		.byte	0
 3406 00e9 00       		.byte	0
 3407 00ea 11       		.uleb128 0x11
 3408 00eb 34       		.uleb128 0x34
 3409 00ec 00       		.byte	0
 3410 00ed 03       		.uleb128 0x3
 3411 00ee 0E       		.uleb128 0xe
 3412 00ef 3A       		.uleb128 0x3a
 3413 00f0 0B       		.uleb128 0xb
 3414 00f1 3B       		.uleb128 0x3b
 3415 00f2 05       		.uleb128 0x5
 3416 00f3 49       		.uleb128 0x49
 3417 00f4 13       		.uleb128 0x13
 3418 00f5 02       		.uleb128 0x2
 3419 00f6 17       		.uleb128 0x17
 3420 00f7 00       		.byte	0
 3421 00f8 00       		.byte	0
 3422 00f9 12       		.uleb128 0x12
 3423 00fa 898201   		.uleb128 0x4109
 3424 00fd 00       		.byte	0
 3425 00fe 11       		.uleb128 0x11
 3426 00ff 01       		.uleb128 0x1
 3427 0100 31       		.uleb128 0x31
 3428 0101 13       		.uleb128 0x13
 3429 0102 00       		.byte	0
 3430 0103 00       		.byte	0
 3431 0104 13       		.uleb128 0x13
 3432 0105 2E       		.uleb128 0x2e
 3433 0106 01       		.byte	0x1
 3434 0107 3F       		.uleb128 0x3f
 3435 0108 19       		.uleb128 0x19
 3436 0109 03       		.uleb128 0x3
 3437 010a 0E       		.uleb128 0xe
 3438 010b 3A       		.uleb128 0x3a
 3439 010c 0B       		.uleb128 0xb
 3440 010d 3B       		.uleb128 0x3b
 3441 010e 05       		.uleb128 0x5
 3442 010f 27       		.uleb128 0x27
 3443 0110 19       		.uleb128 0x19
 3444 0111 49       		.uleb128 0x49
 3445 0112 13       		.uleb128 0x13
 3446 0113 11       		.uleb128 0x11
 3447 0114 01       		.uleb128 0x1
 3448 0115 12       		.uleb128 0x12
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 119


 3449 0116 06       		.uleb128 0x6
 3450 0117 40       		.uleb128 0x40
 3451 0118 18       		.uleb128 0x18
 3452 0119 9742     		.uleb128 0x2117
 3453 011b 19       		.uleb128 0x19
 3454 011c 01       		.uleb128 0x1
 3455 011d 13       		.uleb128 0x13
 3456 011e 00       		.byte	0
 3457 011f 00       		.byte	0
 3458 0120 14       		.uleb128 0x14
 3459 0121 2E       		.uleb128 0x2e
 3460 0122 00       		.byte	0
 3461 0123 3F       		.uleb128 0x3f
 3462 0124 19       		.uleb128 0x19
 3463 0125 03       		.uleb128 0x3
 3464 0126 0E       		.uleb128 0xe
 3465 0127 3A       		.uleb128 0x3a
 3466 0128 0B       		.uleb128 0xb
 3467 0129 3B       		.uleb128 0x3b
 3468 012a 05       		.uleb128 0x5
 3469 012b 27       		.uleb128 0x27
 3470 012c 19       		.uleb128 0x19
 3471 012d 11       		.uleb128 0x11
 3472 012e 01       		.uleb128 0x1
 3473 012f 12       		.uleb128 0x12
 3474 0130 06       		.uleb128 0x6
 3475 0131 40       		.uleb128 0x40
 3476 0132 18       		.uleb128 0x18
 3477 0133 9742     		.uleb128 0x2117
 3478 0135 19       		.uleb128 0x19
 3479 0136 00       		.byte	0
 3480 0137 00       		.byte	0
 3481 0138 15       		.uleb128 0x15
 3482 0139 2E       		.uleb128 0x2e
 3483 013a 00       		.byte	0
 3484 013b 3F       		.uleb128 0x3f
 3485 013c 19       		.uleb128 0x19
 3486 013d 03       		.uleb128 0x3
 3487 013e 0E       		.uleb128 0xe
 3488 013f 3A       		.uleb128 0x3a
 3489 0140 0B       		.uleb128 0xb
 3490 0141 3B       		.uleb128 0x3b
 3491 0142 05       		.uleb128 0x5
 3492 0143 27       		.uleb128 0x27
 3493 0144 19       		.uleb128 0x19
 3494 0145 49       		.uleb128 0x49
 3495 0146 13       		.uleb128 0x13
 3496 0147 11       		.uleb128 0x11
 3497 0148 01       		.uleb128 0x1
 3498 0149 12       		.uleb128 0x12
 3499 014a 06       		.uleb128 0x6
 3500 014b 40       		.uleb128 0x40
 3501 014c 18       		.uleb128 0x18
 3502 014d 9742     		.uleb128 0x2117
 3503 014f 19       		.uleb128 0x19
 3504 0150 00       		.byte	0
 3505 0151 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 120


 3506 0152 16       		.uleb128 0x16
 3507 0153 2E       		.uleb128 0x2e
 3508 0154 00       		.byte	0
 3509 0155 31       		.uleb128 0x31
 3510 0156 13       		.uleb128 0x13
 3511 0157 11       		.uleb128 0x11
 3512 0158 01       		.uleb128 0x1
 3513 0159 12       		.uleb128 0x12
 3514 015a 06       		.uleb128 0x6
 3515 015b 40       		.uleb128 0x40
 3516 015c 18       		.uleb128 0x18
 3517 015d 9742     		.uleb128 0x2117
 3518 015f 19       		.uleb128 0x19
 3519 0160 00       		.byte	0
 3520 0161 00       		.byte	0
 3521 0162 17       		.uleb128 0x17
 3522 0163 34       		.uleb128 0x34
 3523 0164 00       		.byte	0
 3524 0165 03       		.uleb128 0x3
 3525 0166 0E       		.uleb128 0xe
 3526 0167 3A       		.uleb128 0x3a
 3527 0168 0B       		.uleb128 0xb
 3528 0169 3B       		.uleb128 0x3b
 3529 016a 05       		.uleb128 0x5
 3530 016b 49       		.uleb128 0x49
 3531 016c 13       		.uleb128 0x13
 3532 016d 02       		.uleb128 0x2
 3533 016e 18       		.uleb128 0x18
 3534 016f 00       		.byte	0
 3535 0170 00       		.byte	0
 3536 0171 18       		.uleb128 0x18
 3537 0172 05       		.uleb128 0x5
 3538 0173 00       		.byte	0
 3539 0174 03       		.uleb128 0x3
 3540 0175 0E       		.uleb128 0xe
 3541 0176 3A       		.uleb128 0x3a
 3542 0177 0B       		.uleb128 0xb
 3543 0178 3B       		.uleb128 0x3b
 3544 0179 05       		.uleb128 0x5
 3545 017a 49       		.uleb128 0x49
 3546 017b 13       		.uleb128 0x13
 3547 017c 02       		.uleb128 0x2
 3548 017d 18       		.uleb128 0x18
 3549 017e 00       		.byte	0
 3550 017f 00       		.byte	0
 3551 0180 19       		.uleb128 0x19
 3552 0181 2E       		.uleb128 0x2e
 3553 0182 01       		.byte	0x1
 3554 0183 3F       		.uleb128 0x3f
 3555 0184 19       		.uleb128 0x19
 3556 0185 03       		.uleb128 0x3
 3557 0186 0E       		.uleb128 0xe
 3558 0187 3A       		.uleb128 0x3a
 3559 0188 0B       		.uleb128 0xb
 3560 0189 3B       		.uleb128 0x3b
 3561 018a 05       		.uleb128 0x5
 3562 018b 27       		.uleb128 0x27
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 121


 3563 018c 19       		.uleb128 0x19
 3564 018d 49       		.uleb128 0x49
 3565 018e 13       		.uleb128 0x13
 3566 018f 20       		.uleb128 0x20
 3567 0190 0B       		.uleb128 0xb
 3568 0191 01       		.uleb128 0x1
 3569 0192 13       		.uleb128 0x13
 3570 0193 00       		.byte	0
 3571 0194 00       		.byte	0
 3572 0195 1A       		.uleb128 0x1a
 3573 0196 34       		.uleb128 0x34
 3574 0197 00       		.byte	0
 3575 0198 03       		.uleb128 0x3
 3576 0199 0E       		.uleb128 0xe
 3577 019a 3A       		.uleb128 0x3a
 3578 019b 0B       		.uleb128 0xb
 3579 019c 3B       		.uleb128 0x3b
 3580 019d 05       		.uleb128 0x5
 3581 019e 49       		.uleb128 0x49
 3582 019f 13       		.uleb128 0x13
 3583 01a0 00       		.byte	0
 3584 01a1 00       		.byte	0
 3585 01a2 1B       		.uleb128 0x1b
 3586 01a3 2E       		.uleb128 0x2e
 3587 01a4 01       		.byte	0x1
 3588 01a5 31       		.uleb128 0x31
 3589 01a6 13       		.uleb128 0x13
 3590 01a7 11       		.uleb128 0x11
 3591 01a8 01       		.uleb128 0x1
 3592 01a9 12       		.uleb128 0x12
 3593 01aa 06       		.uleb128 0x6
 3594 01ab 40       		.uleb128 0x40
 3595 01ac 18       		.uleb128 0x18
 3596 01ad 9742     		.uleb128 0x2117
 3597 01af 19       		.uleb128 0x19
 3598 01b0 01       		.uleb128 0x1
 3599 01b1 13       		.uleb128 0x13
 3600 01b2 00       		.byte	0
 3601 01b3 00       		.byte	0
 3602 01b4 1C       		.uleb128 0x1c
 3603 01b5 05       		.uleb128 0x5
 3604 01b6 00       		.byte	0
 3605 01b7 31       		.uleb128 0x31
 3606 01b8 13       		.uleb128 0x13
 3607 01b9 02       		.uleb128 0x2
 3608 01ba 17       		.uleb128 0x17
 3609 01bb 00       		.byte	0
 3610 01bc 00       		.byte	0
 3611 01bd 1D       		.uleb128 0x1d
 3612 01be 05       		.uleb128 0x5
 3613 01bf 00       		.byte	0
 3614 01c0 31       		.uleb128 0x31
 3615 01c1 13       		.uleb128 0x13
 3616 01c2 02       		.uleb128 0x2
 3617 01c3 18       		.uleb128 0x18
 3618 01c4 00       		.byte	0
 3619 01c5 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 122


 3620 01c6 1E       		.uleb128 0x1e
 3621 01c7 34       		.uleb128 0x34
 3622 01c8 00       		.byte	0
 3623 01c9 31       		.uleb128 0x31
 3624 01ca 13       		.uleb128 0x13
 3625 01cb 02       		.uleb128 0x2
 3626 01cc 18       		.uleb128 0x18
 3627 01cd 00       		.byte	0
 3628 01ce 00       		.byte	0
 3629 01cf 1F       		.uleb128 0x1f
 3630 01d0 34       		.uleb128 0x34
 3631 01d1 00       		.byte	0
 3632 01d2 31       		.uleb128 0x31
 3633 01d3 13       		.uleb128 0x13
 3634 01d4 1C       		.uleb128 0x1c
 3635 01d5 06       		.uleb128 0x6
 3636 01d6 00       		.byte	0
 3637 01d7 00       		.byte	0
 3638 01d8 20       		.uleb128 0x20
 3639 01d9 34       		.uleb128 0x34
 3640 01da 00       		.byte	0
 3641 01db 03       		.uleb128 0x3
 3642 01dc 0E       		.uleb128 0xe
 3643 01dd 3A       		.uleb128 0x3a
 3644 01de 0B       		.uleb128 0xb
 3645 01df 3B       		.uleb128 0x3b
 3646 01e0 05       		.uleb128 0x5
 3647 01e1 49       		.uleb128 0x49
 3648 01e2 13       		.uleb128 0x13
 3649 01e3 1C       		.uleb128 0x1c
 3650 01e4 06       		.uleb128 0x6
 3651 01e5 00       		.byte	0
 3652 01e6 00       		.byte	0
 3653 01e7 21       		.uleb128 0x21
 3654 01e8 898201   		.uleb128 0x4109
 3655 01eb 01       		.byte	0x1
 3656 01ec 11       		.uleb128 0x11
 3657 01ed 01       		.uleb128 0x1
 3658 01ee 31       		.uleb128 0x31
 3659 01ef 13       		.uleb128 0x13
 3660 01f0 01       		.uleb128 0x1
 3661 01f1 13       		.uleb128 0x13
 3662 01f2 00       		.byte	0
 3663 01f3 00       		.byte	0
 3664 01f4 22       		.uleb128 0x22
 3665 01f5 8A8201   		.uleb128 0x410a
 3666 01f8 00       		.byte	0
 3667 01f9 02       		.uleb128 0x2
 3668 01fa 18       		.uleb128 0x18
 3669 01fb 9142     		.uleb128 0x2111
 3670 01fd 18       		.uleb128 0x18
 3671 01fe 00       		.byte	0
 3672 01ff 00       		.byte	0
 3673 0200 23       		.uleb128 0x23
 3674 0201 898201   		.uleb128 0x4109
 3675 0204 01       		.byte	0x1
 3676 0205 11       		.uleb128 0x11
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 123


 3677 0206 01       		.uleb128 0x1
 3678 0207 31       		.uleb128 0x31
 3679 0208 13       		.uleb128 0x13
 3680 0209 00       		.byte	0
 3681 020a 00       		.byte	0
 3682 020b 24       		.uleb128 0x24
 3683 020c 1D       		.uleb128 0x1d
 3684 020d 00       		.byte	0
 3685 020e 31       		.uleb128 0x31
 3686 020f 13       		.uleb128 0x13
 3687 0210 52       		.uleb128 0x52
 3688 0211 01       		.uleb128 0x1
 3689 0212 55       		.uleb128 0x55
 3690 0213 17       		.uleb128 0x17
 3691 0214 58       		.uleb128 0x58
 3692 0215 0B       		.uleb128 0xb
 3693 0216 59       		.uleb128 0x59
 3694 0217 05       		.uleb128 0x5
 3695 0218 00       		.byte	0
 3696 0219 00       		.byte	0
 3697 021a 25       		.uleb128 0x25
 3698 021b 2E       		.uleb128 0x2e
 3699 021c 01       		.byte	0x1
 3700 021d 3F       		.uleb128 0x3f
 3701 021e 19       		.uleb128 0x19
 3702 021f 03       		.uleb128 0x3
 3703 0220 0E       		.uleb128 0xe
 3704 0221 3A       		.uleb128 0x3a
 3705 0222 0B       		.uleb128 0xb
 3706 0223 3B       		.uleb128 0x3b
 3707 0224 05       		.uleb128 0x5
 3708 0225 27       		.uleb128 0x27
 3709 0226 19       		.uleb128 0x19
 3710 0227 11       		.uleb128 0x11
 3711 0228 01       		.uleb128 0x1
 3712 0229 12       		.uleb128 0x12
 3713 022a 06       		.uleb128 0x6
 3714 022b 40       		.uleb128 0x40
 3715 022c 18       		.uleb128 0x18
 3716 022d 9642     		.uleb128 0x2116
 3717 022f 19       		.uleb128 0x19
 3718 0230 01       		.uleb128 0x1
 3719 0231 13       		.uleb128 0x13
 3720 0232 00       		.byte	0
 3721 0233 00       		.byte	0
 3722 0234 26       		.uleb128 0x26
 3723 0235 34       		.uleb128 0x34
 3724 0236 00       		.byte	0
 3725 0237 03       		.uleb128 0x3
 3726 0238 08       		.uleb128 0x8
 3727 0239 3A       		.uleb128 0x3a
 3728 023a 0B       		.uleb128 0xb
 3729 023b 3B       		.uleb128 0x3b
 3730 023c 05       		.uleb128 0x5
 3731 023d 49       		.uleb128 0x49
 3732 023e 13       		.uleb128 0x13
 3733 023f 02       		.uleb128 0x2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 124


 3734 0240 17       		.uleb128 0x17
 3735 0241 00       		.byte	0
 3736 0242 00       		.byte	0
 3737 0243 27       		.uleb128 0x27
 3738 0244 1D       		.uleb128 0x1d
 3739 0245 01       		.byte	0x1
 3740 0246 31       		.uleb128 0x31
 3741 0247 13       		.uleb128 0x13
 3742 0248 52       		.uleb128 0x52
 3743 0249 01       		.uleb128 0x1
 3744 024a 55       		.uleb128 0x55
 3745 024b 17       		.uleb128 0x17
 3746 024c 58       		.uleb128 0x58
 3747 024d 0B       		.uleb128 0xb
 3748 024e 59       		.uleb128 0x59
 3749 024f 05       		.uleb128 0x5
 3750 0250 01       		.uleb128 0x1
 3751 0251 13       		.uleb128 0x13
 3752 0252 00       		.byte	0
 3753 0253 00       		.byte	0
 3754 0254 28       		.uleb128 0x28
 3755 0255 05       		.uleb128 0x5
 3756 0256 00       		.byte	0
 3757 0257 31       		.uleb128 0x31
 3758 0258 13       		.uleb128 0x13
 3759 0259 1C       		.uleb128 0x1c
 3760 025a 0B       		.uleb128 0xb
 3761 025b 00       		.byte	0
 3762 025c 00       		.byte	0
 3763 025d 29       		.uleb128 0x29
 3764 025e 0B       		.uleb128 0xb
 3765 025f 01       		.byte	0x1
 3766 0260 55       		.uleb128 0x55
 3767 0261 17       		.uleb128 0x17
 3768 0262 00       		.byte	0
 3769 0263 00       		.byte	0
 3770 0264 2A       		.uleb128 0x2a
 3771 0265 34       		.uleb128 0x34
 3772 0266 00       		.byte	0
 3773 0267 31       		.uleb128 0x31
 3774 0268 13       		.uleb128 0x13
 3775 0269 02       		.uleb128 0x2
 3776 026a 17       		.uleb128 0x17
 3777 026b 00       		.byte	0
 3778 026c 00       		.byte	0
 3779 026d 2B       		.uleb128 0x2b
 3780 026e 1D       		.uleb128 0x1d
 3781 026f 00       		.byte	0
 3782 0270 31       		.uleb128 0x31
 3783 0271 13       		.uleb128 0x13
 3784 0272 11       		.uleb128 0x11
 3785 0273 01       		.uleb128 0x1
 3786 0274 12       		.uleb128 0x12
 3787 0275 06       		.uleb128 0x6
 3788 0276 58       		.uleb128 0x58
 3789 0277 0B       		.uleb128 0xb
 3790 0278 59       		.uleb128 0x59
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 125


 3791 0279 05       		.uleb128 0x5
 3792 027a 00       		.byte	0
 3793 027b 00       		.byte	0
 3794 027c 2C       		.uleb128 0x2c
 3795 027d 2E       		.uleb128 0x2e
 3796 027e 01       		.byte	0x1
 3797 027f 31       		.uleb128 0x31
 3798 0280 13       		.uleb128 0x13
 3799 0281 11       		.uleb128 0x11
 3800 0282 01       		.uleb128 0x1
 3801 0283 12       		.uleb128 0x12
 3802 0284 06       		.uleb128 0x6
 3803 0285 40       		.uleb128 0x40
 3804 0286 18       		.uleb128 0x18
 3805 0287 9642     		.uleb128 0x2116
 3806 0289 19       		.uleb128 0x19
 3807 028a 01       		.uleb128 0x1
 3808 028b 13       		.uleb128 0x13
 3809 028c 00       		.byte	0
 3810 028d 00       		.byte	0
 3811 028e 2D       		.uleb128 0x2d
 3812 028f 34       		.uleb128 0x34
 3813 0290 00       		.byte	0
 3814 0291 31       		.uleb128 0x31
 3815 0292 13       		.uleb128 0x13
 3816 0293 00       		.byte	0
 3817 0294 00       		.byte	0
 3818 0295 2E       		.uleb128 0x2e
 3819 0296 0B       		.uleb128 0xb
 3820 0297 01       		.byte	0x1
 3821 0298 11       		.uleb128 0x11
 3822 0299 01       		.uleb128 0x1
 3823 029a 12       		.uleb128 0x12
 3824 029b 06       		.uleb128 0x6
 3825 029c 01       		.uleb128 0x1
 3826 029d 13       		.uleb128 0x13
 3827 029e 00       		.byte	0
 3828 029f 00       		.byte	0
 3829 02a0 2F       		.uleb128 0x2f
 3830 02a1 01       		.uleb128 0x1
 3831 02a2 01       		.byte	0x1
 3832 02a3 49       		.uleb128 0x49
 3833 02a4 13       		.uleb128 0x13
 3834 02a5 01       		.uleb128 0x1
 3835 02a6 13       		.uleb128 0x13
 3836 02a7 00       		.byte	0
 3837 02a8 00       		.byte	0
 3838 02a9 30       		.uleb128 0x30
 3839 02aa 21       		.uleb128 0x21
 3840 02ab 00       		.byte	0
 3841 02ac 49       		.uleb128 0x49
 3842 02ad 13       		.uleb128 0x13
 3843 02ae 2F       		.uleb128 0x2f
 3844 02af 0B       		.uleb128 0xb
 3845 02b0 00       		.byte	0
 3846 02b1 00       		.byte	0
 3847 02b2 31       		.uleb128 0x31
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 126


 3848 02b3 34       		.uleb128 0x34
 3849 02b4 00       		.byte	0
 3850 02b5 03       		.uleb128 0x3
 3851 02b6 0E       		.uleb128 0xe
 3852 02b7 3A       		.uleb128 0x3a
 3853 02b8 0B       		.uleb128 0xb
 3854 02b9 3B       		.uleb128 0x3b
 3855 02ba 0B       		.uleb128 0xb
 3856 02bb 49       		.uleb128 0x49
 3857 02bc 13       		.uleb128 0x13
 3858 02bd 02       		.uleb128 0x2
 3859 02be 18       		.uleb128 0x18
 3860 02bf 00       		.byte	0
 3861 02c0 00       		.byte	0
 3862 02c1 32       		.uleb128 0x32
 3863 02c2 34       		.uleb128 0x34
 3864 02c3 00       		.byte	0
 3865 02c4 03       		.uleb128 0x3
 3866 02c5 0E       		.uleb128 0xe
 3867 02c6 3A       		.uleb128 0x3a
 3868 02c7 0B       		.uleb128 0xb
 3869 02c8 3B       		.uleb128 0x3b
 3870 02c9 0B       		.uleb128 0xb
 3871 02ca 49       		.uleb128 0x49
 3872 02cb 13       		.uleb128 0x13
 3873 02cc 3F       		.uleb128 0x3f
 3874 02cd 19       		.uleb128 0x19
 3875 02ce 02       		.uleb128 0x2
 3876 02cf 18       		.uleb128 0x18
 3877 02d0 00       		.byte	0
 3878 02d1 00       		.byte	0
 3879 02d2 33       		.uleb128 0x33
 3880 02d3 26       		.uleb128 0x26
 3881 02d4 00       		.byte	0
 3882 02d5 49       		.uleb128 0x49
 3883 02d6 13       		.uleb128 0x13
 3884 02d7 00       		.byte	0
 3885 02d8 00       		.byte	0
 3886 02d9 34       		.uleb128 0x34
 3887 02da 2E       		.uleb128 0x2e
 3888 02db 00       		.byte	0
 3889 02dc 3F       		.uleb128 0x3f
 3890 02dd 19       		.uleb128 0x19
 3891 02de 03       		.uleb128 0x3
 3892 02df 0E       		.uleb128 0xe
 3893 02e0 3A       		.uleb128 0x3a
 3894 02e1 0B       		.uleb128 0xb
 3895 02e2 3B       		.uleb128 0x3b
 3896 02e3 0B       		.uleb128 0xb
 3897 02e4 27       		.uleb128 0x27
 3898 02e5 19       		.uleb128 0x19
 3899 02e6 49       		.uleb128 0x49
 3900 02e7 13       		.uleb128 0x13
 3901 02e8 3C       		.uleb128 0x3c
 3902 02e9 19       		.uleb128 0x19
 3903 02ea 00       		.byte	0
 3904 02eb 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 127


 3905 02ec 35       		.uleb128 0x35
 3906 02ed 2E       		.uleb128 0x2e
 3907 02ee 01       		.byte	0x1
 3908 02ef 3F       		.uleb128 0x3f
 3909 02f0 19       		.uleb128 0x19
 3910 02f1 03       		.uleb128 0x3
 3911 02f2 0E       		.uleb128 0xe
 3912 02f3 3A       		.uleb128 0x3a
 3913 02f4 0B       		.uleb128 0xb
 3914 02f5 3B       		.uleb128 0x3b
 3915 02f6 0B       		.uleb128 0xb
 3916 02f7 27       		.uleb128 0x27
 3917 02f8 19       		.uleb128 0x19
 3918 02f9 3C       		.uleb128 0x3c
 3919 02fa 19       		.uleb128 0x19
 3920 02fb 01       		.uleb128 0x1
 3921 02fc 13       		.uleb128 0x13
 3922 02fd 00       		.byte	0
 3923 02fe 00       		.byte	0
 3924 02ff 36       		.uleb128 0x36
 3925 0300 05       		.uleb128 0x5
 3926 0301 00       		.byte	0
 3927 0302 49       		.uleb128 0x49
 3928 0303 13       		.uleb128 0x13
 3929 0304 00       		.byte	0
 3930 0305 00       		.byte	0
 3931 0306 37       		.uleb128 0x37
 3932 0307 2E       		.uleb128 0x2e
 3933 0308 01       		.byte	0x1
 3934 0309 3F       		.uleb128 0x3f
 3935 030a 19       		.uleb128 0x19
 3936 030b 03       		.uleb128 0x3
 3937 030c 0E       		.uleb128 0xe
 3938 030d 3A       		.uleb128 0x3a
 3939 030e 0B       		.uleb128 0xb
 3940 030f 3B       		.uleb128 0x3b
 3941 0310 0B       		.uleb128 0xb
 3942 0311 27       		.uleb128 0x27
 3943 0312 19       		.uleb128 0x19
 3944 0313 3C       		.uleb128 0x3c
 3945 0314 19       		.uleb128 0x19
 3946 0315 00       		.byte	0
 3947 0316 00       		.byte	0
 3948 0317 00       		.byte	0
 3949              		.section	.debug_loc,"",%progbits
 3950              	.Ldebug_loc0:
 3951              	.LLST0:
 3952 0000 00000000 		.4byte	.LVL0
 3953 0004 07000000 		.4byte	.LVL1-1
 3954 0008 0100     		.2byte	0x1
 3955 000a 50       		.byte	0x50
 3956 000b 07000000 		.4byte	.LVL1-1
 3957 000f 1A000000 		.4byte	.LVL5
 3958 0013 0100     		.2byte	0x1
 3959 0015 54       		.byte	0x54
 3960 0016 1A000000 		.4byte	.LVL5
 3961 001a 20000000 		.4byte	.LFE2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 128


 3962 001e 0400     		.2byte	0x4
 3963 0020 F3       		.byte	0xf3
 3964 0021 01       		.uleb128 0x1
 3965 0022 50       		.byte	0x50
 3966 0023 9F       		.byte	0x9f
 3967 0024 00000000 		.4byte	0
 3968 0028 00000000 		.4byte	0
 3969              	.LLST1:
 3970 002c 08000000 		.4byte	.LVL1
 3971 0030 19000000 		.4byte	.LVL4-1
 3972 0034 0100     		.2byte	0x1
 3973 0036 50       		.byte	0x50
 3974 0037 00000000 		.4byte	0
 3975 003b 00000000 		.4byte	0
 3976              	.LLST2:
 3977 003f 10000000 		.4byte	.LVL2
 3978 0043 14000000 		.4byte	.LVL3
 3979 0047 0100     		.2byte	0x1
 3980 0049 52       		.byte	0x52
 3981 004a 14000000 		.4byte	.LVL3
 3982 004e 19000000 		.4byte	.LVL4-1
 3983 0052 0100     		.2byte	0x1
 3984 0054 53       		.byte	0x53
 3985 0055 00000000 		.4byte	0
 3986 0059 00000000 		.4byte	0
 3987              	.LLST3:
 3988 005d 06000000 		.4byte	.LVL6
 3989 0061 0D000000 		.4byte	.LVL8-1
 3990 0065 0100     		.2byte	0x1
 3991 0067 50       		.byte	0x50
 3992 0068 00000000 		.4byte	0
 3993 006c 00000000 		.4byte	0
 3994              	.LLST4:
 3995 0070 0A000000 		.4byte	.LVL7
 3996 0074 12000000 		.4byte	.LVL9
 3997 0078 0500     		.2byte	0x5
 3998 007a 74       		.byte	0x74
 3999 007b 00       		.sleb128 0
 4000 007c 37       		.byte	0x37
 4001 007d 1A       		.byte	0x1a
 4002 007e 9F       		.byte	0x9f
 4003 007f 12000000 		.4byte	.LVL9
 4004 0083 18000000 		.4byte	.LFE3
 4005 0087 0100     		.2byte	0x1
 4006 0089 50       		.byte	0x50
 4007 008a 00000000 		.4byte	0
 4008 008e 00000000 		.4byte	0
 4009              	.LLST5:
 4010 0092 00000000 		.4byte	.LVL10
 4011 0096 07000000 		.4byte	.LVL11-1
 4012 009a 0100     		.2byte	0x1
 4013 009c 50       		.byte	0x50
 4014 009d 07000000 		.4byte	.LVL11-1
 4015 00a1 1E000000 		.4byte	.LVL13
 4016 00a5 0100     		.2byte	0x1
 4017 00a7 55       		.byte	0x55
 4018 00a8 1E000000 		.4byte	.LVL13
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 129


 4019 00ac 28000000 		.4byte	.LFE4
 4020 00b0 0400     		.2byte	0x4
 4021 00b2 F3       		.byte	0xf3
 4022 00b3 01       		.uleb128 0x1
 4023 00b4 50       		.byte	0x50
 4024 00b5 9F       		.byte	0x9f
 4025 00b6 00000000 		.4byte	0
 4026 00ba 00000000 		.4byte	0
 4027              	.LLST6:
 4028 00be 08000000 		.4byte	.LVL11
 4029 00c2 1D000000 		.4byte	.LVL12-1
 4030 00c6 0100     		.2byte	0x1
 4031 00c8 50       		.byte	0x50
 4032 00c9 00000000 		.4byte	0
 4033 00cd 00000000 		.4byte	0
 4034              	.LLST7:
 4035 00d1 00000000 		.4byte	.LVL14
 4036 00d5 08000000 		.4byte	.LVL15
 4037 00d9 0100     		.2byte	0x1
 4038 00db 50       		.byte	0x50
 4039 00dc 08000000 		.4byte	.LVL15
 4040 00e0 14000000 		.4byte	.LFE10
 4041 00e4 0100     		.2byte	0x1
 4042 00e6 52       		.byte	0x52
 4043 00e7 00000000 		.4byte	0
 4044 00eb 00000000 		.4byte	0
 4045              	.LLST8:
 4046 00ef 0A000000 		.4byte	.LVL16
 4047 00f3 0C000000 		.4byte	.LVL17
 4048 00f7 0500     		.2byte	0x5
 4049 00f9 70       		.byte	0x70
 4050 00fa 00       		.sleb128 0
 4051 00fb 49       		.byte	0x49
 4052 00fc 1A       		.byte	0x1a
 4053 00fd 9F       		.byte	0x9f
 4054 00fe 0C000000 		.4byte	.LVL17
 4055 0102 14000000 		.4byte	.LFE10
 4056 0106 0100     		.2byte	0x1
 4057 0108 50       		.byte	0x50
 4058 0109 00000000 		.4byte	0
 4059 010d 00000000 		.4byte	0
 4060              	.LLST9:
 4061 0111 00000000 		.4byte	.LVL20
 4062 0115 04000000 		.4byte	.LVL21
 4063 0119 0100     		.2byte	0x1
 4064 011b 50       		.byte	0x50
 4065 011c 04000000 		.4byte	.LVL21
 4066 0120 0E000000 		.4byte	.LFE13
 4067 0124 0400     		.2byte	0x4
 4068 0126 F3       		.byte	0xf3
 4069 0127 01       		.uleb128 0x1
 4070 0128 50       		.byte	0x50
 4071 0129 9F       		.byte	0x9f
 4072 012a 00000000 		.4byte	0
 4073 012e 00000000 		.4byte	0
 4074              	.LLST10:
 4075 0132 00000000 		.4byte	.LVL23
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 130


 4076 0136 04000000 		.4byte	.LVL24
 4077 013a 0100     		.2byte	0x1
 4078 013c 50       		.byte	0x50
 4079 013d 04000000 		.4byte	.LVL24
 4080 0141 0C000000 		.4byte	.LFE14
 4081 0145 0400     		.2byte	0x4
 4082 0147 F3       		.byte	0xf3
 4083 0148 01       		.uleb128 0x1
 4084 0149 50       		.byte	0x50
 4085 014a 9F       		.byte	0x9f
 4086 014b 00000000 		.4byte	0
 4087 014f 00000000 		.4byte	0
 4088              	.LLST11:
 4089 0153 00000000 		.4byte	.LVL25
 4090 0157 04000000 		.4byte	.LVL26
 4091 015b 0100     		.2byte	0x1
 4092 015d 50       		.byte	0x50
 4093 015e 04000000 		.4byte	.LVL26
 4094 0162 10000000 		.4byte	.LFE15
 4095 0166 0400     		.2byte	0x4
 4096 0168 F3       		.byte	0xf3
 4097 0169 01       		.uleb128 0x1
 4098 016a 50       		.byte	0x50
 4099 016b 9F       		.byte	0x9f
 4100 016c 00000000 		.4byte	0
 4101 0170 00000000 		.4byte	0
 4102              	.LLST12:
 4103 0174 00000000 		.4byte	.LVL28
 4104 0178 04000000 		.4byte	.LVL29
 4105 017c 0100     		.2byte	0x1
 4106 017e 50       		.byte	0x50
 4107 017f 04000000 		.4byte	.LVL29
 4108 0183 10000000 		.4byte	.LFE16
 4109 0187 0400     		.2byte	0x4
 4110 0189 F3       		.byte	0xf3
 4111 018a 01       		.uleb128 0x1
 4112 018b 50       		.byte	0x50
 4113 018c 9F       		.byte	0x9f
 4114 018d 00000000 		.4byte	0
 4115 0191 00000000 		.4byte	0
 4116              	.LLST13:
 4117 0195 00000000 		.4byte	.LVL30
 4118 0199 09000000 		.4byte	.LVL32-1
 4119 019d 0100     		.2byte	0x1
 4120 019f 50       		.byte	0x50
 4121 01a0 09000000 		.4byte	.LVL32-1
 4122 01a4 30000000 		.4byte	.LFE17
 4123 01a8 0400     		.2byte	0x4
 4124 01aa F3       		.byte	0xf3
 4125 01ab 01       		.uleb128 0x1
 4126 01ac 50       		.byte	0x50
 4127 01ad 9F       		.byte	0x9f
 4128 01ae 00000000 		.4byte	0
 4129 01b2 00000000 		.4byte	0
 4130              	.LLST14:
 4131 01b6 00000000 		.4byte	.LVL30
 4132 01ba 09000000 		.4byte	.LVL32-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 131


 4133 01be 0100     		.2byte	0x1
 4134 01c0 51       		.byte	0x51
 4135 01c1 09000000 		.4byte	.LVL32-1
 4136 01c5 30000000 		.4byte	.LFE17
 4137 01c9 0400     		.2byte	0x4
 4138 01cb F3       		.byte	0xf3
 4139 01cc 01       		.uleb128 0x1
 4140 01cd 51       		.byte	0x51
 4141 01ce 9F       		.byte	0x9f
 4142 01cf 00000000 		.4byte	0
 4143 01d3 00000000 		.4byte	0
 4144              	.LLST15:
 4145 01d7 0A000000 		.4byte	.LVL32
 4146 01db 29000000 		.4byte	.LVL37-1
 4147 01df 0100     		.2byte	0x1
 4148 01e1 50       		.byte	0x50
 4149 01e2 00000000 		.4byte	0
 4150 01e6 00000000 		.4byte	0
 4151              	.LLST16:
 4152 01ea 04000000 		.4byte	.LVL31
 4153 01ee 16000000 		.4byte	.LVL33
 4154 01f2 0C00     		.2byte	0xc
 4155 01f4 74       		.byte	0x74
 4156 01f5 00       		.sleb128 0
 4157 01f6 33       		.byte	0x33
 4158 01f7 1A       		.byte	0x1a
 4159 01f8 08       		.byte	0x8
 4160 01f9 FF       		.byte	0xff
 4161 01fa 1A       		.byte	0x1a
 4162 01fb 33       		.byte	0x33
 4163 01fc 24       		.byte	0x24
 4164 01fd 23       		.byte	0x23
 4165 01fe 06       		.uleb128 0x6
 4166 01ff 9F       		.byte	0x9f
 4167 0200 00000000 		.4byte	0
 4168 0204 00000000 		.4byte	0
 4169              	.LLST17:
 4170 0208 20000000 		.4byte	.LVL34
 4171 020c 29000000 		.4byte	.LVL37-1
 4172 0210 0100     		.2byte	0x1
 4173 0212 51       		.byte	0x51
 4174 0213 00000000 		.4byte	0
 4175 0217 00000000 		.4byte	0
 4176              	.LLST18:
 4177 021b 00000000 		.4byte	.LVL38
 4178 021f 18000000 		.4byte	.LVL41
 4179 0223 0100     		.2byte	0x1
 4180 0225 50       		.byte	0x50
 4181 0226 18000000 		.4byte	.LVL41
 4182 022a 20000000 		.4byte	.LFE18
 4183 022e 0400     		.2byte	0x4
 4184 0230 F3       		.byte	0xf3
 4185 0231 01       		.uleb128 0x1
 4186 0232 50       		.byte	0x50
 4187 0233 9F       		.byte	0x9f
 4188 0234 00000000 		.4byte	0
 4189 0238 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 132


 4190              	.LLST19:
 4191 023c 0A000000 		.4byte	.LVL39
 4192 0240 16000000 		.4byte	.LVL40
 4193 0244 0F00     		.2byte	0xf
 4194 0246 71       		.byte	0x71
 4195 0247 00       		.sleb128 0
 4196 0248 70       		.byte	0x70
 4197 0249 00       		.sleb128 0
 4198 024a 33       		.byte	0x33
 4199 024b 1A       		.byte	0x1a
 4200 024c 08       		.byte	0x8
 4201 024d FF       		.byte	0xff
 4202 024e 1A       		.byte	0x1a
 4203 024f 33       		.byte	0x33
 4204 0250 24       		.byte	0x24
 4205 0251 23       		.byte	0x23
 4206 0252 06       		.uleb128 0x6
 4207 0253 25       		.byte	0x25
 4208 0254 9F       		.byte	0x9f
 4209 0255 00000000 		.4byte	0
 4210 0259 00000000 		.4byte	0
 4211              	.LLST20:
 4212 025d 00000000 		.4byte	.LVL42
 4213 0261 04000000 		.4byte	.LVL43
 4214 0265 0100     		.2byte	0x1
 4215 0267 50       		.byte	0x50
 4216 0268 04000000 		.4byte	.LVL43
 4217 026c 14000000 		.4byte	.LFE19
 4218 0270 0400     		.2byte	0x4
 4219 0272 F3       		.byte	0xf3
 4220 0273 01       		.uleb128 0x1
 4221 0274 50       		.byte	0x50
 4222 0275 9F       		.byte	0x9f
 4223 0276 00000000 		.4byte	0
 4224 027a 00000000 		.4byte	0
 4225              	.LLST21:
 4226 027e 00000000 		.4byte	.LVL44
 4227 0282 06000000 		.4byte	.LVL45
 4228 0286 0100     		.2byte	0x1
 4229 0288 50       		.byte	0x50
 4230 0289 06000000 		.4byte	.LVL45
 4231 028d 18000000 		.4byte	.LFE20
 4232 0291 0400     		.2byte	0x4
 4233 0293 F3       		.byte	0xf3
 4234 0294 01       		.uleb128 0x1
 4235 0295 50       		.byte	0x50
 4236 0296 9F       		.byte	0x9f
 4237 0297 00000000 		.4byte	0
 4238 029b 00000000 		.4byte	0
 4239              	.LLST22:
 4240 029f 00000000 		.4byte	.LVL46
 4241 02a3 04000000 		.4byte	.LVL47
 4242 02a7 0100     		.2byte	0x1
 4243 02a9 50       		.byte	0x50
 4244 02aa 04000000 		.4byte	.LVL47
 4245 02ae 14000000 		.4byte	.LFE21
 4246 02b2 0400     		.2byte	0x4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 133


 4247 02b4 F3       		.byte	0xf3
 4248 02b5 01       		.uleb128 0x1
 4249 02b6 50       		.byte	0x50
 4250 02b7 9F       		.byte	0x9f
 4251 02b8 00000000 		.4byte	0
 4252 02bc 00000000 		.4byte	0
 4253              	.LLST23:
 4254 02c0 00000000 		.4byte	.LVL48
 4255 02c4 04000000 		.4byte	.LVL49
 4256 02c8 0100     		.2byte	0x1
 4257 02ca 50       		.byte	0x50
 4258 02cb 04000000 		.4byte	.LVL49
 4259 02cf 14000000 		.4byte	.LFE22
 4260 02d3 0400     		.2byte	0x4
 4261 02d5 F3       		.byte	0xf3
 4262 02d6 01       		.uleb128 0x1
 4263 02d7 50       		.byte	0x50
 4264 02d8 9F       		.byte	0x9f
 4265 02d9 00000000 		.4byte	0
 4266 02dd 00000000 		.4byte	0
 4267              	.LLST24:
 4268 02e1 00000000 		.4byte	.LVL50
 4269 02e5 04000000 		.4byte	.LVL51
 4270 02e9 0100     		.2byte	0x1
 4271 02eb 50       		.byte	0x50
 4272 02ec 04000000 		.4byte	.LVL51
 4273 02f0 14000000 		.4byte	.LFE23
 4274 02f4 0400     		.2byte	0x4
 4275 02f6 F3       		.byte	0xf3
 4276 02f7 01       		.uleb128 0x1
 4277 02f8 50       		.byte	0x50
 4278 02f9 9F       		.byte	0x9f
 4279 02fa 00000000 		.4byte	0
 4280 02fe 00000000 		.4byte	0
 4281              	.LLST25:
 4282 0302 00000000 		.4byte	.LVL53
 4283 0306 04000000 		.4byte	.LVL54
 4284 030a 0100     		.2byte	0x1
 4285 030c 50       		.byte	0x50
 4286 030d 04000000 		.4byte	.LVL54
 4287 0311 22000000 		.4byte	.LVL58
 4288 0315 0100     		.2byte	0x1
 4289 0317 54       		.byte	0x54
 4290 0318 00000000 		.4byte	0
 4291 031c 00000000 		.4byte	0
 4292              	.LLST26:
 4293 0320 00000000 		.4byte	.LVL59
 4294 0324 08000000 		.4byte	.LVL60
 4295 0328 0100     		.2byte	0x1
 4296 032a 50       		.byte	0x50
 4297 032b 08000000 		.4byte	.LVL60
 4298 032f 14000000 		.4byte	.LFE27
 4299 0333 0400     		.2byte	0x4
 4300 0335 F3       		.byte	0xf3
 4301 0336 01       		.uleb128 0x1
 4302 0337 50       		.byte	0x50
 4303 0338 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 134


 4304 0339 00000000 		.4byte	0
 4305 033d 00000000 		.4byte	0
 4306              	.LLST27:
 4307 0341 00000000 		.4byte	.LVL62
 4308 0345 09000000 		.4byte	.LVL63-1
 4309 0349 0100     		.2byte	0x1
 4310 034b 50       		.byte	0x50
 4311 034c 09000000 		.4byte	.LVL63-1
 4312 0350 A2000000 		.4byte	.LVL79
 4313 0354 0100     		.2byte	0x1
 4314 0356 55       		.byte	0x55
 4315 0357 A2000000 		.4byte	.LVL79
 4316 035b CC000000 		.4byte	.LVL85
 4317 035f 0700     		.2byte	0x7
 4318 0361 75       		.byte	0x75
 4319 0362 B39C8080 		.sleb128 -268431821
 4319      7F
 4320 0367 9F       		.byte	0x9f
 4321 0368 CC000000 		.4byte	.LVL85
 4322 036c 24010000 		.4byte	.LFE5
 4323 0370 0600     		.2byte	0x6
 4324 0372 91       		.byte	0x91
 4325 0373 5C       		.sleb128 -36
 4326 0374 06       		.byte	0x6
 4327 0375 23       		.byte	0x23
 4328 0376 03       		.uleb128 0x3
 4329 0377 9F       		.byte	0x9f
 4330 0378 00000000 		.4byte	0
 4331 037c 00000000 		.4byte	0
 4332              	.LLST28:
 4333 0380 24000000 		.4byte	.LVL65
 4334 0384 26000000 		.4byte	.LVL66
 4335 0388 0100     		.2byte	0x1
 4336 038a 54       		.byte	0x54
 4337 038b 36000000 		.4byte	.LVL67
 4338 038f 38000000 		.4byte	.LVL68
 4339 0393 0100     		.2byte	0x1
 4340 0395 54       		.byte	0x54
 4341 0396 48000000 		.4byte	.LVL69
 4342 039a 4A000000 		.4byte	.LVL70
 4343 039e 0100     		.2byte	0x1
 4344 03a0 54       		.byte	0x54
 4345 03a1 5A000000 		.4byte	.LVL71
 4346 03a5 5C000000 		.4byte	.LVL72
 4347 03a9 0100     		.2byte	0x1
 4348 03ab 54       		.byte	0x54
 4349 03ac 64000000 		.4byte	.LVL73
 4350 03b0 CC000000 		.4byte	.LVL85
 4351 03b4 0100     		.2byte	0x1
 4352 03b6 54       		.byte	0x54
 4353 03b7 00000000 		.4byte	0
 4354 03bb 00000000 		.4byte	0
 4355              	.LLST29:
 4356 03bf 6C000000 		.4byte	.LVL74
 4357 03c3 CC000000 		.4byte	.LVL85
 4358 03c7 0200     		.2byte	0x2
 4359 03c9 91       		.byte	0x91
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 135


 4360 03ca 54       		.sleb128 -44
 4361 03cb 00000000 		.4byte	0
 4362 03cf 00000000 		.4byte	0
 4363              	.LLST30:
 4364 03d3 76000000 		.4byte	.LVL75
 4365 03d7 CC000000 		.4byte	.LVL85
 4366 03db 0200     		.2byte	0x2
 4367 03dd 91       		.byte	0x91
 4368 03de 58       		.sleb128 -40
 4369 03df 00000000 		.4byte	0
 4370 03e3 00000000 		.4byte	0
 4371              	.LLST31:
 4372 03e7 8A000000 		.4byte	.LVL76
 4373 03eb 96000000 		.4byte	.LVL77
 4374 03ef 0100     		.2byte	0x1
 4375 03f1 56       		.byte	0x56
 4376 03f2 00000000 		.4byte	0
 4377 03f6 00000000 		.4byte	0
 4378              	.LLST32:
 4379 03fa A8000000 		.4byte	.LVL80
 4380 03fe AC000000 		.4byte	.LVL81
 4381 0402 0100     		.2byte	0x1
 4382 0404 53       		.byte	0x53
 4383 0405 AC000000 		.4byte	.LVL81
 4384 0409 AE000000 		.4byte	.LVL82
 4385 040d 0400     		.2byte	0x4
 4386 040f 72       		.byte	0x72
 4387 0410 00       		.sleb128 0
 4388 0411 06       		.byte	0x6
 4389 0412 9F       		.byte	0x9f
 4390 0413 AE000000 		.4byte	.LVL82
 4391 0417 B0000000 		.4byte	.LVL83
 4392 041b 0700     		.2byte	0x7
 4393 041d 0C       		.byte	0xc
 4394 041e 28FF0B40 		.4byte	0x400bff28
 4395 0422 06       		.byte	0x6
 4396 0423 9F       		.byte	0x9f
 4397 0424 00000000 		.4byte	0
 4398 0428 00000000 		.4byte	0
 4399              	.LLST33:
 4400 042c 00000000 		.4byte	.LVL87
 4401 0430 0E000000 		.4byte	.LVL88
 4402 0434 0100     		.2byte	0x1
 4403 0436 50       		.byte	0x50
 4404 0437 0E000000 		.4byte	.LVL88
 4405 043b 44000000 		.4byte	.LFE6
 4406 043f 0400     		.2byte	0x4
 4407 0441 F3       		.byte	0xf3
 4408 0442 01       		.uleb128 0x1
 4409 0443 50       		.byte	0x50
 4410 0444 9F       		.byte	0x9f
 4411 0445 00000000 		.4byte	0
 4412 0449 00000000 		.4byte	0
 4413              	.LLST34:
 4414 044d 00000000 		.4byte	.LVL90
 4415 0451 18000000 		.4byte	.LVL91
 4416 0455 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 136


 4417 0457 50       		.byte	0x50
 4418 0458 18000000 		.4byte	.LVL91
 4419 045c 48000000 		.4byte	.LFE28
 4420 0460 0400     		.2byte	0x4
 4421 0462 F3       		.byte	0xf3
 4422 0463 01       		.uleb128 0x1
 4423 0464 50       		.byte	0x50
 4424 0465 9F       		.byte	0x9f
 4425 0466 00000000 		.4byte	0
 4426 046a 00000000 		.4byte	0
 4427              	.LLST35:
 4428 046e 00000000 		.4byte	.LVL94
 4429 0472 0C000000 		.4byte	.LVL95
 4430 0476 0200     		.2byte	0x2
 4431 0478 30       		.byte	0x30
 4432 0479 9F       		.byte	0x9f
 4433 047a 0C000000 		.4byte	.LVL95
 4434 047e 10000000 		.4byte	.LVL96
 4435 0482 0200     		.2byte	0x2
 4436 0484 31       		.byte	0x31
 4437 0485 9F       		.byte	0x9f
 4438 0486 10000000 		.4byte	.LVL96
 4439 048a 12000000 		.4byte	.LVL97
 4440 048e 0200     		.2byte	0x2
 4441 0490 32       		.byte	0x32
 4442 0491 9F       		.byte	0x9f
 4443 0492 12000000 		.4byte	.LVL97
 4444 0496 14000000 		.4byte	.LVL98
 4445 049a 0200     		.2byte	0x2
 4446 049c 34       		.byte	0x34
 4447 049d 9F       		.byte	0x9f
 4448 049e 14000000 		.4byte	.LVL98
 4449 04a2 50000000 		.4byte	.LFE30
 4450 04a6 0200     		.2byte	0x2
 4451 04a8 35       		.byte	0x35
 4452 04a9 9F       		.byte	0x9f
 4453 04aa 00000000 		.4byte	0
 4454 04ae 00000000 		.4byte	0
 4455              	.LLST36:
 4456 04b2 14000000 		.4byte	.LVL98
 4457 04b6 16000000 		.4byte	.LVL99
 4458 04ba 0500     		.2byte	0x5
 4459 04bc 0C       		.byte	0xc
 4460 04bd 3C000020 		.4byte	0x2000003c
 4461 04c1 16000000 		.4byte	.LVL99
 4462 04c5 1A000000 		.4byte	.LVL100
 4463 04c9 0200     		.2byte	0x2
 4464 04cb 73       		.byte	0x73
 4465 04cc 00       		.sleb128 0
 4466 04cd 00000000 		.4byte	0
 4467 04d1 00000000 		.4byte	0
 4468              	.LLST37:
 4469 04d5 00000000 		.4byte	.LVL106
 4470 04d9 04000000 		.4byte	.LVL107
 4471 04dd 0100     		.2byte	0x1
 4472 04df 50       		.byte	0x50
 4473 04e0 04000000 		.4byte	.LVL107
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 137


 4474 04e4 10000000 		.4byte	.LFE35
 4475 04e8 0400     		.2byte	0x4
 4476 04ea F3       		.byte	0xf3
 4477 04eb 01       		.uleb128 0x1
 4478 04ec 50       		.byte	0x50
 4479 04ed 9F       		.byte	0x9f
 4480 04ee 00000000 		.4byte	0
 4481 04f2 00000000 		.4byte	0
 4482              	.LLST38:
 4483 04f6 00000000 		.4byte	.LVL110
 4484 04fa 06000000 		.4byte	.LVL111
 4485 04fe 0100     		.2byte	0x1
 4486 0500 50       		.byte	0x50
 4487 0501 06000000 		.4byte	.LVL111
 4488 0505 10000000 		.4byte	.LFE40
 4489 0509 0400     		.2byte	0x4
 4490 050b F3       		.byte	0xf3
 4491 050c 01       		.uleb128 0x1
 4492 050d 50       		.byte	0x50
 4493 050e 9F       		.byte	0x9f
 4494 050f 00000000 		.4byte	0
 4495 0513 00000000 		.4byte	0
 4496              	.LLST39:
 4497 0517 00000000 		.4byte	.LVL112
 4498 051b 04000000 		.4byte	.LVL113
 4499 051f 0100     		.2byte	0x1
 4500 0521 50       		.byte	0x50
 4501 0522 04000000 		.4byte	.LVL113
 4502 0526 0C000000 		.4byte	.LFE41
 4503 052a 0400     		.2byte	0x4
 4504 052c F3       		.byte	0xf3
 4505 052d 01       		.uleb128 0x1
 4506 052e 50       		.byte	0x50
 4507 052f 9F       		.byte	0x9f
 4508 0530 00000000 		.4byte	0
 4509 0534 00000000 		.4byte	0
 4510              		.section	.debug_aranges,"",%progbits
 4511 0000 74010000 		.4byte	0x174
 4512 0004 0200     		.2byte	0x2
 4513 0006 00000000 		.4byte	.Ldebug_info0
 4514 000a 04       		.byte	0x4
 4515 000b 00       		.byte	0
 4516 000c 0000     		.2byte	0
 4517 000e 0000     		.2byte	0
 4518 0010 00000000 		.4byte	.LFB0
 4519 0014 14000000 		.4byte	.LFE0-.LFB0
 4520 0018 00000000 		.4byte	.LFB1
 4521 001c 10000000 		.4byte	.LFE1-.LFB1
 4522 0020 00000000 		.4byte	.LFB2
 4523 0024 20000000 		.4byte	.LFE2-.LFB2
 4524 0028 00000000 		.4byte	.LFB3
 4525 002c 18000000 		.4byte	.LFE3-.LFB3
 4526 0030 00000000 		.4byte	.LFB4
 4527 0034 28000000 		.4byte	.LFE4-.LFB4
 4528 0038 00000000 		.4byte	.LFB7
 4529 003c 20000000 		.4byte	.LFE7-.LFB7
 4530 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 138


 4531 0044 10000000 		.4byte	.LFE8-.LFB8
 4532 0048 00000000 		.4byte	.LFB9
 4533 004c 0C000000 		.4byte	.LFE9-.LFB9
 4534 0050 00000000 		.4byte	.LFB10
 4535 0054 14000000 		.4byte	.LFE10-.LFB10
 4536 0058 00000000 		.4byte	.LFB11
 4537 005c 10000000 		.4byte	.LFE11-.LFB11
 4538 0060 00000000 		.4byte	.LFB12
 4539 0064 0C000000 		.4byte	.LFE12-.LFB12
 4540 0068 00000000 		.4byte	.LFB13
 4541 006c 0E000000 		.4byte	.LFE13-.LFB13
 4542 0070 00000000 		.4byte	.LFB14
 4543 0074 0C000000 		.4byte	.LFE14-.LFB14
 4544 0078 00000000 		.4byte	.LFB15
 4545 007c 10000000 		.4byte	.LFE15-.LFB15
 4546 0080 00000000 		.4byte	.LFB16
 4547 0084 10000000 		.4byte	.LFE16-.LFB16
 4548 0088 00000000 		.4byte	.LFB17
 4549 008c 30000000 		.4byte	.LFE17-.LFB17
 4550 0090 00000000 		.4byte	.LFB18
 4551 0094 20000000 		.4byte	.LFE18-.LFB18
 4552 0098 00000000 		.4byte	.LFB19
 4553 009c 14000000 		.4byte	.LFE19-.LFB19
 4554 00a0 00000000 		.4byte	.LFB20
 4555 00a4 18000000 		.4byte	.LFE20-.LFB20
 4556 00a8 00000000 		.4byte	.LFB21
 4557 00ac 14000000 		.4byte	.LFE21-.LFB21
 4558 00b0 00000000 		.4byte	.LFB22
 4559 00b4 14000000 		.4byte	.LFE22-.LFB22
 4560 00b8 00000000 		.4byte	.LFB23
 4561 00bc 14000000 		.4byte	.LFE23-.LFB23
 4562 00c0 00000000 		.4byte	.LFB24
 4563 00c4 04000000 		.4byte	.LFE24-.LFB24
 4564 00c8 00000000 		.4byte	.LFB25
 4565 00cc 18000000 		.4byte	.LFE25-.LFB25
 4566 00d0 00000000 		.4byte	.LFB26
 4567 00d4 2C000000 		.4byte	.LFE26-.LFB26
 4568 00d8 00000000 		.4byte	.LFB27
 4569 00dc 14000000 		.4byte	.LFE27-.LFB27
 4570 00e0 00000000 		.4byte	.LFB5
 4571 00e4 24010000 		.4byte	.LFE5-.LFB5
 4572 00e8 00000000 		.4byte	.LFB6
 4573 00ec 44000000 		.4byte	.LFE6-.LFB6
 4574 00f0 00000000 		.4byte	.LFB28
 4575 00f4 48000000 		.4byte	.LFE28-.LFB28
 4576 00f8 00000000 		.4byte	.LFB30
 4577 00fc 50000000 		.4byte	.LFE30-.LFB30
 4578 0100 00000000 		.4byte	.LFB32
 4579 0104 10000000 		.4byte	.LFE32-.LFB32
 4580 0108 00000000 		.4byte	.LFB33
 4581 010c 10000000 		.4byte	.LFE33-.LFB33
 4582 0110 00000000 		.4byte	.LFB31
 4583 0114 18000000 		.4byte	.LFE31-.LFB31
 4584 0118 00000000 		.4byte	.LFB29
 4585 011c 1C000000 		.4byte	.LFE29-.LFB29
 4586 0120 00000000 		.4byte	.LFB34
 4587 0124 10000000 		.4byte	.LFE34-.LFB34
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 139


 4588 0128 00000000 		.4byte	.LFB35
 4589 012c 10000000 		.4byte	.LFE35-.LFB35
 4590 0130 00000000 		.4byte	.LFB36
 4591 0134 10000000 		.4byte	.LFE36-.LFB36
 4592 0138 00000000 		.4byte	.LFB37
 4593 013c 10000000 		.4byte	.LFE37-.LFB37
 4594 0140 00000000 		.4byte	.LFB38
 4595 0144 10000000 		.4byte	.LFE38-.LFB38
 4596 0148 00000000 		.4byte	.LFB42
 4597 014c 24000000 		.4byte	.LFE42-.LFB42
 4598 0150 00000000 		.4byte	.LFB39
 4599 0154 0C000000 		.4byte	.LFE39-.LFB39
 4600 0158 00000000 		.4byte	.LFB40
 4601 015c 10000000 		.4byte	.LFE40-.LFB40
 4602 0160 00000000 		.4byte	.LFB41
 4603 0164 0C000000 		.4byte	.LFE41-.LFB41
 4604 0168 00000000 		.4byte	.LFB43
 4605 016c 70000000 		.4byte	.LFE43-.LFB43
 4606 0170 00000000 		.4byte	0
 4607 0174 00000000 		.4byte	0
 4608              		.section	.debug_ranges,"",%progbits
 4609              	.Ldebug_ranges0:
 4610 0000 2C000000 		.4byte	.LBB8
 4611 0004 2E000000 		.4byte	.LBE8
 4612 0008 2E000000 		.4byte	.LBB11
 4613 000c 30000000 		.4byte	.LBE11
 4614 0010 00000000 		.4byte	0
 4615 0014 00000000 		.4byte	0
 4616 0018 08000000 		.4byte	.LBB20
 4617 001c 0A000000 		.4byte	.LBE20
 4618 0020 14000000 		.4byte	.LBB24
 4619 0024 16000000 		.4byte	.LBE24
 4620 0028 18000000 		.4byte	.LBB25
 4621 002c 1A000000 		.4byte	.LBE25
 4622 0030 00000000 		.4byte	0
 4623 0034 00000000 		.4byte	0
 4624 0038 22000000 		.4byte	.LBB26
 4625 003c 24000000 		.4byte	.LBE26
 4626 0040 26000000 		.4byte	.LBB33
 4627 0044 28000000 		.4byte	.LBE33
 4628 0048 2E000000 		.4byte	.LBB37
 4629 004c 32000000 		.4byte	.LBE37
 4630 0050 00000000 		.4byte	0
 4631 0054 00000000 		.4byte	0
 4632 0058 24000000 		.4byte	.LBB30
 4633 005c 26000000 		.4byte	.LBE30
 4634 0060 28000000 		.4byte	.LBB34
 4635 0064 2A000000 		.4byte	.LBE34
 4636 0068 00000000 		.4byte	0
 4637 006c 00000000 		.4byte	0
 4638 0070 00000000 		.4byte	.LFB0
 4639 0074 14000000 		.4byte	.LFE0
 4640 0078 00000000 		.4byte	.LFB1
 4641 007c 10000000 		.4byte	.LFE1
 4642 0080 00000000 		.4byte	.LFB2
 4643 0084 20000000 		.4byte	.LFE2
 4644 0088 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 140


 4645 008c 18000000 		.4byte	.LFE3
 4646 0090 00000000 		.4byte	.LFB4
 4647 0094 28000000 		.4byte	.LFE4
 4648 0098 00000000 		.4byte	.LFB7
 4649 009c 20000000 		.4byte	.LFE7
 4650 00a0 00000000 		.4byte	.LFB8
 4651 00a4 10000000 		.4byte	.LFE8
 4652 00a8 00000000 		.4byte	.LFB9
 4653 00ac 0C000000 		.4byte	.LFE9
 4654 00b0 00000000 		.4byte	.LFB10
 4655 00b4 14000000 		.4byte	.LFE10
 4656 00b8 00000000 		.4byte	.LFB11
 4657 00bc 10000000 		.4byte	.LFE11
 4658 00c0 00000000 		.4byte	.LFB12
 4659 00c4 0C000000 		.4byte	.LFE12
 4660 00c8 00000000 		.4byte	.LFB13
 4661 00cc 0E000000 		.4byte	.LFE13
 4662 00d0 00000000 		.4byte	.LFB14
 4663 00d4 0C000000 		.4byte	.LFE14
 4664 00d8 00000000 		.4byte	.LFB15
 4665 00dc 10000000 		.4byte	.LFE15
 4666 00e0 00000000 		.4byte	.LFB16
 4667 00e4 10000000 		.4byte	.LFE16
 4668 00e8 00000000 		.4byte	.LFB17
 4669 00ec 30000000 		.4byte	.LFE17
 4670 00f0 00000000 		.4byte	.LFB18
 4671 00f4 20000000 		.4byte	.LFE18
 4672 00f8 00000000 		.4byte	.LFB19
 4673 00fc 14000000 		.4byte	.LFE19
 4674 0100 00000000 		.4byte	.LFB20
 4675 0104 18000000 		.4byte	.LFE20
 4676 0108 00000000 		.4byte	.LFB21
 4677 010c 14000000 		.4byte	.LFE21
 4678 0110 00000000 		.4byte	.LFB22
 4679 0114 14000000 		.4byte	.LFE22
 4680 0118 00000000 		.4byte	.LFB23
 4681 011c 14000000 		.4byte	.LFE23
 4682 0120 00000000 		.4byte	.LFB24
 4683 0124 04000000 		.4byte	.LFE24
 4684 0128 00000000 		.4byte	.LFB25
 4685 012c 18000000 		.4byte	.LFE25
 4686 0130 00000000 		.4byte	.LFB26
 4687 0134 2C000000 		.4byte	.LFE26
 4688 0138 00000000 		.4byte	.LFB27
 4689 013c 14000000 		.4byte	.LFE27
 4690 0140 00000000 		.4byte	.LFB5
 4691 0144 24010000 		.4byte	.LFE5
 4692 0148 00000000 		.4byte	.LFB6
 4693 014c 44000000 		.4byte	.LFE6
 4694 0150 00000000 		.4byte	.LFB28
 4695 0154 48000000 		.4byte	.LFE28
 4696 0158 00000000 		.4byte	.LFB30
 4697 015c 50000000 		.4byte	.LFE30
 4698 0160 00000000 		.4byte	.LFB32
 4699 0164 10000000 		.4byte	.LFE32
 4700 0168 00000000 		.4byte	.LFB33
 4701 016c 10000000 		.4byte	.LFE33
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 141


 4702 0170 00000000 		.4byte	.LFB31
 4703 0174 18000000 		.4byte	.LFE31
 4704 0178 00000000 		.4byte	.LFB29
 4705 017c 1C000000 		.4byte	.LFE29
 4706 0180 00000000 		.4byte	.LFB34
 4707 0184 10000000 		.4byte	.LFE34
 4708 0188 00000000 		.4byte	.LFB35
 4709 018c 10000000 		.4byte	.LFE35
 4710 0190 00000000 		.4byte	.LFB36
 4711 0194 10000000 		.4byte	.LFE36
 4712 0198 00000000 		.4byte	.LFB37
 4713 019c 10000000 		.4byte	.LFE37
 4714 01a0 00000000 		.4byte	.LFB38
 4715 01a4 10000000 		.4byte	.LFE38
 4716 01a8 00000000 		.4byte	.LFB42
 4717 01ac 24000000 		.4byte	.LFE42
 4718 01b0 00000000 		.4byte	.LFB39
 4719 01b4 0C000000 		.4byte	.LFE39
 4720 01b8 00000000 		.4byte	.LFB40
 4721 01bc 10000000 		.4byte	.LFE40
 4722 01c0 00000000 		.4byte	.LFB41
 4723 01c4 0C000000 		.4byte	.LFE41
 4724 01c8 00000000 		.4byte	.LFB43
 4725 01cc 70000000 		.4byte	.LFE43
 4726 01d0 00000000 		.4byte	0
 4727 01d4 00000000 		.4byte	0
 4728              		.section	.debug_line,"",%progbits
 4729              	.Ldebug_line0:
 4730 0000 B2040000 		.section	.debug_str,"MS",%progbits,1
 4730      02004F00 
 4730      00000201 
 4730      FB0E0D00 
 4730      01010101 
 4731              	.LASF44:
 4732 0000 72616D56 		.ascii	"ramVectorTable\000"
 4732      6563746F 
 4732      72546162 
 4732      6C6500
 4733              	.LASF66:
 4734 000f 62675472 		.ascii	"bgTrim4\000"
 4734      696D3400 
 4735              	.LASF10:
 4736 0017 75696E74 		.ascii	"uint16\000"
 4736      313600
 4737              	.LASF98:
 4738 001e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4738      4320342E 
 4738      392E3320 
 4738      32303135 
 4738      30333033 
 4739 0051 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4739      20726576 
 4739      6973696F 
 4739      6E203232 
 4739      31323230 
 4740 0084 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 4740      66756E63 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 142


 4740      74696F6E 
 4740      2D736563 
 4740      74696F6E 
 4741              	.LASF37:
 4742 00ac 696E7453 		.ascii	"intState\000"
 4742      74617465 
 4742      00
 4743              	.LASF27:
 4744 00b5 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4744      73436C6B 
 4744      57726974 
 4744      65486663 
 4744      6C6B4469 
 4745              	.LASF43:
 4746 00ce 6F6C6449 		.ascii	"oldIsr\000"
 4746      737200
 4747              	.LASF86:
 4748 00d5 72657456 		.ascii	"retVal\000"
 4748      616C00
 4749              	.LASF36:
 4750 00dc 43794469 		.ascii	"CyDisableInts\000"
 4750      7361626C 
 4750      65496E74 
 4750      7300
 4751              	.LASF69:
 4752 00ea 63757272 		.ascii	"currentImoTrim2Value\000"
 4752      656E7449 
 4752      6D6F5472 
 4752      696D3256 
 4752      616C7565 
 4753              	.LASF7:
 4754 00ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 4754      206C6F6E 
 4754      6720756E 
 4754      7369676E 
 4754      65642069 
 4755              	.LASF91:
 4756 0116 43795379 		.ascii	"CySysTickInitVar\000"
 4756      73546963 
 4756      6B496E69 
 4756      74566172 
 4756      00
 4757              	.LASF38:
 4758 0127 4379456E 		.ascii	"CyEnableInts\000"
 4758      61626C65 
 4758      496E7473 
 4758      00
 4759              	.LASF59:
 4760 0134 4379536F 		.ascii	"CySoftwareReset\000"
 4760      66747761 
 4760      72655265 
 4760      73657400 
 4761              	.LASF76:
 4762 0144 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4762      73546963 
 4762      6B456E61 
 4762      626C6549 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 143


 4762      6E746572 
 4763              	.LASF54:
 4764 015d 4379496E 		.ascii	"CyIntGetState\000"
 4764      74476574 
 4764      53746174 
 4764      6500
 4765              	.LASF6:
 4766 016b 6C6F6E67 		.ascii	"long long int\000"
 4766      206C6F6E 
 4766      6720696E 
 4766      7400
 4767              	.LASF0:
 4768 0179 7369676E 		.ascii	"signed char\000"
 4768      65642063 
 4768      68617200 
 4769              	.LASF65:
 4770 0185 66726571 		.ascii	"freq\000"
 4770      00
 4771              	.LASF73:
 4772 018a 43794465 		.ascii	"CyDelayFreq\000"
 4772      6C617946 
 4772      72657100 
 4773              	.LASF24:
 4774 0196 696E7465 		.ascii	"interruptState\000"
 4774      72727570 
 4774      74537461 
 4774      746500
 4775              	.LASF81:
 4776 01a5 43795379 		.ascii	"CySysTickGetReload\000"
 4776      73546963 
 4776      6B476574 
 4776      52656C6F 
 4776      616400
 4777              	.LASF4:
 4778 01b8 6C6F6E67 		.ascii	"long int\000"
 4778      20696E74 
 4778      00
 4779              	.LASF55:
 4780 01c1 4379496E 		.ascii	"CyIntDisable\000"
 4780      74446973 
 4780      61626C65 
 4780      00
 4781              	.LASF87:
 4782 01ce 43795379 		.ascii	"CySysTickGetCallback\000"
 4782      73546963 
 4782      6B476574 
 4782      43616C6C 
 4782      6261636B 
 4783              	.LASF9:
 4784 01e3 75696E74 		.ascii	"uint8\000"
 4784      3800
 4785              	.LASF93:
 4786 01e9 63796465 		.ascii	"cydelayFreqKhz\000"
 4786      6C617946 
 4786      7265714B 
 4786      687A00
 4787              	.LASF62:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 144


 4788 01f8 43794465 		.ascii	"CyDelayUs\000"
 4788      6C617955 
 4788      7300
 4789              	.LASF13:
 4790 0202 646F7562 		.ascii	"double\000"
 4790      6C6500
 4791              	.LASF50:
 4792 0209 73686966 		.ascii	"shift\000"
 4792      7400
 4793              	.LASF20:
 4794 020f 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4794      734C7664 
 4794      436C6561 
 4794      72496E74 
 4794      65727275 
 4795              	.LASF11:
 4796 0226 75696E74 		.ascii	"uint32\000"
 4796      333200
 4797              	.LASF41:
 4798 022d 6E756D62 		.ascii	"number\000"
 4798      657200
 4799              	.LASF39:
 4800 0234 6D61736B 		.ascii	"mask\000"
 4800      00
 4801              	.LASF32:
 4802 0239 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4802      73436C6B 
 4802      47657453 
 4802      7973636C 
 4802      6B536F75 
 4803              	.LASF51:
 4804 0251 4379496E 		.ascii	"CyIntGetPriority\000"
 4804      74476574 
 4804      5072696F 
 4804      72697479 
 4804      00
 4805              	.LASF95:
 4806 0262 63796465 		.ascii	"cydelay32kMs\000"
 4806      6C617933 
 4806      326B4D73 
 4806      00
 4807              	.LASF74:
 4808 026f 43795379 		.ascii	"CySysTickInit\000"
 4808      73546963 
 4808      6B496E69 
 4808      7400
 4809              	.LASF40:
 4810 027d 76616C75 		.ascii	"value\000"
 4810      6500
 4811              	.LASF88:
 4812 0283 43794765 		.ascii	"CyGetUniqueId\000"
 4812      74556E69 
 4812      71756549 
 4812      6400
 4813              	.LASF83:
 4814 0291 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4814      73546963 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 145


 4814      6B476574 
 4814      436F756E 
 4814      74466C61 
 4815              	.LASF8:
 4816 02a7 756E7369 		.ascii	"unsigned int\000"
 4816      676E6564 
 4816      20696E74 
 4816      00
 4817              	.LASF21:
 4818 02b4 43795379 		.ascii	"CySysTickClear\000"
 4818      73546963 
 4818      6B436C65 
 4818      617200
 4819              	.LASF5:
 4820 02c3 6C6F6E67 		.ascii	"long unsigned int\000"
 4820      20756E73 
 4820      69676E65 
 4820      6420696E 
 4820      7400
 4821              	.LASF80:
 4822 02d5 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4822      734C7664 
 4822      47657449 
 4822      6E746572 
 4822      72757074 
 4823              	.LASF23:
 4824 02f0 43795379 		.ascii	"CySysClkImoStop\000"
 4824      73436C6B 
 4824      496D6F53 
 4824      746F7000 
 4825              	.LASF103:
 4826 0300 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4826      74657243 
 4826      72697469 
 4826      63616C53 
 4826      65637469 
 4827              	.LASF56:
 4828 0317 4379496E 		.ascii	"CyIntSetPending\000"
 4828      74536574 
 4828      50656E64 
 4828      696E6700 
 4829              	.LASF33:
 4830 0327 43795379 		.ascii	"CySysGetResetReason\000"
 4830      73476574 
 4830      52657365 
 4830      74526561 
 4830      736F6E00 
 4831              	.LASF3:
 4832 033b 73686F72 		.ascii	"short unsigned int\000"
 4832      7420756E 
 4832      7369676E 
 4832      65642069 
 4832      6E7400
 4833              	.LASF46:
 4834 034e 4379496E 		.ascii	"CyIntSetVector\000"
 4834      74536574 
 4834      56656374 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 146


 4834      6F7200
 4835              	.LASF99:
 4836 035d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 4836      6E657261 
 4836      7465645F 
 4836      536F7572 
 4836      63655C50 
 4837              	.LASF49:
 4838 037e 7072696F 		.ascii	"priority\000"
 4838      72697479 
 4838      00
 4839              	.LASF64:
 4840 0387 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4840      73436C6B 
 4840      57726974 
 4840      65496D6F 
 4840      46726571 
 4841              	.LASF102:
 4842 039c 4379496E 		.ascii	"CyIntSetSysVector\000"
 4842      74536574 
 4842      53797356 
 4842      6563746F 
 4842      7200
 4843              	.LASF16:
 4844 03ae 72656733 		.ascii	"reg32\000"
 4844      3200
 4845              	.LASF78:
 4846 03b4 43795379 		.ascii	"CySysTickStart\000"
 4846      73546963 
 4846      6B537461 
 4846      727400
 4847              	.LASF35:
 4848 03c3 72657475 		.ascii	"returnStatus\000"
 4848      726E5374 
 4848      61747573 
 4848      00
 4849              	.LASF18:
 4850 03d0 73697A65 		.ascii	"sizetype\000"
 4850      74797065 
 4850      00
 4851              	.LASF57:
 4852 03d9 4379496E 		.ascii	"CyIntClearPending\000"
 4852      74436C65 
 4852      61725065 
 4852      6E64696E 
 4852      6700
 4853              	.LASF42:
 4854 03eb 61646472 		.ascii	"address\000"
 4854      65737300 
 4855              	.LASF67:
 4856 03f3 62675472 		.ascii	"bgTrim5\000"
 4856      696D3500 
 4857              	.LASF26:
 4858 03fb 73797363 		.ascii	"sysclkSource\000"
 4858      6C6B536F 
 4858      75726365 
 4858      00
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 147


 4859              	.LASF85:
 4860 0408 66756E63 		.ascii	"function\000"
 4860      74696F6E 
 4860      00
 4861              	.LASF96:
 4862 0411 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4862      6F467265 
 4862      714D687A 
 4862      32526567 
 4862      00
 4863              	.LASF82:
 4864 0422 43795379 		.ascii	"CySysTickGetValue\000"
 4864      73546963 
 4864      6B476574 
 4864      56616C75 
 4864      6500
 4865              	.LASF92:
 4866 0434 63796465 		.ascii	"cydelayFreqHz\000"
 4866      6C617946 
 4866      72657148 
 4866      7A00
 4867              	.LASF48:
 4868 0442 4379496E 		.ascii	"CyIntSetPriority\000"
 4868      74536574 
 4868      5072696F 
 4868      72697479 
 4868      00
 4869              	.LASF12:
 4870 0453 666C6F61 		.ascii	"float\000"
 4870      7400
 4871              	.LASF97:
 4872 0459 43794578 		.ascii	"CyExitCriticalSection\000"
 4872      69744372 
 4872      69746963 
 4872      616C5365 
 4872      6374696F 
 4873              	.LASF71:
 4874 046f 43795379 		.ascii	"CySysLvdEnable\000"
 4874      734C7664 
 4874      456E6162 
 4874      6C6500
 4875              	.LASF19:
 4876 047e 63795379 		.ascii	"cySysTickCallback\000"
 4876      73546963 
 4876      6B43616C 
 4876      6C626163 
 4876      6B00
 4877              	.LASF47:
 4878 0490 4379496E 		.ascii	"CyIntGetVector\000"
 4878      74476574 
 4878      56656374 
 4878      6F7200
 4879              	.LASF61:
 4880 049f 6D696C6C 		.ascii	"milliseconds\000"
 4880      69736563 
 4880      6F6E6473 
 4880      00
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 148


 4881              	.LASF104:
 4882 04ac 43794465 		.ascii	"CyDelayCycles\000"
 4882      6C617943 
 4882      79636C65 
 4882      7300
 4883              	.LASF15:
 4884 04ba 72656738 		.ascii	"reg8\000"
 4884      00
 4885              	.LASF72:
 4886 04bf 74687265 		.ascii	"threshold\000"
 4886      73686F6C 
 4886      6400
 4887              	.LASF58:
 4888 04c9 43794861 		.ascii	"CyHalt\000"
 4888      6C7400
 4889              	.LASF1:
 4890 04d0 756E7369 		.ascii	"unsigned char\000"
 4890      676E6564 
 4890      20636861 
 4890      7200
 4891              	.LASF34:
 4892 04de 72656173 		.ascii	"reason\000"
 4892      6F6E00
 4893              	.LASF2:
 4894 04e5 73686F72 		.ascii	"short int\000"
 4894      7420696E 
 4894      7400
 4895              	.LASF53:
 4896 04ef 4379496E 		.ascii	"CyIntEnable\000"
 4896      74456E61 
 4896      626C6500 
 4897              	.LASF45:
 4898 04fb 4379496E 		.ascii	"CyIntGetSysVector\000"
 4898      74476574 
 4898      53797356 
 4898      6563746F 
 4898      7200
 4899              	.LASF29:
 4900 050d 636C6B53 		.ascii	"clkSelect\000"
 4900      656C6563 
 4900      7400
 4901              	.LASF101:
 4902 0517 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4902      73546963 
 4902      6B536572 
 4902      76696365 
 4902      43616C6C 
 4903              	.LASF100:
 4904 0531 453A5C68 		.ascii	"E:\\home\\jarik\\src\\psoc\\mpi_rom_emu\\mpi_rom_em"
 4904      6F6D655C 
 4904      6A617269 
 4904      6B5C7372 
 4904      635C7073 
 4905 055e 752E6379 		.ascii	"u.cydsn\000"
 4905      64736E00 
 4906              	.LASF14:
 4907 0566 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 149


 4907      00
 4908              	.LASF17:
 4909 056b 63796973 		.ascii	"cyisraddress\000"
 4909      72616464 
 4909      72657373 
 4909      00
 4910              	.LASF77:
 4911 0578 43795379 		.ascii	"CySysTickEnable\000"
 4911      73546963 
 4911      6B456E61 
 4911      626C6500 
 4912              	.LASF28:
 4913 0588 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4913      73436C6B 
 4913      57726974 
 4913      65537973 
 4913      636C6B44 
 4914              	.LASF84:
 4915 059f 43795379 		.ascii	"CySysTickSetCallback\000"
 4915      73546963 
 4915      6B536574 
 4915      43616C6C 
 4915      6261636B 
 4916              	.LASF90:
 4917 05b4 43795379 		.ascii	"CySysTickCallbacks\000"
 4917      73546963 
 4917      6B43616C 
 4917      6C626163 
 4917      6B7300
 4918              	.LASF70:
 4919 05c7 696D6F54 		.ascii	"imoTrim1Value\000"
 4919      72696D31 
 4919      56616C75 
 4919      6500
 4920              	.LASF89:
 4921 05d5 756E6971 		.ascii	"uniqueId\000"
 4921      75654964 
 4921      00
 4922              	.LASF60:
 4923 05de 43794465 		.ascii	"CyDelay\000"
 4923      6C617900 
 4924              	.LASF79:
 4925 05e6 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4925      73546963 
 4925      6B446973 
 4925      61626C65 
 4925      496E7465 
 4926              	.LASF31:
 4927 0600 43795379 		.ascii	"CySysLvdDisable\000"
 4927      734C7664 
 4927      44697361 
 4927      626C6500 
 4928              	.LASF94:
 4929 0610 63796465 		.ascii	"cydelayFreqMhz\000"
 4929      6C617946 
 4929      7265714D 
 4929      687A00
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccmJwBct.s 			page 150


 4930              	.LASF75:
 4931 061f 43795379 		.ascii	"CySysTickStop\000"
 4931      73546963 
 4931      6B53746F 
 4931      7000
 4932              	.LASF30:
 4933 062d 64697669 		.ascii	"divider\000"
 4933      64657200 
 4934              	.LASF22:
 4935 0635 43795379 		.ascii	"CySysClkImoStart\000"
 4935      73436C6B 
 4935      496D6F53 
 4935      74617274 
 4935      00
 4936              	.LASF68:
 4937 0646 6E657749 		.ascii	"newImoTrim2Value\000"
 4937      6D6F5472 
 4937      696D3256 
 4937      616C7565 
 4937      00
 4938              	.LASF63:
 4939 0657 6D696372 		.ascii	"microseconds\000"
 4939      6F736563 
 4939      6F6E6473 
 4939      00
 4940              	.LASF25:
 4941 0664 746D7052 		.ascii	"tmpReg\000"
 4941      656700
 4942              	.LASF52:
 4943 066b 43795379 		.ascii	"CySysTickSetReload\000"
 4943      73546963 
 4943      6B536574 
 4943      52656C6F 
 4943      616400
 4944              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

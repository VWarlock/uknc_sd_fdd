ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ff.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.mem_cpy,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  21              		.type	mem_cpy, %function
  22              	mem_cpy:
  23              	.LFB0:
  24              		.file 1 ".\\sd\\ff.c"
   1:.\sd/ff.c     **** /*----------------------------------------------------------------------------/
   2:.\sd/ff.c     **** /  FatFs - FAT file system module  R0.09                  (C)ChaN, 2011
   3:.\sd/ff.c     **** /-----------------------------------------------------------------------------/
   4:.\sd/ff.c     **** / FatFs module is a generic FAT file system module for small embedded systems.
   5:.\sd/ff.c     **** / This is a free software that opened for education, research and commercial
   6:.\sd/ff.c     **** / developments under license policy of following terms.
   7:.\sd/ff.c     **** /
   8:.\sd/ff.c     **** /  Copyright (C) 2011, ChaN, all right reserved.
   9:.\sd/ff.c     **** /
  10:.\sd/ff.c     **** / * The FatFs module is a free software and there is NO WARRANTY.
  11:.\sd/ff.c     **** / * No restriction on use. You can use, modify and redistribute it for
  12:.\sd/ff.c     **** /   personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
  13:.\sd/ff.c     **** / * Redistributions of source code must retain the above copyright notice.
  14:.\sd/ff.c     **** /
  15:.\sd/ff.c     **** /-----------------------------------------------------------------------------/
  16:.\sd/ff.c     **** / Feb 26,'06 R0.00  Prototype.
  17:.\sd/ff.c     **** /
  18:.\sd/ff.c     **** / Apr 29,'06 R0.01  First stable version.
  19:.\sd/ff.c     **** /
  20:.\sd/ff.c     **** / Jun 01,'06 R0.02  Added FAT12 support.
  21:.\sd/ff.c     **** /                   Removed unbuffered mode.
  22:.\sd/ff.c     **** /                   Fixed a problem on small (<32M) partition.
  23:.\sd/ff.c     **** / Jun 10,'06 R0.02a Added a configuration option (_FS_MINIMUM).
  24:.\sd/ff.c     **** /
  25:.\sd/ff.c     **** / Sep 22,'06 R0.03  Added f_rename().
  26:.\sd/ff.c     **** /                   Changed option _FS_MINIMUM to _FS_MINIMIZE.
  27:.\sd/ff.c     **** / Dec 11,'06 R0.03a Improved cluster scan algorithm to write files fast.
  28:.\sd/ff.c     **** /                   Fixed f_mkdir() creates incorrect directory on FAT32.
  29:.\sd/ff.c     **** /
  30:.\sd/ff.c     **** / Feb 04,'07 R0.04  Supported multiple drive system.
  31:.\sd/ff.c     **** /                   Changed some interfaces for multiple drive system.
  32:.\sd/ff.c     **** /                   Changed f_mountdrv() to f_mount().
  33:.\sd/ff.c     **** /                   Added f_mkfs().
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 2


  34:.\sd/ff.c     **** / Apr 01,'07 R0.04a Supported multiple partitions on a physical drive.
  35:.\sd/ff.c     **** /                   Added a capability of extending file size to f_lseek().
  36:.\sd/ff.c     **** /                   Added minimization level 3.
  37:.\sd/ff.c     **** /                   Fixed an endian sensitive code in f_mkfs().
  38:.\sd/ff.c     **** / May 05,'07 R0.04b Added a configuration option _USE_NTFLAG.
  39:.\sd/ff.c     **** /                   Added FSInfo support.
  40:.\sd/ff.c     **** /                   Fixed DBCS name can result FR_INVALID_NAME.
  41:.\sd/ff.c     **** /                   Fixed short seek (<= csize) collapses the file object.
  42:.\sd/ff.c     **** /
  43:.\sd/ff.c     **** / Aug 25,'07 R0.05  Changed arguments of f_read(), f_write() and f_mkfs().
  44:.\sd/ff.c     **** /                   Fixed f_mkfs() on FAT32 creates incorrect FSInfo.
  45:.\sd/ff.c     **** /                   Fixed f_mkdir() on FAT32 creates incorrect directory.
  46:.\sd/ff.c     **** / Feb 03,'08 R0.05a Added f_truncate() and f_utime().
  47:.\sd/ff.c     **** /                   Fixed off by one error at FAT sub-type determination.
  48:.\sd/ff.c     **** /                   Fixed btr in f_read() can be mistruncated.
  49:.\sd/ff.c     **** /                   Fixed cached sector is not flushed when create and close without write.
  50:.\sd/ff.c     **** /
  51:.\sd/ff.c     **** / Apr 01,'08 R0.06  Added fputc(), fputs(), fprintf() and fgets().
  52:.\sd/ff.c     **** /                   Improved performance of f_lseek() on moving to the same or following cluster.
  53:.\sd/ff.c     **** /
  54:.\sd/ff.c     **** / Apr 01,'09 R0.07  Merged Tiny-FatFs as a configuration option. (_FS_TINY)
  55:.\sd/ff.c     **** /                   Added LONG_ file name feature.
  56:.\sd/ff.c     **** /                   Added multiple code page feature.
  57:.\sd/ff.c     **** /                   Added re-entrancy for multitask operation.
  58:.\sd/ff.c     **** /                   Added auto cluster size selection to f_mkfs().
  59:.\sd/ff.c     **** /                   Added rewind option to f_readdir().
  60:.\sd/ff.c     **** /                   Changed result code of critical errors.
  61:.\sd/ff.c     **** /                   Renamed string functions to avoid name collision.
  62:.\sd/ff.c     **** / Apr 14,'09 R0.07a Separated out OS dependent code on reentrant cfg.
  63:.\sd/ff.c     **** /                   Added multiple sector size feature.
  64:.\sd/ff.c     **** / Jun 21,'09 R0.07c Fixed f_unlink() can return FR_OK on error.
  65:.\sd/ff.c     **** /                   Fixed wrong cache control in f_lseek().
  66:.\sd/ff.c     **** /                   Added relative path feature.
  67:.\sd/ff.c     **** /                   Added f_chdir() and f_chdrive().
  68:.\sd/ff.c     **** /                   Added proper case conversion to extended char.
  69:.\sd/ff.c     **** / Nov 03,'09 R0.07e Separated out configuration options from ff.h to ffconf.h.
  70:.\sd/ff.c     **** /                   Fixed f_unlink() fails to remove a sub-dir on _FS_RPATH.
  71:.\sd/ff.c     **** /                   Fixed name matching error on the 13 char boundary.
  72:.\sd/ff.c     **** /                   Added a configuration option, _LFN_UNICODE.
  73:.\sd/ff.c     **** /                   Changed f_readdir() to return the SFN with always upper case on non-LFN cfg.
  74:.\sd/ff.c     **** /
  75:.\sd/ff.c     **** / May 15,'10 R0.08  Added a memory configuration option. (_USE_LFN = 3)
  76:.\sd/ff.c     **** /                   Added file lock feature. (_FS_SHARE)
  77:.\sd/ff.c     **** /                   Added fast seek feature. (_USE_FASTSEEK)
  78:.\sd/ff.c     **** /                   Changed some types on the API, XCHAR->TCHAR.
  79:.\sd/ff.c     **** /                   Changed fname member in the FILINFO structure on Unicode cfg.
  80:.\sd/ff.c     **** /                   String functions support UTF-8 encoding files on Unicode cfg.
  81:.\sd/ff.c     **** / Aug 16,'10 R0.08a Added f_getcwd(). (_FS_RPATH = 2)
  82:.\sd/ff.c     **** /                   Added sector erase feature. (_USE_ERASE)
  83:.\sd/ff.c     **** /                   Moved file lock semaphore table from fs object to the bss.
  84:.\sd/ff.c     **** /                   Fixed a wrong directory entry is created on non-LFN cfg when the given name con
  85:.\sd/ff.c     **** /                   Fixed f_mkfs() creates wrong FAT32 volume.
  86:.\sd/ff.c     **** / Jan 15,'11 R0.08b Fast seek feature is also applied to f_read() and f_write().
  87:.\sd/ff.c     **** /                   f_lseek() reports required table size on creating CLMP.
  88:.\sd/ff.c     **** /                   Extended format syntax of f_printf function.
  89:.\sd/ff.c     **** /                   Ignores duplicated directory separators in given path names.
  90:.\sd/ff.c     **** /
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 3


  91:.\sd/ff.c     **** / Sep 06,'11 R0.09  f_mkfs() supports multiple partition to finish the multiple partition feature.
  92:.\sd/ff.c     **** /                   Added f_fdisk(). (_MULTI_PARTITION = 2)
  93:.\sd/ff.c     **** /---------------------------------------------------------------------------*/
  94:.\sd/ff.c     **** 
  95:.\sd/ff.c     **** #include "sd/ff.h"			/* FatFs configurations and declarations */
  96:.\sd/ff.c     **** #include "sd/diskio.h"		/* Declarations of low level disk I/O functions */
  97:.\sd/ff.c     **** 
  98:.\sd/ff.c     **** 
  99:.\sd/ff.c     **** /*--------------------------------------------------------------------------
 100:.\sd/ff.c     **** 
 101:.\sd/ff.c     ****    Module Private Definitions
 102:.\sd/ff.c     **** 
 103:.\sd/ff.c     **** ---------------------------------------------------------------------------*/
 104:.\sd/ff.c     **** 
 105:.\sd/ff.c     **** #if _FATFS != 6502	/* Revision ID */
 106:.\sd/ff.c     **** #error Wrong include file (ff.h).
 107:.\sd/ff.c     **** #endif
 108:.\sd/ff.c     **** 
 109:.\sd/ff.c     **** 
 110:.\sd/ff.c     **** /* Definitions on sector size */
 111:.\sd/ff.c     **** #if _MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 112:.\sd/ff.c     **** #error Wrong sector size.
 113:.\sd/ff.c     **** #endif
 114:.\sd/ff.c     **** #if _MAX_SS != 512
 115:.\sd/ff.c     **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 116:.\sd/ff.c     **** #else
 117:.\sd/ff.c     **** #define	SS(fs)	512U			/* Fixed sector size */
 118:.\sd/ff.c     **** #endif
 119:.\sd/ff.c     **** 
 120:.\sd/ff.c     **** 
 121:.\sd/ff.c     **** /* Reentrancy related */
 122:.\sd/ff.c     **** #if _FS_REENTRANT
 123:.\sd/ff.c     **** #if _USE_LFN == 1
 124:.\sd/ff.c     **** #error Static LFN work area must not be used in re-entrant configuration.
 125:.\sd/ff.c     **** #endif
 126:.\sd/ff.c     **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 127:.\sd/ff.c     **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 128:.\sd/ff.c     **** #else
 129:.\sd/ff.c     **** #define	ENTER_FF(fs)
 130:.\sd/ff.c     **** #define LEAVE_FF(fs, res)	return res
 131:.\sd/ff.c     **** #endif
 132:.\sd/ff.c     **** 
 133:.\sd/ff.c     **** #define	ABORT(fs, res)		{ fp->flag |= FA__ERROR; LEAVE_FF(fs, res); }
 134:.\sd/ff.c     **** 
 135:.\sd/ff.c     **** 
 136:.\sd/ff.c     **** /* File shareing feature */
 137:.\sd/ff.c     **** #if _FS_SHARE
 138:.\sd/ff.c     **** #if _FS_READONLY
 139:.\sd/ff.c     **** #error _FS_SHARE must be 0 on read-only cfg.
 140:.\sd/ff.c     **** #endif
 141:.\sd/ff.c     **** typedef struct {
 142:.\sd/ff.c     **** 	FATFS *fs;				/* File ID 1, volume (NULL:blank entry) */
 143:.\sd/ff.c     **** 	DWORD clu;				/* File ID 2, directory */
 144:.\sd/ff.c     **** 	WORD idx;				/* File ID 3, directory index */
 145:.\sd/ff.c     **** 	WORD ctr;				/* File open counter, 0:none, 0x01..0xFF:read open count, 0x100:write mode */
 146:.\sd/ff.c     **** } FILESEM;
 147:.\sd/ff.c     **** #endif
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 4


 148:.\sd/ff.c     **** 
 149:.\sd/ff.c     **** 
 150:.\sd/ff.c     **** /* Misc definitions */
 151:.\sd/ff.c     **** #define LD_CLUST(dir)	(((DWORD)LD_WORD(dir+DIR_FstClusHI)<<16) | LD_WORD(dir+DIR_FstClusLO))
 152:.\sd/ff.c     **** #define ST_CLUST(dir,cl) {ST_WORD(dir+DIR_FstClusLO, cl); ST_WORD(dir+DIR_FstClusHI, (DWORD)cl>>16)
 153:.\sd/ff.c     **** 
 154:.\sd/ff.c     **** 
 155:.\sd/ff.c     **** /* DBCS code ranges and SBCS extend char conversion table */
 156:.\sd/ff.c     **** 
 157:.\sd/ff.c     **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
 158:.\sd/ff.c     **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
 159:.\sd/ff.c     **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
 160:.\sd/ff.c     **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
 161:.\sd/ff.c     **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
 162:.\sd/ff.c     **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
 163:.\sd/ff.c     **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
 164:.\sd/ff.c     **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
 165:.\sd/ff.c     **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
 166:.\sd/ff.c     **** 
 167:.\sd/ff.c     **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
 168:.\sd/ff.c     **** #define _DF1S	0x81
 169:.\sd/ff.c     **** #define _DF1E	0xFE
 170:.\sd/ff.c     **** #define _DS1S	0x40
 171:.\sd/ff.c     **** #define _DS1E	0x7E
 172:.\sd/ff.c     **** #define _DS2S	0x80
 173:.\sd/ff.c     **** #define _DS2E	0xFE
 174:.\sd/ff.c     **** 
 175:.\sd/ff.c     **** #elif _CODE_PAGE == 949	/* Korean */
 176:.\sd/ff.c     **** #define _DF1S	0x81
 177:.\sd/ff.c     **** #define _DF1E	0xFE
 178:.\sd/ff.c     **** #define _DS1S	0x41
 179:.\sd/ff.c     **** #define _DS1E	0x5A
 180:.\sd/ff.c     **** #define _DS2S	0x61
 181:.\sd/ff.c     **** #define _DS2E	0x7A
 182:.\sd/ff.c     **** #define _DS3S	0x81
 183:.\sd/ff.c     **** #define _DS3E	0xFE
 184:.\sd/ff.c     **** 
 185:.\sd/ff.c     **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
 186:.\sd/ff.c     **** #define _DF1S	0x81
 187:.\sd/ff.c     **** #define _DF1E	0xFE
 188:.\sd/ff.c     **** #define _DS1S	0x40
 189:.\sd/ff.c     **** #define _DS1E	0x7E
 190:.\sd/ff.c     **** #define _DS2S	0xA1
 191:.\sd/ff.c     **** #define _DS2E	0xFE
 192:.\sd/ff.c     **** 
 193:.\sd/ff.c     **** #elif _CODE_PAGE == 437	/* U.S. (OEM) */
 194:.\sd/ff.c     **** #define _DF1S	0
 195:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x9
 196:.\sd/ff.c     **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 197:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 198:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 199:.\sd/ff.c     **** 
 200:.\sd/ff.c     **** #elif _CODE_PAGE == 720	/* Arabic (OEM) */
 201:.\sd/ff.c     **** #define _DF1S	0
 202:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x9
 203:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 204:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 5


 205:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 206:.\sd/ff.c     **** 
 207:.\sd/ff.c     **** #elif _CODE_PAGE == 737	/* Greek (OEM) */
 208:.\sd/ff.c     **** #define _DF1S	0
 209:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 210:.\sd/ff.c     **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96,0xB0,0xB1,0xB2,
 211:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 212:.\sd/ff.c     **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 213:.\sd/ff.c     **** 
 214:.\sd/ff.c     **** #elif _CODE_PAGE == 775	/* Baltic (OEM) */
 215:.\sd/ff.c     **** #define _DF1S	0
 216:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x9
 217:.\sd/ff.c     **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 218:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xB5,0xB6,0xB7,
 219:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 220:.\sd/ff.c     **** 
 221:.\sd/ff.c     **** #elif _CODE_PAGE == 850	/* Multilingual Latin 1 (OEM) */
 222:.\sd/ff.c     **** #define _DF1S	0
 223:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 224:.\sd/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 225:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 226:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 227:.\sd/ff.c     **** 
 228:.\sd/ff.c     **** #elif _CODE_PAGE == 852	/* Latin 2 (OEM) */
 229:.\sd/ff.c     **** #define _DF1S	0
 230:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x9
 231:.\sd/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF,0xB0,0xB1,0xB2,
 232:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 233:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,
 234:.\sd/ff.c     **** 
 235:.\sd/ff.c     **** #elif _CODE_PAGE == 855	/* Cyrillic (OEM) */
 236:.\sd/ff.c     **** #define _DF1S	0
 237:.\sd/ff.c     **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x9
 238:.\sd/ff.c     **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 239:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD3,
 240:.\sd/ff.c     **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,
 241:.\sd/ff.c     **** 
 242:.\sd/ff.c     **** #elif _CODE_PAGE == 857	/* Turkish (OEM) */
 243:.\sd/ff.c     **** #define _DF1S	0
 244:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x9
 245:.\sd/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 246:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 247:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,
 248:.\sd/ff.c     **** 
 249:.\sd/ff.c     **** #elif _CODE_PAGE == 858	/* Multilingual Latin 1 + Euro (OEM) */
 250:.\sd/ff.c     **** #define _DF1S	0
 251:.\sd/ff.c     **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 252:.\sd/ff.c     **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 253:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 254:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 255:.\sd/ff.c     **** 
 256:.\sd/ff.c     **** #elif _CODE_PAGE == 862	/* Hebrew (OEM) */
 257:.\sd/ff.c     **** #define _DF1S	0
 258:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 259:.\sd/ff.c     **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 260:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 261:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 6


 262:.\sd/ff.c     **** 
 263:.\sd/ff.c     **** #elif _CODE_PAGE == 866	/* Russian (OEM) */
 264:.\sd/ff.c     **** #define _DF1S	0
 265:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 266:.\sd/ff.c     **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0xB0,0xB1,0xB2,
 267:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 268:.\sd/ff.c     **** 				0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,
 269:.\sd/ff.c     **** 
 270:.\sd/ff.c     **** #elif _CODE_PAGE == 874	/* Thai (OEM, Windows) */
 271:.\sd/ff.c     **** #define _DF1S	0
 272:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 273:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 274:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 275:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 276:.\sd/ff.c     **** 
 277:.\sd/ff.c     **** #elif _CODE_PAGE == 1250 /* Central Europe (Windows) */
 278:.\sd/ff.c     **** #define _DF1S	0
 279:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 280:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 281:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 282:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 283:.\sd/ff.c     **** 
 284:.\sd/ff.c     **** #elif _CODE_PAGE == 1251 /* Cyrillic (Windows) */
 285:.\sd/ff.c     **** #define _DF1S	0
 286:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x8
 287:.\sd/ff.c     **** 				0xA0,0xA2,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 288:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 289:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 290:.\sd/ff.c     **** 
 291:.\sd/ff.c     **** #elif _CODE_PAGE == 1252 /* Latin 1 (Windows) */
 292:.\sd/ff.c     **** #define _DF1S	0
 293:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 294:.\sd/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 295:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 296:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 297:.\sd/ff.c     **** 
 298:.\sd/ff.c     **** #elif _CODE_PAGE == 1253 /* Greek (Windows) */
 299:.\sd/ff.c     **** #define _DF1S	0
 300:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 301:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 302:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 303:.\sd/ff.c     **** 				0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 304:.\sd/ff.c     **** 
 305:.\sd/ff.c     **** #elif _CODE_PAGE == 1254 /* Turkish (Windows) */
 306:.\sd/ff.c     **** #define _DF1S	0
 307:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 308:.\sd/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 309:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 310:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 311:.\sd/ff.c     **** 
 312:.\sd/ff.c     **** #elif _CODE_PAGE == 1255 /* Hebrew (Windows) */
 313:.\sd/ff.c     **** #define _DF1S	0
 314:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 315:.\sd/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 316:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 317:.\sd/ff.c     **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 318:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 7


 319:.\sd/ff.c     **** #elif _CODE_PAGE == 1256 /* Arabic (Windows) */
 320:.\sd/ff.c     **** #define _DF1S	0
 321:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 322:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 323:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 324:.\sd/ff.c     **** 				0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,
 325:.\sd/ff.c     **** 
 326:.\sd/ff.c     **** #elif _CODE_PAGE == 1257 /* Baltic (Windows) */
 327:.\sd/ff.c     **** #define _DF1S	0
 328:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 329:.\sd/ff.c     **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 330:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 331:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 332:.\sd/ff.c     **** 
 333:.\sd/ff.c     **** #elif _CODE_PAGE == 1258 /* Vietnam (OEM, Windows) */
 334:.\sd/ff.c     **** #define _DF1S	0
 335:.\sd/ff.c     **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 336:.\sd/ff.c     **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 337:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 338:.\sd/ff.c     **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 339:.\sd/ff.c     **** 
 340:.\sd/ff.c     **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 341:.\sd/ff.c     **** #if _USE_LFN
 342:.\sd/ff.c     **** #error Cannot use LFN feature without valid code page.
 343:.\sd/ff.c     **** #endif
 344:.\sd/ff.c     **** #define _DF1S	0
 345:.\sd/ff.c     **** 
 346:.\sd/ff.c     **** #else
 347:.\sd/ff.c     **** #error Unknown code page
 348:.\sd/ff.c     **** 
 349:.\sd/ff.c     **** #endif
 350:.\sd/ff.c     **** 
 351:.\sd/ff.c     **** 
 352:.\sd/ff.c     **** /* Character code support macros */
 353:.\sd/ff.c     **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 354:.\sd/ff.c     **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 355:.\sd/ff.c     **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 356:.\sd/ff.c     **** 
 357:.\sd/ff.c     **** #if _DF1S		/* Code page is DBCS */
 358:.\sd/ff.c     **** 
 359:.\sd/ff.c     **** #ifdef _DF2S	/* Two 1st byte areas */
 360:.\sd/ff.c     **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 361:.\sd/ff.c     **** #else			/* One 1st byte area */
 362:.\sd/ff.c     **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 363:.\sd/ff.c     **** #endif
 364:.\sd/ff.c     **** 
 365:.\sd/ff.c     **** #ifdef _DS3S	/* Three 2nd byte areas */
 366:.\sd/ff.c     **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 367:.\sd/ff.c     **** #else			/* Two 2nd byte areas */
 368:.\sd/ff.c     **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 369:.\sd/ff.c     **** #endif
 370:.\sd/ff.c     **** 
 371:.\sd/ff.c     **** #else			/* Code page is SBCS */
 372:.\sd/ff.c     **** 
 373:.\sd/ff.c     **** #define IsDBCS1(c)	0
 374:.\sd/ff.c     **** #define IsDBCS2(c)	0
 375:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 8


 376:.\sd/ff.c     **** #endif /* _DF1S */
 377:.\sd/ff.c     **** 
 378:.\sd/ff.c     **** 
 379:.\sd/ff.c     **** /* Name status flags */
 380:.\sd/ff.c     **** #define NS			11		/* Index of name status byte in fn[] */
 381:.\sd/ff.c     **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 382:.\sd/ff.c     **** #define NS_LFN		0x02	/* Force to create LFN entry */
 383:.\sd/ff.c     **** #define NS_LAST		0x04	/* Last segment */
 384:.\sd/ff.c     **** #define NS_BODY		0x08	/* Lower case flag (body) */
 385:.\sd/ff.c     **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 386:.\sd/ff.c     **** #define NS_DOT		0x20	/* Dot entry */
 387:.\sd/ff.c     **** 
 388:.\sd/ff.c     **** 
 389:.\sd/ff.c     **** /* FAT sub-type boundaries */
 390:.\sd/ff.c     **** /* Note that the FAT spec by Microsoft says 4085 but Windows works with 4087! */
 391:.\sd/ff.c     **** #define MIN_FAT16	4086	/* Minimum number of clusters for FAT16 */
 392:.\sd/ff.c     **** #define	MIN_FAT32	65526	/* Minimum number of clusters for FAT32 */
 393:.\sd/ff.c     **** 
 394:.\sd/ff.c     **** 
 395:.\sd/ff.c     **** /* FatFs refers the members in the FAT structures as byte array instead of
 396:.\sd/ff.c     **** / structure member because the structure is not binary compatible between
 397:.\sd/ff.c     **** / different platforms */
 398:.\sd/ff.c     **** 
 399:.\sd/ff.c     **** #define BS_jmpBoot			0	/* Jump instruction (3) */
 400:.\sd/ff.c     **** #define BS_OEMName			3	/* OEM name (8) */
 401:.\sd/ff.c     **** #define BPB_BytsPerSec		11	/* Sector size [byte] (2) */
 402:.\sd/ff.c     **** #define BPB_SecPerClus		13	/* Cluster size [sector] (1) */
 403:.\sd/ff.c     **** #define BPB_RsvdSecCnt		14	/* Size of reserved area [sector] (2) */
 404:.\sd/ff.c     **** #define BPB_NumFATs			16	/* Number of FAT copies (1) */
 405:.\sd/ff.c     **** #define BPB_RootEntCnt		17	/* Number of root dir entries for FAT12/16 (2) */
 406:.\sd/ff.c     **** #define BPB_TotSec16		19	/* Volume size [sector] (2) */
 407:.\sd/ff.c     **** #define BPB_Media			21	/* Media descriptor (1) */
 408:.\sd/ff.c     **** #define BPB_FATSz16			22	/* FAT size [sector] (2) */
 409:.\sd/ff.c     **** #define BPB_SecPerTrk		24	/* Track size [sector] (2) */
 410:.\sd/ff.c     **** #define BPB_NumHeads		26	/* Number of heads (2) */
 411:.\sd/ff.c     **** #define BPB_HiddSec			28	/* Number of special hidden sectors (4) */
 412:.\sd/ff.c     **** #define BPB_TotSec32		32	/* Volume size [sector] (4) */
 413:.\sd/ff.c     **** #define BS_DrvNum			36	/* Physical drive number (2) */
 414:.\sd/ff.c     **** #define BS_BootSig			38	/* Extended boot signature (1) */
 415:.\sd/ff.c     **** #define BS_VolID			39	/* Volume serial number (4) */
 416:.\sd/ff.c     **** #define BS_VolLab			43	/* Volume label (8) */
 417:.\sd/ff.c     **** #define BS_FilSysType		54	/* File system type (1) */
 418:.\sd/ff.c     **** #define BPB_FATSz32			36	/* FAT size [sector] (4) */
 419:.\sd/ff.c     **** #define BPB_ExtFlags		40	/* Extended flags (2) */
 420:.\sd/ff.c     **** #define BPB_FSVer			42	/* File system version (2) */
 421:.\sd/ff.c     **** #define BPB_RootClus		44	/* Root dir first cluster (4) */
 422:.\sd/ff.c     **** #define BPB_FSInfo			48	/* Offset of FSInfo sector (2) */
 423:.\sd/ff.c     **** #define BPB_BkBootSec		50	/* Offset of backup boot sectot (2) */
 424:.\sd/ff.c     **** #define BS_DrvNum32			64	/* Physical drive number (2) */
 425:.\sd/ff.c     **** #define BS_BootSig32		66	/* Extended boot signature (1) */
 426:.\sd/ff.c     **** #define BS_VolID32			67	/* Volume serial number (4) */
 427:.\sd/ff.c     **** #define BS_VolLab32			71	/* Volume label (8) */
 428:.\sd/ff.c     **** #define BS_FilSysType32		82	/* File system type (1) */
 429:.\sd/ff.c     **** #define	FSI_LeadSig			0	/* FSI: Leading signature (4) */
 430:.\sd/ff.c     **** #define	FSI_StrucSig		484	/* FSI: Structure signature (4) */
 431:.\sd/ff.c     **** #define	FSI_Free_Count		488	/* FSI: Number of free clusters (4) */
 432:.\sd/ff.c     **** #define	FSI_Nxt_Free		492	/* FSI: Last allocated cluster (4) */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 9


 433:.\sd/ff.c     **** #define MBR_Table			446	/* MBR: Partition table offset (2) */
 434:.\sd/ff.c     **** #define	SZ_PTE				16	/* MBR: Size of a partition table entry */
 435:.\sd/ff.c     **** #define BS_55AA				510	/* Boot sector signature (2) */
 436:.\sd/ff.c     **** 
 437:.\sd/ff.c     **** #define	DIR_Name			0	/* Short file name (11) */
 438:.\sd/ff.c     **** #define	DIR_Attr			11	/* Attribute (1) */
 439:.\sd/ff.c     **** #define	DIR_NTres			12	/* NT flag (1) */
 440:.\sd/ff.c     **** #define	DIR_CrtTime			14	/* Created time (2) */
 441:.\sd/ff.c     **** #define	DIR_CrtDate			16	/* Created date (2) */
 442:.\sd/ff.c     **** #define	DIR_FstClusHI		20	/* Higher 16-bit of first cluster (2) */
 443:.\sd/ff.c     **** #define	DIR_WrtTime			22	/* Modified time (2) */
 444:.\sd/ff.c     **** #define	DIR_WrtDate			24	/* Modified date (2) */
 445:.\sd/ff.c     **** #define	DIR_FstClusLO		26	/* Lower 16-bit of first cluster (2) */
 446:.\sd/ff.c     **** #define	DIR_FileSize		28	/* File size (4) */
 447:.\sd/ff.c     **** #define	LDIR_Ord			0	/* LFN entry order and LLE flag (1) */
 448:.\sd/ff.c     **** #define	LDIR_Attr			11	/* LFN attribute (1) */
 449:.\sd/ff.c     **** #define	LDIR_Type			12	/* LFN type (1) */
 450:.\sd/ff.c     **** #define	LDIR_Chksum			13	/* Sum of corresponding SFN entry */
 451:.\sd/ff.c     **** #define	LDIR_FstClusLO		26	/* Filled by zero (0) */
 452:.\sd/ff.c     **** #define	SZ_DIR				32		/* Size of a directory entry */
 453:.\sd/ff.c     **** #define	LLE					0x40	/* Last LONG_ entry flag in LDIR_Ord */
 454:.\sd/ff.c     **** #define	DDE					0xE5	/* Deleted directory enrty mark in DIR_Name[0] */
 455:.\sd/ff.c     **** #define	NDDE				0x05	/* Replacement of a character collides with DDE */
 456:.\sd/ff.c     **** 
 457:.\sd/ff.c     **** 
 458:.\sd/ff.c     **** /*------------------------------------------------------------*/
 459:.\sd/ff.c     **** /* Module private work area                                   */
 460:.\sd/ff.c     **** /*------------------------------------------------------------*/
 461:.\sd/ff.c     **** /* Note that uninitialized variables with static duration are
 462:.\sd/ff.c     **** /  zeroed/nulled at start-up. If not, the compiler or start-up
 463:.\sd/ff.c     **** /  routine is out of ANSI-C standard.
 464:.\sd/ff.c     **** */
 465:.\sd/ff.c     **** 
 466:.\sd/ff.c     **** #if _VOLUMES
 467:.\sd/ff.c     **** static
 468:.\sd/ff.c     **** FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 469:.\sd/ff.c     **** #else
 470:.\sd/ff.c     **** #error Number of volumes must not be 0.
 471:.\sd/ff.c     **** #endif
 472:.\sd/ff.c     **** 
 473:.\sd/ff.c     **** static
 474:.\sd/ff.c     **** WORD Fsid;				/* File system mount ID */
 475:.\sd/ff.c     **** 
 476:.\sd/ff.c     **** #if _FS_RPATH
 477:.\sd/ff.c     **** static
 478:.\sd/ff.c     **** BYTE CurrVol;			/* Current drive */
 479:.\sd/ff.c     **** #endif
 480:.\sd/ff.c     **** 
 481:.\sd/ff.c     **** #if _FS_SHARE
 482:.\sd/ff.c     **** static
 483:.\sd/ff.c     **** FILESEM	Files[_FS_SHARE];	/* File lock semaphores */
 484:.\sd/ff.c     **** #endif
 485:.\sd/ff.c     **** 
 486:.\sd/ff.c     **** #if _USE_LFN == 0			/* No LFN feature */
 487:.\sd/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]
 488:.\sd/ff.c     **** #define INIT_BUF(dobj)		(dobj).fn = sfn
 489:.\sd/ff.c     **** #define	FREE_BUF()
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 10


 490:.\sd/ff.c     **** 
 491:.\sd/ff.c     **** #elif _USE_LFN == 1			/* LFN feature with static working buffer */
 492:.\sd/ff.c     **** static WCHAR LfnBuf[_MAX_LFN+1];
 493:.\sd/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]
 494:.\sd/ff.c     **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = LfnBuf; }
 495:.\sd/ff.c     **** #define	FREE_BUF()
 496:.\sd/ff.c     **** 
 497:.\sd/ff.c     **** #elif _USE_LFN == 2 		/* LFN feature with dynamic working buffer on the stack */
 498:.\sd/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]; WCHAR lbuf[_MAX_LFN+1]
 499:.\sd/ff.c     **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = lbuf; }
 500:.\sd/ff.c     **** #define	FREE_BUF()
 501:.\sd/ff.c     **** 
 502:.\sd/ff.c     **** #elif _USE_LFN == 3 		/* LFN feature with dynamic working buffer on the heap */
 503:.\sd/ff.c     **** #define	DEF_NAMEBUF			BYTE sfn[12]; WCHAR *lfn
 504:.\sd/ff.c     **** #define INIT_BUF(dobj)		{ lfn = ff_memalloc((_MAX_LFN + 1) * 2); \
 505:.\sd/ff.c     **** 							  if (!lfn) LEAVE_FF((dobj).fs, FR_NOT_ENOUGH_CORE); \
 506:.\sd/ff.c     **** 							  (dobj).lfn = lfn;	(dobj).fn = sfn; }
 507:.\sd/ff.c     **** #define	FREE_BUF()			ff_memfree(lfn)
 508:.\sd/ff.c     **** 
 509:.\sd/ff.c     **** #else
 510:.\sd/ff.c     **** #error Wrong LFN configuration.
 511:.\sd/ff.c     **** #endif
 512:.\sd/ff.c     **** 
 513:.\sd/ff.c     **** 
 514:.\sd/ff.c     **** 
 515:.\sd/ff.c     **** 
 516:.\sd/ff.c     **** /*--------------------------------------------------------------------------
 517:.\sd/ff.c     **** 
 518:.\sd/ff.c     ****    Module Private Functions
 519:.\sd/ff.c     **** 
 520:.\sd/ff.c     **** ---------------------------------------------------------------------------*/
 521:.\sd/ff.c     **** 
 522:.\sd/ff.c     **** 
 523:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 524:.\sd/ff.c     **** /* String functions                                                      */
 525:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 526:.\sd/ff.c     **** 
 527:.\sd/ff.c     **** /* Copy memory to memory */
 528:.\sd/ff.c     **** static
 529:.\sd/ff.c     **** void mem_cpy (void* dst, const void* src, UINT cnt) {
  25              		.loc 1 529 0
  26              		.cfi_startproc
  27              	.LVL0:
 530:.\sd/ff.c     **** 	BYTE *d = (BYTE*)dst;
 531:.\sd/ff.c     **** 	const BYTE *s = (const BYTE*)src;
 532:.\sd/ff.c     **** 
 533:.\sd/ff.c     **** #if _WORD_ACCESS == 1
 534:.\sd/ff.c     **** 	while (cnt >= sizeof(int)) {
 535:.\sd/ff.c     **** 		*(int*)d = *(int*)s;
 536:.\sd/ff.c     **** 		d += sizeof(int); s += sizeof(int);
 537:.\sd/ff.c     **** 		cnt -= sizeof(int);
 538:.\sd/ff.c     **** 	}
 539:.\sd/ff.c     **** #endif
 540:.\sd/ff.c     **** 	while (cnt--)
  28              		.loc 1 540 0
  29 0000 04E0     		b	.L2
  30              	.LVL1:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 11


  31              	.L3:
 541:.\sd/ff.c     **** 		*d++ = *s++;
  32              		.loc 1 541 0
  33 0002 0A78     		ldrb	r2, [r1]
  34 0004 0270     		strb	r2, [r0]
 540:.\sd/ff.c     **** 		*d++ = *s++;
  35              		.loc 1 540 0
  36 0006 1A1C     		mov	r2, r3
  37              		.loc 1 541 0
  38 0008 0131     		add	r1, r1, #1
  39              	.LVL2:
  40 000a 0130     		add	r0, r0, #1
  41              	.LVL3:
  42              	.L2:
 540:.\sd/ff.c     **** 		*d++ = *s++;
  43              		.loc 1 540 0
  44 000c 531E     		sub	r3, r2, #1
  45              	.LVL4:
  46 000e 002A     		cmp	r2, #0
  47 0010 F7D1     		bne	.L3
 542:.\sd/ff.c     **** }
  48              		.loc 1 542 0
  49              		@ sp needed
  50 0012 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE0:
  53              		.size	mem_cpy, .-mem_cpy
  54              		.section	.text.mem_set,"ax",%progbits
  55              		.align	2
  56              		.code	16
  57              		.thumb_func
  58              		.type	mem_set, %function
  59              	mem_set:
  60              	.LFB1:
 543:.\sd/ff.c     **** 
 544:.\sd/ff.c     **** /* Fill memory */
 545:.\sd/ff.c     **** static
 546:.\sd/ff.c     **** void mem_set (void* dst, int val, UINT cnt) {
  61              		.loc 1 546 0
  62              		.cfi_startproc
  63              	.LVL5:
 547:.\sd/ff.c     **** 	BYTE *d = (BYTE*)dst;
 548:.\sd/ff.c     **** 
 549:.\sd/ff.c     **** 	while (cnt--)
  64              		.loc 1 549 0
  65 0000 02E0     		b	.L5
  66              	.LVL6:
  67              	.L6:
 550:.\sd/ff.c     **** 		*d++ = (BYTE)val;
  68              		.loc 1 550 0
  69 0002 0170     		strb	r1, [r0]
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
  70              		.loc 1 549 0
  71 0004 1A1C     		mov	r2, r3
  72              		.loc 1 550 0
  73 0006 0130     		add	r0, r0, #1
  74              	.LVL7:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 12


  75              	.L5:
 549:.\sd/ff.c     **** 		*d++ = (BYTE)val;
  76              		.loc 1 549 0
  77 0008 531E     		sub	r3, r2, #1
  78              	.LVL8:
  79 000a 002A     		cmp	r2, #0
  80 000c F9D1     		bne	.L6
 551:.\sd/ff.c     **** }
  81              		.loc 1 551 0
  82              		@ sp needed
  83 000e 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE1:
  86              		.size	mem_set, .-mem_set
  87              		.section	.text.mem_cmp,"ax",%progbits
  88              		.align	2
  89              		.code	16
  90              		.thumb_func
  91              		.type	mem_cmp, %function
  92              	mem_cmp:
  93              	.LFB2:
 552:.\sd/ff.c     **** 
 553:.\sd/ff.c     **** /* Compare memory to memory */
 554:.\sd/ff.c     **** static
 555:.\sd/ff.c     **** int mem_cmp (const void* dst, const void* src, UINT cnt) {
  94              		.loc 1 555 0
  95              		.cfi_startproc
  96              	.LVL9:
  97 0000 70B5     		push	{r4, r5, r6, lr}
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 4, -16
 100              		.cfi_offset 5, -12
 101              		.cfi_offset 6, -8
 102              		.cfi_offset 14, -4
 103 0002 031C     		mov	r3, r0
 104              	.LVL10:
 556:.\sd/ff.c     **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 557:.\sd/ff.c     **** 	int r = 0;
 105              		.loc 1 557 0
 106 0004 0020     		mov	r0, #0
 107              	.LVL11:
 558:.\sd/ff.c     **** 
 559:.\sd/ff.c     **** 	while (cnt-- && (r = *d++ - *s++) == 0) ;
 108              		.loc 1 559 0
 109 0006 01E0     		b	.L9
 110              	.LVL12:
 111              	.L10:
 112 0008 291C     		mov	r1, r5
 113 000a 331C     		mov	r3, r6
 114              	.LVL13:
 115              	.L9:
 116              		.loc 1 559 0 is_stmt 0 discriminator 2
 117 000c 541E     		sub	r4, r2, #1
 118              	.LVL14:
 119 000e 002A     		cmp	r2, #0
 120 0010 07D0     		beq	.L8
 121              		.loc 1 559 0 discriminator 1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 13


 122 0012 5E1C     		add	r6, r3, #1
 123              	.LVL15:
 124 0014 1B78     		ldrb	r3, [r3]
 125 0016 4D1C     		add	r5, r1, #1
 126              	.LVL16:
 127 0018 0878     		ldrb	r0, [r1]
 128              	.LVL17:
 129 001a 181A     		sub	r0, r3, r0
 130              	.LVL18:
 131 001c 221C     		mov	r2, r4
 132 001e 0028     		cmp	r0, #0
 133 0020 F2D0     		beq	.L10
 134              	.LVL19:
 135              	.L8:
 560:.\sd/ff.c     **** 	return r;
 561:.\sd/ff.c     **** }
 136              		.loc 1 561 0 is_stmt 1
 137              		@ sp needed
 138              	.LVL20:
 139 0022 70BD     		pop	{r4, r5, r6, pc}
 140              		.cfi_endproc
 141              	.LFE2:
 142              		.size	mem_cmp, .-mem_cmp
 143              		.section	.text.chk_chr,"ax",%progbits
 144              		.align	2
 145              		.code	16
 146              		.thumb_func
 147              		.type	chk_chr, %function
 148              	chk_chr:
 149              	.LFB3:
 562:.\sd/ff.c     **** 
 563:.\sd/ff.c     **** /* Check if chr is contained in the string */
 564:.\sd/ff.c     **** static
 565:.\sd/ff.c     **** int chk_chr (const char* str, int chr) {
 150              		.loc 1 565 0
 151              		.cfi_startproc
 152              	.LVL21:
 566:.\sd/ff.c     **** 	while (*str && *str != chr) str++;
 153              		.loc 1 566 0
 154 0000 00E0     		b	.L12
 155              	.L14:
 156              		.loc 1 566 0 is_stmt 0 discriminator 3
 157 0002 0130     		add	r0, r0, #1
 158              	.LVL22:
 159              	.L12:
 160              		.loc 1 566 0 discriminator 1
 161 0004 0378     		ldrb	r3, [r0]
 162 0006 002B     		cmp	r3, #0
 163 0008 01D0     		beq	.L13
 164              		.loc 1 566 0 discriminator 2
 165 000a 8B42     		cmp	r3, r1
 166 000c F9D1     		bne	.L14
 167              	.L13:
 567:.\sd/ff.c     **** 	return *str;
 568:.\sd/ff.c     **** }
 168              		.loc 1 568 0 is_stmt 1
 169 000e 181C     		mov	r0, r3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 14


 170              	.LVL23:
 171              		@ sp needed
 172 0010 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE3:
 175              		.size	chk_chr, .-chk_chr
 176 0012 C046     		.section	.text.chk_lock,"ax",%progbits
 177              		.align	2
 178              		.code	16
 179              		.thumb_func
 180              		.type	chk_lock, %function
 181              	chk_lock:
 182              	.LFB4:
 569:.\sd/ff.c     **** 
 570:.\sd/ff.c     **** 
 571:.\sd/ff.c     **** 
 572:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 573:.\sd/ff.c     **** /* Request/Release grant to access the volume                            */
 574:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 575:.\sd/ff.c     **** #if _FS_REENTRANT
 576:.\sd/ff.c     **** 
 577:.\sd/ff.c     **** static
 578:.\sd/ff.c     **** int lock_fs (
 579:.\sd/ff.c     **** 	FATFS *fs		/* File system object */
 580:.\sd/ff.c     **** )
 581:.\sd/ff.c     **** {
 582:.\sd/ff.c     **** 	return ff_req_grant(fs->sobj);
 583:.\sd/ff.c     **** }
 584:.\sd/ff.c     **** 
 585:.\sd/ff.c     **** 
 586:.\sd/ff.c     **** static
 587:.\sd/ff.c     **** void unlock_fs (
 588:.\sd/ff.c     **** 	FATFS *fs,		/* File system object */
 589:.\sd/ff.c     **** 	FRESULT res		/* Result code to be returned */
 590:.\sd/ff.c     **** )
 591:.\sd/ff.c     **** {
 592:.\sd/ff.c     **** 	if (res != FR_NOT_ENABLED &&
 593:.\sd/ff.c     **** 		res != FR_INVALID_DRIVE &&
 594:.\sd/ff.c     **** 		res != FR_INVALID_OBJECT &&
 595:.\sd/ff.c     **** 		res != FR_TIMEOUT) {
 596:.\sd/ff.c     **** 		ff_rel_grant(fs->sobj);
 597:.\sd/ff.c     **** 	}
 598:.\sd/ff.c     **** }
 599:.\sd/ff.c     **** #endif
 600:.\sd/ff.c     **** 
 601:.\sd/ff.c     **** 
 602:.\sd/ff.c     **** 
 603:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 604:.\sd/ff.c     **** /* File shareing control functions                                       */
 605:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 606:.\sd/ff.c     **** #if _FS_SHARE
 607:.\sd/ff.c     **** 
 608:.\sd/ff.c     **** static
 609:.\sd/ff.c     **** FRESULT chk_lock (	/* Check if the file can be accessed */
 610:.\sd/ff.c     **** 	DIR* dj,		/* Directory object pointing the file to be checked */
 611:.\sd/ff.c     **** 	int acc			/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 612:.\sd/ff.c     **** )
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 15


 613:.\sd/ff.c     **** {
 183              		.loc 1 613 0
 184              		.cfi_startproc
 185              	.LVL24:
 186 0000 30B5     		push	{r4, r5, lr}
 187              		.cfi_def_cfa_offset 12
 188              		.cfi_offset 4, -12
 189              		.cfi_offset 5, -8
 190              		.cfi_offset 14, -4
 191              	.LVL25:
 614:.\sd/ff.c     **** 	UINT i, be;
 615:.\sd/ff.c     **** 
 616:.\sd/ff.c     **** 	/* Search file semaphore table */
 617:.\sd/ff.c     **** 	for (i = be = 0; i < _FS_SHARE; i++) {
 192              		.loc 1 617 0
 193 0002 0025     		mov	r5, #0
 194 0004 0023     		mov	r3, #0
 195 0006 1EE0     		b	.L16
 196              	.LVL26:
 197              	.L20:
 618:.\sd/ff.c     **** 		if (Files[i].fs) {	/* Existing entry */
 198              		.loc 1 618 0
 199 0008 5A00     		lsl	r2, r3, #1
 200 000a D218     		add	r2, r2, r3
 201 000c 9200     		lsl	r2, r2, #2
 202 000e 1E4C     		ldr	r4, .L29
 203 0010 1259     		ldr	r2, [r2, r4]
 204 0012 002A     		cmp	r2, #0
 205 0014 15D0     		beq	.L17
 619:.\sd/ff.c     **** 			if (Files[i].fs == dj->fs &&	 	/* Check if the file matched with an open file */
 206              		.loc 1 619 0
 207 0016 0468     		ldr	r4, [r0]
 208 0018 A242     		cmp	r2, r4
 209 001a 13D1     		bne	.L18
 620:.\sd/ff.c     **** 				Files[i].clu == dj->sclust &&
 210              		.loc 1 620 0 discriminator 1
 211 001c 5A00     		lsl	r2, r3, #1
 212 001e D218     		add	r2, r2, r3
 213 0020 9200     		lsl	r2, r2, #2
 214 0022 194C     		ldr	r4, .L29
 215 0024 A218     		add	r2, r4, r2
 216 0026 5268     		ldr	r2, [r2, #4]
 619:.\sd/ff.c     **** 			if (Files[i].fs == dj->fs &&	 	/* Check if the file matched with an open file */
 217              		.loc 1 619 0 discriminator 1
 218 0028 8468     		ldr	r4, [r0, #8]
 219 002a A242     		cmp	r2, r4
 220 002c 0AD1     		bne	.L18
 621:.\sd/ff.c     **** 				Files[i].idx == dj->index) break;
 221              		.loc 1 621 0
 222 002e 5A00     		lsl	r2, r3, #1
 223 0030 D218     		add	r2, r2, r3
 224 0032 9200     		lsl	r2, r2, #2
 225 0034 144C     		ldr	r4, .L29
 226 0036 A218     		add	r2, r4, r2
 227 0038 1489     		ldrh	r4, [r2, #8]
 228 003a C288     		ldrh	r2, [r0, #6]
 620:.\sd/ff.c     **** 				Files[i].clu == dj->sclust &&
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 16


 229              		.loc 1 620 0
 230 003c 9442     		cmp	r4, r2
 231 003e 01D1     		bne	.L18
 232 0040 03E0     		b	.L19
 233              	.L17:
 622:.\sd/ff.c     **** 		} else {			/* Blank entry */
 623:.\sd/ff.c     **** 			be++;
 234              		.loc 1 623 0
 235 0042 0135     		add	r5, r5, #1
 236              	.LVL27:
 237              	.L18:
 617:.\sd/ff.c     **** 		if (Files[i].fs) {	/* Existing entry */
 238              		.loc 1 617 0 discriminator 2
 239 0044 0133     		add	r3, r3, #1
 240              	.LVL28:
 241              	.L16:
 617:.\sd/ff.c     **** 		if (Files[i].fs) {	/* Existing entry */
 242              		.loc 1 617 0 is_stmt 0 discriminator 1
 243 0046 022B     		cmp	r3, #2
 244 0048 DED9     		bls	.L20
 245              	.L19:
 624:.\sd/ff.c     **** 		}
 625:.\sd/ff.c     **** 	}
 626:.\sd/ff.c     **** 	if (i == _FS_SHARE)	/* The file is not opened */
 246              		.loc 1 626 0 is_stmt 1
 247 004a 032B     		cmp	r3, #3
 248 004c 09D1     		bne	.L21
 627:.\sd/ff.c     **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new file?
 249              		.loc 1 627 0
 250 004e 002D     		cmp	r5, #0
 251 0050 03D1     		bne	.L25
 252              		.loc 1 627 0 is_stmt 0 discriminator 2
 253 0052 0229     		cmp	r1, #2
 254 0054 03D1     		bne	.L26
 255              		.loc 1 627 0
 256 0056 0020     		mov	r0, #0
 257              	.LVL29:
 258 0058 14E0     		b	.L23
 259              	.LVL30:
 260              	.L25:
 261 005a 0020     		mov	r0, #0
 262              	.LVL31:
 263 005c 12E0     		b	.L23
 264              	.LVL32:
 265              	.L26:
 266 005e 1220     		mov	r0, #18
 267              	.LVL33:
 268 0060 10E0     		b	.L23
 269              	.LVL34:
 270              	.L21:
 628:.\sd/ff.c     **** 
 629:.\sd/ff.c     **** 	/* The file has been opened. Reject any open against writing file and all write mode open */
 630:.\sd/ff.c     **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 271              		.loc 1 630 0 is_stmt 1
 272 0062 0029     		cmp	r1, #0
 273 0064 0BD1     		bne	.L27
 274              		.loc 1 630 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 17


 275 0066 5A00     		lsl	r2, r3, #1
 276 0068 D318     		add	r3, r2, r3
 277              	.LVL35:
 278 006a 9B00     		lsl	r3, r3, #2
 279 006c 064A     		ldr	r2, .L29
 280 006e D318     		add	r3, r2, r3
 281 0070 5A89     		ldrh	r2, [r3, #10]
 282 0072 8023     		mov	r3, #128
 283 0074 5B00     		lsl	r3, r3, #1
 284 0076 9A42     		cmp	r2, r3
 285 0078 03D1     		bne	.L28
 286              		.loc 1 630 0
 287 007a 1020     		mov	r0, #16
 288              	.LVL36:
 289 007c 02E0     		b	.L23
 290              	.LVL37:
 291              	.L27:
 292 007e 1020     		mov	r0, #16
 293              	.LVL38:
 294 0080 00E0     		b	.L23
 295              	.LVL39:
 296              	.L28:
 297 0082 0020     		mov	r0, #0
 298              	.LVL40:
 299              	.L23:
 631:.\sd/ff.c     **** }
 300              		.loc 1 631 0 is_stmt 1
 301              		@ sp needed
 302              	.LVL41:
 303 0084 30BD     		pop	{r4, r5, pc}
 304              	.L30:
 305 0086 C046     		.align	2
 306              	.L29:
 307 0088 00000000 		.word	.LANCHOR0
 308              		.cfi_endproc
 309              	.LFE4:
 310              		.size	chk_lock, .-chk_lock
 311              		.section	.text.enq_lock,"ax",%progbits
 312              		.align	2
 313              		.code	16
 314              		.thumb_func
 315              		.type	enq_lock, %function
 316              	enq_lock:
 317              	.LFB5:
 632:.\sd/ff.c     **** 
 633:.\sd/ff.c     **** 
 634:.\sd/ff.c     **** static
 635:.\sd/ff.c     **** int enq_lock (void)	/* Check if an entry is available for a new file */
 636:.\sd/ff.c     **** {
 318              		.loc 1 636 0
 319              		.cfi_startproc
 320              	.LVL42:
 637:.\sd/ff.c     **** 	UINT i;
 638:.\sd/ff.c     **** 
 639:.\sd/ff.c     **** 	for (i = 0; i < _FS_SHARE && Files[i].fs; i++) ;
 321              		.loc 1 639 0
 322 0000 0020     		mov	r0, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 18


 323 0002 00E0     		b	.L32
 324              	.LVL43:
 325              	.L34:
 326              		.loc 1 639 0 is_stmt 0 discriminator 4
 327 0004 0130     		add	r0, r0, #1
 328              	.LVL44:
 329              	.L32:
 330              		.loc 1 639 0 discriminator 1
 331 0006 0228     		cmp	r0, #2
 332 0008 06D8     		bhi	.L33
 333              		.loc 1 639 0 discriminator 3
 334 000a 4300     		lsl	r3, r0, #1
 335 000c 1B18     		add	r3, r3, r0
 336 000e 9B00     		lsl	r3, r3, #2
 337 0010 044A     		ldr	r2, .L35
 338 0012 9B58     		ldr	r3, [r3, r2]
 339 0014 002B     		cmp	r3, #0
 340 0016 F5D1     		bne	.L34
 341              	.L33:
 640:.\sd/ff.c     **** 	return (i == _FS_SHARE) ? 0 : 1;
 342              		.loc 1 640 0 is_stmt 1
 343 0018 0338     		sub	r0, r0, #3
 344              	.LVL45:
 345 001a 431E     		sub	r3, r0, #1
 346 001c 9841     		sbc	r0, r0, r3
 347              	.LVL46:
 348 001e C0B2     		uxtb	r0, r0
 641:.\sd/ff.c     **** }
 349              		.loc 1 641 0
 350              		@ sp needed
 351 0020 7047     		bx	lr
 352              	.L36:
 353 0022 C046     		.align	2
 354              	.L35:
 355 0024 00000000 		.word	.LANCHOR0
 356              		.cfi_endproc
 357              	.LFE5:
 358              		.size	enq_lock, .-enq_lock
 359              		.section	.text.inc_lock,"ax",%progbits
 360              		.align	2
 361              		.code	16
 362              		.thumb_func
 363              		.type	inc_lock, %function
 364              	inc_lock:
 365              	.LFB6:
 642:.\sd/ff.c     **** 
 643:.\sd/ff.c     **** 
 644:.\sd/ff.c     **** static
 645:.\sd/ff.c     **** UINT inc_lock (	/* Increment file open counter and returns its index (0:int error) */
 646:.\sd/ff.c     **** 	DIR* dj,	/* Directory object pointing the file to register or increment */
 647:.\sd/ff.c     **** 	int acc		/* Desired access mode (0:Read, !0:Write) */
 648:.\sd/ff.c     **** )
 649:.\sd/ff.c     **** {
 366              		.loc 1 649 0
 367              		.cfi_startproc
 368              	.LVL47:
 369 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 19


 370              		.cfi_def_cfa_offset 16
 371              		.cfi_offset 4, -16
 372              		.cfi_offset 5, -12
 373              		.cfi_offset 6, -8
 374              		.cfi_offset 14, -4
 375              	.LVL48:
 650:.\sd/ff.c     **** 	UINT i;
 651:.\sd/ff.c     **** 
 652:.\sd/ff.c     **** 
 653:.\sd/ff.c     **** 	for (i = 0; i < _FS_SHARE; i++) {	/* Find the file */
 376              		.loc 1 653 0
 377 0002 0023     		mov	r3, #0
 378 0004 1AE0     		b	.L38
 379              	.LVL49:
 380              	.L41:
 654:.\sd/ff.c     **** 		if (Files[i].fs == dj->fs &&
 381              		.loc 1 654 0
 382 0006 5A00     		lsl	r2, r3, #1
 383 0008 D218     		add	r2, r2, r3
 384 000a 9200     		lsl	r2, r2, #2
 385 000c 2D4C     		ldr	r4, .L53
 386 000e 1259     		ldr	r2, [r2, r4]
 387 0010 0468     		ldr	r4, [r0]
 388 0012 A242     		cmp	r2, r4
 389 0014 11D1     		bne	.L39
 655:.\sd/ff.c     **** 			Files[i].clu == dj->sclust &&
 390              		.loc 1 655 0 discriminator 1
 391 0016 5A00     		lsl	r2, r3, #1
 392 0018 D218     		add	r2, r2, r3
 393 001a 9200     		lsl	r2, r2, #2
 394 001c 294C     		ldr	r4, .L53
 395 001e A218     		add	r2, r4, r2
 396 0020 5268     		ldr	r2, [r2, #4]
 654:.\sd/ff.c     **** 		if (Files[i].fs == dj->fs &&
 397              		.loc 1 654 0 discriminator 1
 398 0022 8468     		ldr	r4, [r0, #8]
 399 0024 A242     		cmp	r2, r4
 400 0026 08D1     		bne	.L39
 656:.\sd/ff.c     **** 			Files[i].idx == dj->index) break;
 401              		.loc 1 656 0
 402 0028 5A00     		lsl	r2, r3, #1
 403 002a D218     		add	r2, r2, r3
 404 002c 9200     		lsl	r2, r2, #2
 405 002e 254C     		ldr	r4, .L53
 406 0030 A218     		add	r2, r4, r2
 407 0032 1489     		ldrh	r4, [r2, #8]
 408 0034 C288     		ldrh	r2, [r0, #6]
 655:.\sd/ff.c     **** 			Files[i].clu == dj->sclust &&
 409              		.loc 1 655 0
 410 0036 9442     		cmp	r4, r2
 411 0038 02D0     		beq	.L40
 412              	.L39:
 653:.\sd/ff.c     **** 		if (Files[i].fs == dj->fs &&
 413              		.loc 1 653 0 discriminator 2
 414 003a 0133     		add	r3, r3, #1
 415              	.LVL50:
 416              	.L38:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 20


 653:.\sd/ff.c     **** 		if (Files[i].fs == dj->fs &&
 417              		.loc 1 653 0 is_stmt 0 discriminator 1
 418 003c 022B     		cmp	r3, #2
 419 003e E2D9     		bls	.L41
 420              	.L40:
 657:.\sd/ff.c     **** 	}
 658:.\sd/ff.c     **** 
 659:.\sd/ff.c     **** 	if (i == _FS_SHARE) {				/* Not opened. Register it as new. */
 421              		.loc 1 659 0 is_stmt 1
 422 0040 032B     		cmp	r3, #3
 423 0042 1CD1     		bne	.L43
 424 0044 01E0     		b	.L49
 425              	.L45:
 660:.\sd/ff.c     **** 		for (i = 0; i < _FS_SHARE && Files[i].fs; i++) ;
 426              		.loc 1 660 0 discriminator 4
 427 0046 0133     		add	r3, r3, #1
 428              	.LVL51:
 429 0048 00E0     		b	.L42
 430              	.L49:
 431 004a 0023     		mov	r3, #0
 432              	.LVL52:
 433              	.L42:
 434              		.loc 1 660 0 is_stmt 0 discriminator 1
 435 004c 022B     		cmp	r3, #2
 436 004e 06D8     		bhi	.L44
 437              		.loc 1 660 0 discriminator 3
 438 0050 5A00     		lsl	r2, r3, #1
 439 0052 D218     		add	r2, r2, r3
 440 0054 9200     		lsl	r2, r2, #2
 441 0056 1B4C     		ldr	r4, .L53
 442 0058 1259     		ldr	r2, [r2, r4]
 443 005a 002A     		cmp	r2, #0
 444 005c F3D1     		bne	.L45
 445              	.L44:
 661:.\sd/ff.c     **** 		if (i == _FS_SHARE) return 0;	/* No space to register (int err) */
 446              		.loc 1 661 0 is_stmt 1
 447 005e 032B     		cmp	r3, #3
 448 0060 2CD0     		beq	.L50
 662:.\sd/ff.c     **** 		Files[i].fs = dj->fs;
 449              		.loc 1 662 0
 450 0062 184D     		ldr	r5, .L53
 451 0064 5A00     		lsl	r2, r3, #1
 452 0066 D418     		add	r4, r2, r3
 453 0068 A400     		lsl	r4, r4, #2
 454 006a 0668     		ldr	r6, [r0]
 455 006c 6651     		str	r6, [r4, r5]
 663:.\sd/ff.c     **** 		Files[i].clu = dj->sclust;
 456              		.loc 1 663 0
 457 006e 2A19     		add	r2, r5, r4
 458 0070 8468     		ldr	r4, [r0, #8]
 459 0072 5460     		str	r4, [r2, #4]
 664:.\sd/ff.c     **** 		Files[i].idx = dj->index;
 460              		.loc 1 664 0
 461 0074 C488     		ldrh	r4, [r0, #6]
 462 0076 101C     		mov	r0, r2
 463              	.LVL53:
 464 0078 1481     		strh	r4, [r2, #8]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 21


 665:.\sd/ff.c     **** 		Files[i].ctr = 0;
 465              		.loc 1 665 0
 466 007a 0022     		mov	r2, #0
 467 007c 4281     		strh	r2, [r0, #10]
 468              	.L43:
 666:.\sd/ff.c     **** 	}
 667:.\sd/ff.c     **** 
 668:.\sd/ff.c     **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 469              		.loc 1 668 0
 470 007e 0029     		cmp	r1, #0
 471 0080 07D0     		beq	.L47
 472              		.loc 1 668 0 is_stmt 0 discriminator 1
 473 0082 5A00     		lsl	r2, r3, #1
 474 0084 D218     		add	r2, r2, r3
 475 0086 9200     		lsl	r2, r2, #2
 476 0088 0E48     		ldr	r0, .L53
 477 008a 8218     		add	r2, r0, r2
 478 008c 5289     		ldrh	r2, [r2, #10]
 479 008e 002A     		cmp	r2, #0
 480 0090 16D1     		bne	.L51
 481              	.L47:
 669:.\sd/ff.c     **** 
 670:.\sd/ff.c     **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 482              		.loc 1 670 0 is_stmt 1
 483 0092 0029     		cmp	r1, #0
 484 0094 08D1     		bne	.L52
 485              		.loc 1 670 0 is_stmt 0 discriminator 1
 486 0096 5A00     		lsl	r2, r3, #1
 487 0098 D218     		add	r2, r2, r3
 488 009a 9200     		lsl	r2, r2, #2
 489 009c 0949     		ldr	r1, .L53
 490              	.LVL54:
 491 009e 8A18     		add	r2, r1, r2
 492 00a0 5189     		ldrh	r1, [r2, #10]
 493 00a2 0131     		add	r1, r1, #1
 494 00a4 89B2     		uxth	r1, r1
 495 00a6 01E0     		b	.L48
 496              	.LVL55:
 497              	.L52:
 498              		.loc 1 670 0
 499 00a8 8021     		mov	r1, #128
 500              	.LVL56:
 501 00aa 4900     		lsl	r1, r1, #1
 502              	.L48:
 503              		.loc 1 670 0 discriminator 4
 504 00ac 5A00     		lsl	r2, r3, #1
 505 00ae D218     		add	r2, r2, r3
 506 00b0 9200     		lsl	r2, r2, #2
 507 00b2 0448     		ldr	r0, .L53
 508 00b4 8218     		add	r2, r0, r2
 509 00b6 5181     		strh	r1, [r2, #10]
 671:.\sd/ff.c     **** 
 672:.\sd/ff.c     **** 	return i + 1;
 510              		.loc 1 672 0 is_stmt 1 discriminator 4
 511 00b8 581C     		add	r0, r3, #1
 512 00ba 02E0     		b	.L46
 513              	.LVL57:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 22


 514              	.L50:
 661:.\sd/ff.c     **** 		Files[i].fs = dj->fs;
 515              		.loc 1 661 0
 516 00bc 0020     		mov	r0, #0
 517              	.LVL58:
 518 00be 00E0     		b	.L46
 519              	.L51:
 668:.\sd/ff.c     **** 
 520              		.loc 1 668 0
 521 00c0 0020     		mov	r0, #0
 522              	.LVL59:
 523              	.L46:
 673:.\sd/ff.c     **** }
 524              		.loc 1 673 0
 525              		@ sp needed
 526 00c2 70BD     		pop	{r4, r5, r6, pc}
 527              	.L54:
 528              		.align	2
 529              	.L53:
 530 00c4 00000000 		.word	.LANCHOR0
 531              		.cfi_endproc
 532              	.LFE6:
 533              		.size	inc_lock, .-inc_lock
 534              		.section	.text.dec_lock,"ax",%progbits
 535              		.align	2
 536              		.code	16
 537              		.thumb_func
 538              		.type	dec_lock, %function
 539              	dec_lock:
 540              	.LFB7:
 674:.\sd/ff.c     **** 
 675:.\sd/ff.c     **** 
 676:.\sd/ff.c     **** static
 677:.\sd/ff.c     **** FRESULT dec_lock (	/* Decrement file open counter */
 678:.\sd/ff.c     **** 	UINT i			/* Semaphore index */
 679:.\sd/ff.c     **** )
 680:.\sd/ff.c     **** {
 541              		.loc 1 680 0
 542              		.cfi_startproc
 543              	.LVL60:
 681:.\sd/ff.c     **** 	WORD n;
 682:.\sd/ff.c     **** 	FRESULT res;
 683:.\sd/ff.c     **** 
 684:.\sd/ff.c     **** 
 685:.\sd/ff.c     **** 	if (--i < _FS_SHARE) {
 544              		.loc 1 685 0
 545 0000 0138     		sub	r0, r0, #1
 546              	.LVL61:
 547 0002 0228     		cmp	r0, #2
 548 0004 1CD8     		bhi	.L59
 686:.\sd/ff.c     **** 		n = Files[i].ctr;
 549              		.loc 1 686 0
 550 0006 4300     		lsl	r3, r0, #1
 551 0008 1B18     		add	r3, r3, r0
 552 000a 9B00     		lsl	r3, r3, #2
 553 000c 0E4A     		ldr	r2, .L62
 554 000e D318     		add	r3, r2, r3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 23


 555 0010 5A89     		ldrh	r2, [r3, #10]
 556              	.LVL62:
 687:.\sd/ff.c     **** 		if (n == 0x100) n = 0;
 557              		.loc 1 687 0
 558 0012 8023     		mov	r3, #128
 559 0014 5B00     		lsl	r3, r3, #1
 560 0016 9A42     		cmp	r2, r3
 561 0018 00D1     		bne	.L57
 562 001a 0022     		mov	r2, #0
 563              	.LVL63:
 564              	.L57:
 688:.\sd/ff.c     **** 		if (n) n--;
 565              		.loc 1 688 0
 566 001c 002A     		cmp	r2, #0
 567 001e 01D0     		beq	.L58
 568              		.loc 1 688 0 is_stmt 0 discriminator 1
 569 0020 013A     		sub	r2, r2, #1
 570              	.LVL64:
 571 0022 92B2     		uxth	r2, r2
 572              	.LVL65:
 573              	.L58:
 689:.\sd/ff.c     **** 		Files[i].ctr = n;
 574              		.loc 1 689 0 is_stmt 1
 575 0024 4300     		lsl	r3, r0, #1
 576 0026 1B18     		add	r3, r3, r0
 577 0028 9B00     		lsl	r3, r3, #2
 578 002a 0749     		ldr	r1, .L62
 579 002c CB18     		add	r3, r1, r3
 580 002e 5A81     		strh	r2, [r3, #10]
 690:.\sd/ff.c     **** 		if (!n) Files[i].fs = 0;
 581              		.loc 1 690 0
 582 0030 002A     		cmp	r2, #0
 583 0032 07D1     		bne	.L61
 584              		.loc 1 690 0 is_stmt 0 discriminator 1
 585 0034 4300     		lsl	r3, r0, #1
 586 0036 1818     		add	r0, r3, r0
 587              	.LVL66:
 588 0038 8000     		lsl	r0, r0, #2
 589 003a 4250     		str	r2, [r0, r1]
 691:.\sd/ff.c     **** 		res = FR_OK;
 590              		.loc 1 691 0 is_stmt 1 discriminator 1
 591 003c 0020     		mov	r0, #0
 592 003e 02E0     		b	.L56
 593              	.LVL67:
 594              	.L59:
 692:.\sd/ff.c     **** 	} else {
 693:.\sd/ff.c     **** 		res = FR_INT_ERR;
 595              		.loc 1 693 0
 596 0040 0220     		mov	r0, #2
 597              	.LVL68:
 598 0042 00E0     		b	.L56
 599              	.LVL69:
 600              	.L61:
 691:.\sd/ff.c     **** 		res = FR_OK;
 601              		.loc 1 691 0
 602 0044 0020     		mov	r0, #0
 603              	.LVL70:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 24


 604              	.L56:
 694:.\sd/ff.c     **** 	}
 695:.\sd/ff.c     **** 	return res;
 696:.\sd/ff.c     **** }
 605              		.loc 1 696 0
 606              		@ sp needed
 607 0046 7047     		bx	lr
 608              	.L63:
 609              		.align	2
 610              	.L62:
 611 0048 00000000 		.word	.LANCHOR0
 612              		.cfi_endproc
 613              	.LFE7:
 614              		.size	dec_lock, .-dec_lock
 615              		.section	.text.clear_lock,"ax",%progbits
 616              		.align	2
 617              		.code	16
 618              		.thumb_func
 619              		.type	clear_lock, %function
 620              	clear_lock:
 621              	.LFB8:
 697:.\sd/ff.c     **** 
 698:.\sd/ff.c     **** 
 699:.\sd/ff.c     **** static
 700:.\sd/ff.c     **** void clear_lock (	/* Clear lock entries of the volume */
 701:.\sd/ff.c     **** 	FATFS *fs
 702:.\sd/ff.c     **** )
 703:.\sd/ff.c     **** {
 622              		.loc 1 703 0
 623              		.cfi_startproc
 624              	.LVL71:
 625 0000 10B5     		push	{r4, lr}
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 4, -8
 628              		.cfi_offset 14, -4
 629              	.LVL72:
 704:.\sd/ff.c     **** 	UINT i;
 705:.\sd/ff.c     **** 
 706:.\sd/ff.c     **** 	for (i = 0; i < _FS_SHARE; i++) {
 630              		.loc 1 706 0
 631 0002 0022     		mov	r2, #0
 632 0004 0CE0     		b	.L65
 633              	.LVL73:
 634              	.L67:
 707:.\sd/ff.c     **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 635              		.loc 1 707 0
 636 0006 5300     		lsl	r3, r2, #1
 637 0008 9B18     		add	r3, r3, r2
 638 000a 9B00     		lsl	r3, r3, #2
 639 000c 0649     		ldr	r1, .L68
 640 000e 5B58     		ldr	r3, [r3, r1]
 641 0010 8342     		cmp	r3, r0
 642 0012 04D1     		bne	.L66
 643              		.loc 1 707 0 is_stmt 0 discriminator 1
 644 0014 5300     		lsl	r3, r2, #1
 645 0016 9B18     		add	r3, r3, r2
 646 0018 9B00     		lsl	r3, r3, #2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 25


 647 001a 0024     		mov	r4, #0
 648 001c 5C50     		str	r4, [r3, r1]
 649              	.L66:
 706:.\sd/ff.c     **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 650              		.loc 1 706 0 is_stmt 1 discriminator 2
 651 001e 0132     		add	r2, r2, #1
 652              	.LVL74:
 653              	.L65:
 706:.\sd/ff.c     **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 654              		.loc 1 706 0 is_stmt 0 discriminator 1
 655 0020 022A     		cmp	r2, #2
 656 0022 F0D9     		bls	.L67
 708:.\sd/ff.c     **** 	}
 709:.\sd/ff.c     **** }
 657              		.loc 1 709 0 is_stmt 1
 658              		@ sp needed
 659 0024 10BD     		pop	{r4, pc}
 660              	.L69:
 661 0026 C046     		.align	2
 662              	.L68:
 663 0028 00000000 		.word	.LANCHOR0
 664              		.cfi_endproc
 665              	.LFE8:
 666              		.size	clear_lock, .-clear_lock
 667              		.section	.text.create_name,"ax",%progbits
 668              		.align	2
 669              		.code	16
 670              		.thumb_func
 671              		.type	create_name, %function
 672              	create_name:
 673              	.LFB22:
 710:.\sd/ff.c     **** #endif
 711:.\sd/ff.c     **** 
 712:.\sd/ff.c     **** 
 713:.\sd/ff.c     **** 
 714:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 715:.\sd/ff.c     **** /* Change window offset                                                  */
 716:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 717:.\sd/ff.c     **** 
 718:.\sd/ff.c     **** static
 719:.\sd/ff.c     **** FRESULT move_window (
 720:.\sd/ff.c     **** 	FATFS *fs,		/* File system object */
 721:.\sd/ff.c     **** 	DWORD sector	/* Sector number to make appearance in the fs->win[] */
 722:.\sd/ff.c     **** )					/* Move to zero only writes back dirty window */
 723:.\sd/ff.c     **** {
 724:.\sd/ff.c     **** 	DWORD wsect;
 725:.\sd/ff.c     **** 
 726:.\sd/ff.c     **** 
 727:.\sd/ff.c     **** 	wsect = fs->winsect;
 728:.\sd/ff.c     **** 	if (wsect != sector) {	/* Changed current window */
 729:.\sd/ff.c     **** #if !_FS_READONLY
 730:.\sd/ff.c     **** 		if (fs->wflag) {	/* Write back dirty window if needed */
 731:.\sd/ff.c     **** 			if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK)
 732:.\sd/ff.c     **** 				return FR_DISK_ERR;
 733:.\sd/ff.c     **** 			fs->wflag = 0;
 734:.\sd/ff.c     **** 			if (wsect < (fs->fatbase + fs->fsize)) {	/* In FAT area */
 735:.\sd/ff.c     **** 				BYTE nf;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 26


 736:.\sd/ff.c     **** 				for (nf = fs->n_fats; nf > 1; nf--) {	/* Reflect the change to all FAT copies */
 737:.\sd/ff.c     **** 					wsect += fs->fsize;
 738:.\sd/ff.c     **** 					disk_write(fs->drv, fs->win, wsect, 1);
 739:.\sd/ff.c     **** 				}
 740:.\sd/ff.c     **** 			}
 741:.\sd/ff.c     **** 		}
 742:.\sd/ff.c     **** #endif
 743:.\sd/ff.c     **** 		if (sector) {
 744:.\sd/ff.c     **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK)
 745:.\sd/ff.c     **** 				return FR_DISK_ERR;
 746:.\sd/ff.c     **** 			fs->winsect = sector;
 747:.\sd/ff.c     **** 		}
 748:.\sd/ff.c     **** 	}
 749:.\sd/ff.c     **** 
 750:.\sd/ff.c     **** 	return FR_OK;
 751:.\sd/ff.c     **** }
 752:.\sd/ff.c     **** 
 753:.\sd/ff.c     **** 
 754:.\sd/ff.c     **** 
 755:.\sd/ff.c     **** 
 756:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 757:.\sd/ff.c     **** /* Clean-up cached data                                                  */
 758:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 759:.\sd/ff.c     **** #if !_FS_READONLY
 760:.\sd/ff.c     **** static
 761:.\sd/ff.c     **** FRESULT sync (	/* FR_OK: successful, FR_DISK_ERR: failed */
 762:.\sd/ff.c     **** 	FATFS *fs	/* File system object */
 763:.\sd/ff.c     **** )
 764:.\sd/ff.c     **** {
 765:.\sd/ff.c     **** 	FRESULT res;
 766:.\sd/ff.c     **** 
 767:.\sd/ff.c     **** 
 768:.\sd/ff.c     **** 	res = move_window(fs, 0);
 769:.\sd/ff.c     **** 	if (res == FR_OK) {
 770:.\sd/ff.c     **** 		/* Update FSInfo sector if needed */
 771:.\sd/ff.c     **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag) {
 772:.\sd/ff.c     **** 			fs->winsect = 0;
 773:.\sd/ff.c     **** 			/* Create FSInfo structure */
 774:.\sd/ff.c     **** 			mem_set(fs->win, 0, 512);
 775:.\sd/ff.c     **** 			ST_WORD(fs->win+BS_55AA, 0xAA55);
 776:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_LeadSig, 0x41615252);
 777:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_StrucSig, 0x61417272);
 778:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Free_Count, fs->free_clust);
 779:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Nxt_Free, fs->last_clust);
 780:.\sd/ff.c     **** 			/* Write it into the FSInfo sector */
 781:.\sd/ff.c     **** 			disk_write(fs->drv, fs->win, fs->fsi_sector, 1);
 782:.\sd/ff.c     **** 			fs->fsi_flag = 0;
 783:.\sd/ff.c     **** 		}
 784:.\sd/ff.c     **** 		/* Make sure that no pending write process in the physical drive */
 785:.\sd/ff.c     **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
 786:.\sd/ff.c     **** 			res = FR_DISK_ERR;
 787:.\sd/ff.c     **** 	}
 788:.\sd/ff.c     **** 
 789:.\sd/ff.c     **** 	return res;
 790:.\sd/ff.c     **** }
 791:.\sd/ff.c     **** #endif
 792:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 27


 793:.\sd/ff.c     **** 
 794:.\sd/ff.c     **** 
 795:.\sd/ff.c     **** 
 796:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 797:.\sd/ff.c     **** /* Get sector# from cluster#                                             */
 798:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 799:.\sd/ff.c     **** 
 800:.\sd/ff.c     **** 
 801:.\sd/ff.c     **** DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
 802:.\sd/ff.c     **** 	FATFS *fs,		/* File system object */
 803:.\sd/ff.c     **** 	DWORD clst		/* Cluster# to be converted */
 804:.\sd/ff.c     **** )
 805:.\sd/ff.c     **** {
 806:.\sd/ff.c     **** 	clst -= 2;
 807:.\sd/ff.c     **** 	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
 808:.\sd/ff.c     **** 	return clst * fs->csize + fs->database;
 809:.\sd/ff.c     **** }
 810:.\sd/ff.c     **** 
 811:.\sd/ff.c     **** 
 812:.\sd/ff.c     **** 
 813:.\sd/ff.c     **** 
 814:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 815:.\sd/ff.c     **** /* FAT access - Read value of a FAT entry                                */
 816:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 817:.\sd/ff.c     **** 
 818:.\sd/ff.c     **** 
 819:.\sd/ff.c     **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, Else:Cluster status */
 820:.\sd/ff.c     **** 	FATFS *fs,	/* File system object */
 821:.\sd/ff.c     **** 	DWORD clst	/* Cluster# to get the link information */
 822:.\sd/ff.c     **** )
 823:.\sd/ff.c     **** {
 824:.\sd/ff.c     **** 	UINT wc, bc;
 825:.\sd/ff.c     **** 	BYTE *p;
 826:.\sd/ff.c     **** 
 827:.\sd/ff.c     **** 
 828:.\sd/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent)	/* Chack range */
 829:.\sd/ff.c     **** 		return 1;
 830:.\sd/ff.c     **** 
 831:.\sd/ff.c     **** 	switch (fs->fs_type) {
 832:.\sd/ff.c     **** 	case FS_FAT12 :
 833:.\sd/ff.c     **** 		bc = (UINT)clst; bc += bc / 2;
 834:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 835:.\sd/ff.c     **** 		wc = fs->win[bc % SS(fs)]; bc++;
 836:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 837:.\sd/ff.c     **** 		wc |= fs->win[bc % SS(fs)] << 8;
 838:.\sd/ff.c     **** 		return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 839:.\sd/ff.c     **** 
 840:.\sd/ff.c     **** 	case FS_FAT16 :
 841:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)))) break;
 842:.\sd/ff.c     **** 		p = &fs->win[clst * 2 % SS(fs)];
 843:.\sd/ff.c     **** 		return LD_WORD(p);
 844:.\sd/ff.c     **** 
 845:.\sd/ff.c     **** 	case FS_FAT32 :
 846:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)))) break;
 847:.\sd/ff.c     **** 		p = &fs->win[clst * 4 % SS(fs)];
 848:.\sd/ff.c     **** 		return LD_DWORD(p) & 0x0FFFFFFF;
 849:.\sd/ff.c     **** 	}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 28


 850:.\sd/ff.c     **** 
 851:.\sd/ff.c     **** 	return 0xFFFFFFFF;	/* An error occurred at the disk I/O layer */
 852:.\sd/ff.c     **** }
 853:.\sd/ff.c     **** 
 854:.\sd/ff.c     **** 
 855:.\sd/ff.c     **** 
 856:.\sd/ff.c     **** 
 857:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 858:.\sd/ff.c     **** /* FAT access - Change value of a FAT entry                              */
 859:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 860:.\sd/ff.c     **** #if !_FS_READONLY
 861:.\sd/ff.c     **** 
 862:.\sd/ff.c     **** FRESULT put_fat (
 863:.\sd/ff.c     **** 	FATFS *fs,	/* File system object */
 864:.\sd/ff.c     **** 	DWORD clst,	/* Cluster# to be changed in range of 2 to fs->n_fatent - 1 */
 865:.\sd/ff.c     **** 	DWORD val	/* New value to mark the cluster */
 866:.\sd/ff.c     **** )
 867:.\sd/ff.c     **** {
 868:.\sd/ff.c     **** 	UINT bc;
 869:.\sd/ff.c     **** 	BYTE *p;
 870:.\sd/ff.c     **** 	FRESULT res;
 871:.\sd/ff.c     **** 
 872:.\sd/ff.c     **** 
 873:.\sd/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 874:.\sd/ff.c     **** 		res = FR_INT_ERR;
 875:.\sd/ff.c     **** 
 876:.\sd/ff.c     **** 	} else {
 877:.\sd/ff.c     **** 		switch (fs->fs_type) {
 878:.\sd/ff.c     **** 		case FS_FAT12 :
 879:.\sd/ff.c     **** 			bc = clst; bc += bc / 2;
 880:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 881:.\sd/ff.c     **** 			if (res != FR_OK) break;
 882:.\sd/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 883:.\sd/ff.c     **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 884:.\sd/ff.c     **** 			bc++;
 885:.\sd/ff.c     **** 			fs->wflag = 1;
 886:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 887:.\sd/ff.c     **** 			if (res != FR_OK) break;
 888:.\sd/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 889:.\sd/ff.c     **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 890:.\sd/ff.c     **** 			break;
 891:.\sd/ff.c     **** 
 892:.\sd/ff.c     **** 		case FS_FAT16 :
 893:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 894:.\sd/ff.c     **** 			if (res != FR_OK) break;
 895:.\sd/ff.c     **** 			p = &fs->win[clst * 2 % SS(fs)];
 896:.\sd/ff.c     **** 			ST_WORD(p, (WORD)val);
 897:.\sd/ff.c     **** 			break;
 898:.\sd/ff.c     **** 
 899:.\sd/ff.c     **** 		case FS_FAT32 :
 900:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 901:.\sd/ff.c     **** 			if (res != FR_OK) break;
 902:.\sd/ff.c     **** 			p = &fs->win[clst * 4 % SS(fs)];
 903:.\sd/ff.c     **** 			val |= LD_DWORD(p) & 0xF0000000;
 904:.\sd/ff.c     **** 			ST_DWORD(p, val);
 905:.\sd/ff.c     **** 			break;
 906:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 29


 907:.\sd/ff.c     **** 		default :
 908:.\sd/ff.c     **** 			res = FR_INT_ERR;
 909:.\sd/ff.c     **** 		}
 910:.\sd/ff.c     **** 		fs->wflag = 1;
 911:.\sd/ff.c     **** 	}
 912:.\sd/ff.c     **** 
 913:.\sd/ff.c     **** 	return res;
 914:.\sd/ff.c     **** }
 915:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 916:.\sd/ff.c     **** 
 917:.\sd/ff.c     **** 
 918:.\sd/ff.c     **** 
 919:.\sd/ff.c     **** 
 920:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 921:.\sd/ff.c     **** /* FAT handling - Remove a cluster chain                                 */
 922:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 923:.\sd/ff.c     **** #if !_FS_READONLY
 924:.\sd/ff.c     **** static
 925:.\sd/ff.c     **** FRESULT remove_chain (
 926:.\sd/ff.c     **** 	FATFS *fs,			/* File system object */
 927:.\sd/ff.c     **** 	DWORD clst			/* Cluster# to remove a chain from */
 928:.\sd/ff.c     **** )
 929:.\sd/ff.c     **** {
 930:.\sd/ff.c     **** 	FRESULT res;
 931:.\sd/ff.c     **** 	DWORD nxt;
 932:.\sd/ff.c     **** #if _USE_ERASE
 933:.\sd/ff.c     **** 	DWORD scl = clst, ecl = clst, resion[2];
 934:.\sd/ff.c     **** #endif
 935:.\sd/ff.c     **** 
 936:.\sd/ff.c     **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 937:.\sd/ff.c     **** 		res = FR_INT_ERR;
 938:.\sd/ff.c     **** 
 939:.\sd/ff.c     **** 	} else {
 940:.\sd/ff.c     **** 		res = FR_OK;
 941:.\sd/ff.c     **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
 942:.\sd/ff.c     **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 943:.\sd/ff.c     **** 			if (nxt == 0) break;				/* Empty cluster? */
 944:.\sd/ff.c     **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 945:.\sd/ff.c     **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 946:.\sd/ff.c     **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 947:.\sd/ff.c     **** 			if (res != FR_OK) break;
 948:.\sd/ff.c     **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSInfo */
 949:.\sd/ff.c     **** 				fs->free_clust++;
 950:.\sd/ff.c     **** 				fs->fsi_flag = 1;
 951:.\sd/ff.c     **** 			}
 952:.\sd/ff.c     **** #if _USE_ERASE
 953:.\sd/ff.c     **** 			if (ecl + 1 == nxt) {	/* Next cluster is contiguous */
 954:.\sd/ff.c     **** 				ecl = nxt;
 955:.\sd/ff.c     **** 			} else {				/* End of contiguous clusters */ 
 956:.\sd/ff.c     **** 				resion[0] = clust2sect(fs, scl);					/* Start sector */
 957:.\sd/ff.c     **** 				resion[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
 958:.\sd/ff.c     **** 				disk_ioctl(fs->drv, CTRL_ERASE_SECTOR, resion);		/* Erase the block */
 959:.\sd/ff.c     **** 				scl = ecl = nxt;
 960:.\sd/ff.c     **** 			}
 961:.\sd/ff.c     **** #endif
 962:.\sd/ff.c     **** 			clst = nxt;	/* Next cluster */
 963:.\sd/ff.c     **** 		}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 30


 964:.\sd/ff.c     **** 	}
 965:.\sd/ff.c     **** 
 966:.\sd/ff.c     **** 	return res;
 967:.\sd/ff.c     **** }
 968:.\sd/ff.c     **** #endif
 969:.\sd/ff.c     **** 
 970:.\sd/ff.c     **** 
 971:.\sd/ff.c     **** 
 972:.\sd/ff.c     **** 
 973:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 974:.\sd/ff.c     **** /* FAT handling - Stretch or Create a cluster chain                      */
 975:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
 976:.\sd/ff.c     **** #if !_FS_READONLY
 977:.\sd/ff.c     **** static
 978:.\sd/ff.c     **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
 979:.\sd/ff.c     **** 	FATFS *fs,			/* File system object */
 980:.\sd/ff.c     **** 	DWORD clst			/* Cluster# to stretch. 0 means create a new chain. */
 981:.\sd/ff.c     **** )
 982:.\sd/ff.c     **** {
 983:.\sd/ff.c     **** 	DWORD cs, ncl, scl;
 984:.\sd/ff.c     **** 	FRESULT res;
 985:.\sd/ff.c     **** 
 986:.\sd/ff.c     **** 
 987:.\sd/ff.c     **** 	if (clst == 0) {		/* Create a new chain */
 988:.\sd/ff.c     **** 		scl = fs->last_clust;			/* Get suggested start point */
 989:.\sd/ff.c     **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 990:.\sd/ff.c     **** 	}
 991:.\sd/ff.c     **** 	else {					/* Stretch the current chain */
 992:.\sd/ff.c     **** 		cs = get_fat(fs, clst);			/* Check the cluster status */
 993:.\sd/ff.c     **** 		if (cs < 2) return 1;			/* It is an invalid cluster */
 994:.\sd/ff.c     **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 995:.\sd/ff.c     **** 		scl = clst;
 996:.\sd/ff.c     **** 	}
 997:.\sd/ff.c     **** 
 998:.\sd/ff.c     **** 	ncl = scl;				/* Start cluster */
 999:.\sd/ff.c     **** 	for (;;) {
1000:.\sd/ff.c     **** 		ncl++;							/* Next cluster */
1001:.\sd/ff.c     **** 		if (ncl >= fs->n_fatent) {		/* Wrap around */
1002:.\sd/ff.c     **** 			ncl = 2;
1003:.\sd/ff.c     **** 			if (ncl > scl) return 0;	/* No free cluster */
1004:.\sd/ff.c     **** 		}
1005:.\sd/ff.c     **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
1006:.\sd/ff.c     **** 		if (cs == 0) break;				/* Found a free cluster */
1007:.\sd/ff.c     **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
1008:.\sd/ff.c     **** 			return cs;
1009:.\sd/ff.c     **** 		if (ncl == scl) return 0;		/* No free cluster */
1010:.\sd/ff.c     **** 	}
1011:.\sd/ff.c     **** 
1012:.\sd/ff.c     **** 	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
1013:.\sd/ff.c     **** 	if (res == FR_OK && clst != 0) {
1014:.\sd/ff.c     **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
1015:.\sd/ff.c     **** 	}
1016:.\sd/ff.c     **** 	if (res == FR_OK) {
1017:.\sd/ff.c     **** 		fs->last_clust = ncl;			/* Update FSINFO */
1018:.\sd/ff.c     **** 		if (fs->free_clust != 0xFFFFFFFF) {
1019:.\sd/ff.c     **** 			fs->free_clust--;
1020:.\sd/ff.c     **** 			fs->fsi_flag = 1;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 31


1021:.\sd/ff.c     **** 		}
1022:.\sd/ff.c     **** 	} else {
1023:.\sd/ff.c     **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
1024:.\sd/ff.c     **** 	}
1025:.\sd/ff.c     **** 
1026:.\sd/ff.c     **** 	return ncl;		/* Return new cluster number or error code */
1027:.\sd/ff.c     **** }
1028:.\sd/ff.c     **** #endif /* !_FS_READONLY */
1029:.\sd/ff.c     **** 
1030:.\sd/ff.c     **** 
1031:.\sd/ff.c     **** 
1032:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1033:.\sd/ff.c     **** /* FAT handling - Convert offset into cluster with link map table        */
1034:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1035:.\sd/ff.c     **** 
1036:.\sd/ff.c     **** #if _USE_FASTSEEK
1037:.\sd/ff.c     **** static
1038:.\sd/ff.c     **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1039:.\sd/ff.c     **** 	FIL* fp,		/* Pointer to the file object */
1040:.\sd/ff.c     **** 	DWORD ofs		/* File offset to be converted to cluster# */
1041:.\sd/ff.c     **** )
1042:.\sd/ff.c     **** {
1043:.\sd/ff.c     **** 	DWORD cl, ncl, *tbl;
1044:.\sd/ff.c     **** 
1045:.\sd/ff.c     **** 
1046:.\sd/ff.c     **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
1047:.\sd/ff.c     **** 	cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
1048:.\sd/ff.c     **** 	for (;;) {
1049:.\sd/ff.c     **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
1050:.\sd/ff.c     **** 		if (!ncl) return 0;		/* End of table? (error) */
1051:.\sd/ff.c     **** 		if (cl < ncl) break;	/* In this fragment? */
1052:.\sd/ff.c     **** 		cl -= ncl; tbl++;		/* Next fragment */
1053:.\sd/ff.c     **** 	}
1054:.\sd/ff.c     **** 	return cl + *tbl;	/* Return the cluster number */
1055:.\sd/ff.c     **** }
1056:.\sd/ff.c     **** #endif	/* _USE_FASTSEEK */
1057:.\sd/ff.c     **** 
1058:.\sd/ff.c     **** 
1059:.\sd/ff.c     **** 
1060:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1061:.\sd/ff.c     **** /* Directory handling - Set directory index                              */
1062:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1063:.\sd/ff.c     **** 
1064:.\sd/ff.c     **** static
1065:.\sd/ff.c     **** FRESULT dir_sdi (
1066:.\sd/ff.c     **** 	DIR *dj,		/* Pointer to directory object */
1067:.\sd/ff.c     **** 	WORD idx		/* Directory index number */
1068:.\sd/ff.c     **** )
1069:.\sd/ff.c     **** {
1070:.\sd/ff.c     **** 	DWORD clst;
1071:.\sd/ff.c     **** 	WORD ic;
1072:.\sd/ff.c     **** 
1073:.\sd/ff.c     **** 
1074:.\sd/ff.c     **** 	dj->index = idx;
1075:.\sd/ff.c     **** 	clst = dj->sclust;
1076:.\sd/ff.c     **** 	if (clst == 1 || clst >= dj->fs->n_fatent)	/* Check start cluster range */
1077:.\sd/ff.c     **** 		return FR_INT_ERR;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 32


1078:.\sd/ff.c     **** 	if (!clst && dj->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
1079:.\sd/ff.c     **** 		clst = dj->fs->dirbase;
1080:.\sd/ff.c     **** 
1081:.\sd/ff.c     **** 	if (clst == 0) {	/* Static table (root-dir in FAT12/16) */
1082:.\sd/ff.c     **** 		dj->clust = clst;
1083:.\sd/ff.c     **** 		if (idx >= dj->fs->n_rootdir)		/* Index is out of range */
1084:.\sd/ff.c     **** 			return FR_INT_ERR;
1085:.\sd/ff.c     **** 		dj->sect = dj->fs->dirbase + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
1086:.\sd/ff.c     **** 	}
1087:.\sd/ff.c     **** 	else {				/* Dynamic table (sub-dirs or root-dir in FAT32) */
1088:.\sd/ff.c     **** 		ic = SS(dj->fs) / SZ_DIR * dj->fs->csize;	/* Entries per cluster */
1089:.\sd/ff.c     **** 		while (idx >= ic) {	/* Follow cluster chain */
1090:.\sd/ff.c     **** 			clst = get_fat(dj->fs, clst);				/* Get next cluster */
1091:.\sd/ff.c     **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1092:.\sd/ff.c     **** 			if (clst < 2 || clst >= dj->fs->n_fatent)	/* Reached to end of table or int error */
1093:.\sd/ff.c     **** 				return FR_INT_ERR;
1094:.\sd/ff.c     **** 			idx -= ic;
1095:.\sd/ff.c     **** 		}
1096:.\sd/ff.c     **** 		dj->clust = clst;
1097:.\sd/ff.c     **** 		dj->sect = clust2sect(dj->fs, clst) + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
1098:.\sd/ff.c     **** 	}
1099:.\sd/ff.c     **** 
1100:.\sd/ff.c     **** 	dj->dir = dj->fs->win + (idx % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;	/* Ptr to the entry in the sector 
1101:.\sd/ff.c     **** 
1102:.\sd/ff.c     **** 	return FR_OK;	/* Seek succeeded */
1103:.\sd/ff.c     **** }
1104:.\sd/ff.c     **** 
1105:.\sd/ff.c     **** 
1106:.\sd/ff.c     **** 
1107:.\sd/ff.c     **** 
1108:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1109:.\sd/ff.c     **** /* Directory handling - Move directory index next                        */
1110:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1111:.\sd/ff.c     **** 
1112:.\sd/ff.c     **** static
1113:.\sd/ff.c     **** FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:EOT and could not stretch
1114:.\sd/ff.c     **** 	DIR *dj,		/* Pointer to directory object */
1115:.\sd/ff.c     **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1116:.\sd/ff.c     **** )
1117:.\sd/ff.c     **** {
1118:.\sd/ff.c     **** 	DWORD clst;
1119:.\sd/ff.c     **** 	WORD i;
1120:.\sd/ff.c     **** 
1121:.\sd/ff.c     **** 
1122:.\sd/ff.c     **** 	stretch = stretch;		/* To suppress warning on read-only cfg. */
1123:.\sd/ff.c     **** 	i = dj->index + 1;
1124:.\sd/ff.c     **** 	if (!i || !dj->sect)	/* Report EOT when index has reached 65535 */
1125:.\sd/ff.c     **** 		return FR_NO_FILE;
1126:.\sd/ff.c     **** 
1127:.\sd/ff.c     **** 	if (!(i % (SS(dj->fs) / SZ_DIR))) {	/* Sector changed? */
1128:.\sd/ff.c     **** 		dj->sect++;					/* Next sector */
1129:.\sd/ff.c     **** 
1130:.\sd/ff.c     **** 		if (dj->clust == 0) {	/* Static table */
1131:.\sd/ff.c     **** 			if (i >= dj->fs->n_rootdir)	/* Report EOT when end of table */
1132:.\sd/ff.c     **** 				return FR_NO_FILE;
1133:.\sd/ff.c     **** 		}
1134:.\sd/ff.c     **** 		else {					/* Dynamic table */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 33


1135:.\sd/ff.c     **** 			if (((i / (SS(dj->fs) / SZ_DIR)) & (dj->fs->csize - 1)) == 0) {	/* Cluster changed? */
1136:.\sd/ff.c     **** 				clst = get_fat(dj->fs, dj->clust);				/* Get next cluster */
1137:.\sd/ff.c     **** 				if (clst <= 1) return FR_INT_ERR;
1138:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1139:.\sd/ff.c     **** 				if (clst >= dj->fs->n_fatent) {					/* When it reached end of dynamic table */
1140:.\sd/ff.c     **** #if !_FS_READONLY
1141:.\sd/ff.c     **** 					BYTE c;
1142:.\sd/ff.c     **** 					if (!stretch) return FR_NO_FILE;			/* When do not stretch, report EOT */
1143:.\sd/ff.c     **** 					clst = create_chain(dj->fs, dj->clust);		/* Stretch cluster chain */
1144:.\sd/ff.c     **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1145:.\sd/ff.c     **** 					if (clst == 1) return FR_INT_ERR;
1146:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1147:.\sd/ff.c     **** 					/* Clean-up stretched table */
1148:.\sd/ff.c     **** 					if (move_window(dj->fs, 0)) return FR_DISK_ERR;	/* Flush active window */
1149:.\sd/ff.c     **** 					mem_set(dj->fs->win, 0, SS(dj->fs));			/* Clear window buffer */
1150:.\sd/ff.c     **** 					dj->fs->winsect = clust2sect(dj->fs, clst);	/* Cluster start sector */
1151:.\sd/ff.c     **** 					for (c = 0; c < dj->fs->csize; c++) {		/* Fill the new cluster with 0 */
1152:.\sd/ff.c     **** 						dj->fs->wflag = 1;
1153:.\sd/ff.c     **** 						if (move_window(dj->fs, 0)) return FR_DISK_ERR;
1154:.\sd/ff.c     **** 						dj->fs->winsect++;
1155:.\sd/ff.c     **** 					}
1156:.\sd/ff.c     **** 					dj->fs->winsect -= c;						/* Rewind window address */
1157:.\sd/ff.c     **** #else
1158:.\sd/ff.c     **** 					return FR_NO_FILE;			/* Report EOT */
1159:.\sd/ff.c     **** #endif
1160:.\sd/ff.c     **** 				}
1161:.\sd/ff.c     **** 				dj->clust = clst;				/* Initialize data for new cluster */
1162:.\sd/ff.c     **** 				dj->sect = clust2sect(dj->fs, clst);
1163:.\sd/ff.c     **** 			}
1164:.\sd/ff.c     **** 		}
1165:.\sd/ff.c     **** 	}
1166:.\sd/ff.c     **** 
1167:.\sd/ff.c     **** 	dj->index = i;
1168:.\sd/ff.c     **** 	dj->dir = dj->fs->win + (i % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;
1169:.\sd/ff.c     **** 
1170:.\sd/ff.c     **** 	return FR_OK;
1171:.\sd/ff.c     **** }
1172:.\sd/ff.c     **** 
1173:.\sd/ff.c     **** 
1174:.\sd/ff.c     **** 
1175:.\sd/ff.c     **** 
1176:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1177:.\sd/ff.c     **** /* LFN handling - Test/Pick/Fit an LFN segment from/to directory entry   */
1178:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1179:.\sd/ff.c     **** #if _USE_LFN
1180:.\sd/ff.c     **** static
1181:.\sd/ff.c     **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN chars in the directory 
1182:.\sd/ff.c     **** 
1183:.\sd/ff.c     **** 
1184:.\sd/ff.c     **** static
1185:.\sd/ff.c     **** int cmp_lfn (			/* 1:Matched, 0:Not matched */
1186:.\sd/ff.c     **** 	WCHAR *lfnbuf,		/* Pointer to the LFN to be compared */
1187:.\sd/ff.c     **** 	BYTE *dir			/* Pointer to the directory entry containing a part of LFN */
1188:.\sd/ff.c     **** )
1189:.\sd/ff.c     **** {
1190:.\sd/ff.c     **** 	UINT i, s;
1191:.\sd/ff.c     **** 	WCHAR wc, uc;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 34


1192:.\sd/ff.c     **** 
1193:.\sd/ff.c     **** 
1194:.\sd/ff.c     **** 	i = ((dir[LDIR_Ord] & ~LLE) - 1) * 13;	/* Get offset in the LFN buffer */
1195:.\sd/ff.c     **** 	s = 0; wc = 1;
1196:.\sd/ff.c     **** 	do {
1197:.\sd/ff.c     **** 		uc = LD_WORD(dir+LfnOfs[s]);	/* Pick an LFN character from the entry */
1198:.\sd/ff.c     **** 		if (wc) {	/* Last char has not been processed */
1199:.\sd/ff.c     **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
1200:.\sd/ff.c     **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
1201:.\sd/ff.c     **** 				return 0;				/* Not matched */
1202:.\sd/ff.c     **** 		} else {
1203:.\sd/ff.c     **** 			if (uc != 0xFFFF) return 0;	/* Check filler */
1204:.\sd/ff.c     **** 		}
1205:.\sd/ff.c     **** 	} while (++s < 13);				/* Repeat until all chars in the entry are checked */
1206:.\sd/ff.c     **** 
1207:.\sd/ff.c     **** 	if ((dir[LDIR_Ord] & LLE) && wc && lfnbuf[i])	/* Last segment matched but different length */
1208:.\sd/ff.c     **** 		return 0;
1209:.\sd/ff.c     **** 
1210:.\sd/ff.c     **** 	return 1;						/* The part of LFN matched */
1211:.\sd/ff.c     **** }
1212:.\sd/ff.c     **** 
1213:.\sd/ff.c     **** 
1214:.\sd/ff.c     **** 
1215:.\sd/ff.c     **** static
1216:.\sd/ff.c     **** int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
1217:.\sd/ff.c     **** 	WCHAR *lfnbuf,		/* Pointer to the Unicode-LFN buffer */
1218:.\sd/ff.c     **** 	BYTE *dir			/* Pointer to the directory entry */
1219:.\sd/ff.c     **** )
1220:.\sd/ff.c     **** {
1221:.\sd/ff.c     **** 	UINT i, s;
1222:.\sd/ff.c     **** 	WCHAR wc, uc;
1223:.\sd/ff.c     **** 
1224:.\sd/ff.c     **** 
1225:.\sd/ff.c     **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1226:.\sd/ff.c     **** 
1227:.\sd/ff.c     **** 	s = 0; wc = 1;
1228:.\sd/ff.c     **** 	do {
1229:.\sd/ff.c     **** 		uc = LD_WORD(dir+LfnOfs[s]);		/* Pick an LFN character from the entry */
1230:.\sd/ff.c     **** 		if (wc) {	/* Last char has not been processed */
1231:.\sd/ff.c     **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1232:.\sd/ff.c     **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1233:.\sd/ff.c     **** 		} else {
1234:.\sd/ff.c     **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1235:.\sd/ff.c     **** 		}
1236:.\sd/ff.c     **** 	} while (++s < 13);						/* Read all character in the entry */
1237:.\sd/ff.c     **** 
1238:.\sd/ff.c     **** 	if (dir[LDIR_Ord] & LLE) {				/* Put terminator if it is the last LFN part */
1239:.\sd/ff.c     **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1240:.\sd/ff.c     **** 		lfnbuf[i] = 0;
1241:.\sd/ff.c     **** 	}
1242:.\sd/ff.c     **** 
1243:.\sd/ff.c     **** 	return 1;
1244:.\sd/ff.c     **** }
1245:.\sd/ff.c     **** 
1246:.\sd/ff.c     **** 
1247:.\sd/ff.c     **** #if !_FS_READONLY
1248:.\sd/ff.c     **** static
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 35


1249:.\sd/ff.c     **** void fit_lfn (
1250:.\sd/ff.c     **** 	const WCHAR *lfnbuf,	/* Pointer to the LFN buffer */
1251:.\sd/ff.c     **** 	BYTE *dir,				/* Pointer to the directory entry */
1252:.\sd/ff.c     **** 	BYTE ord,				/* LFN order (1-20) */
1253:.\sd/ff.c     **** 	BYTE sum				/* SFN sum */
1254:.\sd/ff.c     **** )
1255:.\sd/ff.c     **** {
1256:.\sd/ff.c     **** 	UINT i, s;
1257:.\sd/ff.c     **** 	WCHAR wc;
1258:.\sd/ff.c     **** 
1259:.\sd/ff.c     **** 
1260:.\sd/ff.c     **** 	dir[LDIR_Chksum] = sum;			/* Set check sum */
1261:.\sd/ff.c     **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1262:.\sd/ff.c     **** 	dir[LDIR_Type] = 0;
1263:.\sd/ff.c     **** 	ST_WORD(dir+LDIR_FstClusLO, 0);
1264:.\sd/ff.c     **** 
1265:.\sd/ff.c     **** 	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
1266:.\sd/ff.c     **** 	s = wc = 0;
1267:.\sd/ff.c     **** 	do {
1268:.\sd/ff.c     **** 		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective char */
1269:.\sd/ff.c     **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
1270:.\sd/ff.c     **** 		if (!wc) wc = 0xFFFF;		/* Padding chars following last char */
1271:.\sd/ff.c     **** 	} while (++s < 13);
1272:.\sd/ff.c     **** 	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLE;	/* Bottom LFN part is the start of LFN sequence */
1273:.\sd/ff.c     **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1274:.\sd/ff.c     **** }
1275:.\sd/ff.c     **** 
1276:.\sd/ff.c     **** #endif
1277:.\sd/ff.c     **** #endif
1278:.\sd/ff.c     **** 
1279:.\sd/ff.c     **** 
1280:.\sd/ff.c     **** 
1281:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1282:.\sd/ff.c     **** /* Create numbered name                                                  */
1283:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1284:.\sd/ff.c     **** #if _USE_LFN
1285:.\sd/ff.c     **** void gen_numname (
1286:.\sd/ff.c     **** 	BYTE *dst,			/* Pointer to generated SFN */
1287:.\sd/ff.c     **** 	const BYTE *src,	/* Pointer to source SFN to be modified */
1288:.\sd/ff.c     **** 	const WCHAR *lfn,	/* Pointer to LFN */
1289:.\sd/ff.c     **** 	WORD seq			/* Sequence number */
1290:.\sd/ff.c     **** )
1291:.\sd/ff.c     **** {
1292:.\sd/ff.c     **** 	BYTE ns[8], c;
1293:.\sd/ff.c     **** 	UINT i, j;
1294:.\sd/ff.c     **** 
1295:.\sd/ff.c     **** 
1296:.\sd/ff.c     **** 	mem_cpy(dst, src, 11);
1297:.\sd/ff.c     **** 
1298:.\sd/ff.c     **** 	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
1299:.\sd/ff.c     **** 		do seq = (seq >> 1) + (seq << 15) + (WORD)*lfn++; while (*lfn);
1300:.\sd/ff.c     **** 	}
1301:.\sd/ff.c     **** 
1302:.\sd/ff.c     **** 	/* itoa (hexdecimal) */
1303:.\sd/ff.c     **** 	i = 7;
1304:.\sd/ff.c     **** 	do {
1305:.\sd/ff.c     **** 		c = (seq % 16) + '0';
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 36


1306:.\sd/ff.c     **** 		if (c > '9') c += 7;
1307:.\sd/ff.c     **** 		ns[i--] = c;
1308:.\sd/ff.c     **** 		seq /= 16;
1309:.\sd/ff.c     **** 	} while (seq);
1310:.\sd/ff.c     **** 	ns[i] = '~';
1311:.\sd/ff.c     **** 
1312:.\sd/ff.c     **** 	/* Append the number */
1313:.\sd/ff.c     **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1314:.\sd/ff.c     **** 		if (IsDBCS1(dst[j])) {
1315:.\sd/ff.c     **** 			if (j == i - 1) break;
1316:.\sd/ff.c     **** 			j++;
1317:.\sd/ff.c     **** 		}
1318:.\sd/ff.c     **** 	}
1319:.\sd/ff.c     **** 	do {
1320:.\sd/ff.c     **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1321:.\sd/ff.c     **** 	} while (j < 8);
1322:.\sd/ff.c     **** }
1323:.\sd/ff.c     **** #endif
1324:.\sd/ff.c     **** 
1325:.\sd/ff.c     **** 
1326:.\sd/ff.c     **** 
1327:.\sd/ff.c     **** 
1328:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1329:.\sd/ff.c     **** /* Calculate sum of an SFN                                               */
1330:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1331:.\sd/ff.c     **** #if _USE_LFN
1332:.\sd/ff.c     **** static
1333:.\sd/ff.c     **** BYTE sum_sfn (
1334:.\sd/ff.c     **** 	const BYTE *dir		/* Ptr to directory entry */
1335:.\sd/ff.c     **** )
1336:.\sd/ff.c     **** {
1337:.\sd/ff.c     **** 	BYTE sum = 0;
1338:.\sd/ff.c     **** 	UINT n = 11;
1339:.\sd/ff.c     **** 
1340:.\sd/ff.c     **** 	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
1341:.\sd/ff.c     **** 	return sum;
1342:.\sd/ff.c     **** }
1343:.\sd/ff.c     **** #endif
1344:.\sd/ff.c     **** 
1345:.\sd/ff.c     **** 
1346:.\sd/ff.c     **** 
1347:.\sd/ff.c     **** 
1348:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1349:.\sd/ff.c     **** /* Directory handling - Find an object in the directory                  */
1350:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1351:.\sd/ff.c     **** 
1352:.\sd/ff.c     **** static
1353:.\sd/ff.c     **** FRESULT dir_find (
1354:.\sd/ff.c     **** 	DIR *dj			/* Pointer to the directory object linked to the file name */
1355:.\sd/ff.c     **** )
1356:.\sd/ff.c     **** {
1357:.\sd/ff.c     **** 	FRESULT res;
1358:.\sd/ff.c     **** 	BYTE c, *dir;
1359:.\sd/ff.c     **** #if _USE_LFN
1360:.\sd/ff.c     **** 	BYTE a, ord, sum;
1361:.\sd/ff.c     **** #endif
1362:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 37


1363:.\sd/ff.c     **** 	res = dir_sdi(dj, 0);			/* Rewind directory object */
1364:.\sd/ff.c     **** 	if (res != FR_OK) return res;
1365:.\sd/ff.c     **** 
1366:.\sd/ff.c     **** #if _USE_LFN
1367:.\sd/ff.c     **** 	ord = sum = 0xFF;
1368:.\sd/ff.c     **** #endif
1369:.\sd/ff.c     **** 	do {
1370:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1371:.\sd/ff.c     **** 		if (res != FR_OK) break;
1372:.\sd/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
1373:.\sd/ff.c     **** 		c = dir[DIR_Name];
1374:.\sd/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1375:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1376:.\sd/ff.c     **** 		a = dir[DIR_Attr] & AM_MASK;
1377:.\sd/ff.c     **** 		if (c == DDE || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
1378:.\sd/ff.c     **** 			ord = 0xFF;
1379:.\sd/ff.c     **** 		} else {
1380:.\sd/ff.c     **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1381:.\sd/ff.c     **** 				if (dj->lfn) {
1382:.\sd/ff.c     **** 					if (c & LLE) {		/* Is it start of LFN sequence? */
1383:.\sd/ff.c     **** 						sum = dir[LDIR_Chksum];
1384:.\sd/ff.c     **** 						c &= ~LLE; ord = c;	/* LFN start order */
1385:.\sd/ff.c     **** 						dj->lfn_idx = dj->index;
1386:.\sd/ff.c     **** 					}
1387:.\sd/ff.c     **** 					/* Check validity of the LFN entry and compare it with given name */
1388:.\sd/ff.c     **** 					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dj->lfn, dir)) ? ord - 1 : 0xFF;
1389:.\sd/ff.c     **** 				}
1390:.\sd/ff.c     **** 			} else {					/* An SFN entry is found */
1391:.\sd/ff.c     **** 				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
1392:.\sd/ff.c     **** 				ord = 0xFF; dj->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1393:.\sd/ff.c     **** 				if (!(dj->fn[NS] & NS_LOSS) && !mem_cmp(dir, dj->fn, 11)) break;	/* SFN matched? */
1394:.\sd/ff.c     **** 			}
1395:.\sd/ff.c     **** 		}
1396:.\sd/ff.c     **** #else		/* Non LFN configuration */
1397:.\sd/ff.c     **** 		if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dj->fn, 11)) /* Is it a valid entry? */
1398:.\sd/ff.c     **** 			break;
1399:.\sd/ff.c     **** #endif
1400:.\sd/ff.c     **** 		res = dir_next(dj, 0);		/* Next entry */
1401:.\sd/ff.c     **** 	} while (res == FR_OK);
1402:.\sd/ff.c     **** 
1403:.\sd/ff.c     **** 	return res;
1404:.\sd/ff.c     **** }
1405:.\sd/ff.c     **** 
1406:.\sd/ff.c     **** 
1407:.\sd/ff.c     **** 
1408:.\sd/ff.c     **** 
1409:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1410:.\sd/ff.c     **** /* Read an object from the directory                                     */
1411:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1412:.\sd/ff.c     **** #if _FS_MINIMIZE <= 1
1413:.\sd/ff.c     **** static
1414:.\sd/ff.c     **** FRESULT dir_read (
1415:.\sd/ff.c     **** 	DIR *dj			/* Pointer to the directory object that pointing the entry to be read */
1416:.\sd/ff.c     **** )
1417:.\sd/ff.c     **** {
1418:.\sd/ff.c     **** 	FRESULT res;
1419:.\sd/ff.c     **** 	BYTE c, *dir;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 38


1420:.\sd/ff.c     **** #if _USE_LFN
1421:.\sd/ff.c     **** 	BYTE a, ord = 0xFF, sum = 0xFF;
1422:.\sd/ff.c     **** #endif
1423:.\sd/ff.c     **** 
1424:.\sd/ff.c     **** 	res = FR_NO_FILE;
1425:.\sd/ff.c     **** 	while (dj->sect) {
1426:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1427:.\sd/ff.c     **** 		if (res != FR_OK) break;
1428:.\sd/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
1429:.\sd/ff.c     **** 		c = dir[DIR_Name];
1430:.\sd/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1431:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1432:.\sd/ff.c     **** 		a = dir[DIR_Attr] & AM_MASK;
1433:.\sd/ff.c     **** 		if (c == DDE || (!_FS_RPATH && c == '.') || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without 
1434:.\sd/ff.c     **** 			ord = 0xFF;
1435:.\sd/ff.c     **** 		} else {
1436:.\sd/ff.c     **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1437:.\sd/ff.c     **** 				if (c & LLE) {			/* Is it start of LFN sequence? */
1438:.\sd/ff.c     **** 					sum = dir[LDIR_Chksum];
1439:.\sd/ff.c     **** 					c &= ~LLE; ord = c;
1440:.\sd/ff.c     **** 					dj->lfn_idx = dj->index;
1441:.\sd/ff.c     **** 				}
1442:.\sd/ff.c     **** 				/* Check LFN validity and capture it */
1443:.\sd/ff.c     **** 				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dj->lfn, dir)) ? ord - 1 : 0xFF;
1444:.\sd/ff.c     **** 			} else {					/* An SFN entry is found */
1445:.\sd/ff.c     **** 				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
1446:.\sd/ff.c     **** 					dj->lfn_idx = 0xFFFF;		/* It has no LFN. */
1447:.\sd/ff.c     **** 				break;
1448:.\sd/ff.c     **** 			}
1449:.\sd/ff.c     **** 		}
1450:.\sd/ff.c     **** #else		/* Non LFN configuration */
1451:.\sd/ff.c     **** 		if (c != DDE && (_FS_RPATH || c != '.') && !(dir[DIR_Attr] & AM_VOL))	/* Is it a valid entry? */
1452:.\sd/ff.c     **** 			break;
1453:.\sd/ff.c     **** #endif
1454:.\sd/ff.c     **** 		res = dir_next(dj, 0);				/* Next entry */
1455:.\sd/ff.c     **** 		if (res != FR_OK) break;
1456:.\sd/ff.c     **** 	}
1457:.\sd/ff.c     **** 
1458:.\sd/ff.c     **** 	if (res != FR_OK) dj->sect = 0;
1459:.\sd/ff.c     **** 
1460:.\sd/ff.c     **** 	return res;
1461:.\sd/ff.c     **** }
1462:.\sd/ff.c     **** #endif
1463:.\sd/ff.c     **** 
1464:.\sd/ff.c     **** 
1465:.\sd/ff.c     **** 
1466:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1467:.\sd/ff.c     **** /* Register an object to the directory                                   */
1468:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1469:.\sd/ff.c     **** #if !_FS_READONLY
1470:.\sd/ff.c     **** static
1471:.\sd/ff.c     **** FRESULT dir_register (	/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_D
1472:.\sd/ff.c     **** 	DIR *dj				/* Target directory with object name to be created */
1473:.\sd/ff.c     **** )
1474:.\sd/ff.c     **** {
1475:.\sd/ff.c     **** 	FRESULT res;
1476:.\sd/ff.c     **** 	BYTE c, *dir;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 39


1477:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1478:.\sd/ff.c     **** 	WORD n, ne, is;
1479:.\sd/ff.c     **** 	BYTE sn[12], *fn, sum;
1480:.\sd/ff.c     **** 	WCHAR *lfn;
1481:.\sd/ff.c     **** 
1482:.\sd/ff.c     **** 
1483:.\sd/ff.c     **** 	fn = dj->fn; lfn = dj->lfn;
1484:.\sd/ff.c     **** 	mem_cpy(sn, fn, 12);
1485:.\sd/ff.c     **** 
1486:.\sd/ff.c     **** 	if (_FS_RPATH && (sn[NS] & NS_DOT))		/* Cannot create dot entry */
1487:.\sd/ff.c     **** 		return FR_INVALID_NAME;
1488:.\sd/ff.c     **** 
1489:.\sd/ff.c     **** 	if (sn[NS] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
1490:.\sd/ff.c     **** 		fn[NS] = 0; dj->lfn = 0;			/* Find only SFN */
1491:.\sd/ff.c     **** 		for (n = 1; n < 100; n++) {
1492:.\sd/ff.c     **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
1493:.\sd/ff.c     **** 			res = dir_find(dj);				/* Check if the name collides with existing SFN */
1494:.\sd/ff.c     **** 			if (res != FR_OK) break;
1495:.\sd/ff.c     **** 		}
1496:.\sd/ff.c     **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
1497:.\sd/ff.c     **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
1498:.\sd/ff.c     **** 		fn[NS] = sn[NS]; dj->lfn = lfn;
1499:.\sd/ff.c     **** 	}
1500:.\sd/ff.c     **** 
1501:.\sd/ff.c     **** 	if (sn[NS] & NS_LFN) {			/* When LFN is to be created, reserve an SFN + LFN entries. */
1502:.\sd/ff.c     **** 		for (ne = 0; lfn[ne]; ne++) ;
1503:.\sd/ff.c     **** 		ne = (ne + 25) / 13;
1504:.\sd/ff.c     **** 	} else {						/* Otherwise reserve only an SFN entry. */
1505:.\sd/ff.c     **** 		ne = 1;
1506:.\sd/ff.c     **** 	}
1507:.\sd/ff.c     **** 
1508:.\sd/ff.c     **** 	/* Reserve contiguous entries */
1509:.\sd/ff.c     **** 	res = dir_sdi(dj, 0);
1510:.\sd/ff.c     **** 	if (res != FR_OK) return res;
1511:.\sd/ff.c     **** 	n = is = 0;
1512:.\sd/ff.c     **** 	do {
1513:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1514:.\sd/ff.c     **** 		if (res != FR_OK) break;
1515:.\sd/ff.c     **** 		c = *dj->dir;				/* Check the entry status */
1516:.\sd/ff.c     **** 		if (c == DDE || c == 0) {	/* Is it a blank entry? */
1517:.\sd/ff.c     **** 			if (n == 0) is = dj->index;	/* First index of the contiguous entry */
1518:.\sd/ff.c     **** 			if (++n == ne) break;	/* A contiguous entry that required count is found */
1519:.\sd/ff.c     **** 		} else {
1520:.\sd/ff.c     **** 			n = 0;					/* Not a blank entry. Restart to search */
1521:.\sd/ff.c     **** 		}
1522:.\sd/ff.c     **** 		res = dir_next(dj, 1);		/* Next entry with table stretch */
1523:.\sd/ff.c     **** 	} while (res == FR_OK);
1524:.\sd/ff.c     **** 
1525:.\sd/ff.c     **** 	if (res == FR_OK && ne > 1) {	/* Initialize LFN entry if needed */
1526:.\sd/ff.c     **** 		res = dir_sdi(dj, is);
1527:.\sd/ff.c     **** 		if (res == FR_OK) {
1528:.\sd/ff.c     **** 			sum = sum_sfn(dj->fn);	/* Sum of the SFN tied to the LFN */
1529:.\sd/ff.c     **** 			ne--;
1530:.\sd/ff.c     **** 			do {					/* Store LFN entries in bottom first */
1531:.\sd/ff.c     **** 				res = move_window(dj->fs, dj->sect);
1532:.\sd/ff.c     **** 				if (res != FR_OK) break;
1533:.\sd/ff.c     **** 				fit_lfn(dj->lfn, dj->dir, (BYTE)ne, sum);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 40


1534:.\sd/ff.c     **** 				dj->fs->wflag = 1;
1535:.\sd/ff.c     **** 				res = dir_next(dj, 0);	/* Next entry */
1536:.\sd/ff.c     **** 			} while (res == FR_OK && --ne);
1537:.\sd/ff.c     **** 		}
1538:.\sd/ff.c     **** 	}
1539:.\sd/ff.c     **** 
1540:.\sd/ff.c     **** #else	/* Non LFN configuration */
1541:.\sd/ff.c     **** 	res = dir_sdi(dj, 0);
1542:.\sd/ff.c     **** 	if (res == FR_OK) {
1543:.\sd/ff.c     **** 		do {	/* Find a blank entry for the SFN */
1544:.\sd/ff.c     **** 			res = move_window(dj->fs, dj->sect);
1545:.\sd/ff.c     **** 			if (res != FR_OK) break;
1546:.\sd/ff.c     **** 			c = *dj->dir;
1547:.\sd/ff.c     **** 			if (c == DDE || c == 0) break;	/* Is it a blank entry? */
1548:.\sd/ff.c     **** 			res = dir_next(dj, 1);			/* Next entry with table stretch */
1549:.\sd/ff.c     **** 		} while (res == FR_OK);
1550:.\sd/ff.c     **** 	}
1551:.\sd/ff.c     **** #endif
1552:.\sd/ff.c     **** 
1553:.\sd/ff.c     **** 	if (res == FR_OK) {		/* Initialize the SFN entry */
1554:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1555:.\sd/ff.c     **** 		if (res == FR_OK) {
1556:.\sd/ff.c     **** 			dir = dj->dir;
1557:.\sd/ff.c     **** 			mem_set(dir, 0, SZ_DIR);	/* Clean the entry */
1558:.\sd/ff.c     **** 			mem_cpy(dir, dj->fn, 11);	/* Put SFN */
1559:.\sd/ff.c     **** #if _USE_LFN
1560:.\sd/ff.c     **** 			dir[DIR_NTres] = *(dj->fn+NS) & (NS_BODY | NS_EXT);	/* Put NT flag */
1561:.\sd/ff.c     **** #endif
1562:.\sd/ff.c     **** 			dj->fs->wflag = 1;
1563:.\sd/ff.c     **** 		}
1564:.\sd/ff.c     **** 	}
1565:.\sd/ff.c     **** 
1566:.\sd/ff.c     **** 	return res;
1567:.\sd/ff.c     **** }
1568:.\sd/ff.c     **** #endif /* !_FS_READONLY */
1569:.\sd/ff.c     **** 
1570:.\sd/ff.c     **** 
1571:.\sd/ff.c     **** 
1572:.\sd/ff.c     **** 
1573:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1574:.\sd/ff.c     **** /* Remove an object from the directory                                   */
1575:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1576:.\sd/ff.c     **** #if !_FS_READONLY && !_FS_MINIMIZE
1577:.\sd/ff.c     **** static
1578:.\sd/ff.c     **** FRESULT dir_remove (	/* FR_OK: Successful, FR_DISK_ERR: A disk error */
1579:.\sd/ff.c     **** 	DIR *dj				/* Directory object pointing the entry to be removed */
1580:.\sd/ff.c     **** )
1581:.\sd/ff.c     **** {
1582:.\sd/ff.c     **** 	FRESULT res;
1583:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1584:.\sd/ff.c     **** 	WORD i;
1585:.\sd/ff.c     **** 
1586:.\sd/ff.c     **** 	i = dj->index;	/* SFN index */
1587:.\sd/ff.c     **** 	res = dir_sdi(dj, (WORD)((dj->lfn_idx == 0xFFFF) ? i : dj->lfn_idx));	/* Goto the SFN or top of th
1588:.\sd/ff.c     **** 	if (res == FR_OK) {
1589:.\sd/ff.c     **** 		do {
1590:.\sd/ff.c     **** 			res = move_window(dj->fs, dj->sect);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 41


1591:.\sd/ff.c     **** 			if (res != FR_OK) break;
1592:.\sd/ff.c     **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
1593:.\sd/ff.c     **** 			dj->fs->wflag = 1;
1594:.\sd/ff.c     **** 			if (dj->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
1595:.\sd/ff.c     **** 			res = dir_next(dj, 0);		/* Next entry */
1596:.\sd/ff.c     **** 		} while (res == FR_OK);
1597:.\sd/ff.c     **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
1598:.\sd/ff.c     **** 	}
1599:.\sd/ff.c     **** 
1600:.\sd/ff.c     **** #else			/* Non LFN configuration */
1601:.\sd/ff.c     **** 	res = dir_sdi(dj, dj->index);
1602:.\sd/ff.c     **** 	if (res == FR_OK) {
1603:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
1604:.\sd/ff.c     **** 		if (res == FR_OK) {
1605:.\sd/ff.c     **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
1606:.\sd/ff.c     **** 			dj->fs->wflag = 1;
1607:.\sd/ff.c     **** 		}
1608:.\sd/ff.c     **** 	}
1609:.\sd/ff.c     **** #endif
1610:.\sd/ff.c     **** 
1611:.\sd/ff.c     **** 	return res;
1612:.\sd/ff.c     **** }
1613:.\sd/ff.c     **** #endif /* !_FS_READONLY */
1614:.\sd/ff.c     **** 
1615:.\sd/ff.c     **** 
1616:.\sd/ff.c     **** 
1617:.\sd/ff.c     **** 
1618:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1619:.\sd/ff.c     **** /* Pick a segment and create the object name in directory form           */
1620:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1621:.\sd/ff.c     **** 
1622:.\sd/ff.c     **** static
1623:.\sd/ff.c     **** FRESULT create_name (
1624:.\sd/ff.c     **** 	DIR *dj,			/* Pointer to the directory object */
1625:.\sd/ff.c     **** 	const TCHAR **path	/* Pointer to pointer to the segment in the path string */
1626:.\sd/ff.c     **** )
1627:.\sd/ff.c     **** {
 674              		.loc 1 1627 0
 675              		.cfi_startproc
 676              	.LVL75:
 677 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 678              		.cfi_def_cfa_offset 24
 679              		.cfi_offset 3, -24
 680              		.cfi_offset 4, -20
 681              		.cfi_offset 5, -16
 682              		.cfi_offset 6, -12
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 5F46     		mov	r7, fp
 686 0004 5646     		mov	r6, r10
 687 0006 4D46     		mov	r5, r9
 688 0008 4446     		mov	r4, r8
 689 000a F0B4     		push	{r4, r5, r6, r7}
 690              		.cfi_def_cfa_offset 40
 691              		.cfi_offset 8, -40
 692              		.cfi_offset 9, -36
 693              		.cfi_offset 10, -32
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 42


 694              		.cfi_offset 11, -28
 695 000c 8A46     		mov	r10, r1
1628:.\sd/ff.c     **** #ifdef _EXCVT
1629:.\sd/ff.c     **** 	static const BYTE excvt[] = _EXCVT;	/* Upper conversion table for extended chars */
1630:.\sd/ff.c     **** #endif
1631:.\sd/ff.c     **** 
1632:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
1633:.\sd/ff.c     **** 	BYTE b, cf;
1634:.\sd/ff.c     **** 	WCHAR w, *lfn;
1635:.\sd/ff.c     **** 	UINT i, ni, si, di;
1636:.\sd/ff.c     **** 	const TCHAR *p;
1637:.\sd/ff.c     **** 
1638:.\sd/ff.c     **** 	/* Create LFN in Unicode */
1639:.\sd/ff.c     **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1640:.\sd/ff.c     **** 	lfn = dj->lfn;
1641:.\sd/ff.c     **** 	si = di = 0;
1642:.\sd/ff.c     **** 	for (;;) {
1643:.\sd/ff.c     **** 		w = p[si++];					/* Get a character */
1644:.\sd/ff.c     **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
1645:.\sd/ff.c     **** 		if (di >= _MAX_LFN)				/* Reject too LONG_ name */
1646:.\sd/ff.c     **** 			return FR_INVALID_NAME;
1647:.\sd/ff.c     **** #if !_LFN_UNICODE
1648:.\sd/ff.c     **** 		w &= 0xFF;
1649:.\sd/ff.c     **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1650:.\sd/ff.c     **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
1651:.\sd/ff.c     **** 			if (!IsDBCS2(b))
1652:.\sd/ff.c     **** 				return FR_INVALID_NAME;	/* Reject invalid sequence */
1653:.\sd/ff.c     **** 			w = (w << 8) + b;			/* Create a DBC */
1654:.\sd/ff.c     **** 		}
1655:.\sd/ff.c     **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
1656:.\sd/ff.c     **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
1657:.\sd/ff.c     **** #endif
1658:.\sd/ff.c     **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal chars for LFN */
1659:.\sd/ff.c     **** 			return FR_INVALID_NAME;
1660:.\sd/ff.c     **** 		lfn[di++] = w;					/* Store the Unicode char */
1661:.\sd/ff.c     **** 	}
1662:.\sd/ff.c     **** 	*path = &p[si];						/* Return pointer to the next segment */
1663:.\sd/ff.c     **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1664:.\sd/ff.c     **** #if _FS_RPATH
1665:.\sd/ff.c     **** 	if ((di == 1 && lfn[di-1] == '.') || /* Is this a dot entry? */
1666:.\sd/ff.c     **** 		(di == 2 && lfn[di-1] == '.' && lfn[di-2] == '.')) {
1667:.\sd/ff.c     **** 		lfn[di] = 0;
1668:.\sd/ff.c     **** 		for (i = 0; i < 11; i++)
1669:.\sd/ff.c     **** 			dj->fn[i] = (i < di) ? '.' : ' ';
1670:.\sd/ff.c     **** 		dj->fn[i] = cf | NS_DOT;		/* This is a dot entry */
1671:.\sd/ff.c     **** 		return FR_OK;
1672:.\sd/ff.c     **** 	}
1673:.\sd/ff.c     **** #endif
1674:.\sd/ff.c     **** 	while (di) {						/* Strip trailing spaces and dots */
1675:.\sd/ff.c     **** 		w = lfn[di-1];
1676:.\sd/ff.c     **** 		if (w != ' ' && w != '.') break;
1677:.\sd/ff.c     **** 		di--;
1678:.\sd/ff.c     **** 	}
1679:.\sd/ff.c     **** 	if (!di) return FR_INVALID_NAME;	/* Reject nul string */
1680:.\sd/ff.c     **** 
1681:.\sd/ff.c     **** 	lfn[di] = 0;						/* LFN is created */
1682:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 43


1683:.\sd/ff.c     **** 	/* Create SFN in directory form */
1684:.\sd/ff.c     **** 	mem_set(dj->fn, ' ', 11);
1685:.\sd/ff.c     **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
1686:.\sd/ff.c     **** 	if (si) cf |= NS_LOSS | NS_LFN;
1687:.\sd/ff.c     **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
1688:.\sd/ff.c     **** 
1689:.\sd/ff.c     **** 	b = i = 0; ni = 8;
1690:.\sd/ff.c     **** 	for (;;) {
1691:.\sd/ff.c     **** 		w = lfn[si++];					/* Get an LFN char */
1692:.\sd/ff.c     **** 		if (!w) break;					/* Break on end of the LFN */
1693:.\sd/ff.c     **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
1694:.\sd/ff.c     **** 			cf |= NS_LOSS | NS_LFN; continue;
1695:.\sd/ff.c     **** 		}
1696:.\sd/ff.c     **** 
1697:.\sd/ff.c     **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
1698:.\sd/ff.c     **** 			if (ni == 11) {				/* LONG_ extension */
1699:.\sd/ff.c     **** 				cf |= NS_LOSS | NS_LFN; break;
1700:.\sd/ff.c     **** 			}
1701:.\sd/ff.c     **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
1702:.\sd/ff.c     **** 			if (si > di) break;			/* No extension */
1703:.\sd/ff.c     **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
1704:.\sd/ff.c     **** 			b <<= 2; continue;
1705:.\sd/ff.c     **** 		}
1706:.\sd/ff.c     **** 
1707:.\sd/ff.c     **** 		if (w >= 0x80) {				/* Non ASCII char */
1708:.\sd/ff.c     **** #ifdef _EXCVT
1709:.\sd/ff.c     **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
1710:.\sd/ff.c     **** 			if (w) w = excvt[w - 0x80];	/* Convert extended char to upper (SBCS) */
1711:.\sd/ff.c     **** #else
1712:.\sd/ff.c     **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
1713:.\sd/ff.c     **** #endif
1714:.\sd/ff.c     **** 			cf |= NS_LFN;				/* Force create LFN entry */
1715:.\sd/ff.c     **** 		}
1716:.\sd/ff.c     **** 
1717:.\sd/ff.c     **** 		if (_DF1S && w >= 0x100) {		/* Double byte char (always false on SBCS cfg) */
1718:.\sd/ff.c     **** 			if (i >= ni - 1) {
1719:.\sd/ff.c     **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
1720:.\sd/ff.c     **** 			}
1721:.\sd/ff.c     **** 			dj->fn[i++] = (BYTE)(w >> 8);
1722:.\sd/ff.c     **** 		} else {						/* Single byte char */
1723:.\sd/ff.c     **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal chars for SFN */
1724:.\sd/ff.c     **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
1725:.\sd/ff.c     **** 			} else {
1726:.\sd/ff.c     **** 				if (IsUpper(w)) {		/* ASCII large capital */
1727:.\sd/ff.c     **** 					b |= 2;
1728:.\sd/ff.c     **** 				} else {
1729:.\sd/ff.c     **** 					if (IsLower(w)) {	/* ASCII small capital */
1730:.\sd/ff.c     **** 						b |= 1; w -= 0x20;
1731:.\sd/ff.c     **** 					}
1732:.\sd/ff.c     **** 				}
1733:.\sd/ff.c     **** 			}
1734:.\sd/ff.c     **** 		}
1735:.\sd/ff.c     **** 		dj->fn[i++] = (BYTE)w;
1736:.\sd/ff.c     **** 	}
1737:.\sd/ff.c     **** 
1738:.\sd/ff.c     **** 	if (dj->fn[0] == DDE) dj->fn[0] = NDDE;	/* If the first char collides with deleted mark, replace i
1739:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 44


1740:.\sd/ff.c     **** 	if (ni == 8) b <<= 2;
1741:.\sd/ff.c     **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
1742:.\sd/ff.c     **** 		cf |= NS_LFN;
1743:.\sd/ff.c     **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended char, NT flags are create
1744:.\sd/ff.c     **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
1745:.\sd/ff.c     **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
1746:.\sd/ff.c     **** 	}
1747:.\sd/ff.c     **** 
1748:.\sd/ff.c     **** 	dj->fn[NS] = cf;	/* SFN is created */
1749:.\sd/ff.c     **** 
1750:.\sd/ff.c     **** 	return FR_OK;
1751:.\sd/ff.c     **** 
1752:.\sd/ff.c     **** 
1753:.\sd/ff.c     **** #else	/* Non-LFN configuration */
1754:.\sd/ff.c     **** 	BYTE b, c, d, *sfn;
1755:.\sd/ff.c     **** 	UINT ni, si, i;
1756:.\sd/ff.c     **** 	const char *p;
1757:.\sd/ff.c     **** 
1758:.\sd/ff.c     **** 	/* Create file name in directory form */
1759:.\sd/ff.c     **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
 696              		.loc 1 1759 0
 697 000e 0C68     		ldr	r4, [r1]
 698              	.LVL76:
 699 0010 00E0     		b	.L71
 700              	.L72:
 701              		.loc 1 1759 0 is_stmt 0 discriminator 5
 702 0012 0134     		add	r4, r4, #1
 703              	.LVL77:
 704              	.L71:
 705              		.loc 1 1759 0 discriminator 1
 706 0014 2378     		ldrb	r3, [r4]
 707 0016 2F2B     		cmp	r3, #47
 708 0018 FBD0     		beq	.L72
 709              		.loc 1 1759 0 discriminator 4
 710 001a 5C2B     		cmp	r3, #92
 711 001c F9D0     		beq	.L72
1760:.\sd/ff.c     **** 	sfn = dj->fn;
 712              		.loc 1 1760 0 is_stmt 1
 713 001e 8369     		ldr	r3, [r0, #24]
 714 0020 9B46     		mov	fp, r3
 715              	.LVL78:
1761:.\sd/ff.c     **** 	mem_set(sfn, ' ', 11);
 716              		.loc 1 1761 0
 717 0022 181C     		mov	r0, r3
 718              	.LVL79:
 719 0024 2021     		mov	r1, #32
 720              	.LVL80:
 721 0026 0B22     		mov	r2, #11
 722 0028 FFF7FEFF 		bl	mem_set
 723              	.LVL81:
1762:.\sd/ff.c     **** 	si = i = b = 0; ni = 8;
 724              		.loc 1 1762 0
 725 002c 0026     		mov	r6, #0
 726 002e 0023     		mov	r3, #0
 727 0030 0827     		mov	r7, #8
 728 0032 0022     		mov	r2, #0
 729 0034 9046     		mov	r8, r2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 45


 730 0036 00E0     		b	.L73
 731              	.LVL82:
 732              	.L78:
 733 0038 4B46     		mov	r3, r9
 734              	.LVL83:
 735              	.L73:
1763:.\sd/ff.c     **** #if _FS_RPATH
1764:.\sd/ff.c     **** 	if (p[si] == '.') { /* Is this a dot entry? */
1765:.\sd/ff.c     **** 		for (;;) {
1766:.\sd/ff.c     **** 			c = (BYTE)p[si++];
1767:.\sd/ff.c     **** 			if (c != '.' || si >= 3) break;
1768:.\sd/ff.c     **** 			sfn[i++] = c;
1769:.\sd/ff.c     **** 		}
1770:.\sd/ff.c     **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
1771:.\sd/ff.c     **** 		*path = &p[si];									/* Return pointer to the next segment */
1772:.\sd/ff.c     **** 		sfn[NS] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of path */
1773:.\sd/ff.c     **** 		return FR_OK;
1774:.\sd/ff.c     **** 	}
1775:.\sd/ff.c     **** #endif
1776:.\sd/ff.c     **** 	for (;;) {
1777:.\sd/ff.c     **** 		c = (BYTE)p[si++];
 736              		.loc 1 1777 0
 737 003a 5A1C     		add	r2, r3, #1
 738 003c 9146     		mov	r9, r2
 739              	.LVL84:
 740 003e E55C     		ldrb	r5, [r4, r3]
 741              	.LVL85:
1778:.\sd/ff.c     **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
 742              		.loc 1 1778 0
 743 0040 202D     		cmp	r5, #32
 744 0042 39D9     		bls	.L74
 745              		.loc 1 1778 0 is_stmt 0 discriminator 1
 746 0044 2F2D     		cmp	r5, #47
 747 0046 37D0     		beq	.L74
 748              		.loc 1 1778 0 discriminator 2
 749 0048 5C2D     		cmp	r5, #92
 750 004a 35D0     		beq	.L74
1779:.\sd/ff.c     **** 		if (c == '.' || i >= ni) {
 751              		.loc 1 1779 0 is_stmt 1
 752 004c 2E2D     		cmp	r5, #46
 753 004e 01D0     		beq	.L75
 754              		.loc 1 1779 0 is_stmt 0 discriminator 1
 755 0050 BE42     		cmp	r6, r7
 756 0052 0AD3     		bcc	.L76
 757              	.L75:
1780:.\sd/ff.c     **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
 758              		.loc 1 1780 0 is_stmt 1
 759 0054 082F     		cmp	r7, #8
 760 0056 58D1     		bne	.L87
 761              		.loc 1 1780 0 is_stmt 0 discriminator 2
 762 0058 2E2D     		cmp	r5, #46
 763 005a 58D1     		bne	.L88
 764              	.LVL86:
1781:.\sd/ff.c     **** 			i = 8; ni = 11;
1782:.\sd/ff.c     **** 			b <<= 2; continue;
 765              		.loc 1 1782 0 is_stmt 1
 766 005c 4346     		mov	r3, r8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 46


 767 005e 9B00     		lsl	r3, r3, #2
 768 0060 DBB2     		uxtb	r3, r3
 769 0062 9846     		mov	r8, r3
 770              	.LVL87:
1781:.\sd/ff.c     **** 			i = 8; ni = 11;
 771              		.loc 1 1781 0
 772 0064 0826     		mov	r6, #8
 773 0066 0337     		add	r7, r7, #3
 774              		.loc 1 1782 0
 775 0068 E6E7     		b	.L78
 776              	.LVL88:
 777              	.L76:
1783:.\sd/ff.c     **** 		}
1784:.\sd/ff.c     **** 		if (c >= 0x80) {				/* Extended char? */
 778              		.loc 1 1784 0
 779 006a 6BB2     		sxtb	r3, r5
 780 006c 002B     		cmp	r3, #0
 781 006e 06DA     		bge	.L79
1785:.\sd/ff.c     **** 			b |= 3;						/* Eliminate NT flag */
 782              		.loc 1 1785 0
 783 0070 0323     		mov	r3, #3
 784 0072 4246     		mov	r2, r8
 785              	.LVL89:
 786 0074 1A43     		orr	r2, r3
 787 0076 9046     		mov	r8, r2
 788              	.LVL90:
1786:.\sd/ff.c     **** #ifdef _EXCVT
1787:.\sd/ff.c     **** 			c = excvt[c-0x80];			/* Upper conversion (SBCS) */
 789              		.loc 1 1787 0
 790 0078 803D     		sub	r5, r5, #128
 791              	.LVL91:
 792 007a 2A4B     		ldr	r3, .L92
 793 007c 5D5D     		ldrb	r5, [r3, r5]
 794              	.LVL92:
 795              	.L79:
1788:.\sd/ff.c     **** #else
1789:.\sd/ff.c     **** #if !_DF1S	/* ASCII only cfg */
1790:.\sd/ff.c     **** 			return FR_INVALID_NAME;
1791:.\sd/ff.c     **** #endif
1792:.\sd/ff.c     **** #endif
1793:.\sd/ff.c     **** 		}
1794:.\sd/ff.c     **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1795:.\sd/ff.c     **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
1796:.\sd/ff.c     **** 			if (!IsDBCS2(d) || i >= ni - 1)	/* Reject invalid DBC */
1797:.\sd/ff.c     **** 				return FR_INVALID_NAME;
1798:.\sd/ff.c     **** 			sfn[i++] = c;
1799:.\sd/ff.c     **** 			sfn[i++] = d;
1800:.\sd/ff.c     **** 		} else {						/* Single byte code */
1801:.\sd/ff.c     **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
 796              		.loc 1 1801 0
 797 007e 2A48     		ldr	r0, .L92+4
 798 0080 291C     		mov	r1, r5
 799 0082 FFF7FEFF 		bl	chk_chr
 800              	.LVL93:
 801 0086 0028     		cmp	r0, #0
 802 0088 43D1     		bne	.L89
1802:.\sd/ff.c     **** 				return FR_INVALID_NAME;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 47


1803:.\sd/ff.c     **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 803              		.loc 1 1803 0
 804 008a 2B1C     		mov	r3, r5
 805 008c 413B     		sub	r3, r3, #65
 806 008e 192B     		cmp	r3, #25
 807 0090 04D8     		bhi	.L80
1804:.\sd/ff.c     **** 				b |= 2;
 808              		.loc 1 1804 0
 809 0092 0223     		mov	r3, #2
 810 0094 4246     		mov	r2, r8
 811 0096 1A43     		orr	r2, r3
 812 0098 9046     		mov	r8, r2
 813              	.LVL94:
 814 009a 09E0     		b	.L81
 815              	.L80:
1805:.\sd/ff.c     **** 			} else {
1806:.\sd/ff.c     **** 				if (IsLower(c)) {		/* ASCII small capital? */
 816              		.loc 1 1806 0
 817 009c 2B1C     		mov	r3, r5
 818 009e 613B     		sub	r3, r3, #97
 819 00a0 192B     		cmp	r3, #25
 820 00a2 05D8     		bhi	.L81
1807:.\sd/ff.c     **** 					b |= 1; c -= 0x20;
 821              		.loc 1 1807 0
 822 00a4 0123     		mov	r3, #1
 823 00a6 4246     		mov	r2, r8
 824 00a8 1A43     		orr	r2, r3
 825 00aa 9046     		mov	r8, r2
 826              	.LVL95:
 827 00ac 203D     		sub	r5, r5, #32
 828              	.LVL96:
 829 00ae EDB2     		uxtb	r5, r5
 830              	.LVL97:
 831              	.L81:
1808:.\sd/ff.c     **** 				}
1809:.\sd/ff.c     **** 			}
1810:.\sd/ff.c     **** 			sfn[i++] = c;
 832              		.loc 1 1810 0
 833 00b0 5B46     		mov	r3, fp
 834 00b2 9D55     		strb	r5, [r3, r6]
 835 00b4 0136     		add	r6, r6, #1
 836              	.LVL98:
 837 00b6 BFE7     		b	.L78
 838              	.LVL99:
 839              	.L74:
1811:.\sd/ff.c     **** 		}
1812:.\sd/ff.c     **** 	}
1813:.\sd/ff.c     **** 	*path = &p[si];						/* Return pointer to the next segment */
 840              		.loc 1 1813 0
 841 00b8 4C44     		add	r4, r4, r9
 842              	.LVL100:
 843 00ba 5346     		mov	r3, r10
 844 00bc 1C60     		str	r4, [r3]
1814:.\sd/ff.c     **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 845              		.loc 1 1814 0
 846 00be 202D     		cmp	r5, #32
 847 00c0 01D8     		bhi	.L90
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 48


 848              	.LVL101:
 849 00c2 0422     		mov	r2, #4
 850              	.LVL102:
 851 00c4 00E0     		b	.L82
 852              	.LVL103:
 853              	.L90:
 854 00c6 0022     		mov	r2, #0
 855              	.LVL104:
 856              	.L82:
1815:.\sd/ff.c     **** 
1816:.\sd/ff.c     **** 	if (!i) return FR_INVALID_NAME;		/* Reject nul string */
 857              		.loc 1 1816 0 discriminator 4
 858 00c8 002E     		cmp	r6, #0
 859 00ca 24D0     		beq	.L91
1817:.\sd/ff.c     **** 	if (sfn[0] == DDE) sfn[0] = NDDE;	/* When first char collides with DDE, replace it with 0x05 */
 860              		.loc 1 1817 0
 861 00cc 5B46     		mov	r3, fp
 862              	.LVL105:
 863 00ce 1B78     		ldrb	r3, [r3]
 864 00d0 E52B     		cmp	r3, #229
 865 00d2 02D1     		bne	.L83
 866              		.loc 1 1817 0 is_stmt 0 discriminator 1
 867 00d4 E03B     		sub	r3, r3, #224
 868 00d6 5946     		mov	r1, fp
 869 00d8 0B70     		strb	r3, [r1]
 870              	.L83:
1818:.\sd/ff.c     **** 
1819:.\sd/ff.c     **** 	if (ni == 8) b <<= 2;
 871              		.loc 1 1819 0 is_stmt 1
 872 00da 082F     		cmp	r7, #8
 873 00dc 03D1     		bne	.L84
 874              		.loc 1 1819 0 is_stmt 0 discriminator 1
 875 00de 4346     		mov	r3, r8
 876 00e0 9B00     		lsl	r3, r3, #2
 877 00e2 DBB2     		uxtb	r3, r3
 878 00e4 9846     		mov	r8, r3
 879              	.LVL106:
 880              	.L84:
1820:.\sd/ff.c     **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
 881              		.loc 1 1820 0 is_stmt 1
 882 00e6 0323     		mov	r3, #3
 883 00e8 4146     		mov	r1, r8
 884 00ea 0B40     		and	r3, r1
 885 00ec 012B     		cmp	r3, #1
 886 00ee 01D1     		bne	.L85
 887              		.loc 1 1820 0 is_stmt 0 discriminator 1
 888 00f0 0F33     		add	r3, r3, #15
 889 00f2 1A43     		orr	r2, r3
 890              	.LVL107:
 891              	.L85:
1821:.\sd/ff.c     **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
 892              		.loc 1 1821 0 is_stmt 1
 893 00f4 0C23     		mov	r3, #12
 894 00f6 4146     		mov	r1, r8
 895 00f8 0B40     		and	r3, r1
 896 00fa 042B     		cmp	r3, #4
 897 00fc 01D1     		bne	.L86
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 49


 898              		.loc 1 1821 0 is_stmt 0 discriminator 1
 899 00fe 0433     		add	r3, r3, #4
 900 0100 1A43     		orr	r2, r3
 901              	.LVL108:
 902              	.L86:
1822:.\sd/ff.c     **** 
1823:.\sd/ff.c     **** 	sfn[NS] = c;		/* Store NT flag, File name is created */
 903              		.loc 1 1823 0 is_stmt 1
 904 0102 5B46     		mov	r3, fp
 905 0104 DA72     		strb	r2, [r3, #11]
1824:.\sd/ff.c     **** 
1825:.\sd/ff.c     **** 	return FR_OK;
 906              		.loc 1 1825 0
 907 0106 0020     		mov	r0, #0
 908 0108 06E0     		b	.L77
 909              	.LVL109:
 910              	.L87:
1780:.\sd/ff.c     **** 			i = 8; ni = 11;
 911              		.loc 1 1780 0
 912 010a 0620     		mov	r0, #6
 913 010c 04E0     		b	.L77
 914              	.L88:
 915 010e 0620     		mov	r0, #6
 916 0110 02E0     		b	.L77
 917              	.LVL110:
 918              	.L89:
1802:.\sd/ff.c     **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 919              		.loc 1 1802 0
 920 0112 0620     		mov	r0, #6
 921 0114 00E0     		b	.L77
 922              	.LVL111:
 923              	.L91:
1816:.\sd/ff.c     **** 	if (sfn[0] == DDE) sfn[0] = NDDE;	/* When first char collides with DDE, replace it with 0x05 */
 924              		.loc 1 1816 0
 925 0116 0620     		mov	r0, #6
 926              	.LVL112:
 927              	.L77:
1826:.\sd/ff.c     **** #endif
1827:.\sd/ff.c     **** }
 928              		.loc 1 1827 0
 929              		@ sp needed
 930              	.LVL113:
 931              	.LVL114:
 932              	.LVL115:
 933              	.LVL116:
 934              	.LVL117:
 935              	.LVL118:
 936 0118 3CBC     		pop	{r2, r3, r4, r5}
 937 011a 9046     		mov	r8, r2
 938 011c 9946     		mov	r9, r3
 939 011e A246     		mov	r10, r4
 940 0120 AB46     		mov	fp, r5
 941 0122 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 942              	.L93:
 943              		.align	2
 944              	.L92:
 945 0124 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 50


 946 0128 00000000 		.word	.LC6
 947              		.cfi_endproc
 948              	.LFE22:
 949              		.size	create_name, .-create_name
 950              		.section	.text.get_fileinfo,"ax",%progbits
 951              		.align	2
 952              		.code	16
 953              		.thumb_func
 954              		.type	get_fileinfo, %function
 955              	get_fileinfo:
 956              	.LFB23:
1828:.\sd/ff.c     **** 
1829:.\sd/ff.c     **** 
1830:.\sd/ff.c     **** 
1831:.\sd/ff.c     **** 
1832:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1833:.\sd/ff.c     **** /* Get file information from directory entry                             */
1834:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1835:.\sd/ff.c     **** #if _FS_MINIMIZE <= 1
1836:.\sd/ff.c     **** static
1837:.\sd/ff.c     **** void get_fileinfo (		/* No return code */
1838:.\sd/ff.c     **** 	DIR *dj,			/* Pointer to the directory object */
1839:.\sd/ff.c     **** 	FILINFO *fno	 	/* Pointer to the file information to be filled */
1840:.\sd/ff.c     **** )
1841:.\sd/ff.c     **** {
 957              		.loc 1 1841 0
 958              		.cfi_startproc
 959              	.LVL119:
 960 0000 10B5     		push	{r4, lr}
 961              		.cfi_def_cfa_offset 8
 962              		.cfi_offset 4, -8
 963              		.cfi_offset 14, -4
1842:.\sd/ff.c     **** 	UINT i;
1843:.\sd/ff.c     **** 	BYTE nt, *dir;
1844:.\sd/ff.c     **** 	TCHAR *p, c;
1845:.\sd/ff.c     **** 
1846:.\sd/ff.c     **** 
1847:.\sd/ff.c     **** 	p = fno->fname;
 964              		.loc 1 1847 0
 965 0002 0B1C     		mov	r3, r1
 966 0004 0933     		add	r3, r3, #9
 967              	.LVL120:
1848:.\sd/ff.c     **** 	if (dj->sect) {
 968              		.loc 1 1848 0
 969 0006 0269     		ldr	r2, [r0, #16]
 970 0008 002A     		cmp	r2, #0
 971 000a 34D0     		beq	.L95
1849:.\sd/ff.c     **** 		dir = dj->dir;
 972              		.loc 1 1849 0
 973 000c 4469     		ldr	r4, [r0, #20]
 974              	.LVL121:
1850:.\sd/ff.c     **** 		nt = dir[DIR_NTres];		/* NT flag */
1851:.\sd/ff.c     **** 		for (i = 0; i < 8; i++) {	/* Copy name body */
 975              		.loc 1 1851 0
 976 000e 0022     		mov	r2, #0
 977 0010 08E0     		b	.L96
 978              	.LVL122:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 51


 979              	.L99:
1852:.\sd/ff.c     **** 			c = dir[i];
 980              		.loc 1 1852 0
 981 0012 A05C     		ldrb	r0, [r4, r2]
 982              	.LVL123:
1853:.\sd/ff.c     **** 			if (c == ' ') break;
 983              		.loc 1 1853 0
 984 0014 2028     		cmp	r0, #32
 985 0016 07D0     		beq	.L97
1854:.\sd/ff.c     **** 			if (c == NDDE) c = (TCHAR)DDE;
 986              		.loc 1 1854 0
 987 0018 0528     		cmp	r0, #5
 988 001a 00D1     		bne	.L98
 989 001c E030     		add	r0, r0, #224
 990              	.LVL124:
 991              	.L98:
1855:.\sd/ff.c     **** 			if (_USE_LFN && (nt & NS_BODY) && IsUpper(c)) c += 0x20;
1856:.\sd/ff.c     **** #if _LFN_UNICODE
1857:.\sd/ff.c     **** 			if (IsDBCS1(c) && i < 7 && IsDBCS2(dir[i+1]))
1858:.\sd/ff.c     **** 				c = (c << 8) | dir[++i];
1859:.\sd/ff.c     **** 			c = ff_convert(c, 1);
1860:.\sd/ff.c     **** 			if (!c) c = '?';
1861:.\sd/ff.c     **** #endif
1862:.\sd/ff.c     **** 			*p++ = c;
 992              		.loc 1 1862 0 discriminator 2
 993 001e 1870     		strb	r0, [r3]
1851:.\sd/ff.c     **** 			c = dir[i];
 994              		.loc 1 1851 0 discriminator 2
 995 0020 0132     		add	r2, r2, #1
 996              	.LVL125:
 997              		.loc 1 1862 0 discriminator 2
 998 0022 0133     		add	r3, r3, #1
 999              	.LVL126:
 1000              	.L96:
1851:.\sd/ff.c     **** 			c = dir[i];
 1001              		.loc 1 1851 0 discriminator 1
 1002 0024 072A     		cmp	r2, #7
 1003 0026 F4D9     		bls	.L99
 1004              	.L97:
1863:.\sd/ff.c     **** 		}
1864:.\sd/ff.c     **** 		if (dir[8] != ' ') {		/* Copy name extension */
 1005              		.loc 1 1864 0
 1006 0028 227A     		ldrb	r2, [r4, #8]
 1007              	.LVL127:
 1008 002a 202A     		cmp	r2, #32
 1009 002c 0CD0     		beq	.L100
 1010              	.LVL128:
1865:.\sd/ff.c     **** 			*p++ = '.';
 1011              		.loc 1 1865 0
 1012 002e 2E22     		mov	r2, #46
 1013 0030 1A70     		strb	r2, [r3]
 1014              	.LVL129:
 1015 0032 0133     		add	r3, r3, #1
 1016              	.LVL130:
1866:.\sd/ff.c     **** 			for (i = 8; i < 11; i++) {
 1017              		.loc 1 1866 0
 1018 0034 263A     		sub	r2, r2, #38
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 52


 1019 0036 05E0     		b	.L101
 1020              	.LVL131:
 1021              	.L102:
1867:.\sd/ff.c     **** 				c = dir[i];
 1022              		.loc 1 1867 0
 1023 0038 A05C     		ldrb	r0, [r4, r2]
 1024              	.LVL132:
1868:.\sd/ff.c     **** 				if (c == ' ') break;
 1025              		.loc 1 1868 0
 1026 003a 2028     		cmp	r0, #32
 1027 003c 04D0     		beq	.L100
 1028              	.LVL133:
1869:.\sd/ff.c     **** 				if (_USE_LFN && (nt & NS_EXT) && IsUpper(c)) c += 0x20;
1870:.\sd/ff.c     **** #if _LFN_UNICODE
1871:.\sd/ff.c     **** 				if (IsDBCS1(c) && i < 10 && IsDBCS2(dir[i+1]))
1872:.\sd/ff.c     **** 					c = (c << 8) | dir[++i];
1873:.\sd/ff.c     **** 				c = ff_convert(c, 1);
1874:.\sd/ff.c     **** 				if (!c) c = '?';
1875:.\sd/ff.c     **** #endif
1876:.\sd/ff.c     **** 				*p++ = c;
 1029              		.loc 1 1876 0 discriminator 2
 1030 003e 1870     		strb	r0, [r3]
1866:.\sd/ff.c     **** 				c = dir[i];
 1031              		.loc 1 1866 0 discriminator 2
 1032 0040 0132     		add	r2, r2, #1
 1033              	.LVL134:
 1034              		.loc 1 1876 0 discriminator 2
 1035 0042 0133     		add	r3, r3, #1
 1036              	.LVL135:
 1037              	.L101:
1866:.\sd/ff.c     **** 				c = dir[i];
 1038              		.loc 1 1866 0 discriminator 1
 1039 0044 0A2A     		cmp	r2, #10
 1040 0046 F7D9     		bls	.L102
 1041              	.LVL136:
 1042              	.L100:
1877:.\sd/ff.c     **** 			}
1878:.\sd/ff.c     **** 		}
1879:.\sd/ff.c     **** 		fno->fattrib = dir[DIR_Attr];				/* Attribute */
 1043              		.loc 1 1879 0
 1044 0048 E27A     		ldrb	r2, [r4, #11]
 1045 004a 0A72     		strb	r2, [r1, #8]
1880:.\sd/ff.c     **** 		fno->fsize = LD_DWORD(dir+DIR_FileSize);	/* Size */
 1046              		.loc 1 1880 0
 1047 004c E27F     		ldrb	r2, [r4, #31]
 1048 004e 1006     		lsl	r0, r2, #24
 1049 0050 A27F     		ldrb	r2, [r4, #30]
 1050 0052 1204     		lsl	r2, r2, #16
 1051 0054 0243     		orr	r2, r0
 1052 0056 607F     		ldrb	r0, [r4, #29]
 1053 0058 0002     		lsl	r0, r0, #8
 1054 005a 0243     		orr	r2, r0
 1055 005c 207F     		ldrb	r0, [r4, #28]
 1056 005e 0243     		orr	r2, r0
 1057 0060 0A60     		str	r2, [r1]
1881:.\sd/ff.c     **** 		fno->fdate = LD_WORD(dir+DIR_WrtDate);		/* Date */
 1058              		.loc 1 1881 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 53


 1059 0062 627E     		ldrb	r2, [r4, #25]
 1060 0064 1202     		lsl	r2, r2, #8
 1061 0066 207E     		ldrb	r0, [r4, #24]
 1062 0068 0243     		orr	r2, r0
 1063 006a 8A80     		strh	r2, [r1, #4]
1882:.\sd/ff.c     **** 		fno->ftime = LD_WORD(dir+DIR_WrtTime);		/* Time */
 1064              		.loc 1 1882 0
 1065 006c E27D     		ldrb	r2, [r4, #23]
 1066 006e 1202     		lsl	r2, r2, #8
 1067 0070 A07D     		ldrb	r0, [r4, #22]
 1068 0072 0243     		orr	r2, r0
 1069 0074 CA80     		strh	r2, [r1, #6]
 1070              	.LVL137:
 1071              	.L95:
1883:.\sd/ff.c     **** 	}
1884:.\sd/ff.c     **** 	*p = 0;		/* Terminate SFN str by a \0 */
 1072              		.loc 1 1884 0
 1073 0076 0022     		mov	r2, #0
 1074 0078 1A70     		strb	r2, [r3]
1885:.\sd/ff.c     **** 
1886:.\sd/ff.c     **** #if _USE_LFN
1887:.\sd/ff.c     **** 	if (fno->lfname && fno->lfsize) {
1888:.\sd/ff.c     **** 		TCHAR *tp = fno->lfname;
1889:.\sd/ff.c     **** 		WCHAR w, *lfn;
1890:.\sd/ff.c     **** 
1891:.\sd/ff.c     **** 		i = 0;
1892:.\sd/ff.c     **** 		if (dj->sect && dj->lfn_idx != 0xFFFF) {/* Get LFN if available */
1893:.\sd/ff.c     **** 			lfn = dj->lfn;
1894:.\sd/ff.c     **** 			while ((w = *lfn++) != 0) {			/* Get an LFN char */
1895:.\sd/ff.c     **** #if !_LFN_UNICODE
1896:.\sd/ff.c     **** 				w = ff_convert(w, 0);			/* Unicode -> OEM conversion */
1897:.\sd/ff.c     **** 				if (!w) { i = 0; break; }		/* Could not convert, no LFN */
1898:.\sd/ff.c     **** 				if (_DF1S && w >= 0x100)		/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
1899:.\sd/ff.c     **** 					tp[i++] = (TCHAR)(w >> 8);
1900:.\sd/ff.c     **** #endif
1901:.\sd/ff.c     **** 				if (i >= fno->lfsize - 1) { i = 0; break; }	/* Buffer overflow, no LFN */
1902:.\sd/ff.c     **** 				tp[i++] = (TCHAR)w;
1903:.\sd/ff.c     **** 			}
1904:.\sd/ff.c     **** 		}
1905:.\sd/ff.c     **** 		tp[i] = 0;	/* Terminate the LFN str by a \0 */
1906:.\sd/ff.c     **** 	}
1907:.\sd/ff.c     **** #endif
1908:.\sd/ff.c     **** }
 1075              		.loc 1 1908 0
 1076              		@ sp needed
 1077 007a 10BD     		pop	{r4, pc}
 1078              		.cfi_endproc
 1079              	.LFE23:
 1080              		.size	get_fileinfo, .-get_fileinfo
 1081              		.section	.text.move_window,"ax",%progbits
 1082              		.align	2
 1083              		.code	16
 1084              		.thumb_func
 1085              		.type	move_window, %function
 1086              	move_window:
 1087              	.LFB9:
 723:.\sd/ff.c     **** 	DWORD wsect;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 54


 1088              		.loc 1 723 0
 1089              		.cfi_startproc
 1090              	.LVL138:
 1091 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1092              		.cfi_def_cfa_offset 20
 1093              		.cfi_offset 4, -20
 1094              		.cfi_offset 5, -16
 1095              		.cfi_offset 6, -12
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 83B0     		sub	sp, sp, #12
 1099              		.cfi_def_cfa_offset 32
 727:.\sd/ff.c     **** 	if (wsect != sector) {	/* Changed current window */
 1100              		.loc 1 727 0
 1101 0004 C66A     		ldr	r6, [r0, #44]
 1102              	.LVL139:
 728:.\sd/ff.c     **** #if !_FS_READONLY
 1103              		.loc 1 728 0
 1104 0006 8E42     		cmp	r6, r1
 1105 0008 35D0     		beq	.L109
 1106 000a 0F1C     		mov	r7, r1
 1107 000c 041C     		mov	r4, r0
 730:.\sd/ff.c     **** 			if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK)
 1108              		.loc 1 730 0
 1109 000e 0379     		ldrb	r3, [r0, #4]
 1110 0010 002B     		cmp	r3, #0
 1111 0012 23D0     		beq	.L106
 731:.\sd/ff.c     **** 				return FR_DISK_ERR;
 1112              		.loc 1 731 0
 1113 0014 3023     		mov	r3, #48
 1114 0016 9C46     		mov	ip, r3
 1115 0018 8444     		add	ip, ip, r0
 1116 001a 6346     		mov	r3, ip
 1117 001c 0193     		str	r3, [sp, #4]
 1118 001e 4078     		ldrb	r0, [r0, #1]
 1119              	.LVL140:
 1120 0020 6146     		mov	r1, ip
 1121              	.LVL141:
 1122 0022 321C     		mov	r2, r6
 1123 0024 0123     		mov	r3, #1
 1124 0026 FFF7FEFF 		bl	disk_write
 1125              	.LVL142:
 1126 002a 0028     		cmp	r0, #0
 1127 002c 25D1     		bne	.L110
 733:.\sd/ff.c     **** 			if (wsect < (fs->fatbase + fs->fsize)) {	/* In FAT area */
 1128              		.loc 1 733 0
 1129 002e 0023     		mov	r3, #0
 1130 0030 2371     		strb	r3, [r4, #4]
 734:.\sd/ff.c     **** 				BYTE nf;
 1131              		.loc 1 734 0
 1132 0032 236A     		ldr	r3, [r4, #32]
 1133 0034 E269     		ldr	r2, [r4, #28]
 1134 0036 9446     		mov	ip, r2
 1135 0038 6344     		add	r3, r3, ip
 1136 003a B342     		cmp	r3, r6
 1137 003c 0ED9     		bls	.L106
 1138              	.LBB2:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 55


 736:.\sd/ff.c     **** 					wsect += fs->fsize;
 1139              		.loc 1 736 0
 1140 003e E578     		ldrb	r5, [r4, #3]
 1141              	.LVL143:
 1142 0040 0AE0     		b	.L107
 1143              	.L108:
 737:.\sd/ff.c     **** 					disk_write(fs->drv, fs->win, wsect, 1);
 1144              		.loc 1 737 0 discriminator 3
 1145 0042 E369     		ldr	r3, [r4, #28]
 1146 0044 9C46     		mov	ip, r3
 1147 0046 6644     		add	r6, r6, ip
 1148              	.LVL144:
 738:.\sd/ff.c     **** 				}
 1149              		.loc 1 738 0 discriminator 3
 1150 0048 6078     		ldrb	r0, [r4, #1]
 1151 004a 0199     		ldr	r1, [sp, #4]
 1152 004c 321C     		mov	r2, r6
 1153 004e 0123     		mov	r3, #1
 1154 0050 FFF7FEFF 		bl	disk_write
 1155              	.LVL145:
 736:.\sd/ff.c     **** 					wsect += fs->fsize;
 1156              		.loc 1 736 0 discriminator 3
 1157 0054 013D     		sub	r5, r5, #1
 1158              	.LVL146:
 1159 0056 EDB2     		uxtb	r5, r5
 1160              	.LVL147:
 1161              	.L107:
 736:.\sd/ff.c     **** 					wsect += fs->fsize;
 1162              		.loc 1 736 0 is_stmt 0 discriminator 1
 1163 0058 012D     		cmp	r5, #1
 1164 005a F2D8     		bhi	.L108
 1165              	.LVL148:
 1166              	.L106:
 1167              	.LBE2:
 743:.\sd/ff.c     **** 			if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK)
 1168              		.loc 1 743 0 is_stmt 1
 1169 005c 002F     		cmp	r7, #0
 1170 005e 0ED0     		beq	.L111
 744:.\sd/ff.c     **** 				return FR_DISK_ERR;
 1171              		.loc 1 744 0
 1172 0060 211C     		mov	r1, r4
 1173 0062 3031     		add	r1, r1, #48
 1174 0064 6078     		ldrb	r0, [r4, #1]
 1175 0066 3A1C     		mov	r2, r7
 1176 0068 0123     		mov	r3, #1
 1177 006a FFF7FEFF 		bl	disk_read
 1178              	.LVL149:
 1179 006e 0028     		cmp	r0, #0
 1180 0070 07D1     		bne	.L112
 746:.\sd/ff.c     **** 		}
 1181              		.loc 1 746 0
 1182 0072 E762     		str	r7, [r4, #44]
 1183 0074 06E0     		b	.L105
 1184              	.LVL150:
 1185              	.L109:
 750:.\sd/ff.c     **** }
 1186              		.loc 1 750 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 56


 1187 0076 0020     		mov	r0, #0
 1188              	.LVL151:
 1189 0078 04E0     		b	.L105
 1190              	.LVL152:
 1191              	.L110:
 732:.\sd/ff.c     **** 			fs->wflag = 0;
 1192              		.loc 1 732 0
 1193 007a 0120     		mov	r0, #1
 1194 007c 02E0     		b	.L105
 1195              	.L111:
 750:.\sd/ff.c     **** }
 1196              		.loc 1 750 0
 1197 007e 0020     		mov	r0, #0
 1198 0080 00E0     		b	.L105
 1199              	.L112:
 745:.\sd/ff.c     **** 			fs->winsect = sector;
 1200              		.loc 1 745 0
 1201 0082 0120     		mov	r0, #1
 1202              	.LVL153:
 1203              	.L105:
 751:.\sd/ff.c     **** 
 1204              		.loc 1 751 0
 1205 0084 03B0     		add	sp, sp, #12
 1206              		@ sp needed
 1207              	.LVL154:
 1208 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 1209              		.cfi_endproc
 1210              	.LFE9:
 1211              		.size	move_window, .-move_window
 1212              		.section	.text.check_fs,"ax",%progbits
 1213              		.align	2
 1214              		.code	16
 1215              		.thumb_func
 1216              		.type	check_fs, %function
 1217              	check_fs:
 1218              	.LFB25:
1909:.\sd/ff.c     **** #endif /* _FS_MINIMIZE <= 1 */
1910:.\sd/ff.c     **** 
1911:.\sd/ff.c     **** 
1912:.\sd/ff.c     **** 
1913:.\sd/ff.c     **** 
1914:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1915:.\sd/ff.c     **** /* Follow a file path                                                    */
1916:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1917:.\sd/ff.c     **** 
1918:.\sd/ff.c     **** static
1919:.\sd/ff.c     **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
1920:.\sd/ff.c     **** 	DIR *dj,			/* Directory object to return last directory and found object */
1921:.\sd/ff.c     **** 	const TCHAR *path	/* Full-path string to find a file or directory */
1922:.\sd/ff.c     **** )
1923:.\sd/ff.c     **** {
1924:.\sd/ff.c     **** 	FRESULT res;
1925:.\sd/ff.c     **** 	BYTE *dir, ns;
1926:.\sd/ff.c     **** 
1927:.\sd/ff.c     **** 
1928:.\sd/ff.c     **** #if _FS_RPATH
1929:.\sd/ff.c     **** 	if (*path == '/' || *path == '\\') { /* There is a heading separator */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 57


1930:.\sd/ff.c     **** 		path++;	dj->sclust = 0;		/* Strip it and start from the root dir */
1931:.\sd/ff.c     **** 	} else {							/* No heading separator */
1932:.\sd/ff.c     **** 		dj->sclust = dj->fs->cdir;	/* Start from the current dir */
1933:.\sd/ff.c     **** 	}
1934:.\sd/ff.c     **** #else
1935:.\sd/ff.c     **** 	if (*path == '/' || *path == '\\')	/* Strip heading separator if exist */
1936:.\sd/ff.c     **** 		path++;
1937:.\sd/ff.c     **** 	dj->sclust = 0;						/* Start from the root dir */
1938:.\sd/ff.c     **** #endif
1939:.\sd/ff.c     **** 
1940:.\sd/ff.c     **** 	if ((UINT)*path < ' ') {			/* Nul path means the start directory itself */
1941:.\sd/ff.c     **** 		res = dir_sdi(dj, 0);
1942:.\sd/ff.c     **** 		dj->dir = 0;
1943:.\sd/ff.c     **** 
1944:.\sd/ff.c     **** 	} else {							/* Follow path */
1945:.\sd/ff.c     **** 		for (;;) {
1946:.\sd/ff.c     **** 			res = create_name(dj, &path);	/* Get a segment */
1947:.\sd/ff.c     **** 			if (res != FR_OK) break;
1948:.\sd/ff.c     **** 			res = dir_find(dj);				/* Find it */
1949:.\sd/ff.c     **** 			ns = *(dj->fn+NS);
1950:.\sd/ff.c     **** 			if (res != FR_OK) {				/* Failed to find the object */
1951:.\sd/ff.c     **** 				if (res != FR_NO_FILE) break;	/* Abort if any hard error occured */
1952:.\sd/ff.c     **** 				/* Object not found */
1953:.\sd/ff.c     **** 				if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exit */
1954:.\sd/ff.c     **** 					dj->sclust = 0; dj->dir = 0;	/* It is the root dir */
1955:.\sd/ff.c     **** 					res = FR_OK;
1956:.\sd/ff.c     **** 					if (!(ns & NS_LAST)) continue;
1957:.\sd/ff.c     **** 				} else {							/* Could not find the object */
1958:.\sd/ff.c     **** 					if (!(ns & NS_LAST)) res = FR_NO_PATH;
1959:.\sd/ff.c     **** 				}
1960:.\sd/ff.c     **** 				break;
1961:.\sd/ff.c     **** 			}
1962:.\sd/ff.c     **** 			if (ns & NS_LAST) break;			/* Last segment match. Function completed. */
1963:.\sd/ff.c     **** 			dir = dj->dir;						/* There is next segment. Follow the sub directory */
1964:.\sd/ff.c     **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* Cannot follow because it is a file */
1965:.\sd/ff.c     **** 				res = FR_NO_PATH; break;
1966:.\sd/ff.c     **** 			}
1967:.\sd/ff.c     **** 			dj->sclust = LD_CLUST(dir);
1968:.\sd/ff.c     **** 		}
1969:.\sd/ff.c     **** 	}
1970:.\sd/ff.c     **** 
1971:.\sd/ff.c     **** 	return res;
1972:.\sd/ff.c     **** }
1973:.\sd/ff.c     **** 
1974:.\sd/ff.c     **** 
1975:.\sd/ff.c     **** 
1976:.\sd/ff.c     **** 
1977:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1978:.\sd/ff.c     **** /* Load a sector and check if it is an FAT Volume Boot Record            */
1979:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
1980:.\sd/ff.c     **** 
1981:.\sd/ff.c     **** static
1982:.\sd/ff.c     **** BYTE check_fs (	/* 0:FAT-VBR, 1:Valid BR but not FAT, 2:Not a BR, 3:Disk error */
1983:.\sd/ff.c     **** 	FATFS *fs,	/* File system object */
1984:.\sd/ff.c     **** 	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
1985:.\sd/ff.c     **** )
1986:.\sd/ff.c     **** {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 58


 1219              		.loc 1 1986 0
 1220              		.cfi_startproc
 1221              	.LVL155:
 1222 0000 10B5     		push	{r4, lr}
 1223              		.cfi_def_cfa_offset 8
 1224              		.cfi_offset 4, -8
 1225              		.cfi_offset 14, -4
 1226 0002 041C     		mov	r4, r0
 1227 0004 0A1C     		mov	r2, r1
1987:.\sd/ff.c     **** 	if (disk_read(fs->drv, fs->win, sect, 1) != RES_OK)	/* Load boot record */
 1228              		.loc 1 1987 0
 1229 0006 011C     		mov	r1, r0
 1230              	.LVL156:
 1231 0008 3031     		add	r1, r1, #48
 1232 000a 4078     		ldrb	r0, [r0, #1]
 1233              	.LVL157:
 1234 000c 0123     		mov	r3, #1
 1235 000e FFF7FEFF 		bl	disk_read
 1236              	.LVL158:
 1237 0012 0028     		cmp	r0, #0
 1238 0014 30D1     		bne	.L115
1988:.\sd/ff.c     **** 		return 3;
1989:.\sd/ff.c     **** 	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)		/* Check record signature (always placed at offset 510 
 1239              		.loc 1 1989 0
 1240 0016 1C4B     		ldr	r3, .L119
 1241 0018 E35C     		ldrb	r3, [r4, r3]
 1242 001a 1B02     		lsl	r3, r3, #8
 1243 001c 1B4A     		ldr	r2, .L119+4
 1244 001e A25C     		ldrb	r2, [r4, r2]
 1245 0020 1343     		orr	r3, r2
 1246 0022 1BB2     		sxth	r3, r3
 1247 0024 1A4A     		ldr	r2, .L119+8
 1248 0026 9342     		cmp	r3, r2
 1249 0028 28D1     		bne	.L116
1990:.\sd/ff.c     **** 		return 2;
1991:.\sd/ff.c     **** 
1992:.\sd/ff.c     **** 	if ((LD_DWORD(&fs->win[BS_FilSysType]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 1250              		.loc 1 1992 0
 1251 002a 6923     		mov	r3, #105
 1252 002c E35C     		ldrb	r3, [r4, r3]
 1253 002e 1906     		lsl	r1, r3, #24
 1254 0030 6823     		mov	r3, #104
 1255 0032 E25C     		ldrb	r2, [r4, r3]
 1256 0034 1304     		lsl	r3, r2, #16
 1257 0036 0B43     		orr	r3, r1
 1258 0038 6722     		mov	r2, #103
 1259 003a A25C     		ldrb	r2, [r4, r2]
 1260 003c 1202     		lsl	r2, r2, #8
 1261 003e 1343     		orr	r3, r2
 1262 0040 6622     		mov	r2, #102
 1263 0042 A25C     		ldrb	r2, [r4, r2]
 1264 0044 1343     		orr	r3, r2
 1265 0046 1B02     		lsl	r3, r3, #8
 1266 0048 1B0A     		lsr	r3, r3, #8
 1267 004a 124A     		ldr	r2, .L119+12
 1268 004c 9342     		cmp	r3, r2
 1269 004e 17D0     		beq	.L117
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 59


1993:.\sd/ff.c     **** 		return 0;
1994:.\sd/ff.c     **** 	if ((LD_DWORD(&fs->win[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)
 1270              		.loc 1 1994 0
 1271 0050 8523     		mov	r3, #133
 1272 0052 E35C     		ldrb	r3, [r4, r3]
 1273 0054 1906     		lsl	r1, r3, #24
 1274 0056 8423     		mov	r3, #132
 1275 0058 E25C     		ldrb	r2, [r4, r3]
 1276 005a 1304     		lsl	r3, r2, #16
 1277 005c 0B43     		orr	r3, r1
 1278 005e 8322     		mov	r2, #131
 1279 0060 A25C     		ldrb	r2, [r4, r2]
 1280 0062 1202     		lsl	r2, r2, #8
 1281 0064 1343     		orr	r3, r2
 1282 0066 8222     		mov	r2, #130
 1283 0068 A25C     		ldrb	r2, [r4, r2]
 1284 006a 1343     		orr	r3, r2
 1285 006c 1B02     		lsl	r3, r3, #8
 1286 006e 1B0A     		lsr	r3, r3, #8
 1287 0070 084A     		ldr	r2, .L119+12
 1288 0072 9342     		cmp	r3, r2
 1289 0074 06D1     		bne	.L118
 1290 0076 06E0     		b	.L114
 1291              	.L115:
1988:.\sd/ff.c     **** 	if (LD_WORD(&fs->win[BS_55AA]) != 0xAA55)		/* Check record signature (always placed at offset 510 
 1292              		.loc 1 1988 0
 1293 0078 0320     		mov	r0, #3
 1294 007a 04E0     		b	.L114
 1295              	.L116:
1990:.\sd/ff.c     **** 		return 2;
 1296              		.loc 1 1990 0
 1297 007c 0220     		mov	r0, #2
 1298 007e 02E0     		b	.L114
 1299              	.L117:
1993:.\sd/ff.c     **** 		return 0;
 1300              		.loc 1 1993 0
 1301 0080 0020     		mov	r0, #0
 1302 0082 00E0     		b	.L114
 1303              	.L118:
1995:.\sd/ff.c     **** 		return 0;
1996:.\sd/ff.c     **** 
1997:.\sd/ff.c     **** 	return 1;
 1304              		.loc 1 1997 0
 1305 0084 0120     		mov	r0, #1
 1306              	.L114:
1998:.\sd/ff.c     **** }
 1307              		.loc 1 1998 0
 1308              		@ sp needed
 1309              	.LVL159:
 1310 0086 10BD     		pop	{r4, pc}
 1311              	.L120:
 1312              		.align	2
 1313              	.L119:
 1314 0088 2F020000 		.word	559
 1315 008c 2E020000 		.word	558
 1316 0090 55AAFFFF 		.word	-21931
 1317 0094 46415400 		.word	5521734
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 60


 1318              		.cfi_endproc
 1319              	.LFE25:
 1320              		.size	check_fs, .-check_fs
 1321              		.section	.text.validate,"ax",%progbits
 1322              		.align	2
 1323              		.code	16
 1324              		.thumb_func
 1325              		.type	validate, %function
 1326              	validate:
 1327              	.LFB27:
1999:.\sd/ff.c     **** 
2000:.\sd/ff.c     **** 
2001:.\sd/ff.c     **** 
2002:.\sd/ff.c     **** 
2003:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2004:.\sd/ff.c     **** /* Check if the file system object is valid or not                       */
2005:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2006:.\sd/ff.c     **** 
2007:.\sd/ff.c     **** static
2008:.\sd/ff.c     **** FRESULT chk_mounted (	/* FR_OK(0): successful, !=0: any error occurred */
2009:.\sd/ff.c     **** 	const TCHAR **path,	/* Pointer to pointer to the path name (drive number) */
2010:.\sd/ff.c     **** 	FATFS **rfs,		/* Pointer to pointer to the found file system object */
2011:.\sd/ff.c     **** 	BYTE chk_wp			/* !=0: Check media write protection for write access */
2012:.\sd/ff.c     **** )
2013:.\sd/ff.c     **** {
2014:.\sd/ff.c     **** 	BYTE fmt, b, pi, *tbl;
2015:.\sd/ff.c     **** 	UINT vol;
2016:.\sd/ff.c     **** 	DSTATUS stat;
2017:.\sd/ff.c     **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat;
2018:.\sd/ff.c     **** 	WORD nrsv;
2019:.\sd/ff.c     **** 	const TCHAR *p = *path;
2020:.\sd/ff.c     **** 	FATFS *fs;
2021:.\sd/ff.c     **** 
2022:.\sd/ff.c     **** 	/* Get logical drive number from the path name */
2023:.\sd/ff.c     **** 	vol = p[0] - '0';					/* Is there a drive number? */
2024:.\sd/ff.c     **** 	if (vol <= 9 && p[1] == ':') {		/* Found a drive number, get and strip it */
2025:.\sd/ff.c     **** 		p += 2; *path = p;				/* Return pointer to the path name */
2026:.\sd/ff.c     **** 	} else {							/* No drive number is given */
2027:.\sd/ff.c     **** #if _FS_RPATH
2028:.\sd/ff.c     **** 		vol = CurrVol;					/* Use current drive */
2029:.\sd/ff.c     **** #else
2030:.\sd/ff.c     **** 		vol = 0;						/* Use drive 0 */
2031:.\sd/ff.c     **** #endif
2032:.\sd/ff.c     **** 	}
2033:.\sd/ff.c     **** 
2034:.\sd/ff.c     **** 	/* Check if the file system object is valid or not */
2035:.\sd/ff.c     **** 	if (vol >= _VOLUMES) 				/* Is the drive number valid? */
2036:.\sd/ff.c     **** 		return FR_INVALID_DRIVE;
2037:.\sd/ff.c     **** 	*rfs = fs = FatFs[vol];				/* Return pointer to the corresponding file system object */
2038:.\sd/ff.c     **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
2039:.\sd/ff.c     **** 
2040:.\sd/ff.c     **** 	ENTER_FF(fs);						/* Lock file system */
2041:.\sd/ff.c     **** 
2042:.\sd/ff.c     **** 	if (fs->fs_type) {					/* If the logical drive has been mounted */
2043:.\sd/ff.c     **** 		stat = disk_status(fs->drv);
2044:.\sd/ff.c     **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized (has not been changed)
2045:.\sd/ff.c     **** 			if (!_FS_READONLY && chk_wp && (stat & STA_PROTECT))	/* Check write protection if needed */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 61


2046:.\sd/ff.c     **** 				return FR_WRITE_PROTECTED;
2047:.\sd/ff.c     **** 			return FR_OK;				/* The file system object is valid */
2048:.\sd/ff.c     **** 		}
2049:.\sd/ff.c     **** 	}
2050:.\sd/ff.c     **** 
2051:.\sd/ff.c     **** 	/* The file system object is not valid. */
2052:.\sd/ff.c     **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
2053:.\sd/ff.c     **** 
2054:.\sd/ff.c     **** 	fs->fs_type = 0;					/* Clear the file system object */
2055:.\sd/ff.c     **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
2056:.\sd/ff.c     **** 	stat = disk_initialize(fs->drv);	/* Initialize low level disk I/O layer */
2057:.\sd/ff.c     **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
2058:.\sd/ff.c     **** 		return FR_NOT_READY;			/* Failed to initialize due to no media or hard error */
2059:.\sd/ff.c     **** 	if (!_FS_READONLY && chk_wp && (stat & STA_PROTECT))	/* Check disk write protection if needed */
2060:.\sd/ff.c     **** 		return FR_WRITE_PROTECTED;
2061:.\sd/ff.c     **** #if _MAX_SS != 512						/* Get disk sector size (variable sector size cfg only) */
2062:.\sd/ff.c     **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &fs->ssize) != RES_OK)
2063:.\sd/ff.c     **** 		return FR_DISK_ERR;
2064:.\sd/ff.c     **** #endif
2065:.\sd/ff.c     **** 	/* Search FAT partition on the drive. Supports only generic partitionings, FDISK and SFD. */
2066:.\sd/ff.c     **** 	fmt = check_fs(fs, bsect = 0);		/* Load sector 0 and check if it is an FAT-VBR (in SFD) */
2067:.\sd/ff.c     **** 	if (LD2PT(vol) && !fmt) fmt = 1;	/* Force non-SFD if the volume is forced partition */
2068:.\sd/ff.c     **** 	if (fmt == 1) {						/* Not an FAT-VBR, the physical drive can be partitioned */
2069:.\sd/ff.c     **** 		/* Check the partition listed in the partition table */
2070:.\sd/ff.c     **** 		pi = LD2PT(vol);
2071:.\sd/ff.c     **** 		if (pi) pi--;
2072:.\sd/ff.c     **** 		tbl = &fs->win[MBR_Table + pi * SZ_PTE];/* Partition table */
2073:.\sd/ff.c     **** 		if (tbl[4]) {						/* Is the partition existing? */
2074:.\sd/ff.c     **** 			bsect = LD_DWORD(&tbl[8]);		/* Partition offset in LBA */
2075:.\sd/ff.c     **** 			fmt = check_fs(fs, bsect);		/* Check the partition */
2076:.\sd/ff.c     **** 		}
2077:.\sd/ff.c     **** 	}
2078:.\sd/ff.c     **** 	if (fmt == 3) return FR_DISK_ERR;
2079:.\sd/ff.c     **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
2080:.\sd/ff.c     **** 
2081:.\sd/ff.c     **** 	/* An FAT volume is found. Following code initializes the file system object */
2082:.\sd/ff.c     **** 
2083:.\sd/ff.c     **** 	if (LD_WORD(fs->win+BPB_BytsPerSec) != SS(fs))		/* (BPB_BytsPerSec must be equal to the physical s
2084:.\sd/ff.c     **** 		return FR_NO_FILESYSTEM;
2085:.\sd/ff.c     **** 
2086:.\sd/ff.c     **** 	fasize = LD_WORD(fs->win+BPB_FATSz16);				/* Number of sectors per FAT */
2087:.\sd/ff.c     **** 	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
2088:.\sd/ff.c     **** 	fs->fsize = fasize;
2089:.\sd/ff.c     **** 
2090:.\sd/ff.c     **** 	fs->n_fats = b = fs->win[BPB_NumFATs];				/* Number of FAT copies */
2091:.\sd/ff.c     **** 	if (b != 1 && b != 2) return FR_NO_FILESYSTEM;		/* (Must be 1 or 2) */
2092:.\sd/ff.c     **** 	fasize *= b;										/* Number of sectors for FAT area */
2093:.\sd/ff.c     **** 
2094:.\sd/ff.c     **** 	fs->csize = b = fs->win[BPB_SecPerClus];			/* Number of sectors per cluster */
2095:.\sd/ff.c     **** 	if (!b || (b & (b - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
2096:.\sd/ff.c     **** 
2097:.\sd/ff.c     **** 	fs->n_rootdir = LD_WORD(fs->win+BPB_RootEntCnt);	/* Number of root directory entries */
2098:.\sd/ff.c     **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIR)) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be sector 
2099:.\sd/ff.c     **** 
2100:.\sd/ff.c     **** 	tsect = LD_WORD(fs->win+BPB_TotSec16);				/* Number of sectors on the volume */
2101:.\sd/ff.c     **** 	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
2102:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 62


2103:.\sd/ff.c     **** 	nrsv = LD_WORD(fs->win+BPB_RsvdSecCnt);				/* Number of reserved sectors */
2104:.\sd/ff.c     **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (BPB_RsvdSecCnt must not be 0) */
2105:.\sd/ff.c     **** 
2106:.\sd/ff.c     **** 	/* Determine the FAT sub type */
2107:.\sd/ff.c     **** 	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIR);	/* RSV+FAT+DIR */
2108:.\sd/ff.c     **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
2109:.\sd/ff.c     **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
2110:.\sd/ff.c     **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
2111:.\sd/ff.c     **** 	fmt = FS_FAT12;
2112:.\sd/ff.c     **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
2113:.\sd/ff.c     **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
2114:.\sd/ff.c     **** 
2115:.\sd/ff.c     **** 	/* Boundaries and Limits */
2116:.\sd/ff.c     **** 	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
2117:.\sd/ff.c     **** 	fs->database = bsect + sysect;						/* Data start sector */
2118:.\sd/ff.c     **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
2119:.\sd/ff.c     **** 	if (fmt == FS_FAT32) {
2120:.\sd/ff.c     **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
2121:.\sd/ff.c     **** 		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
2122:.\sd/ff.c     **** 		szbfat = fs->n_fatent * 4;						/* (Required FAT size) */
2123:.\sd/ff.c     **** 	} else {
2124:.\sd/ff.c     **** 		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
2125:.\sd/ff.c     **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
2126:.\sd/ff.c     **** 		szbfat = (fmt == FS_FAT16) ?					/* (Required FAT size) */
2127:.\sd/ff.c     **** 			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
2128:.\sd/ff.c     **** 	}
2129:.\sd/ff.c     **** 	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than required) */
2130:.\sd/ff.c     **** 		return FR_NO_FILESYSTEM;
2131:.\sd/ff.c     **** 
2132:.\sd/ff.c     **** #if !_FS_READONLY
2133:.\sd/ff.c     **** 	/* Initialize cluster allocation information */
2134:.\sd/ff.c     **** 	fs->free_clust = 0xFFFFFFFF;
2135:.\sd/ff.c     **** 	fs->last_clust = 0;
2136:.\sd/ff.c     **** 
2137:.\sd/ff.c     **** 	/* Get fsinfo if available */
2138:.\sd/ff.c     **** 	if (fmt == FS_FAT32) {
2139:.\sd/ff.c     **** 	 	fs->fsi_flag = 0;
2140:.\sd/ff.c     **** 		fs->fsi_sector = bsect + LD_WORD(fs->win+BPB_FSInfo);
2141:.\sd/ff.c     **** 		if (disk_read(fs->drv, fs->win, fs->fsi_sector, 1) == RES_OK &&
2142:.\sd/ff.c     **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
2143:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
2144:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272) {
2145:.\sd/ff.c     **** 				fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
2146:.\sd/ff.c     **** 				fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
2147:.\sd/ff.c     **** 		}
2148:.\sd/ff.c     **** 	}
2149:.\sd/ff.c     **** #endif
2150:.\sd/ff.c     **** 	fs->fs_type = fmt;		/* FAT sub-type */
2151:.\sd/ff.c     **** 	fs->id = ++Fsid;		/* File system mount ID */
2152:.\sd/ff.c     **** 	fs->winsect = 0;		/* Invalidate sector cache */
2153:.\sd/ff.c     **** 	fs->wflag = 0;
2154:.\sd/ff.c     **** #if _FS_RPATH
2155:.\sd/ff.c     **** 	fs->cdir = 0;			/* Current directory (root dir) */
2156:.\sd/ff.c     **** #endif
2157:.\sd/ff.c     **** #if _FS_SHARE				/* Clear file lock semaphores */
2158:.\sd/ff.c     **** 	clear_lock(fs);
2159:.\sd/ff.c     **** #endif
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 63


2160:.\sd/ff.c     **** 
2161:.\sd/ff.c     **** 	return FR_OK;
2162:.\sd/ff.c     **** }
2163:.\sd/ff.c     **** 
2164:.\sd/ff.c     **** 
2165:.\sd/ff.c     **** 
2166:.\sd/ff.c     **** 
2167:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2168:.\sd/ff.c     **** /* Check if the file/dir object is valid or not                          */
2169:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2170:.\sd/ff.c     **** 
2171:.\sd/ff.c     **** static
2172:.\sd/ff.c     **** FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
2173:.\sd/ff.c     **** 	FATFS *fs,		/* Pointer to the file system object */
2174:.\sd/ff.c     **** 	WORD id			/* Member id of the target object to be checked */
2175:.\sd/ff.c     **** )
2176:.\sd/ff.c     **** {
 1328              		.loc 1 2176 0
 1329              		.cfi_startproc
 1330              	.LVL160:
 1331 0000 08B5     		push	{r3, lr}
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 3, -8
 1334              		.cfi_offset 14, -4
2177:.\sd/ff.c     **** 	if (!fs || !fs->fs_type || fs->id != id)
 1335              		.loc 1 2177 0
 1336 0002 0028     		cmp	r0, #0
 1337 0004 0CD0     		beq	.L123
 1338              		.loc 1 2177 0 is_stmt 0 discriminator 1
 1339 0006 0378     		ldrb	r3, [r0]
 1340 0008 002B     		cmp	r3, #0
 1341 000a 0BD0     		beq	.L124
 1342              		.loc 1 2177 0 discriminator 2
 1343 000c C388     		ldrh	r3, [r0, #6]
 1344 000e 8B42     		cmp	r3, r1
 1345 0010 0AD1     		bne	.L125
2178:.\sd/ff.c     **** 		return FR_INVALID_OBJECT;
2179:.\sd/ff.c     **** 
2180:.\sd/ff.c     **** 	ENTER_FF(fs);		/* Lock file system */
2181:.\sd/ff.c     **** 
2182:.\sd/ff.c     **** 	if (disk_status(fs->drv) & STA_NOINIT)
 1346              		.loc 1 2182 0 is_stmt 1
 1347 0012 4078     		ldrb	r0, [r0, #1]
 1348              	.LVL161:
 1349 0014 FFF7FEFF 		bl	disk_status
 1350              	.LVL162:
 1351 0018 C307     		lsl	r3, r0, #31
 1352 001a 07D5     		bpl	.L126
2183:.\sd/ff.c     **** 		return FR_NOT_READY;
 1353              		.loc 1 2183 0
 1354 001c 0320     		mov	r0, #3
 1355 001e 06E0     		b	.L122
 1356              	.LVL163:
 1357              	.L123:
2178:.\sd/ff.c     **** 		return FR_INVALID_OBJECT;
 1358              		.loc 1 2178 0
 1359 0020 0920     		mov	r0, #9
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 64


 1360              	.LVL164:
 1361 0022 04E0     		b	.L122
 1362              	.LVL165:
 1363              	.L124:
 1364 0024 0920     		mov	r0, #9
 1365              	.LVL166:
 1366 0026 02E0     		b	.L122
 1367              	.LVL167:
 1368              	.L125:
 1369 0028 0920     		mov	r0, #9
 1370              	.LVL168:
 1371 002a 00E0     		b	.L122
 1372              	.LVL169:
 1373              	.L126:
2184:.\sd/ff.c     **** 
2185:.\sd/ff.c     **** 	return FR_OK;
 1374              		.loc 1 2185 0
 1375 002c 0020     		mov	r0, #0
 1376              	.L122:
2186:.\sd/ff.c     **** }
 1377              		.loc 1 2186 0
 1378              		@ sp needed
 1379 002e 08BD     		pop	{r3, pc}
 1380              		.cfi_endproc
 1381              	.LFE27:
 1382              		.size	validate, .-validate
 1383              		.global	__aeabi_uidiv
 1384              		.section	.text.chk_mounted,"ax",%progbits
 1385              		.align	2
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	chk_mounted, %function
 1389              	chk_mounted:
 1390              	.LFB26:
2013:.\sd/ff.c     **** 	BYTE fmt, b, pi, *tbl;
 1391              		.loc 1 2013 0
 1392              		.cfi_startproc
 1393              	.LVL170:
 1394 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1395              		.cfi_def_cfa_offset 24
 1396              		.cfi_offset 3, -24
 1397              		.cfi_offset 4, -20
 1398              		.cfi_offset 5, -16
 1399              		.cfi_offset 6, -12
 1400              		.cfi_offset 7, -8
 1401              		.cfi_offset 14, -4
 1402 0002 5F46     		mov	r7, fp
 1403 0004 5646     		mov	r6, r10
 1404 0006 4D46     		mov	r5, r9
 1405 0008 4446     		mov	r4, r8
 1406 000a F0B4     		push	{r4, r5, r6, r7}
 1407              		.cfi_def_cfa_offset 40
 1408              		.cfi_offset 8, -40
 1409              		.cfi_offset 9, -36
 1410              		.cfi_offset 10, -32
 1411              		.cfi_offset 11, -28
2019:.\sd/ff.c     **** 	FATFS *fs;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 65


 1412              		.loc 1 2019 0
 1413 000c 0368     		ldr	r3, [r0]
 1414              	.LVL171:
2023:.\sd/ff.c     **** 	if (vol <= 9 && p[1] == ':') {		/* Found a drive number, get and strip it */
 1415              		.loc 1 2023 0
 1416 000e 1C78     		ldrb	r4, [r3]
 1417 0010 303C     		sub	r4, r4, #48
 1418              	.LVL172:
2024:.\sd/ff.c     **** 		p += 2; *path = p;				/* Return pointer to the path name */
 1419              		.loc 1 2024 0
 1420 0012 092C     		cmp	r4, #9
 1421 0014 05D8     		bhi	.L142
2024:.\sd/ff.c     **** 		p += 2; *path = p;				/* Return pointer to the path name */
 1422              		.loc 1 2024 0 is_stmt 0 discriminator 1
 1423 0016 5D78     		ldrb	r5, [r3, #1]
 1424 0018 3A2D     		cmp	r5, #58
 1425 001a 04D1     		bne	.L143
2025:.\sd/ff.c     **** 	} else {							/* No drive number is given */
 1426              		.loc 1 2025 0 is_stmt 1
 1427 001c 0233     		add	r3, r3, #2
 1428              	.LVL173:
 1429 001e 0360     		str	r3, [r0]
 1430 0020 02E0     		b	.L128
 1431              	.L142:
2030:.\sd/ff.c     **** #endif
 1432              		.loc 1 2030 0
 1433 0022 0024     		mov	r4, #0
 1434              	.LVL174:
 1435 0024 00E0     		b	.L128
 1436              	.LVL175:
 1437              	.L143:
 1438 0026 0024     		mov	r4, #0
 1439              	.LVL176:
 1440              	.L128:
2035:.\sd/ff.c     **** 		return FR_INVALID_DRIVE;
 1441              		.loc 1 2035 0
 1442 0028 002C     		cmp	r4, #0
 1443 002a 00D0     		beq	.LCB1649
 1444 002c 7AE1     		b	.L144	@long jump
 1445              	.LCB1649:
2037:.\sd/ff.c     **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1446              		.loc 1 2037 0
 1447 002e A300     		lsl	r3, r4, #2
 1448              	.LVL177:
 1449 0030 CE48     		ldr	r0, .L167
 1450              	.LVL178:
 1451 0032 C318     		add	r3, r0, r3
 1452 0034 5D6A     		ldr	r5, [r3, #36]
 1453              	.LVL179:
 1454 0036 0D60     		str	r5, [r1]
 1455              	.LVL180:
2038:.\sd/ff.c     **** 
 1456              		.loc 1 2038 0
 1457 0038 002D     		cmp	r5, #0
 1458 003a 00D1     		bne	.LCB1661
 1459 003c 74E1     		b	.L145	@long jump
 1460              	.LCB1661:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 66


 1461 003e 161C     		mov	r6, r2
2042:.\sd/ff.c     **** 		stat = disk_status(fs->drv);
 1462              		.loc 1 2042 0
 1463 0040 2B78     		ldrb	r3, [r5]
 1464 0042 002B     		cmp	r3, #0
 1465 0044 0CD0     		beq	.L130
2043:.\sd/ff.c     **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized (has not been changed)
 1466              		.loc 1 2043 0
 1467 0046 6878     		ldrb	r0, [r5, #1]
 1468 0048 FFF7FEFF 		bl	disk_status
 1469              	.LVL181:
2044:.\sd/ff.c     **** 			if (!_FS_READONLY && chk_wp && (stat & STA_PROTECT))	/* Check write protection if needed */
 1470              		.loc 1 2044 0
 1471 004c C307     		lsl	r3, r0, #31
 1472 004e 07D4     		bmi	.L130
2045:.\sd/ff.c     **** 				return FR_WRITE_PROTECTED;
 1473              		.loc 1 2045 0
 1474 0050 002E     		cmp	r6, #0
 1475 0052 00D1     		bne	.LCB1678
 1476 0054 6AE1     		b	.L146	@long jump
 1477              	.LCB1678:
2045:.\sd/ff.c     **** 				return FR_WRITE_PROTECTED;
 1478              		.loc 1 2045 0 is_stmt 0 discriminator 1
 1479 0056 4307     		lsl	r3, r0, #29
 1480 0058 00D5     		bpl	.LCB1683
 1481 005a 69E1     		b	.L147	@long jump
 1482              	.LCB1683:
2047:.\sd/ff.c     **** 		}
 1483              		.loc 1 2047 0 is_stmt 1
 1484 005c 0020     		mov	r0, #0
 1485              	.LVL182:
 1486 005e AAE1     		b	.L129
 1487              	.L130:
2054:.\sd/ff.c     **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1488              		.loc 1 2054 0
 1489 0060 0023     		mov	r3, #0
 1490 0062 2B70     		strb	r3, [r5]
2055:.\sd/ff.c     **** 	stat = disk_initialize(fs->drv);	/* Initialize low level disk I/O layer */
 1491              		.loc 1 2055 0
 1492 0064 E0B2     		uxtb	r0, r4
 1493 0066 6870     		strb	r0, [r5, #1]
2056:.\sd/ff.c     **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 1494              		.loc 1 2056 0
 1495 0068 FFF7FEFF 		bl	disk_initialize
 1496              	.LVL183:
2057:.\sd/ff.c     **** 		return FR_NOT_READY;			/* Failed to initialize due to no media or hard error */
 1497              		.loc 1 2057 0
 1498 006c C307     		lsl	r3, r0, #31
 1499 006e 00D5     		bpl	.LCB1702
 1500 0070 60E1     		b	.L148	@long jump
 1501              	.LCB1702:
2059:.\sd/ff.c     **** 		return FR_WRITE_PROTECTED;
 1502              		.loc 1 2059 0
 1503 0072 002E     		cmp	r6, #0
 1504 0074 02D0     		beq	.L131
2059:.\sd/ff.c     **** 		return FR_WRITE_PROTECTED;
 1505              		.loc 1 2059 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 67


 1506 0076 4307     		lsl	r3, r0, #29
 1507 0078 00D5     		bpl	.LCB1709
 1508 007a 5DE1     		b	.L149	@long jump
 1509              	.LCB1709:
 1510              	.L131:
 1511              	.LVL184:
2066:.\sd/ff.c     **** 	if (LD2PT(vol) && !fmt) fmt = 1;	/* Force non-SFD if the volume is forced partition */
 1512              		.loc 1 2066 0 is_stmt 1
 1513 007c 281C     		mov	r0, r5
 1514              	.LVL185:
 1515 007e 0021     		mov	r1, #0
 1516 0080 FFF7FEFF 		bl	check_fs
 1517              	.LVL186:
2068:.\sd/ff.c     **** 		/* Check the partition listed in the partition table */
 1518              		.loc 1 2068 0
 1519 0084 0128     		cmp	r0, #1
 1520 0086 1AD1     		bne	.L150
 1521              	.LVL187:
2073:.\sd/ff.c     **** 			bsect = LD_DWORD(&tbl[8]);		/* Partition offset in LBA */
 1522              		.loc 1 2073 0
 1523 0088 F923     		mov	r3, #249
 1524 008a 5B00     		lsl	r3, r3, #1
 1525 008c EB5C     		ldrb	r3, [r5, r3]
 1526 008e 002B     		cmp	r3, #0
 1527 0090 17D0     		beq	.L151
2074:.\sd/ff.c     **** 			fmt = check_fs(fs, bsect);		/* Check the partition */
 1528              		.loc 1 2074 0
 1529 0092 FA23     		mov	r3, #250
 1530 0094 FF33     		add	r3, r3, #255
 1531 0096 EC5C     		ldrb	r4, [r5, r3]
 1532              	.LVL188:
 1533 0098 2406     		lsl	r4, r4, #24
 1534 009a 013B     		sub	r3, r3, #1
 1535 009c EB5C     		ldrb	r3, [r5, r3]
 1536 009e 1B04     		lsl	r3, r3, #16
 1537 00a0 1C43     		orr	r4, r3
 1538 00a2 F823     		mov	r3, #248
 1539 00a4 FF33     		add	r3, r3, #255
 1540 00a6 EB5C     		ldrb	r3, [r5, r3]
 1541 00a8 1B02     		lsl	r3, r3, #8
 1542 00aa 2343     		orr	r3, r4
 1543 00ac FB22     		mov	r2, #251
 1544 00ae 5200     		lsl	r2, r2, #1
 1545 00b0 AC5C     		ldrb	r4, [r5, r2]
 1546 00b2 1C43     		orr	r4, r3
 1547              	.LVL189:
2075:.\sd/ff.c     **** 		}
 1548              		.loc 1 2075 0
 1549 00b4 281C     		mov	r0, r5
 1550              	.LVL190:
 1551 00b6 211C     		mov	r1, r4
 1552 00b8 FFF7FEFF 		bl	check_fs
 1553              	.LVL191:
 1554 00bc 02E0     		b	.L132
 1555              	.LVL192:
 1556              	.L150:
2066:.\sd/ff.c     **** 	if (LD2PT(vol) && !fmt) fmt = 1;	/* Force non-SFD if the volume is forced partition */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 68


 1557              		.loc 1 2066 0
 1558 00be 0024     		mov	r4, #0
 1559              	.LVL193:
 1560 00c0 00E0     		b	.L132
 1561              	.LVL194:
 1562              	.L151:
 1563 00c2 0024     		mov	r4, #0
 1564              	.LVL195:
 1565              	.L132:
2078:.\sd/ff.c     **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 1566              		.loc 1 2078 0
 1567 00c4 0328     		cmp	r0, #3
 1568 00c6 00D1     		bne	.LCB1781
 1569 00c8 38E1     		b	.L152	@long jump
 1570              	.LCB1781:
2079:.\sd/ff.c     **** 
 1571              		.loc 1 2079 0
 1572 00ca 0028     		cmp	r0, #0
 1573 00cc 00D0     		beq	.LCB1783
 1574 00ce 37E1     		b	.L153	@long jump
 1575              	.LCB1783:
2083:.\sd/ff.c     **** 		return FR_NO_FILESYSTEM;
 1576              		.loc 1 2083 0
 1577 00d0 3C23     		mov	r3, #60
 1578 00d2 EB5C     		ldrb	r3, [r5, r3]
 1579 00d4 1B02     		lsl	r3, r3, #8
 1580 00d6 3B22     		mov	r2, #59
 1581 00d8 AA5C     		ldrb	r2, [r5, r2]
 1582 00da 1343     		orr	r3, r2
 1583 00dc 1BB2     		sxth	r3, r3
 1584 00de 8022     		mov	r2, #128
 1585 00e0 9200     		lsl	r2, r2, #2
 1586 00e2 9342     		cmp	r3, r2
 1587 00e4 00D0     		beq	.LCB1795
 1588 00e6 2DE1     		b	.L154	@long jump
 1589              	.LCB1795:
2086:.\sd/ff.c     **** 	if (!fasize) fasize = LD_DWORD(fs->win+BPB_FATSz32);
 1590              		.loc 1 2086 0
 1591 00e8 4723     		mov	r3, #71
 1592 00ea EF5C     		ldrb	r7, [r5, r3]
 1593 00ec 3B02     		lsl	r3, r7, #8
 1594 00ee BB3A     		sub	r2, r2, #187
 1595 00f0 FF3A     		sub	r2, r2, #255
 1596 00f2 AF5C     		ldrb	r7, [r5, r2]
 1597 00f4 1F43     		orr	r7, r3
 1598              	.LVL196:
2087:.\sd/ff.c     **** 	fs->fsize = fasize;
 1599              		.loc 1 2087 0
 1600 00f6 0DD1     		bne	.L133
2087:.\sd/ff.c     **** 	fs->fsize = fasize;
 1601              		.loc 1 2087 0 is_stmt 0 discriminator 1
 1602 00f8 5723     		mov	r3, #87
 1603 00fa EF5C     		ldrb	r7, [r5, r3]
 1604              	.LVL197:
 1605 00fc 3F06     		lsl	r7, r7, #24
 1606 00fe 013B     		sub	r3, r3, #1
 1607 0100 EB5C     		ldrb	r3, [r5, r3]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 69


 1608 0102 1B04     		lsl	r3, r3, #16
 1609 0104 1F43     		orr	r7, r3
 1610 0106 5523     		mov	r3, #85
 1611 0108 EB5C     		ldrb	r3, [r5, r3]
 1612 010a 1B02     		lsl	r3, r3, #8
 1613 010c 3B43     		orr	r3, r7
 1614 010e 0E32     		add	r2, r2, #14
 1615              	.LVL198:
 1616 0110 AF5C     		ldrb	r7, [r5, r2]
 1617 0112 1F43     		orr	r7, r3
 1618              	.LVL199:
 1619              	.L133:
2088:.\sd/ff.c     **** 
 1620              		.loc 1 2088 0 is_stmt 1
 1621 0114 EF61     		str	r7, [r5, #28]
2090:.\sd/ff.c     **** 	if (b != 1 && b != 2) return FR_NO_FILESYSTEM;		/* (Must be 1 or 2) */
 1622              		.loc 1 2090 0
 1623 0116 4023     		mov	r3, #64
 1624 0118 EB5C     		ldrb	r3, [r5, r3]
 1625              	.LVL200:
 1626 011a EB70     		strb	r3, [r5, #3]
2091:.\sd/ff.c     **** 	fasize *= b;										/* Number of sectors for FAT area */
 1627              		.loc 1 2091 0
 1628 011c 5A1E     		sub	r2, r3, #1
 1629 011e 012A     		cmp	r2, #1
 1630 0120 00D9     		bls	.LCB1836
 1631 0122 11E1     		b	.L155	@long jump
 1632              	.LCB1836:
2092:.\sd/ff.c     **** 
 1633              		.loc 1 2092 0
 1634 0124 7B43     		mul	r3, r7
 1635              	.LVL201:
 1636 0126 9B46     		mov	fp, r3
 1637              	.LVL202:
2094:.\sd/ff.c     **** 	if (!b || (b & (b - 1))) return FR_NO_FILESYSTEM;	/* (Must be power of 2) */
 1638              		.loc 1 2094 0
 1639 0128 3D23     		mov	r3, #61
 1640              	.LVL203:
 1641 012a E95C     		ldrb	r1, [r5, r3]
 1642              	.LVL204:
 1643 012c A970     		strb	r1, [r5, #2]
2095:.\sd/ff.c     **** 
 1644              		.loc 1 2095 0
 1645 012e 0029     		cmp	r1, #0
 1646 0130 00D1     		bne	.LCB1848
 1647 0132 0BE1     		b	.L156	@long jump
 1648              	.LCB1848:
2095:.\sd/ff.c     **** 
 1649              		.loc 1 2095 0 is_stmt 0 discriminator 2
 1650 0134 4B1E     		sub	r3, r1, #1
 1651 0136 0B42     		tst	r3, r1
 1652 0138 00D0     		beq	.LCB1852
 1653 013a 09E1     		b	.L157	@long jump
 1654              	.LCB1852:
2097:.\sd/ff.c     **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIR)) return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must be sector 
 1655              		.loc 1 2097 0 is_stmt 1
 1656 013c 4223     		mov	r3, #66
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 70


 1657 013e EB5C     		ldrb	r3, [r5, r3]
 1658 0140 1B02     		lsl	r3, r3, #8
 1659 0142 4122     		mov	r2, #65
 1660 0144 AA5C     		ldrb	r2, [r5, r2]
 1661 0146 1343     		orr	r3, r2
 1662 0148 9846     		mov	r8, r3
 1663 014a 2B81     		strh	r3, [r5, #8]
2098:.\sd/ff.c     **** 
 1664              		.loc 1 2098 0
 1665 014c 4346     		mov	r3, r8
 1666 014e 1B07     		lsl	r3, r3, #28
 1667 0150 00D0     		beq	.LCB1867
 1668 0152 FFE0     		b	.L158	@long jump
 1669              	.LCB1867:
2100:.\sd/ff.c     **** 	if (!tsect) tsect = LD_DWORD(fs->win+BPB_TotSec32);
 1670              		.loc 1 2100 0
 1671 0154 4423     		mov	r3, #68
 1672 0156 E85C     		ldrb	r0, [r5, r3]
 1673              	.LVL205:
 1674 0158 0302     		lsl	r3, r0, #8
 1675 015a 4322     		mov	r2, #67
 1676 015c A85C     		ldrb	r0, [r5, r2]
 1677 015e 1843     		orr	r0, r3
 1678              	.LVL206:
2101:.\sd/ff.c     **** 
 1679              		.loc 1 2101 0
 1680 0160 0DD1     		bne	.L134
2101:.\sd/ff.c     **** 
 1681              		.loc 1 2101 0 is_stmt 0 discriminator 1
 1682 0162 5323     		mov	r3, #83
 1683 0164 E85C     		ldrb	r0, [r5, r3]
 1684              	.LVL207:
 1685 0166 0006     		lsl	r0, r0, #24
 1686 0168 013B     		sub	r3, r3, #1
 1687 016a EB5C     		ldrb	r3, [r5, r3]
 1688 016c 1B04     		lsl	r3, r3, #16
 1689 016e 1843     		orr	r0, r3
 1690 0170 5123     		mov	r3, #81
 1691 0172 EB5C     		ldrb	r3, [r5, r3]
 1692 0174 1B02     		lsl	r3, r3, #8
 1693 0176 0343     		orr	r3, r0
 1694 0178 0D32     		add	r2, r2, #13
 1695              	.LVL208:
 1696 017a A85C     		ldrb	r0, [r5, r2]
 1697 017c 1843     		orr	r0, r3
 1698              	.LVL209:
 1699              	.L134:
2103:.\sd/ff.c     **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (BPB_RsvdSecCnt must not be 0) */
 1700              		.loc 1 2103 0 is_stmt 1
 1701 017e 3F23     		mov	r3, #63
 1702 0180 EE5C     		ldrb	r6, [r5, r3]
 1703 0182 3302     		lsl	r3, r6, #8
 1704 0184 3E22     		mov	r2, #62
 1705 0186 AE5C     		ldrb	r6, [r5, r2]
 1706 0188 1E43     		orr	r6, r3
 1707              	.LVL210:
2104:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 71


 1708              		.loc 1 2104 0
 1709 018a 00D1     		bne	.LCB1910
 1710 018c E4E0     		b	.L159	@long jump
 1711              	.LCB1910:
2107:.\sd/ff.c     **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1712              		.loc 1 2107 0
 1713 018e 5B46     		mov	r3, fp
 1714 0190 F318     		add	r3, r6, r3
 1715 0192 4246     		mov	r2, r8
 1716 0194 1209     		lsr	r2, r2, #4
 1717 0196 9946     		mov	r9, r3
 1718 0198 9144     		add	r9, r9, r2
 1719              	.LVL211:
2108:.\sd/ff.c     **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 1720              		.loc 1 2108 0
 1721 019a 4845     		cmp	r0, r9
 1722 019c 00D2     		bcs	.LCB1921
 1723 019e DDE0     		b	.L160	@long jump
 1724              	.LCB1921:
2109:.\sd/ff.c     **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 1725              		.loc 1 2109 0
 1726 01a0 4B46     		mov	r3, r9
 1727 01a2 C01A     		sub	r0, r0, r3
 1728              	.LVL212:
 1729 01a4 FFF7FEFF 		bl	__aeabi_uidiv
 1730              	.LVL213:
2110:.\sd/ff.c     **** 	fmt = FS_FAT12;
 1731              		.loc 1 2110 0
 1732 01a8 0028     		cmp	r0, #0
 1733 01aa 00D1     		bne	.LCB1930
 1734 01ac D8E0     		b	.L161	@long jump
 1735              	.LCB1930:
 1736              	.LVL214:
2112:.\sd/ff.c     **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 1737              		.loc 1 2112 0
 1738 01ae 704B     		ldr	r3, .L167+4
 1739 01b0 9842     		cmp	r0, r3
 1740 01b2 02D8     		bhi	.L162
2111:.\sd/ff.c     **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
 1741              		.loc 1 2111 0
 1742 01b4 0123     		mov	r3, #1
 1743 01b6 9A46     		mov	r10, r3
 1744 01b8 01E0     		b	.L135
 1745              	.L162:
2112:.\sd/ff.c     **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 1746              		.loc 1 2112 0
 1747 01ba 0223     		mov	r3, #2
 1748 01bc 9A46     		mov	r10, r3
 1749              	.L135:
 1750              	.LVL215:
2113:.\sd/ff.c     **** 
 1751              		.loc 1 2113 0
 1752 01be 6D4B     		ldr	r3, .L167+8
 1753 01c0 9842     		cmp	r0, r3
 1754 01c2 01D9     		bls	.L136
 1755 01c4 0323     		mov	r3, #3
 1756 01c6 9A46     		mov	r10, r3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 72


 1757              	.LVL216:
 1758              	.L136:
2116:.\sd/ff.c     **** 	fs->database = bsect + sysect;						/* Data start sector */
 1759              		.loc 1 2116 0
 1760 01c8 0230     		add	r0, r0, #2
 1761              	.LVL217:
 1762 01ca A861     		str	r0, [r5, #24]
2117:.\sd/ff.c     **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 1763              		.loc 1 2117 0
 1764 01cc 4B46     		mov	r3, r9
 1765 01ce E318     		add	r3, r4, r3
 1766 01d0 AB62     		str	r3, [r5, #40]
2118:.\sd/ff.c     **** 	if (fmt == FS_FAT32) {
 1767              		.loc 1 2118 0
 1768 01d2 A619     		add	r6, r4, r6
 1769              	.LVL218:
 1770 01d4 2E62     		str	r6, [r5, #32]
2119:.\sd/ff.c     **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 1771              		.loc 1 2119 0
 1772 01d6 5346     		mov	r3, r10
 1773 01d8 032B     		cmp	r3, #3
 1774 01da 14D1     		bne	.L137
2120:.\sd/ff.c     **** 		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
 1775              		.loc 1 2120 0
 1776 01dc 4346     		mov	r3, r8
 1777 01de 002B     		cmp	r3, #0
 1778 01e0 00D0     		beq	.LCB1969
 1779 01e2 BFE0     		b	.L164	@long jump
 1780              	.LCB1969:
2121:.\sd/ff.c     **** 		szbfat = fs->n_fatent * 4;						/* (Required FAT size) */
 1781              		.loc 1 2121 0
 1782 01e4 5F33     		add	r3, r3, #95
 1783 01e6 EA5C     		ldrb	r2, [r5, r3]
 1784 01e8 1206     		lsl	r2, r2, #24
 1785 01ea 013B     		sub	r3, r3, #1
 1786 01ec EB5C     		ldrb	r3, [r5, r3]
 1787 01ee 1B04     		lsl	r3, r3, #16
 1788 01f0 1A43     		orr	r2, r3
 1789 01f2 5D23     		mov	r3, #93
 1790 01f4 EB5C     		ldrb	r3, [r5, r3]
 1791 01f6 1B02     		lsl	r3, r3, #8
 1792 01f8 1343     		orr	r3, r2
 1793 01fa 5C22     		mov	r2, #92
 1794 01fc AA5C     		ldrb	r2, [r5, r2]
 1795 01fe 1343     		orr	r3, r2
 1796 0200 6B62     		str	r3, [r5, #36]
2122:.\sd/ff.c     **** 	} else {
 1797              		.loc 1 2122 0
 1798 0202 8000     		lsl	r0, r0, #2
 1799              	.LVL219:
 1800 0204 10E0     		b	.L138
 1801              	.LVL220:
 1802              	.L137:
2124:.\sd/ff.c     **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 1803              		.loc 1 2124 0
 1804 0206 4346     		mov	r3, r8
 1805 0208 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 73


 1806 020a 00D1     		bne	.LCB1996
 1807 020c ACE0     		b	.L165	@long jump
 1808              	.LCB1996:
2125:.\sd/ff.c     **** 		szbfat = (fmt == FS_FAT16) ?					/* (Required FAT size) */
 1809              		.loc 1 2125 0
 1810 020e 5E44     		add	r6, r6, fp
 1811 0210 6E62     		str	r6, [r5, #36]
2127:.\sd/ff.c     **** 	}
 1812              		.loc 1 2127 0
 1813 0212 5346     		mov	r3, r10
 1814 0214 022B     		cmp	r3, #2
 1815 0216 01D1     		bne	.L139
2127:.\sd/ff.c     **** 	}
 1816              		.loc 1 2127 0 is_stmt 0 discriminator 1
 1817 0218 4000     		lsl	r0, r0, #1
 1818              	.LVL221:
 1819 021a 05E0     		b	.L138
 1820              	.LVL222:
 1821              	.L139:
2127:.\sd/ff.c     **** 	}
 1822              		.loc 1 2127 0 discriminator 2
 1823 021c 0323     		mov	r3, #3
 1824 021e 4343     		mul	r3, r0
 1825 0220 5B08     		lsr	r3, r3, #1
 1826 0222 0122     		mov	r2, #1
 1827 0224 1040     		and	r0, r2
 1828              	.LVL223:
 1829 0226 1818     		add	r0, r3, r0
 1830              	.LVL224:
 1831              	.L138:
2129:.\sd/ff.c     **** 		return FR_NO_FILESYSTEM;
 1832              		.loc 1 2129 0 is_stmt 1
 1833 0228 534B     		ldr	r3, .L167+12
 1834 022a 9C46     		mov	ip, r3
 1835 022c 6044     		add	r0, r0, ip
 1836              	.LVL225:
 1837 022e 400A     		lsr	r0, r0, #9
 1838              	.LVL226:
 1839 0230 8742     		cmp	r7, r0
 1840 0232 00D2     		bcs	.LCB2031
 1841 0234 BEE0     		b	.L166	@long jump
 1842              	.LCB2031:
2134:.\sd/ff.c     **** 	fs->last_clust = 0;
 1843              		.loc 1 2134 0
 1844 0236 0123     		mov	r3, #1
 1845 0238 5B42     		neg	r3, r3
 1846 023a 2B61     		str	r3, [r5, #16]
2135:.\sd/ff.c     **** 
 1847              		.loc 1 2135 0
 1848 023c 0023     		mov	r3, #0
 1849 023e EB60     		str	r3, [r5, #12]
2138:.\sd/ff.c     **** 	 	fs->fsi_flag = 0;
 1850              		.loc 1 2138 0
 1851 0240 5346     		mov	r3, r10
 1852 0242 032B     		cmp	r3, #3
 1853 0244 5ED1     		bne	.L141
2139:.\sd/ff.c     **** 		fs->fsi_sector = bsect + LD_WORD(fs->win+BPB_FSInfo);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 74


 1854              		.loc 1 2139 0
 1855 0246 0023     		mov	r3, #0
 1856 0248 6B71     		strb	r3, [r5, #5]
2140:.\sd/ff.c     **** 		if (disk_read(fs->drv, fs->win, fs->fsi_sector, 1) == RES_OK &&
 1857              		.loc 1 2140 0
 1858 024a 6133     		add	r3, r3, #97
 1859 024c EA5C     		ldrb	r2, [r5, r3]
 1860 024e 1202     		lsl	r2, r2, #8
 1861 0250 013B     		sub	r3, r3, #1
 1862 0252 EB5C     		ldrb	r3, [r5, r3]
 1863 0254 1A43     		orr	r2, r3
 1864 0256 1219     		add	r2, r2, r4
 1865 0258 6A61     		str	r2, [r5, #20]
2141:.\sd/ff.c     **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
 1866              		.loc 1 2141 0
 1867 025a 291C     		mov	r1, r5
 1868 025c 3031     		add	r1, r1, #48
 1869 025e 6878     		ldrb	r0, [r5, #1]
 1870 0260 0123     		mov	r3, #1
 1871 0262 FFF7FEFF 		bl	disk_read
 1872              	.LVL227:
 1873 0266 0028     		cmp	r0, #0
 1874 0268 4CD1     		bne	.L141
2142:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
 1875              		.loc 1 2142 0 discriminator 1
 1876 026a 444B     		ldr	r3, .L167+16
 1877 026c EB5C     		ldrb	r3, [r5, r3]
 1878 026e 1A02     		lsl	r2, r3, #8
 1879 0270 434B     		ldr	r3, .L167+20
 1880 0272 EB5C     		ldrb	r3, [r5, r3]
 1881 0274 1343     		orr	r3, r2
2141:.\sd/ff.c     **** 			LD_WORD(fs->win+BS_55AA) == 0xAA55 &&
 1882              		.loc 1 2141 0 discriminator 1
 1883 0276 1BB2     		sxth	r3, r3
 1884 0278 424A     		ldr	r2, .L167+24
 1885 027a 9342     		cmp	r3, r2
 1886 027c 42D1     		bne	.L141
2143:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272) {
 1887              		.loc 1 2143 0
 1888 027e 3323     		mov	r3, #51
 1889 0280 EA5C     		ldrb	r2, [r5, r3]
 1890 0282 1206     		lsl	r2, r2, #24
 1891 0284 013B     		sub	r3, r3, #1
 1892 0286 EB5C     		ldrb	r3, [r5, r3]
 1893 0288 1B04     		lsl	r3, r3, #16
 1894 028a 1A43     		orr	r2, r3
 1895 028c 3123     		mov	r3, #49
 1896 028e EB5C     		ldrb	r3, [r5, r3]
 1897 0290 1B02     		lsl	r3, r3, #8
 1898 0292 1343     		orr	r3, r2
 1899 0294 3022     		mov	r2, #48
 1900 0296 AA5C     		ldrb	r2, [r5, r2]
 1901 0298 1343     		orr	r3, r2
2142:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_LeadSig) == 0x41615252 &&
 1902              		.loc 1 2142 0
 1903 029a 3B4A     		ldr	r2, .L167+28
 1904 029c 9342     		cmp	r3, r2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 75


 1905 029e 31D1     		bne	.L141
2144:.\sd/ff.c     **** 				fs->last_clust = LD_DWORD(fs->win+FSI_Nxt_Free);
 1906              		.loc 1 2144 0
 1907 02a0 3A4B     		ldr	r3, .L167+32
 1908 02a2 EA5C     		ldrb	r2, [r5, r3]
 1909 02a4 1206     		lsl	r2, r2, #24
 1910 02a6 3A4B     		ldr	r3, .L167+36
 1911 02a8 EB5C     		ldrb	r3, [r5, r3]
 1912 02aa 1B04     		lsl	r3, r3, #16
 1913 02ac 1A43     		orr	r2, r3
 1914 02ae 394B     		ldr	r3, .L167+40
 1915 02b0 EB5C     		ldrb	r3, [r5, r3]
 1916 02b2 1B02     		lsl	r3, r3, #8
 1917 02b4 1343     		orr	r3, r2
 1918 02b6 8522     		mov	r2, #133
 1919 02b8 9200     		lsl	r2, r2, #2
 1920 02ba AA5C     		ldrb	r2, [r5, r2]
 1921 02bc 1343     		orr	r3, r2
2143:.\sd/ff.c     **** 			LD_DWORD(fs->win+FSI_StrucSig) == 0x61417272) {
 1922              		.loc 1 2143 0
 1923 02be 364A     		ldr	r2, .L167+44
 1924 02c0 9342     		cmp	r3, r2
 1925 02c2 1FD1     		bne	.L141
2145:.\sd/ff.c     **** 				fs->free_clust = LD_DWORD(fs->win+FSI_Free_Count);
 1926              		.loc 1 2145 0
 1927 02c4 354B     		ldr	r3, .L167+48
 1928 02c6 EA5C     		ldrb	r2, [r5, r3]
 1929 02c8 1206     		lsl	r2, r2, #24
 1930 02ca 354B     		ldr	r3, .L167+52
 1931 02cc EB5C     		ldrb	r3, [r5, r3]
 1932 02ce 1B04     		lsl	r3, r3, #16
 1933 02d0 1A43     		orr	r2, r3
 1934 02d2 344B     		ldr	r3, .L167+56
 1935 02d4 EB5C     		ldrb	r3, [r5, r3]
 1936 02d6 1B02     		lsl	r3, r3, #8
 1937 02d8 1343     		orr	r3, r2
 1938 02da 8722     		mov	r2, #135
 1939 02dc 9200     		lsl	r2, r2, #2
 1940 02de AA5C     		ldrb	r2, [r5, r2]
 1941 02e0 1343     		orr	r3, r2
 1942 02e2 EB60     		str	r3, [r5, #12]
2146:.\sd/ff.c     **** 		}
 1943              		.loc 1 2146 0
 1944 02e4 304B     		ldr	r3, .L167+60
 1945 02e6 EA5C     		ldrb	r2, [r5, r3]
 1946 02e8 1206     		lsl	r2, r2, #24
 1947 02ea 304B     		ldr	r3, .L167+64
 1948 02ec EB5C     		ldrb	r3, [r5, r3]
 1949 02ee 1B04     		lsl	r3, r3, #16
 1950 02f0 1A43     		orr	r2, r3
 1951 02f2 2F4B     		ldr	r3, .L167+68
 1952 02f4 EB5C     		ldrb	r3, [r5, r3]
 1953 02f6 1B02     		lsl	r3, r3, #8
 1954 02f8 1343     		orr	r3, r2
 1955 02fa 8622     		mov	r2, #134
 1956 02fc 9200     		lsl	r2, r2, #2
 1957 02fe AA5C     		ldrb	r2, [r5, r2]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 76


 1958 0300 1343     		orr	r3, r2
 1959 0302 2B61     		str	r3, [r5, #16]
 1960              	.L141:
2150:.\sd/ff.c     **** 	fs->id = ++Fsid;		/* File system mount ID */
 1961              		.loc 1 2150 0
 1962 0304 5346     		mov	r3, r10
 1963 0306 2B70     		strb	r3, [r5]
2151:.\sd/ff.c     **** 	fs->winsect = 0;		/* Invalidate sector cache */
 1964              		.loc 1 2151 0
 1965 0308 184A     		ldr	r2, .L167
 1966 030a 138D     		ldrh	r3, [r2, #40]
 1967 030c 0133     		add	r3, r3, #1
 1968 030e 9BB2     		uxth	r3, r3
 1969 0310 1385     		strh	r3, [r2, #40]
 1970 0312 EB80     		strh	r3, [r5, #6]
2152:.\sd/ff.c     **** 	fs->wflag = 0;
 1971              		.loc 1 2152 0
 1972 0314 0024     		mov	r4, #0
 1973              	.LVL228:
 1974 0316 EC62     		str	r4, [r5, #44]
2153:.\sd/ff.c     **** #if _FS_RPATH
 1975              		.loc 1 2153 0
 1976 0318 2C71     		strb	r4, [r5, #4]
2158:.\sd/ff.c     **** #endif
 1977              		.loc 1 2158 0
 1978 031a 281C     		mov	r0, r5
 1979 031c FFF7FEFF 		bl	clear_lock
 1980              	.LVL229:
2161:.\sd/ff.c     **** }
 1981              		.loc 1 2161 0
 1982 0320 201C     		mov	r0, r4
 1983 0322 48E0     		b	.L129
 1984              	.LVL230:
 1985              	.L144:
2036:.\sd/ff.c     **** 	*rfs = fs = FatFs[vol];				/* Return pointer to the corresponding file system object */
 1986              		.loc 1 2036 0
 1987 0324 0B20     		mov	r0, #11
 1988              	.LVL231:
 1989 0326 46E0     		b	.L129
 1990              	.LVL232:
 1991              	.L145:
2038:.\sd/ff.c     **** 
 1992              		.loc 1 2038 0
 1993 0328 0C20     		mov	r0, #12
 1994 032a 44E0     		b	.L129
 1995              	.LVL233:
 1996              	.L146:
2047:.\sd/ff.c     **** 		}
 1997              		.loc 1 2047 0
 1998 032c 0020     		mov	r0, #0
 1999              	.LVL234:
 2000 032e 42E0     		b	.L129
 2001              	.LVL235:
 2002              	.L147:
2046:.\sd/ff.c     **** 			return FR_OK;				/* The file system object is valid */
 2003              		.loc 1 2046 0
 2004 0330 0A20     		mov	r0, #10
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 77


 2005              	.LVL236:
 2006 0332 40E0     		b	.L129
 2007              	.LVL237:
 2008              	.L148:
2058:.\sd/ff.c     **** 	if (!_FS_READONLY && chk_wp && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 2009              		.loc 1 2058 0
 2010 0334 0320     		mov	r0, #3
 2011              	.LVL238:
 2012 0336 3EE0     		b	.L129
 2013              	.LVL239:
 2014              	.L149:
2060:.\sd/ff.c     **** #if _MAX_SS != 512						/* Get disk sector size (variable sector size cfg only) */
 2015              		.loc 1 2060 0
 2016 0338 0A20     		mov	r0, #10
 2017              	.LVL240:
 2018 033a 3CE0     		b	.L129
 2019              	.LVL241:
 2020              	.L152:
2078:.\sd/ff.c     **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 2021              		.loc 1 2078 0
 2022 033c 0120     		mov	r0, #1
 2023              	.LVL242:
 2024 033e 3AE0     		b	.L129
 2025              	.LVL243:
 2026              	.L153:
2079:.\sd/ff.c     **** 
 2027              		.loc 1 2079 0
 2028 0340 0D20     		mov	r0, #13
 2029              	.LVL244:
 2030 0342 38E0     		b	.L129
 2031              	.LVL245:
 2032              	.L154:
2084:.\sd/ff.c     **** 
 2033              		.loc 1 2084 0
 2034 0344 0D20     		mov	r0, #13
 2035              	.LVL246:
 2036 0346 36E0     		b	.L129
 2037              	.LVL247:
 2038              	.L155:
2091:.\sd/ff.c     **** 	fasize *= b;										/* Number of sectors for FAT area */
 2039              		.loc 1 2091 0
 2040 0348 0D20     		mov	r0, #13
 2041              	.LVL248:
 2042 034a 34E0     		b	.L129
 2043              	.LVL249:
 2044              	.L156:
2095:.\sd/ff.c     **** 
 2045              		.loc 1 2095 0
 2046 034c 0D20     		mov	r0, #13
 2047              	.LVL250:
 2048 034e 32E0     		b	.L129
 2049              	.LVL251:
 2050              	.L157:
 2051 0350 0D20     		mov	r0, #13
 2052              	.LVL252:
 2053 0352 30E0     		b	.L129
 2054              	.LVL253:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 78


 2055              	.L158:
2098:.\sd/ff.c     **** 
 2056              		.loc 1 2098 0
 2057 0354 0D20     		mov	r0, #13
 2058              	.LVL254:
 2059 0356 2EE0     		b	.L129
 2060              	.LVL255:
 2061              	.L159:
2104:.\sd/ff.c     **** 
 2062              		.loc 1 2104 0
 2063 0358 0D20     		mov	r0, #13
 2064              	.LVL256:
 2065 035a 2CE0     		b	.L129
 2066              	.LVL257:
 2067              	.L160:
2108:.\sd/ff.c     **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 2068              		.loc 1 2108 0
 2069 035c 0D20     		mov	r0, #13
 2070              	.LVL258:
 2071 035e 2AE0     		b	.L129
 2072              	.LVL259:
 2073              	.L161:
2110:.\sd/ff.c     **** 	fmt = FS_FAT12;
 2074              		.loc 1 2110 0
 2075 0360 0D20     		mov	r0, #13
 2076              	.LVL260:
 2077 0362 28E0     		b	.L129
 2078              	.LVL261:
 2079              	.L164:
2120:.\sd/ff.c     **** 		fs->dirbase = LD_DWORD(fs->win+BPB_RootClus);	/* Root directory start cluster */
 2080              		.loc 1 2120 0
 2081 0364 0D20     		mov	r0, #13
 2082              	.LVL262:
 2083 0366 26E0     		b	.L129
 2084              	.LVL263:
 2085              	.L165:
2124:.\sd/ff.c     **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 2086              		.loc 1 2124 0
 2087 0368 0D20     		mov	r0, #13
 2088              	.LVL264:
 2089 036a 24E0     		b	.L129
 2090              	.L168:
 2091              		.align	2
 2092              	.L167:
 2093 036c 00000000 		.word	.LANCHOR0
 2094 0370 F50F0000 		.word	4085
 2095 0374 F5FF0000 		.word	65525
 2096 0378 FF010000 		.word	511
 2097 037c 2F020000 		.word	559
 2098 0380 2E020000 		.word	558
 2099 0384 55AAFFFF 		.word	-21931
 2100 0388 52526141 		.word	1096897106
 2101 038c 17020000 		.word	535
 2102 0390 16020000 		.word	534
 2103 0394 15020000 		.word	533
 2104 0398 72724161 		.word	1631679090
 2105 039c 1F020000 		.word	543
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 79


 2106 03a0 1E020000 		.word	542
 2107 03a4 1D020000 		.word	541
 2108 03a8 1B020000 		.word	539
 2109 03ac 1A020000 		.word	538
 2110 03b0 19020000 		.word	537
 2111              	.L166:
2130:.\sd/ff.c     **** 
 2112              		.loc 1 2130 0
 2113 03b4 0D20     		mov	r0, #13
 2114              	.LVL265:
 2115              	.L129:
2162:.\sd/ff.c     **** 
 2116              		.loc 1 2162 0
 2117              		@ sp needed
 2118 03b6 3CBC     		pop	{r2, r3, r4, r5}
 2119 03b8 9046     		mov	r8, r2
 2120 03ba 9946     		mov	r9, r3
 2121 03bc A246     		mov	r10, r4
 2122 03be AB46     		mov	fp, r5
 2123 03c0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2124              		.cfi_endproc
 2125              	.LFE26:
 2126              		.size	chk_mounted, .-chk_mounted
 2127 03c2 C046     		.section	.text.sync,"ax",%progbits
 2128              		.align	2
 2129              		.code	16
 2130              		.thumb_func
 2131              		.type	sync, %function
 2132              	sync:
 2133              	.LFB10:
 764:.\sd/ff.c     **** 	FRESULT res;
 2134              		.loc 1 764 0
 2135              		.cfi_startproc
 2136              	.LVL266:
 2137 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2138              		.cfi_def_cfa_offset 24
 2139              		.cfi_offset 3, -24
 2140              		.cfi_offset 4, -20
 2141              		.cfi_offset 5, -16
 2142              		.cfi_offset 6, -12
 2143              		.cfi_offset 7, -8
 2144              		.cfi_offset 14, -4
 2145 0002 051C     		mov	r5, r0
 768:.\sd/ff.c     **** 	if (res == FR_OK) {
 2146              		.loc 1 768 0
 2147 0004 0021     		mov	r1, #0
 2148 0006 FFF7FEFF 		bl	move_window
 2149              	.LVL267:
 2150 000a 041E     		sub	r4, r0, #0
 2151              	.LVL268:
 769:.\sd/ff.c     **** 		/* Update FSInfo sector if needed */
 2152              		.loc 1 769 0
 2153 000c 52D1     		bne	.L170
 771:.\sd/ff.c     **** 			fs->winsect = 0;
 2154              		.loc 1 771 0
 2155 000e 2B78     		ldrb	r3, [r5]
 2156 0010 032B     		cmp	r3, #3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 80


 2157 0012 47D1     		bne	.L171
 771:.\sd/ff.c     **** 			fs->winsect = 0;
 2158              		.loc 1 771 0 is_stmt 0 discriminator 1
 2159 0014 6B79     		ldrb	r3, [r5, #5]
 2160 0016 002B     		cmp	r3, #0
 2161 0018 44D0     		beq	.L171
 772:.\sd/ff.c     **** 			/* Create FSInfo structure */
 2162              		.loc 1 772 0 is_stmt 1
 2163 001a 0027     		mov	r7, #0
 2164 001c EF62     		str	r7, [r5, #44]
 774:.\sd/ff.c     **** 			ST_WORD(fs->win+BS_55AA, 0xAA55);
 2165              		.loc 1 774 0
 2166 001e 2E1C     		mov	r6, r5
 2167 0020 3036     		add	r6, r6, #48
 2168 0022 301C     		mov	r0, r6
 2169              	.LVL269:
 2170 0024 0021     		mov	r1, #0
 2171 0026 8022     		mov	r2, #128
 2172 0028 9200     		lsl	r2, r2, #2
 2173 002a FFF7FEFF 		bl	mem_set
 2174              	.LVL270:
 775:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_LeadSig, 0x41615252);
 2175              		.loc 1 775 0
 2176 002e 5522     		mov	r2, #85
 2177 0030 214B     		ldr	r3, .L173
 2178 0032 EA54     		strb	r2, [r5, r3]
 2179 0034 5532     		add	r2, r2, #85
 2180 0036 214B     		ldr	r3, .L173+4
 2181 0038 EA54     		strb	r2, [r5, r3]
 776:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_StrucSig, 0x61417272);
 2182              		.loc 1 776 0
 2183 003a DE3B     		sub	r3, r3, #222
 2184 003c FF3B     		sub	r3, r3, #255
 2185 003e 7A3A     		sub	r2, r2, #122
 2186 0040 AB54     		strb	r3, [r5, r2]
 2187 0042 0132     		add	r2, r2, #1
 2188 0044 AB54     		strb	r3, [r5, r2]
 2189 0046 0F33     		add	r3, r3, #15
 2190 0048 0132     		add	r2, r2, #1
 2191 004a AB54     		strb	r3, [r5, r2]
 2192 004c 0F32     		add	r2, r2, #15
 2193 004e 3321     		mov	r1, #51
 2194 0050 6A54     		strb	r2, [r5, r1]
 777:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Free_Count, fs->free_clust);
 2195              		.loc 1 777 0
 2196 0052 3F31     		add	r1, r1, #63
 2197 0054 8520     		mov	r0, #133
 2198 0056 8000     		lsl	r0, r0, #2
 2199 0058 2954     		strb	r1, [r5, r0]
 2200 005a 1948     		ldr	r0, .L173+8
 2201 005c 2954     		strb	r1, [r5, r0]
 2202 005e 1949     		ldr	r1, .L173+12
 2203 0060 6A54     		strb	r2, [r5, r1]
 2204 0062 194A     		ldr	r2, .L173+16
 2205 0064 AB54     		strb	r3, [r5, r2]
 778:.\sd/ff.c     **** 			ST_DWORD(fs->win+FSI_Nxt_Free, fs->last_clust);
 2206              		.loc 1 778 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 81


 2207 0066 2B69     		ldr	r3, [r5, #16]
 2208 0068 0132     		add	r2, r2, #1
 2209 006a AB54     		strb	r3, [r5, r2]
 2210 006c 190A     		lsr	r1, r3, #8
 2211 006e 174A     		ldr	r2, .L173+20
 2212 0070 A954     		strb	r1, [r5, r2]
 2213 0072 190C     		lsr	r1, r3, #16
 2214 0074 164A     		ldr	r2, .L173+24
 2215 0076 A954     		strb	r1, [r5, r2]
 2216 0078 1B0E     		lsr	r3, r3, #24
 2217 007a 164A     		ldr	r2, .L173+28
 2218 007c AB54     		strb	r3, [r5, r2]
 779:.\sd/ff.c     **** 			/* Write it into the FSInfo sector */
 2219              		.loc 1 779 0
 2220 007e EB68     		ldr	r3, [r5, #12]
 2221 0080 0132     		add	r2, r2, #1
 2222 0082 AB54     		strb	r3, [r5, r2]
 2223 0084 190A     		lsr	r1, r3, #8
 2224 0086 144A     		ldr	r2, .L173+32
 2225 0088 A954     		strb	r1, [r5, r2]
 2226 008a 190C     		lsr	r1, r3, #16
 2227 008c 134A     		ldr	r2, .L173+36
 2228 008e A954     		strb	r1, [r5, r2]
 2229 0090 1B0E     		lsr	r3, r3, #24
 2230 0092 134A     		ldr	r2, .L173+40
 2231 0094 AB54     		strb	r3, [r5, r2]
 781:.\sd/ff.c     **** 			fs->fsi_flag = 0;
 2232              		.loc 1 781 0
 2233 0096 6878     		ldrb	r0, [r5, #1]
 2234 0098 311C     		mov	r1, r6
 2235 009a 6A69     		ldr	r2, [r5, #20]
 2236 009c 0123     		mov	r3, #1
 2237 009e FFF7FEFF 		bl	disk_write
 2238              	.LVL271:
 782:.\sd/ff.c     **** 		}
 2239              		.loc 1 782 0
 2240 00a2 6F71     		strb	r7, [r5, #5]
 2241              	.L171:
 785:.\sd/ff.c     **** 			res = FR_DISK_ERR;
 2242              		.loc 1 785 0
 2243 00a4 6878     		ldrb	r0, [r5, #1]
 2244 00a6 0021     		mov	r1, #0
 2245 00a8 0022     		mov	r2, #0
 2246 00aa FFF7FEFF 		bl	disk_ioctl
 2247              	.LVL272:
 2248 00ae 0028     		cmp	r0, #0
 2249 00b0 00D0     		beq	.L170
 786:.\sd/ff.c     **** 	}
 2250              		.loc 1 786 0
 2251 00b2 0124     		mov	r4, #1
 2252              	.LVL273:
 2253              	.L170:
 790:.\sd/ff.c     **** #endif
 2254              		.loc 1 790 0
 2255 00b4 201C     		mov	r0, r4
 2256              		@ sp needed
 2257              	.LVL274:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 82


 2258              	.LVL275:
 2259 00b6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2260              	.L174:
 2261              		.align	2
 2262              	.L173:
 2263 00b8 2E020000 		.word	558
 2264 00bc 2F020000 		.word	559
 2265 00c0 15020000 		.word	533
 2266 00c4 16020000 		.word	534
 2267 00c8 17020000 		.word	535
 2268 00cc 19020000 		.word	537
 2269 00d0 1A020000 		.word	538
 2270 00d4 1B020000 		.word	539
 2271 00d8 1D020000 		.word	541
 2272 00dc 1E020000 		.word	542
 2273 00e0 1F020000 		.word	543
 2274              		.cfi_endproc
 2275              	.LFE10:
 2276              		.size	sync, .-sync
 2277              		.section	.text.clust2sect,"ax",%progbits
 2278              		.align	2
 2279              		.global	clust2sect
 2280              		.code	16
 2281              		.thumb_func
 2282              		.type	clust2sect, %function
 2283              	clust2sect:
 2284              	.LFB11:
 805:.\sd/ff.c     **** 	clst -= 2;
 2285              		.loc 1 805 0
 2286              		.cfi_startproc
 2287              	.LVL276:
 806:.\sd/ff.c     **** 	if (clst >= (fs->n_fatent - 2)) return 0;		/* Invalid cluster# */
 2288              		.loc 1 806 0
 2289 0000 0239     		sub	r1, r1, #2
 2290              	.LVL277:
 807:.\sd/ff.c     **** 	return clst * fs->csize + fs->database;
 2291              		.loc 1 807 0
 2292 0002 8369     		ldr	r3, [r0, #24]
 2293 0004 023B     		sub	r3, r3, #2
 2294 0006 8B42     		cmp	r3, r1
 2295 0008 04D9     		bls	.L177
 808:.\sd/ff.c     **** }
 2296              		.loc 1 808 0
 2297 000a 8378     		ldrb	r3, [r0, #2]
 2298 000c 5943     		mul	r1, r3
 2299              	.LVL278:
 2300 000e 806A     		ldr	r0, [r0, #40]
 2301              	.LVL279:
 2302 0010 0818     		add	r0, r1, r0
 2303 0012 00E0     		b	.L176
 2304              	.LVL280:
 2305              	.L177:
 807:.\sd/ff.c     **** 	return clst * fs->csize + fs->database;
 2306              		.loc 1 807 0
 2307 0014 0020     		mov	r0, #0
 2308              	.LVL281:
 2309              	.L176:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 83


 809:.\sd/ff.c     **** 
 2310              		.loc 1 809 0
 2311              		@ sp needed
 2312 0016 7047     		bx	lr
 2313              		.cfi_endproc
 2314              	.LFE11:
 2315              		.size	clust2sect, .-clust2sect
 2316              		.section	.text.get_fat,"ax",%progbits
 2317              		.align	2
 2318              		.global	get_fat
 2319              		.code	16
 2320              		.thumb_func
 2321              		.type	get_fat, %function
 2322              	get_fat:
 2323              	.LFB12:
 823:.\sd/ff.c     **** 	UINT wc, bc;
 2324              		.loc 1 823 0
 2325              		.cfi_startproc
 2326              	.LVL282:
 2327 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2328              		.cfi_def_cfa_offset 24
 2329              		.cfi_offset 3, -24
 2330              		.cfi_offset 4, -20
 2331              		.cfi_offset 5, -16
 2332              		.cfi_offset 6, -12
 2333              		.cfi_offset 7, -8
 2334              		.cfi_offset 14, -4
 828:.\sd/ff.c     **** 		return 1;
 2335              		.loc 1 828 0
 2336 0002 0129     		cmp	r1, #1
 2337 0004 66D9     		bls	.L185
 828:.\sd/ff.c     **** 		return 1;
 2338              		.loc 1 828 0 is_stmt 0 discriminator 1
 2339 0006 8369     		ldr	r3, [r0, #24]
 2340 0008 8B42     		cmp	r3, r1
 2341 000a 65D9     		bls	.L186
 2342 000c 0C1C     		mov	r4, r1
 2343 000e 061C     		mov	r6, r0
 831:.\sd/ff.c     **** 	case FS_FAT12 :
 2344              		.loc 1 831 0 is_stmt 1
 2345 0010 0378     		ldrb	r3, [r0]
 2346 0012 022B     		cmp	r3, #2
 2347 0014 2AD0     		beq	.L180
 2348 0016 032B     		cmp	r3, #3
 2349 0018 3ED0     		beq	.L181
 2350 001a 012B     		cmp	r3, #1
 2351 001c 5ED1     		bne	.L192
 2352              	.LVL283:
 833:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 2353              		.loc 1 833 0
 2354 001e 4F08     		lsr	r7, r1, #1
 2355 0020 CF19     		add	r7, r1, r7
 2356              	.LVL284:
 834:.\sd/ff.c     **** 		wc = fs->win[bc % SS(fs)]; bc++;
 2357              		.loc 1 834 0
 2358 0022 790A     		lsr	r1, r7, #9
 2359              	.LVL285:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 84


 2360 0024 036A     		ldr	r3, [r0, #32]
 2361 0026 9C46     		mov	ip, r3
 2362 0028 6144     		add	r1, r1, ip
 2363 002a FFF7FEFF 		bl	move_window
 2364              	.LVL286:
 2365 002e 0028     		cmp	r0, #0
 2366 0030 57D1     		bne	.L188
 835:.\sd/ff.c     **** 		if (move_window(fs, fs->fatbase + (bc / SS(fs)))) break;
 2367              		.loc 1 835 0
 2368 0032 FB05     		lsl	r3, r7, #23
 2369 0034 DB0D     		lsr	r3, r3, #23
 2370 0036 F318     		add	r3, r6, r3
 2371 0038 3033     		add	r3, r3, #48
 2372 003a 1D78     		ldrb	r5, [r3]
 2373              	.LVL287:
 2374 003c 0137     		add	r7, r7, #1
 2375              	.LVL288:
 836:.\sd/ff.c     **** 		wc |= fs->win[bc % SS(fs)] << 8;
 2376              		.loc 1 836 0
 2377 003e 790A     		lsr	r1, r7, #9
 2378 0040 336A     		ldr	r3, [r6, #32]
 2379 0042 9C46     		mov	ip, r3
 2380 0044 6144     		add	r1, r1, ip
 2381 0046 301C     		mov	r0, r6
 2382 0048 FFF7FEFF 		bl	move_window
 2383              	.LVL289:
 2384 004c 0028     		cmp	r0, #0
 2385 004e 4BD1     		bne	.L189
 837:.\sd/ff.c     **** 		return (clst & 1) ? (wc >> 4) : (wc & 0xFFF);
 2386              		.loc 1 837 0
 2387 0050 FF05     		lsl	r7, r7, #23
 2388              	.LVL290:
 2389 0052 FF0D     		lsr	r7, r7, #23
 2390 0054 F019     		add	r0, r6, r7
 2391 0056 3030     		add	r0, r0, #48
 2392 0058 0078     		ldrb	r0, [r0]
 2393 005a 0002     		lsl	r0, r0, #8
 2394 005c 2843     		orr	r0, r5
 2395              	.LVL291:
 838:.\sd/ff.c     **** 
 2396              		.loc 1 838 0
 2397 005e E307     		lsl	r3, r4, #31
 2398 0060 01D5     		bpl	.L183
 838:.\sd/ff.c     **** 
 2399              		.loc 1 838 0 is_stmt 0 discriminator 1
 2400 0062 0009     		lsr	r0, r0, #4
 2401              	.LVL292:
 2402 0064 48E0     		b	.L179
 2403              	.LVL293:
 2404              	.L183:
 838:.\sd/ff.c     **** 
 2405              		.loc 1 838 0 discriminator 2
 2406 0066 0005     		lsl	r0, r0, #20
 2407              	.LVL294:
 2408 0068 000D     		lsr	r0, r0, #20
 2409 006a 45E0     		b	.L179
 2410              	.LVL295:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 85


 2411              	.L180:
 841:.\sd/ff.c     **** 		p = &fs->win[clst * 2 % SS(fs)];
 2412              		.loc 1 841 0 is_stmt 1
 2413 006c 090A     		lsr	r1, r1, #8
 2414              	.LVL296:
 2415 006e 036A     		ldr	r3, [r0, #32]
 2416 0070 9C46     		mov	ip, r3
 2417 0072 6144     		add	r1, r1, ip
 2418 0074 FFF7FEFF 		bl	move_window
 2419              	.LVL297:
 2420 0078 0028     		cmp	r0, #0
 2421 007a 38D1     		bne	.L190
 842:.\sd/ff.c     **** 		return LD_WORD(p);
 2422              		.loc 1 842 0
 2423 007c 6100     		lsl	r1, r4, #1
 2424 007e FF23     		mov	r3, #255
 2425 0080 5B00     		lsl	r3, r3, #1
 2426 0082 1940     		and	r1, r3
 2427 0084 0B1C     		mov	r3, r1
 2428 0086 3033     		add	r3, r3, #48
 2429 0088 F318     		add	r3, r6, r3
 2430              	.LVL298:
 843:.\sd/ff.c     **** 
 2431              		.loc 1 843 0
 2432 008a 5878     		ldrb	r0, [r3, #1]
 2433 008c 0002     		lsl	r0, r0, #8
 2434 008e 7618     		add	r6, r6, r1
 2435              	.LVL299:
 2436 0090 3036     		add	r6, r6, #48
 2437 0092 3378     		ldrb	r3, [r6]
 2438              	.LVL300:
 2439 0094 1843     		orr	r0, r3
 2440 0096 2FE0     		b	.L179
 2441              	.LVL301:
 2442              	.L181:
 846:.\sd/ff.c     **** 		p = &fs->win[clst * 4 % SS(fs)];
 2443              		.loc 1 846 0
 2444 0098 C909     		lsr	r1, r1, #7
 2445              	.LVL302:
 2446 009a 036A     		ldr	r3, [r0, #32]
 2447 009c 9C46     		mov	ip, r3
 2448 009e 6144     		add	r1, r1, ip
 2449 00a0 FFF7FEFF 		bl	move_window
 2450              	.LVL303:
 2451 00a4 0028     		cmp	r0, #0
 2452 00a6 25D1     		bne	.L191
 847:.\sd/ff.c     **** 		return LD_DWORD(p) & 0x0FFFFFFF;
 2453              		.loc 1 847 0
 2454 00a8 A100     		lsl	r1, r4, #2
 2455 00aa FE24     		mov	r4, #254
 2456              	.LVL304:
 2457 00ac 6400     		lsl	r4, r4, #1
 2458 00ae 2140     		and	r1, r4
 2459 00b0 0A1C     		mov	r2, r1
 2460 00b2 3032     		add	r2, r2, #48
 2461 00b4 B218     		add	r2, r6, r2
 2462              	.LVL305:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 86


 848:.\sd/ff.c     **** 	}
 2463              		.loc 1 848 0
 2464 00b6 D078     		ldrb	r0, [r2, #3]
 2465 00b8 0006     		lsl	r0, r0, #24
 2466 00ba 9378     		ldrb	r3, [r2, #2]
 2467 00bc 1B04     		lsl	r3, r3, #16
 2468 00be 1843     		orr	r0, r3
 2469 00c0 5378     		ldrb	r3, [r2, #1]
 2470 00c2 1B02     		lsl	r3, r3, #8
 2471 00c4 1843     		orr	r0, r3
 2472 00c6 7118     		add	r1, r6, r1
 2473 00c8 3031     		add	r1, r1, #48
 2474 00ca 0B78     		ldrb	r3, [r1]
 2475 00cc 1843     		orr	r0, r3
 2476 00ce 0001     		lsl	r0, r0, #4
 2477 00d0 0009     		lsr	r0, r0, #4
 2478 00d2 11E0     		b	.L179
 2479              	.LVL306:
 2480              	.L185:
 829:.\sd/ff.c     **** 
 2481              		.loc 1 829 0
 2482 00d4 0120     		mov	r0, #1
 2483              	.LVL307:
 2484 00d6 0FE0     		b	.L179
 2485              	.LVL308:
 2486              	.L186:
 2487 00d8 0120     		mov	r0, #1
 2488              	.LVL309:
 2489 00da 0DE0     		b	.L179
 2490              	.LVL310:
 2491              	.L192:
 851:.\sd/ff.c     **** }
 2492              		.loc 1 851 0
 2493 00dc 0120     		mov	r0, #1
 2494              	.LVL311:
 2495 00de 4042     		neg	r0, r0
 2496 00e0 0AE0     		b	.L179
 2497              	.LVL312:
 2498              	.L188:
 2499 00e2 0120     		mov	r0, #1
 2500 00e4 4042     		neg	r0, r0
 2501 00e6 07E0     		b	.L179
 2502              	.LVL313:
 2503              	.L189:
 2504 00e8 0120     		mov	r0, #1
 2505 00ea 4042     		neg	r0, r0
 2506 00ec 04E0     		b	.L179
 2507              	.LVL314:
 2508              	.L190:
 2509 00ee 0120     		mov	r0, #1
 2510 00f0 4042     		neg	r0, r0
 2511 00f2 01E0     		b	.L179
 2512              	.L191:
 2513 00f4 0120     		mov	r0, #1
 2514 00f6 4042     		neg	r0, r0
 2515              	.LVL315:
 2516              	.L179:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 87


 852:.\sd/ff.c     **** 
 2517              		.loc 1 852 0
 2518              		@ sp needed
 2519 00f8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2520              		.cfi_endproc
 2521              	.LFE12:
 2522              		.size	get_fat, .-get_fat
 2523 00fa C046     		.section	.text.dir_sdi,"ax",%progbits
 2524              		.align	2
 2525              		.code	16
 2526              		.thumb_func
 2527              		.type	dir_sdi, %function
 2528              	dir_sdi:
 2529              	.LFB16:
1069:.\sd/ff.c     **** 	DWORD clst;
 2530              		.loc 1 1069 0
 2531              		.cfi_startproc
 2532              	.LVL316:
 2533 0000 70B5     		push	{r4, r5, r6, lr}
 2534              		.cfi_def_cfa_offset 16
 2535              		.cfi_offset 4, -16
 2536              		.cfi_offset 5, -12
 2537              		.cfi_offset 6, -8
 2538              		.cfi_offset 14, -4
 2539 0002 051C     		mov	r5, r0
 2540 0004 0C1C     		mov	r4, r1
1074:.\sd/ff.c     **** 	clst = dj->sclust;
 2541              		.loc 1 1074 0
 2542 0006 E980     		strh	r1, [r5, #6]
1075:.\sd/ff.c     **** 	if (clst == 1 || clst >= dj->fs->n_fatent)	/* Check start cluster range */
 2543              		.loc 1 1075 0
 2544 0008 8168     		ldr	r1, [r0, #8]
 2545              	.LVL317:
1076:.\sd/ff.c     **** 		return FR_INT_ERR;
 2546              		.loc 1 1076 0
 2547 000a 0129     		cmp	r1, #1
 2548 000c 38D0     		beq	.L200
1076:.\sd/ff.c     **** 		return FR_INT_ERR;
 2549              		.loc 1 1076 0 is_stmt 0 discriminator 1
 2550 000e 0368     		ldr	r3, [r0]
 2551 0010 9A69     		ldr	r2, [r3, #24]
 2552 0012 8A42     		cmp	r2, r1
 2553 0014 36D9     		bls	.L201
1078:.\sd/ff.c     **** 		clst = dj->fs->dirbase;
 2554              		.loc 1 1078 0 is_stmt 1
 2555 0016 0029     		cmp	r1, #0
 2556 0018 03D1     		bne	.L195
1078:.\sd/ff.c     **** 		clst = dj->fs->dirbase;
 2557              		.loc 1 1078 0 is_stmt 0 discriminator 1
 2558 001a 1A78     		ldrb	r2, [r3]
 2559 001c 032A     		cmp	r2, #3
 2560 001e 00D1     		bne	.L195
1079:.\sd/ff.c     **** 
 2561              		.loc 1 1079 0 is_stmt 1
 2562 0020 596A     		ldr	r1, [r3, #36]
 2563              	.LVL318:
 2564              	.L195:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 88


1081:.\sd/ff.c     **** 		dj->clust = clst;
 2565              		.loc 1 1081 0
 2566 0022 0029     		cmp	r1, #0
 2567 0024 08D1     		bne	.L196
1082:.\sd/ff.c     **** 		if (idx >= dj->fs->n_rootdir)		/* Index is out of range */
 2568              		.loc 1 1082 0
 2569 0026 E960     		str	r1, [r5, #12]
1083:.\sd/ff.c     **** 			return FR_INT_ERR;
 2570              		.loc 1 1083 0
 2571 0028 1A89     		ldrh	r2, [r3, #8]
 2572 002a A242     		cmp	r2, r4
 2573 002c 2CD9     		bls	.L202
1085:.\sd/ff.c     **** 	}
 2574              		.loc 1 1085 0
 2575 002e 5A6A     		ldr	r2, [r3, #36]
 2576 0030 2309     		lsr	r3, r4, #4
 2577 0032 D318     		add	r3, r2, r3
 2578 0034 2B61     		str	r3, [r5, #16]
 2579 0036 19E0     		b	.L197
 2580              	.L196:
1088:.\sd/ff.c     **** 		while (idx >= ic) {	/* Follow cluster chain */
 2581              		.loc 1 1088 0
 2582 0038 9E78     		ldrb	r6, [r3, #2]
 2583 003a 3601     		lsl	r6, r6, #4
 2584              	.LVL319:
1089:.\sd/ff.c     **** 			clst = get_fat(dj->fs, clst);				/* Get next cluster */
 2585              		.loc 1 1089 0
 2586 003c 0DE0     		b	.L198
 2587              	.LVL320:
 2588              	.L199:
1090:.\sd/ff.c     **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2589              		.loc 1 1090 0
 2590 003e 2868     		ldr	r0, [r5]
 2591 0040 FFF7FEFF 		bl	get_fat
 2592              	.LVL321:
 2593 0044 011C     		mov	r1, r0
 2594              	.LVL322:
1091:.\sd/ff.c     **** 			if (clst < 2 || clst >= dj->fs->n_fatent)	/* Reached to end of table or int error */
 2595              		.loc 1 1091 0
 2596 0046 431C     		add	r3, r0, #1
 2597 0048 20D0     		beq	.L203
1092:.\sd/ff.c     **** 				return FR_INT_ERR;
 2598              		.loc 1 1092 0
 2599 004a 0128     		cmp	r0, #1
 2600 004c 20D9     		bls	.L204
1092:.\sd/ff.c     **** 				return FR_INT_ERR;
 2601              		.loc 1 1092 0 is_stmt 0 discriminator 1
 2602 004e 2B68     		ldr	r3, [r5]
 2603 0050 9B69     		ldr	r3, [r3, #24]
 2604 0052 8342     		cmp	r3, r0
 2605 0054 1ED9     		bls	.L205
1094:.\sd/ff.c     **** 		}
 2606              		.loc 1 1094 0 is_stmt 1
 2607 0056 A41B     		sub	r4, r4, r6
 2608              	.LVL323:
 2609 0058 A4B2     		uxth	r4, r4
 2610              	.LVL324:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 89


 2611              	.L198:
1089:.\sd/ff.c     **** 			clst = get_fat(dj->fs, clst);				/* Get next cluster */
 2612              		.loc 1 1089 0
 2613 005a B442     		cmp	r4, r6
 2614 005c EFD2     		bcs	.L199
1096:.\sd/ff.c     **** 		dj->sect = clust2sect(dj->fs, clst) + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
 2615              		.loc 1 1096 0
 2616 005e E960     		str	r1, [r5, #12]
1097:.\sd/ff.c     **** 	}
 2617              		.loc 1 1097 0
 2618 0060 2868     		ldr	r0, [r5]
 2619 0062 FFF7FEFF 		bl	clust2sect
 2620              	.LVL325:
 2621 0066 2309     		lsr	r3, r4, #4
 2622 0068 C018     		add	r0, r0, r3
 2623 006a 2861     		str	r0, [r5, #16]
 2624              	.LVL326:
 2625              	.L197:
1100:.\sd/ff.c     **** 
 2626              		.loc 1 1100 0
 2627 006c 0F23     		mov	r3, #15
 2628 006e 2340     		and	r3, r4
 2629 0070 5B01     		lsl	r3, r3, #5
 2630 0072 3033     		add	r3, r3, #48
 2631 0074 2A68     		ldr	r2, [r5]
 2632 0076 9446     		mov	ip, r2
 2633 0078 6344     		add	r3, r3, ip
 2634 007a 6B61     		str	r3, [r5, #20]
1102:.\sd/ff.c     **** }
 2635              		.loc 1 1102 0
 2636 007c 0020     		mov	r0, #0
 2637 007e 0AE0     		b	.L194
 2638              	.LVL327:
 2639              	.L200:
1077:.\sd/ff.c     **** 	if (!clst && dj->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 2640              		.loc 1 1077 0
 2641 0080 0220     		mov	r0, #2
 2642              	.LVL328:
 2643 0082 08E0     		b	.L194
 2644              	.LVL329:
 2645              	.L201:
 2646 0084 0220     		mov	r0, #2
 2647              	.LVL330:
 2648 0086 06E0     		b	.L194
 2649              	.LVL331:
 2650              	.L202:
1084:.\sd/ff.c     **** 		dj->sect = dj->fs->dirbase + idx / (SS(dj->fs) / SZ_DIR);	/* Sector# */
 2651              		.loc 1 1084 0
 2652 0088 0220     		mov	r0, #2
 2653              	.LVL332:
 2654 008a 04E0     		b	.L194
 2655              	.LVL333:
 2656              	.L203:
1091:.\sd/ff.c     **** 			if (clst < 2 || clst >= dj->fs->n_fatent)	/* Reached to end of table or int error */
 2657              		.loc 1 1091 0
 2658 008c 0120     		mov	r0, #1
 2659              	.LVL334:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 90


 2660 008e 02E0     		b	.L194
 2661              	.LVL335:
 2662              	.L204:
1093:.\sd/ff.c     **** 			idx -= ic;
 2663              		.loc 1 1093 0
 2664 0090 0220     		mov	r0, #2
 2665              	.LVL336:
 2666 0092 00E0     		b	.L194
 2667              	.LVL337:
 2668              	.L205:
 2669 0094 0220     		mov	r0, #2
 2670              	.LVL338:
 2671              	.L194:
1103:.\sd/ff.c     **** 
 2672              		.loc 1 1103 0
 2673              		@ sp needed
 2674              	.LVL339:
 2675 0096 70BD     		pop	{r4, r5, r6, pc}
 2676              		.cfi_endproc
 2677              	.LFE16:
 2678              		.size	dir_sdi, .-dir_sdi
 2679              		.section	.text.dir_remove,"ax",%progbits
 2680              		.align	2
 2681              		.code	16
 2682              		.thumb_func
 2683              		.type	dir_remove, %function
 2684              	dir_remove:
 2685              	.LFB21:
1581:.\sd/ff.c     **** 	FRESULT res;
 2686              		.loc 1 1581 0
 2687              		.cfi_startproc
 2688              	.LVL340:
 2689 0000 10B5     		push	{r4, lr}
 2690              		.cfi_def_cfa_offset 8
 2691              		.cfi_offset 4, -8
 2692              		.cfi_offset 14, -4
 2693 0002 041C     		mov	r4, r0
1601:.\sd/ff.c     **** 	if (res == FR_OK) {
 2694              		.loc 1 1601 0
 2695 0004 C188     		ldrh	r1, [r0, #6]
 2696 0006 FFF7FEFF 		bl	dir_sdi
 2697              	.LVL341:
1602:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 2698              		.loc 1 1602 0
 2699 000a 0028     		cmp	r0, #0
 2700 000c 0BD1     		bne	.L207
1603:.\sd/ff.c     **** 		if (res == FR_OK) {
 2701              		.loc 1 1603 0
 2702 000e 2068     		ldr	r0, [r4]
 2703              	.LVL342:
 2704 0010 2169     		ldr	r1, [r4, #16]
 2705 0012 FFF7FEFF 		bl	move_window
 2706              	.LVL343:
1604:.\sd/ff.c     **** 			*dj->dir = DDE;			/* Mark the entry "deleted" */
 2707              		.loc 1 1604 0
 2708 0016 0028     		cmp	r0, #0
 2709 0018 05D1     		bne	.L207
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 91


1605:.\sd/ff.c     **** 			dj->fs->wflag = 1;
 2710              		.loc 1 1605 0
 2711 001a E523     		mov	r3, #229
 2712 001c 6269     		ldr	r2, [r4, #20]
 2713 001e 1370     		strb	r3, [r2]
1606:.\sd/ff.c     **** 		}
 2714              		.loc 1 1606 0
 2715 0020 2368     		ldr	r3, [r4]
 2716 0022 0122     		mov	r2, #1
 2717 0024 1A71     		strb	r2, [r3, #4]
 2718              	.LVL344:
 2719              	.L207:
1612:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 2720              		.loc 1 1612 0
 2721              		@ sp needed
 2722              	.LVL345:
 2723 0026 10BD     		pop	{r4, pc}
 2724              		.cfi_endproc
 2725              	.LFE21:
 2726              		.size	dir_remove, .-dir_remove
 2727              		.section	.text.put_fat,"ax",%progbits
 2728              		.align	2
 2729              		.global	put_fat
 2730              		.code	16
 2731              		.thumb_func
 2732              		.type	put_fat, %function
 2733              	put_fat:
 2734              	.LFB13:
 867:.\sd/ff.c     **** 	UINT bc;
 2735              		.loc 1 867 0
 2736              		.cfi_startproc
 2737              	.LVL346:
 2738 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2739              		.cfi_def_cfa_offset 24
 2740              		.cfi_offset 3, -24
 2741              		.cfi_offset 4, -20
 2742              		.cfi_offset 5, -16
 2743              		.cfi_offset 6, -12
 2744              		.cfi_offset 7, -8
 2745              		.cfi_offset 14, -4
 2746 0002 061C     		mov	r6, r0
 2747 0004 0C1C     		mov	r4, r1
 2748 0006 151C     		mov	r5, r2
 873:.\sd/ff.c     **** 		res = FR_INT_ERR;
 2749              		.loc 1 873 0
 2750 0008 0129     		cmp	r1, #1
 2751 000a 7CD9     		bls	.L218
 873:.\sd/ff.c     **** 		res = FR_INT_ERR;
 2752              		.loc 1 873 0 is_stmt 0 discriminator 1
 2753 000c 8369     		ldr	r3, [r0, #24]
 2754 000e 8B42     		cmp	r3, r1
 2755 0010 7BD9     		bls	.L219
 877:.\sd/ff.c     **** 		case FS_FAT12 :
 2756              		.loc 1 877 0 is_stmt 1
 2757 0012 0378     		ldrb	r3, [r0]
 2758 0014 022B     		cmp	r3, #2
 2759 0016 40D0     		beq	.L211
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 92


 2760 0018 032B     		cmp	r3, #3
 2761 001a 53D0     		beq	.L212
 2762 001c 012B     		cmp	r3, #1
 2763 001e 6ED1     		bne	.L221
 2764              	.LVL347:
 879:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2765              		.loc 1 879 0
 2766 0020 4F08     		lsr	r7, r1, #1
 2767 0022 CF19     		add	r7, r1, r7
 2768              	.LVL348:
 880:.\sd/ff.c     **** 			if (res != FR_OK) break;
 2769              		.loc 1 880 0
 2770 0024 790A     		lsr	r1, r7, #9
 2771              	.LVL349:
 2772 0026 036A     		ldr	r3, [r0, #32]
 2773 0028 9C46     		mov	ip, r3
 2774 002a 6144     		add	r1, r1, ip
 2775 002c FFF7FEFF 		bl	move_window
 2776              	.LVL350:
 881:.\sd/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 2777              		.loc 1 881 0
 2778 0030 0028     		cmp	r0, #0
 2779 0032 65D1     		bne	.L210
 882:.\sd/ff.c     **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2780              		.loc 1 882 0
 2781 0034 FB05     		lsl	r3, r7, #23
 2782 0036 DB0D     		lsr	r3, r3, #23
 2783              	.LVL351:
 883:.\sd/ff.c     **** 			bc++;
 2784              		.loc 1 883 0
 2785 0038 0122     		mov	r2, #1
 2786 003a 1440     		and	r4, r2
 2787              	.LVL352:
 2788 003c 0AD0     		beq	.L214
 883:.\sd/ff.c     **** 			bc++;
 2789              		.loc 1 883 0 is_stmt 0 discriminator 1
 2790 003e F218     		add	r2, r6, r3
 2791 0040 3032     		add	r2, r2, #48
 2792              	.LVL353:
 2793 0042 1278     		ldrb	r2, [r2]
 2794              	.LVL354:
 2795 0044 FF21     		mov	r1, #255
 2796 0046 2940     		and	r1, r5
 2797 0048 0901     		lsl	r1, r1, #4
 2798 004a 0F30     		add	r0, r0, #15
 2799              	.LVL355:
 2800 004c 0240     		and	r2, r0
 2801 004e 0A43     		orr	r2, r1
 2802 0050 D2B2     		uxtb	r2, r2
 2803 0052 00E0     		b	.L215
 2804              	.LVL356:
 2805              	.L214:
 883:.\sd/ff.c     **** 			bc++;
 2806              		.loc 1 883 0 discriminator 2
 2807 0054 EAB2     		uxtb	r2, r5
 2808              	.LVL357:
 2809              	.L215:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 93


 883:.\sd/ff.c     **** 			bc++;
 2810              		.loc 1 883 0 discriminator 4
 2811 0056 F318     		add	r3, r6, r3
 2812              	.LVL358:
 2813 0058 3033     		add	r3, r3, #48
 2814 005a 1A70     		strb	r2, [r3]
 884:.\sd/ff.c     **** 			fs->wflag = 1;
 2815              		.loc 1 884 0 is_stmt 1 discriminator 4
 2816 005c 0137     		add	r7, r7, #1
 2817              	.LVL359:
 885:.\sd/ff.c     **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2818              		.loc 1 885 0 discriminator 4
 2819 005e 0123     		mov	r3, #1
 2820 0060 3371     		strb	r3, [r6, #4]
 886:.\sd/ff.c     **** 			if (res != FR_OK) break;
 2821              		.loc 1 886 0 discriminator 4
 2822 0062 790A     		lsr	r1, r7, #9
 2823 0064 336A     		ldr	r3, [r6, #32]
 2824 0066 9C46     		mov	ip, r3
 2825 0068 6144     		add	r1, r1, ip
 2826 006a 301C     		mov	r0, r6
 2827 006c FFF7FEFF 		bl	move_window
 2828              	.LVL360:
 887:.\sd/ff.c     **** 			p = &fs->win[bc % SS(fs)];
 2829              		.loc 1 887 0 discriminator 4
 2830 0070 0028     		cmp	r0, #0
 2831 0072 45D1     		bne	.L210
 888:.\sd/ff.c     **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 2832              		.loc 1 888 0
 2833 0074 FF05     		lsl	r7, r7, #23
 2834              	.LVL361:
 2835 0076 FF0D     		lsr	r7, r7, #23
 2836              	.LVL362:
 889:.\sd/ff.c     **** 			break;
 2837              		.loc 1 889 0
 2838 0078 002C     		cmp	r4, #0
 2839 007a 02D0     		beq	.L216
 889:.\sd/ff.c     **** 			break;
 2840              		.loc 1 889 0 is_stmt 0 discriminator 1
 2841 007c 2D09     		lsr	r5, r5, #4
 2842              	.LVL363:
 2843 007e EDB2     		uxtb	r5, r5
 2844 0080 07E0     		b	.L217
 2845              	.LVL364:
 2846              	.L216:
 889:.\sd/ff.c     **** 			break;
 2847              		.loc 1 889 0 discriminator 2
 2848 0082 F319     		add	r3, r6, r7
 2849 0084 3033     		add	r3, r3, #48
 2850 0086 1B78     		ldrb	r3, [r3]
 2851 0088 0F22     		mov	r2, #15
 2852 008a 9343     		bic	r3, r2
 2853 008c 2D05     		lsl	r5, r5, #20
 2854              	.LVL365:
 2855 008e 2D0F     		lsr	r5, r5, #28
 2856 0090 1D43     		orr	r5, r3
 2857              	.L217:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 94


 889:.\sd/ff.c     **** 			break;
 2858              		.loc 1 889 0 discriminator 4
 2859 0092 F719     		add	r7, r6, r7
 2860              	.LVL366:
 2861 0094 3037     		add	r7, r7, #48
 2862 0096 3D70     		strb	r5, [r7]
 890:.\sd/ff.c     **** 
 2863              		.loc 1 890 0 is_stmt 1 discriminator 4
 2864 0098 32E0     		b	.L210
 2865              	.LVL367:
 2866              	.L211:
 893:.\sd/ff.c     **** 			if (res != FR_OK) break;
 2867              		.loc 1 893 0
 2868 009a 090A     		lsr	r1, r1, #8
 2869              	.LVL368:
 2870 009c 036A     		ldr	r3, [r0, #32]
 2871 009e 9C46     		mov	ip, r3
 2872 00a0 6144     		add	r1, r1, ip
 2873 00a2 FFF7FEFF 		bl	move_window
 2874              	.LVL369:
 894:.\sd/ff.c     **** 			p = &fs->win[clst * 2 % SS(fs)];
 2875              		.loc 1 894 0
 2876 00a6 0028     		cmp	r0, #0
 2877 00a8 2AD1     		bne	.L210
 895:.\sd/ff.c     **** 			ST_WORD(p, (WORD)val);
 2878              		.loc 1 895 0
 2879 00aa 6400     		lsl	r4, r4, #1
 2880              	.LVL370:
 2881 00ac FF23     		mov	r3, #255
 2882 00ae 5B00     		lsl	r3, r3, #1
 2883 00b0 1C40     		and	r4, r3
 2884 00b2 231C     		mov	r3, r4
 2885 00b4 3033     		add	r3, r3, #48
 2886 00b6 F318     		add	r3, r6, r3
 2887              	.LVL371:
 896:.\sd/ff.c     **** 			break;
 2888              		.loc 1 896 0
 2889 00b8 3419     		add	r4, r6, r4
 2890 00ba 3034     		add	r4, r4, #48
 2891 00bc 2570     		strb	r5, [r4]
 2892 00be 2D0A     		lsr	r5, r5, #8
 2893              	.LVL372:
 2894 00c0 5D70     		strb	r5, [r3, #1]
 897:.\sd/ff.c     **** 
 2895              		.loc 1 897 0
 2896 00c2 1DE0     		b	.L210
 2897              	.LVL373:
 2898              	.L212:
 900:.\sd/ff.c     **** 			if (res != FR_OK) break;
 2899              		.loc 1 900 0
 2900 00c4 C909     		lsr	r1, r1, #7
 2901              	.LVL374:
 2902 00c6 036A     		ldr	r3, [r0, #32]
 2903 00c8 9C46     		mov	ip, r3
 2904 00ca 6144     		add	r1, r1, ip
 2905 00cc FFF7FEFF 		bl	move_window
 2906              	.LVL375:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 95


 901:.\sd/ff.c     **** 			p = &fs->win[clst * 4 % SS(fs)];
 2907              		.loc 1 901 0
 2908 00d0 0028     		cmp	r0, #0
 2909 00d2 15D1     		bne	.L210
 902:.\sd/ff.c     **** 			val |= LD_DWORD(p) & 0xF0000000;
 2910              		.loc 1 902 0
 2911 00d4 A400     		lsl	r4, r4, #2
 2912              	.LVL376:
 2913 00d6 FE23     		mov	r3, #254
 2914 00d8 5B00     		lsl	r3, r3, #1
 2915 00da 1C40     		and	r4, r3
 2916 00dc 231C     		mov	r3, r4
 2917 00de 3033     		add	r3, r3, #48
 2918 00e0 F318     		add	r3, r6, r3
 2919              	.LVL377:
 903:.\sd/ff.c     **** 			ST_DWORD(p, val);
 2920              		.loc 1 903 0
 2921 00e2 DA78     		ldrb	r2, [r3, #3]
 2922 00e4 3419     		add	r4, r6, r4
 2923 00e6 3034     		add	r4, r4, #48
 2924 00e8 1209     		lsr	r2, r2, #4
 2925 00ea 1207     		lsl	r2, r2, #28
 2926 00ec 1543     		orr	r5, r2
 2927              	.LVL378:
 904:.\sd/ff.c     **** 			break;
 2928              		.loc 1 904 0
 2929 00ee 2570     		strb	r5, [r4]
 2930 00f0 2A0A     		lsr	r2, r5, #8
 2931 00f2 5A70     		strb	r2, [r3, #1]
 2932 00f4 2A0C     		lsr	r2, r5, #16
 2933 00f6 9A70     		strb	r2, [r3, #2]
 2934 00f8 2D0E     		lsr	r5, r5, #24
 2935              	.LVL379:
 2936 00fa DD70     		strb	r5, [r3, #3]
 2937              	.LVL380:
 905:.\sd/ff.c     **** 
 2938              		.loc 1 905 0
 2939 00fc 00E0     		b	.L210
 2940              	.LVL381:
 2941              	.L221:
 908:.\sd/ff.c     **** 		}
 2942              		.loc 1 908 0
 2943 00fe 0220     		mov	r0, #2
 2944              	.LVL382:
 2945              	.L210:
 910:.\sd/ff.c     **** 	}
 2946              		.loc 1 910 0
 2947 0100 0123     		mov	r3, #1
 2948 0102 3371     		strb	r3, [r6, #4]
 2949 0104 02E0     		b	.L209
 2950              	.LVL383:
 2951              	.L218:
 874:.\sd/ff.c     **** 
 2952              		.loc 1 874 0
 2953 0106 0220     		mov	r0, #2
 2954              	.LVL384:
 2955 0108 00E0     		b	.L209
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 96


 2956              	.LVL385:
 2957              	.L219:
 2958 010a 0220     		mov	r0, #2
 2959              	.LVL386:
 2960              	.L209:
 914:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 2961              		.loc 1 914 0
 2962              		@ sp needed
 2963              	.LVL387:
 2964 010c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2965              		.cfi_endproc
 2966              	.LFE13:
 2967              		.size	put_fat, .-put_fat
 2968 010e C046     		.section	.text.create_chain,"ax",%progbits
 2969              		.align	2
 2970              		.code	16
 2971              		.thumb_func
 2972              		.type	create_chain, %function
 2973              	create_chain:
 2974              	.LFB15:
 982:.\sd/ff.c     **** 	DWORD cs, ncl, scl;
 2975              		.loc 1 982 0
 2976              		.cfi_startproc
 2977              	.LVL388:
 2978 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2979              		.cfi_def_cfa_offset 24
 2980              		.cfi_offset 3, -24
 2981              		.cfi_offset 4, -20
 2982              		.cfi_offset 5, -16
 2983              		.cfi_offset 6, -12
 2984              		.cfi_offset 7, -8
 2985              		.cfi_offset 14, -4
 2986 0002 051C     		mov	r5, r0
 2987 0004 0F1E     		sub	r7, r1, #0
 987:.\sd/ff.c     **** 		scl = fs->last_clust;			/* Get suggested start point */
 2988              		.loc 1 987 0
 2989 0006 06D1     		bne	.L223
 988:.\sd/ff.c     **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 2990              		.loc 1 988 0
 2991 0008 C668     		ldr	r6, [r0, #12]
 2992              	.LVL389:
 989:.\sd/ff.c     **** 	}
 2993              		.loc 1 989 0
 2994 000a 002E     		cmp	r6, #0
 2995 000c 0CD0     		beq	.L235
 989:.\sd/ff.c     **** 	}
 2996              		.loc 1 989 0 is_stmt 0 discriminator 2
 2997 000e 8369     		ldr	r3, [r0, #24]
 2998 0010 B342     		cmp	r3, r6
 2999 0012 0BD9     		bls	.L236
 3000 0014 0BE0     		b	.L224
 3001              	.LVL390:
 3002              	.L223:
 992:.\sd/ff.c     **** 		if (cs < 2) return 1;			/* It is an invalid cluster */
 3003              		.loc 1 992 0 is_stmt 1
 3004 0016 FFF7FEFF 		bl	get_fat
 3005              	.LVL391:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 97


 993:.\sd/ff.c     **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 3006              		.loc 1 993 0
 3007 001a 0128     		cmp	r0, #1
 3008 001c 3DD9     		bls	.L237
 994:.\sd/ff.c     **** 		scl = clst;
 3009              		.loc 1 994 0
 3010 001e AB69     		ldr	r3, [r5, #24]
 3011 0020 8342     		cmp	r3, r0
 3012 0022 3FD8     		bhi	.L225
 995:.\sd/ff.c     **** 	}
 3013              		.loc 1 995 0
 3014 0024 3E1C     		mov	r6, r7
 3015 0026 02E0     		b	.L224
 3016              	.LVL392:
 3017              	.L235:
 989:.\sd/ff.c     **** 	}
 3018              		.loc 1 989 0
 3019 0028 0126     		mov	r6, #1
 3020              	.LVL393:
 3021 002a 00E0     		b	.L224
 3022              	.LVL394:
 3023              	.L236:
 3024 002c 0126     		mov	r6, #1
 3025              	.LVL395:
 3026              	.L224:
 998:.\sd/ff.c     **** 	for (;;) {
 3027              		.loc 1 998 0
 3028 002e 341C     		mov	r4, r6
 3029              	.LVL396:
 3030              	.L230:
1000:.\sd/ff.c     **** 		if (ncl >= fs->n_fatent) {		/* Wrap around */
 3031              		.loc 1 1000 0
 3032 0030 0134     		add	r4, r4, #1
 3033              	.LVL397:
1001:.\sd/ff.c     **** 			ncl = 2;
 3034              		.loc 1 1001 0
 3035 0032 AB69     		ldr	r3, [r5, #24]
 3036 0034 A342     		cmp	r3, r4
 3037 0036 02D8     		bhi	.L226
 3038              	.LVL398:
1003:.\sd/ff.c     **** 		}
 3039              		.loc 1 1003 0
 3040 0038 012E     		cmp	r6, #1
 3041 003a 30D9     		bls	.L239
1002:.\sd/ff.c     **** 			if (ncl > scl) return 0;	/* No free cluster */
 3042              		.loc 1 1002 0
 3043 003c 0224     		mov	r4, #2
 3044              	.LVL399:
 3045              	.L226:
1005:.\sd/ff.c     **** 		if (cs == 0) break;				/* Found a free cluster */
 3046              		.loc 1 1005 0
 3047 003e 281C     		mov	r0, r5
 3048 0040 211C     		mov	r1, r4
 3049 0042 FFF7FEFF 		bl	get_fat
 3050              	.LVL400:
1006:.\sd/ff.c     **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 3051              		.loc 1 1006 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 98


 3052 0046 0028     		cmp	r0, #0
 3053 0048 06D0     		beq	.L227
1007:.\sd/ff.c     **** 			return cs;
 3054              		.loc 1 1007 0
 3055 004a 431C     		add	r3, r0, #1
 3056 004c 2AD0     		beq	.L225
1007:.\sd/ff.c     **** 			return cs;
 3057              		.loc 1 1007 0 is_stmt 0 discriminator 1
 3058 004e 0128     		cmp	r0, #1
 3059 0050 28D0     		beq	.L225
1009:.\sd/ff.c     **** 	}
 3060              		.loc 1 1009 0 is_stmt 1
 3061 0052 B442     		cmp	r4, r6
 3062 0054 ECD1     		bne	.L230
 3063 0056 24E0     		b	.L240
 3064              	.L227:
1012:.\sd/ff.c     **** 	if (res == FR_OK && clst != 0) {
 3065              		.loc 1 1012 0
 3066 0058 281C     		mov	r0, r5
 3067              	.LVL401:
 3068 005a 211C     		mov	r1, r4
 3069 005c 124A     		ldr	r2, .L242
 3070 005e FFF7FEFF 		bl	put_fat
 3071              	.LVL402:
1013:.\sd/ff.c     **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 3072              		.loc 1 1013 0
 3073 0062 0028     		cmp	r0, #0
 3074 0064 06D1     		bne	.L231
1013:.\sd/ff.c     **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 3075              		.loc 1 1013 0 is_stmt 0 discriminator 1
 3076 0066 002F     		cmp	r7, #0
 3077 0068 04D0     		beq	.L231
1014:.\sd/ff.c     **** 	}
 3078              		.loc 1 1014 0 is_stmt 1
 3079 006a 281C     		mov	r0, r5
 3080              	.LVL403:
 3081 006c 391C     		mov	r1, r7
 3082 006e 221C     		mov	r2, r4
 3083 0070 FFF7FEFF 		bl	put_fat
 3084              	.LVL404:
 3085              	.L231:
1016:.\sd/ff.c     **** 		fs->last_clust = ncl;			/* Update FSINFO */
 3086              		.loc 1 1016 0
 3087 0074 0028     		cmp	r0, #0
 3088 0076 08D1     		bne	.L232
1017:.\sd/ff.c     **** 		if (fs->free_clust != 0xFFFFFFFF) {
 3089              		.loc 1 1017 0
 3090 0078 EC60     		str	r4, [r5, #12]
1018:.\sd/ff.c     **** 			fs->free_clust--;
 3091              		.loc 1 1018 0
 3092 007a 2B69     		ldr	r3, [r5, #16]
 3093 007c 5A1C     		add	r2, r3, #1
 3094 007e 0AD0     		beq	.L233
1019:.\sd/ff.c     **** 			fs->fsi_flag = 1;
 3095              		.loc 1 1019 0
 3096 0080 013B     		sub	r3, r3, #1
 3097 0082 2B61     		str	r3, [r5, #16]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 99


1020:.\sd/ff.c     **** 		}
 3098              		.loc 1 1020 0
 3099 0084 0123     		mov	r3, #1
 3100 0086 6B71     		strb	r3, [r5, #5]
 3101 0088 05E0     		b	.L233
 3102              	.L232:
1023:.\sd/ff.c     **** 	}
 3103              		.loc 1 1023 0
 3104 008a 0128     		cmp	r0, #1
 3105 008c 02D1     		bne	.L241
 3106 008e 0124     		mov	r4, #1
 3107              	.LVL405:
 3108 0090 6442     		neg	r4, r4
 3109 0092 00E0     		b	.L233
 3110              	.LVL406:
 3111              	.L241:
 3112 0094 0124     		mov	r4, #1
 3113              	.LVL407:
 3114              	.L233:
1026:.\sd/ff.c     **** }
 3115              		.loc 1 1026 0
 3116 0096 201C     		mov	r0, r4
 3117              	.LVL408:
 3118 0098 04E0     		b	.L225
 3119              	.LVL409:
 3120              	.L237:
 993:.\sd/ff.c     **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 3121              		.loc 1 993 0
 3122 009a 0120     		mov	r0, #1
 3123              	.LVL410:
 3124 009c 02E0     		b	.L225
 3125              	.LVL411:
 3126              	.L239:
1003:.\sd/ff.c     **** 		}
 3127              		.loc 1 1003 0
 3128 009e 0020     		mov	r0, #0
 3129 00a0 00E0     		b	.L225
 3130              	.LVL412:
 3131              	.L240:
1009:.\sd/ff.c     **** 	}
 3132              		.loc 1 1009 0
 3133 00a2 0020     		mov	r0, #0
 3134              	.LVL413:
 3135              	.L225:
1027:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 3136              		.loc 1 1027 0
 3137              		@ sp needed
 3138              	.LVL414:
 3139              	.LVL415:
 3140 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3141              	.L243:
 3142 00a6 C046     		.align	2
 3143              	.L242:
 3144 00a8 FFFFFF0F 		.word	268435455
 3145              		.cfi_endproc
 3146              	.LFE15:
 3147              		.size	create_chain, .-create_chain
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 100


 3148              		.section	.text.dir_next,"ax",%progbits
 3149              		.align	2
 3150              		.code	16
 3151              		.thumb_func
 3152              		.type	dir_next, %function
 3153              	dir_next:
 3154              	.LFB17:
1117:.\sd/ff.c     **** 	DWORD clst;
 3155              		.loc 1 1117 0
 3156              		.cfi_startproc
 3157              	.LVL416:
 3158 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3159              		.cfi_def_cfa_offset 20
 3160              		.cfi_offset 4, -20
 3161              		.cfi_offset 5, -16
 3162              		.cfi_offset 6, -12
 3163              		.cfi_offset 7, -8
 3164              		.cfi_offset 14, -4
 3165 0002 4746     		mov	r7, r8
 3166 0004 80B4     		push	{r7}
 3167              		.cfi_def_cfa_offset 24
 3168              		.cfi_offset 8, -24
1123:.\sd/ff.c     **** 	if (!i || !dj->sect)	/* Report EOT when index has reached 65535 */
 3169              		.loc 1 1123 0
 3170 0006 C488     		ldrh	r4, [r0, #6]
 3171 0008 0134     		add	r4, r4, #1
 3172 000a A4B2     		uxth	r4, r4
 3173              	.LVL417:
1124:.\sd/ff.c     **** 		return FR_NO_FILE;
 3174              		.loc 1 1124 0
 3175 000c 002C     		cmp	r4, #0
 3176 000e 69D0     		beq	.L251
1124:.\sd/ff.c     **** 		return FR_NO_FILE;
 3177              		.loc 1 1124 0 is_stmt 0 discriminator 1
 3178 0010 0369     		ldr	r3, [r0, #16]
 3179 0012 002B     		cmp	r3, #0
 3180 0014 68D0     		beq	.L252
 3181 0016 0E1C     		mov	r6, r1
 3182 0018 051C     		mov	r5, r0
1127:.\sd/ff.c     **** 		dj->sect++;					/* Next sector */
 3183              		.loc 1 1127 0 is_stmt 1
 3184 001a 0F27     		mov	r7, #15
 3185 001c 2740     		and	r7, r4
 3186 001e 58D1     		bne	.L246
1128:.\sd/ff.c     **** 
 3187              		.loc 1 1128 0
 3188 0020 0133     		add	r3, r3, #1
 3189 0022 0361     		str	r3, [r0, #16]
1130:.\sd/ff.c     **** 			if (i >= dj->fs->n_rootdir)	/* Report EOT when end of table */
 3190              		.loc 1 1130 0
 3191 0024 C168     		ldr	r1, [r0, #12]
 3192              	.LVL418:
 3193 0026 0029     		cmp	r1, #0
 3194 0028 04D1     		bne	.L247
1131:.\sd/ff.c     **** 				return FR_NO_FILE;
 3195              		.loc 1 1131 0
 3196 002a 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 101


 3197 002c 1B89     		ldrh	r3, [r3, #8]
 3198 002e A342     		cmp	r3, r4
 3199 0030 5CD9     		bls	.L253
 3200 0032 4EE0     		b	.L246
 3201              	.L247:
1135:.\sd/ff.c     **** 				clst = get_fat(dj->fs, dj->clust);				/* Get next cluster */
 3202              		.loc 1 1135 0
 3203 0034 2309     		lsr	r3, r4, #4
 3204 0036 0068     		ldr	r0, [r0]
 3205              	.LVL419:
 3206 0038 8278     		ldrb	r2, [r0, #2]
 3207 003a 013A     		sub	r2, r2, #1
 3208 003c 1A42     		tst	r2, r3
 3209 003e 48D1     		bne	.L246
1136:.\sd/ff.c     **** 				if (clst <= 1) return FR_INT_ERR;
 3210              		.loc 1 1136 0
 3211 0040 FFF7FEFF 		bl	get_fat
 3212              	.LVL420:
 3213 0044 8046     		mov	r8, r0
 3214              	.LVL421:
1137:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3215              		.loc 1 1137 0
 3216 0046 031E     		sub	r3, r0, #0
 3217 0048 012B     		cmp	r3, #1
 3218 004a 51D9     		bls	.L254
1138:.\sd/ff.c     **** 				if (clst >= dj->fs->n_fatent) {					/* When it reached end of dynamic table */
 3219              		.loc 1 1138 0
 3220 004c 0133     		add	r3, r3, #1
 3221 004e 51D0     		beq	.L255
1139:.\sd/ff.c     **** #if !_FS_READONLY
 3222              		.loc 1 1139 0
 3223 0050 2868     		ldr	r0, [r5]
 3224              	.LVL422:
 3225 0052 8369     		ldr	r3, [r0, #24]
 3226 0054 4345     		cmp	r3, r8
 3227 0056 35D8     		bhi	.L248
 3228              	.LBB3:
1142:.\sd/ff.c     **** 					clst = create_chain(dj->fs, dj->clust);		/* Stretch cluster chain */
 3229              		.loc 1 1142 0
 3230 0058 002E     		cmp	r6, #0
 3231 005a 4DD0     		beq	.L256
1143:.\sd/ff.c     **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3232              		.loc 1 1143 0
 3233 005c E968     		ldr	r1, [r5, #12]
 3234 005e FFF7FEFF 		bl	create_chain
 3235              	.LVL423:
 3236 0062 8046     		mov	r8, r0
 3237              	.LVL424:
1144:.\sd/ff.c     **** 					if (clst == 1) return FR_INT_ERR;
 3238              		.loc 1 1144 0
 3239 0064 031E     		sub	r3, r0, #0
 3240 0066 49D0     		beq	.L257
1145:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3241              		.loc 1 1145 0
 3242 0068 0128     		cmp	r0, #1
 3243 006a 49D0     		beq	.L258
1146:.\sd/ff.c     **** 					/* Clean-up stretched table */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 102


 3244              		.loc 1 1146 0
 3245 006c 0133     		add	r3, r3, #1
 3246 006e 49D0     		beq	.L259
1148:.\sd/ff.c     **** 					mem_set(dj->fs->win, 0, SS(dj->fs));			/* Clear window buffer */
 3247              		.loc 1 1148 0
 3248 0070 2868     		ldr	r0, [r5]
 3249              	.LVL425:
 3250 0072 0021     		mov	r1, #0
 3251 0074 FFF7FEFF 		bl	move_window
 3252              	.LVL426:
 3253 0078 0028     		cmp	r0, #0
 3254 007a 45D1     		bne	.L260
1149:.\sd/ff.c     **** 					dj->fs->winsect = clust2sect(dj->fs, clst);	/* Cluster start sector */
 3255              		.loc 1 1149 0
 3256 007c 2868     		ldr	r0, [r5]
 3257 007e 3030     		add	r0, r0, #48
 3258 0080 0021     		mov	r1, #0
 3259 0082 8022     		mov	r2, #128
 3260 0084 9200     		lsl	r2, r2, #2
 3261 0086 FFF7FEFF 		bl	mem_set
 3262              	.LVL427:
1150:.\sd/ff.c     **** 					for (c = 0; c < dj->fs->csize; c++) {		/* Fill the new cluster with 0 */
 3263              		.loc 1 1150 0
 3264 008a 2E68     		ldr	r6, [r5]
 3265              	.LVL428:
 3266 008c 301C     		mov	r0, r6
 3267 008e 4146     		mov	r1, r8
 3268 0090 FFF7FEFF 		bl	clust2sect
 3269              	.LVL429:
 3270 0094 F062     		str	r0, [r6, #44]
 3271              	.LVL430:
1151:.\sd/ff.c     **** 						dj->fs->wflag = 1;
 3272              		.loc 1 1151 0
 3273 0096 0026     		mov	r6, #0
 3274 0098 0DE0     		b	.L249
 3275              	.LVL431:
 3276              	.L250:
1152:.\sd/ff.c     **** 						if (move_window(dj->fs, 0)) return FR_DISK_ERR;
 3277              		.loc 1 1152 0
 3278 009a 0122     		mov	r2, #1
 3279 009c 1A71     		strb	r2, [r3, #4]
1153:.\sd/ff.c     **** 						dj->fs->winsect++;
 3280              		.loc 1 1153 0
 3281 009e 2868     		ldr	r0, [r5]
 3282 00a0 0021     		mov	r1, #0
 3283 00a2 FFF7FEFF 		bl	move_window
 3284              	.LVL432:
 3285 00a6 0028     		cmp	r0, #0
 3286 00a8 30D1     		bne	.L261
1154:.\sd/ff.c     **** 					}
 3287              		.loc 1 1154 0 discriminator 2
 3288 00aa 2A68     		ldr	r2, [r5]
 3289 00ac D36A     		ldr	r3, [r2, #44]
 3290 00ae 0133     		add	r3, r3, #1
 3291 00b0 D362     		str	r3, [r2, #44]
1151:.\sd/ff.c     **** 						dj->fs->wflag = 1;
 3292              		.loc 1 1151 0 discriminator 2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 103


 3293 00b2 0136     		add	r6, r6, #1
 3294              	.LVL433:
 3295 00b4 F6B2     		uxtb	r6, r6
 3296              	.LVL434:
 3297              	.L249:
1151:.\sd/ff.c     **** 						dj->fs->wflag = 1;
 3298              		.loc 1 1151 0 is_stmt 0 discriminator 1
 3299 00b6 2B68     		ldr	r3, [r5]
 3300 00b8 9A78     		ldrb	r2, [r3, #2]
 3301 00ba B242     		cmp	r2, r6
 3302 00bc EDD8     		bhi	.L250
1156:.\sd/ff.c     **** #else
 3303              		.loc 1 1156 0 is_stmt 1
 3304 00be DA6A     		ldr	r2, [r3, #44]
 3305 00c0 961B     		sub	r6, r2, r6
 3306              	.LVL435:
 3307 00c2 DE62     		str	r6, [r3, #44]
 3308              	.L248:
 3309              	.LBE3:
1161:.\sd/ff.c     **** 				dj->sect = clust2sect(dj->fs, clst);
 3310              		.loc 1 1161 0
 3311 00c4 4346     		mov	r3, r8
 3312 00c6 EB60     		str	r3, [r5, #12]
1162:.\sd/ff.c     **** 			}
 3313              		.loc 1 1162 0
 3314 00c8 2868     		ldr	r0, [r5]
 3315 00ca 4146     		mov	r1, r8
 3316 00cc FFF7FEFF 		bl	clust2sect
 3317              	.LVL436:
 3318 00d0 2861     		str	r0, [r5, #16]
 3319              	.LVL437:
 3320              	.L246:
1167:.\sd/ff.c     **** 	dj->dir = dj->fs->win + (i % (SS(dj->fs) / SZ_DIR)) * SZ_DIR;
 3321              		.loc 1 1167 0
 3322 00d2 EC80     		strh	r4, [r5, #6]
1168:.\sd/ff.c     **** 
 3323              		.loc 1 1168 0
 3324 00d4 7F01     		lsl	r7, r7, #5
 3325 00d6 3037     		add	r7, r7, #48
 3326 00d8 2B68     		ldr	r3, [r5]
 3327 00da 9C46     		mov	ip, r3
 3328 00dc 6744     		add	r7, r7, ip
 3329 00de 6F61     		str	r7, [r5, #20]
1170:.\sd/ff.c     **** }
 3330              		.loc 1 1170 0
 3331 00e0 0020     		mov	r0, #0
 3332 00e2 14E0     		b	.L245
 3333              	.LVL438:
 3334              	.L251:
1125:.\sd/ff.c     **** 
 3335              		.loc 1 1125 0
 3336 00e4 0420     		mov	r0, #4
 3337              	.LVL439:
 3338 00e6 12E0     		b	.L245
 3339              	.LVL440:
 3340              	.L252:
 3341 00e8 0420     		mov	r0, #4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 104


 3342              	.LVL441:
 3343 00ea 10E0     		b	.L245
 3344              	.LVL442:
 3345              	.L253:
1132:.\sd/ff.c     **** 		}
 3346              		.loc 1 1132 0
 3347 00ec 0420     		mov	r0, #4
 3348              	.LVL443:
 3349 00ee 0EE0     		b	.L245
 3350              	.LVL444:
 3351              	.L254:
1137:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3352              		.loc 1 1137 0
 3353 00f0 0220     		mov	r0, #2
 3354              	.LVL445:
 3355 00f2 0CE0     		b	.L245
 3356              	.LVL446:
 3357              	.L255:
1138:.\sd/ff.c     **** 				if (clst >= dj->fs->n_fatent) {					/* When it reached end of dynamic table */
 3358              		.loc 1 1138 0
 3359 00f4 0120     		mov	r0, #1
 3360              	.LVL447:
 3361 00f6 0AE0     		b	.L245
 3362              	.L256:
 3363              	.LBB4:
1142:.\sd/ff.c     **** 					clst = create_chain(dj->fs, dj->clust);		/* Stretch cluster chain */
 3364              		.loc 1 1142 0
 3365 00f8 0420     		mov	r0, #4
 3366 00fa 08E0     		b	.L245
 3367              	.LVL448:
 3368              	.L257:
1144:.\sd/ff.c     **** 					if (clst == 1) return FR_INT_ERR;
 3369              		.loc 1 1144 0
 3370 00fc 0720     		mov	r0, #7
 3371              	.LVL449:
 3372 00fe 06E0     		b	.L245
 3373              	.LVL450:
 3374              	.L258:
1145:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3375              		.loc 1 1145 0
 3376 0100 0220     		mov	r0, #2
 3377              	.LVL451:
 3378 0102 04E0     		b	.L245
 3379              	.LVL452:
 3380              	.L259:
1146:.\sd/ff.c     **** 					/* Clean-up stretched table */
 3381              		.loc 1 1146 0
 3382 0104 0120     		mov	r0, #1
 3383              	.LVL453:
 3384 0106 02E0     		b	.L245
 3385              	.L260:
1148:.\sd/ff.c     **** 					mem_set(dj->fs->win, 0, SS(dj->fs));			/* Clear window buffer */
 3386              		.loc 1 1148 0
 3387 0108 0120     		mov	r0, #1
 3388 010a 00E0     		b	.L245
 3389              	.LVL454:
 3390              	.L261:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 105


1153:.\sd/ff.c     **** 						dj->fs->winsect++;
 3391              		.loc 1 1153 0
 3392 010c 0120     		mov	r0, #1
 3393              	.LVL455:
 3394              	.L245:
 3395              	.LBE4:
1171:.\sd/ff.c     **** 
 3396              		.loc 1 1171 0
 3397              		@ sp needed
 3398              	.LVL456:
 3399 010e 04BC     		pop	{r2}
 3400 0110 9046     		mov	r8, r2
 3401 0112 F0BD     		pop	{r4, r5, r6, r7, pc}
 3402              		.cfi_endproc
 3403              	.LFE17:
 3404              		.size	dir_next, .-dir_next
 3405              		.section	.text.dir_find,"ax",%progbits
 3406              		.align	2
 3407              		.code	16
 3408              		.thumb_func
 3409              		.type	dir_find, %function
 3410              	dir_find:
 3411              	.LFB18:
1356:.\sd/ff.c     **** 	FRESULT res;
 3412              		.loc 1 1356 0
 3413              		.cfi_startproc
 3414              	.LVL457:
 3415 0000 38B5     		push	{r3, r4, r5, lr}
 3416              		.cfi_def_cfa_offset 16
 3417              		.cfi_offset 3, -16
 3418              		.cfi_offset 4, -12
 3419              		.cfi_offset 5, -8
 3420              		.cfi_offset 14, -4
 3421 0002 051C     		mov	r5, r0
1363:.\sd/ff.c     **** 	if (res != FR_OK) return res;
 3422              		.loc 1 1363 0
 3423 0004 0021     		mov	r1, #0
 3424 0006 FFF7FEFF 		bl	dir_sdi
 3425              	.LVL458:
1364:.\sd/ff.c     **** 
 3426              		.loc 1 1364 0
 3427 000a 0028     		cmp	r0, #0
 3428 000c 1BD1     		bne	.L263
 3429              	.LVL459:
 3430              	.L266:
1370:.\sd/ff.c     **** 		if (res != FR_OK) break;
 3431              		.loc 1 1370 0
 3432 000e 2868     		ldr	r0, [r5]
 3433 0010 2969     		ldr	r1, [r5, #16]
 3434 0012 FFF7FEFF 		bl	move_window
 3435              	.LVL460:
 3436 0016 041E     		sub	r4, r0, #0
 3437              	.LVL461:
1371:.\sd/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
 3438              		.loc 1 1371 0
 3439 0018 14D1     		bne	.L264
1372:.\sd/ff.c     **** 		c = dir[DIR_Name];
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 106


 3440              		.loc 1 1372 0
 3441 001a 6869     		ldr	r0, [r5, #20]
 3442              	.LVL462:
1373:.\sd/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3443              		.loc 1 1373 0
 3444 001c 0378     		ldrb	r3, [r0]
 3445              	.LVL463:
1374:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
 3446              		.loc 1 1374 0
 3447 001e 002B     		cmp	r3, #0
 3448 0020 0FD0     		beq	.L268
1397:.\sd/ff.c     **** 			break;
 3449              		.loc 1 1397 0
 3450 0022 C37A     		ldrb	r3, [r0, #11]
 3451              	.LVL464:
 3452 0024 1B07     		lsl	r3, r3, #28
 3453 0026 05D4     		bmi	.L265
1397:.\sd/ff.c     **** 			break;
 3454              		.loc 1 1397 0 is_stmt 0 discriminator 1
 3455 0028 A969     		ldr	r1, [r5, #24]
 3456 002a 0B22     		mov	r2, #11
 3457 002c FFF7FEFF 		bl	mem_cmp
 3458              	.LVL465:
 3459 0030 0028     		cmp	r0, #0
 3460 0032 07D0     		beq	.L264
 3461              	.L265:
1400:.\sd/ff.c     **** 	} while (res == FR_OK);
 3462              		.loc 1 1400 0 is_stmt 1
 3463 0034 281C     		mov	r0, r5
 3464 0036 0021     		mov	r1, #0
 3465 0038 FFF7FEFF 		bl	dir_next
 3466              	.LVL466:
 3467 003c 041E     		sub	r4, r0, #0
 3468              	.LVL467:
1401:.\sd/ff.c     **** 
 3469              		.loc 1 1401 0
 3470 003e E6D0     		beq	.L266
 3471 0040 00E0     		b	.L264
 3472              	.LVL468:
 3473              	.L268:
1374:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
 3474              		.loc 1 1374 0
 3475 0042 0424     		mov	r4, #4
 3476              	.LVL469:
 3477              	.L264:
1403:.\sd/ff.c     **** }
 3478              		.loc 1 1403 0
 3479 0044 201C     		mov	r0, r4
 3480              	.LVL470:
 3481              	.L263:
1404:.\sd/ff.c     **** 
 3482              		.loc 1 1404 0
 3483              		@ sp needed
 3484              	.LVL471:
 3485 0046 38BD     		pop	{r3, r4, r5, pc}
 3486              		.cfi_endproc
 3487              	.LFE18:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 107


 3488              		.size	dir_find, .-dir_find
 3489              		.section	.text.follow_path,"ax",%progbits
 3490              		.align	2
 3491              		.code	16
 3492              		.thumb_func
 3493              		.type	follow_path, %function
 3494              	follow_path:
 3495              	.LFB24:
1923:.\sd/ff.c     **** 	FRESULT res;
 3496              		.loc 1 1923 0
 3497              		.cfi_startproc
 3498              	.LVL472:
 3499 0000 10B5     		push	{r4, lr}
 3500              		.cfi_def_cfa_offset 8
 3501              		.cfi_offset 4, -8
 3502              		.cfi_offset 14, -4
 3503 0002 82B0     		sub	sp, sp, #8
 3504              		.cfi_def_cfa_offset 16
 3505 0004 041C     		mov	r4, r0
 3506 0006 0191     		str	r1, [sp, #4]
1935:.\sd/ff.c     **** 		path++;
 3507              		.loc 1 1935 0
 3508 0008 0B78     		ldrb	r3, [r1]
 3509 000a 2F2B     		cmp	r3, #47
 3510 000c 01D0     		beq	.L270
1935:.\sd/ff.c     **** 		path++;
 3511              		.loc 1 1935 0 is_stmt 0 discriminator 1
 3512 000e 5C2B     		cmp	r3, #92
 3513 0010 01D1     		bne	.L271
 3514              	.L270:
1936:.\sd/ff.c     **** 	dj->sclust = 0;						/* Start from the root dir */
 3515              		.loc 1 1936 0 is_stmt 1
 3516 0012 0131     		add	r1, r1, #1
 3517              	.LVL473:
 3518 0014 0191     		str	r1, [sp, #4]
 3519              	.LVL474:
 3520              	.L271:
1937:.\sd/ff.c     **** #endif
 3521              		.loc 1 1937 0
 3522 0016 0023     		mov	r3, #0
 3523 0018 A360     		str	r3, [r4, #8]
1940:.\sd/ff.c     **** 		res = dir_sdi(dj, 0);
 3524              		.loc 1 1940 0
 3525 001a 019B     		ldr	r3, [sp, #4]
 3526 001c 1B78     		ldrb	r3, [r3]
 3527 001e 1F2B     		cmp	r3, #31
 3528 0020 06D8     		bhi	.L272
1941:.\sd/ff.c     **** 		dj->dir = 0;
 3529              		.loc 1 1941 0
 3530 0022 201C     		mov	r0, r4
 3531              	.LVL475:
 3532 0024 0021     		mov	r1, #0
 3533 0026 FFF7FEFF 		bl	dir_sdi
 3534              	.LVL476:
1942:.\sd/ff.c     **** 
 3535              		.loc 1 1942 0
 3536 002a 0023     		mov	r3, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 108


 3537 002c 6361     		str	r3, [r4, #20]
 3538 002e 27E0     		b	.L273
 3539              	.LVL477:
 3540              	.L272:
1946:.\sd/ff.c     **** 			if (res != FR_OK) break;
 3541              		.loc 1 1946 0
 3542 0030 201C     		mov	r0, r4
 3543 0032 01A9     		add	r1, sp, #4
 3544 0034 FFF7FEFF 		bl	create_name
 3545              	.LVL478:
1947:.\sd/ff.c     **** 			res = dir_find(dj);				/* Find it */
 3546              		.loc 1 1947 0
 3547 0038 0028     		cmp	r0, #0
 3548 003a 21D1     		bne	.L273
1948:.\sd/ff.c     **** 			ns = *(dj->fn+NS);
 3549              		.loc 1 1948 0
 3550 003c 201C     		mov	r0, r4
 3551              	.LVL479:
 3552 003e FFF7FEFF 		bl	dir_find
 3553              	.LVL480:
1949:.\sd/ff.c     **** 			if (res != FR_OK) {				/* Failed to find the object */
 3554              		.loc 1 1949 0
 3555 0042 A369     		ldr	r3, [r4, #24]
 3556 0044 DB7A     		ldrb	r3, [r3, #11]
 3557              	.LVL481:
1950:.\sd/ff.c     **** 				if (res != FR_NO_FILE) break;	/* Abort if any hard error occured */
 3558              		.loc 1 1950 0
 3559 0046 0028     		cmp	r0, #0
 3560 0048 04D0     		beq	.L274
1951:.\sd/ff.c     **** 				/* Object not found */
 3561              		.loc 1 1951 0
 3562 004a 0428     		cmp	r0, #4
 3563 004c 18D1     		bne	.L273
1958:.\sd/ff.c     **** 				}
 3564              		.loc 1 1958 0
 3565 004e 5B07     		lsl	r3, r3, #29
 3566 0050 13D5     		bpl	.L275
 3567              	.LVL482:
 3568 0052 15E0     		b	.L273
 3569              	.LVL483:
 3570              	.L274:
1962:.\sd/ff.c     **** 			dir = dj->dir;						/* There is next segment. Follow the sub directory */
 3571              		.loc 1 1962 0
 3572 0054 5B07     		lsl	r3, r3, #29
 3573 0056 13D4     		bmi	.L273
 3574              	.LVL484:
1963:.\sd/ff.c     **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* Cannot follow because it is a file */
 3575              		.loc 1 1963 0
 3576 0058 6369     		ldr	r3, [r4, #20]
 3577              	.LVL485:
1964:.\sd/ff.c     **** 				res = FR_NO_PATH; break;
 3578              		.loc 1 1964 0
 3579 005a DA7A     		ldrb	r2, [r3, #11]
 3580 005c D206     		lsl	r2, r2, #27
 3581 005e 0ED5     		bpl	.L276
1967:.\sd/ff.c     **** 		}
 3582              		.loc 1 1967 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 109


 3583 0060 597D     		ldrb	r1, [r3, #21]
 3584 0062 0902     		lsl	r1, r1, #8
 3585 0064 1A7D     		ldrb	r2, [r3, #20]
 3586 0066 1143     		orr	r1, r2
 3587 0068 0904     		lsl	r1, r1, #16
 3588 006a D87E     		ldrb	r0, [r3, #27]
 3589              	.LVL486:
 3590 006c 0002     		lsl	r0, r0, #8
 3591 006e 9A7E     		ldrb	r2, [r3, #26]
 3592 0070 031C     		mov	r3, r0
 3593              	.LVL487:
 3594 0072 1343     		orr	r3, r2
 3595 0074 0B43     		orr	r3, r1
 3596 0076 A360     		str	r3, [r4, #8]
 3597              	.LVL488:
1968:.\sd/ff.c     **** 	}
 3598              		.loc 1 1968 0
 3599 0078 DAE7     		b	.L272
 3600              	.LVL489:
 3601              	.L275:
1958:.\sd/ff.c     **** 				}
 3602              		.loc 1 1958 0
 3603 007a 0520     		mov	r0, #5
 3604              	.LVL490:
 3605 007c 00E0     		b	.L273
 3606              	.LVL491:
 3607              	.L276:
1965:.\sd/ff.c     **** 			}
 3608              		.loc 1 1965 0
 3609 007e 0520     		mov	r0, #5
 3610              	.LVL492:
 3611              	.L273:
1972:.\sd/ff.c     **** 
 3612              		.loc 1 1972 0
 3613 0080 02B0     		add	sp, sp, #8
 3614              		@ sp needed
 3615              	.LVL493:
 3616 0082 10BD     		pop	{r4, pc}
 3617              		.cfi_endproc
 3618              	.LFE24:
 3619              		.size	follow_path, .-follow_path
 3620              		.section	.text.dir_register,"ax",%progbits
 3621              		.align	2
 3622              		.code	16
 3623              		.thumb_func
 3624              		.type	dir_register, %function
 3625              	dir_register:
 3626              	.LFB20:
1474:.\sd/ff.c     **** 	FRESULT res;
 3627              		.loc 1 1474 0
 3628              		.cfi_startproc
 3629              	.LVL494:
 3630 0000 70B5     		push	{r4, r5, r6, lr}
 3631              		.cfi_def_cfa_offset 16
 3632              		.cfi_offset 4, -16
 3633              		.cfi_offset 5, -12
 3634              		.cfi_offset 6, -8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 110


 3635              		.cfi_offset 14, -4
 3636 0002 051C     		mov	r5, r0
1541:.\sd/ff.c     **** 	if (res == FR_OK) {
 3637              		.loc 1 1541 0
 3638 0004 0021     		mov	r1, #0
 3639 0006 FFF7FEFF 		bl	dir_sdi
 3640              	.LVL495:
 3641 000a 041E     		sub	r4, r0, #0
 3642              	.LVL496:
1542:.\sd/ff.c     **** 		do {	/* Find a blank entry for the SFN */
 3643              		.loc 1 1542 0
 3644 000c 11D1     		bne	.L278
 3645              	.LVL497:
 3646              	.L279:
1544:.\sd/ff.c     **** 			if (res != FR_OK) break;
 3647              		.loc 1 1544 0
 3648 000e 2868     		ldr	r0, [r5]
 3649 0010 2969     		ldr	r1, [r5, #16]
 3650 0012 FFF7FEFF 		bl	move_window
 3651              	.LVL498:
 3652 0016 041E     		sub	r4, r0, #0
 3653              	.LVL499:
1545:.\sd/ff.c     **** 			c = *dj->dir;
 3654              		.loc 1 1545 0
 3655 0018 0BD1     		bne	.L278
1546:.\sd/ff.c     **** 			if (c == DDE || c == 0) break;	/* Is it a blank entry? */
 3656              		.loc 1 1546 0
 3657 001a 6B69     		ldr	r3, [r5, #20]
 3658 001c 1B78     		ldrb	r3, [r3]
 3659              	.LVL500:
1547:.\sd/ff.c     **** 			res = dir_next(dj, 1);			/* Next entry with table stretch */
 3660              		.loc 1 1547 0
 3661 001e E52B     		cmp	r3, #229
 3662 0020 07D0     		beq	.L278
1547:.\sd/ff.c     **** 			res = dir_next(dj, 1);			/* Next entry with table stretch */
 3663              		.loc 1 1547 0 is_stmt 0 discriminator 1
 3664 0022 002B     		cmp	r3, #0
 3665 0024 05D0     		beq	.L278
1548:.\sd/ff.c     **** 		} while (res == FR_OK);
 3666              		.loc 1 1548 0 is_stmt 1
 3667 0026 281C     		mov	r0, r5
 3668              	.LVL501:
 3669 0028 0121     		mov	r1, #1
 3670 002a FFF7FEFF 		bl	dir_next
 3671              	.LVL502:
 3672 002e 041E     		sub	r4, r0, #0
 3673              	.LVL503:
1549:.\sd/ff.c     **** 	}
 3674              		.loc 1 1549 0
 3675 0030 EDD0     		beq	.L279
 3676              	.LVL504:
 3677              	.L278:
1553:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 3678              		.loc 1 1553 0
 3679 0032 002C     		cmp	r4, #0
 3680 0034 13D1     		bne	.L280
1554:.\sd/ff.c     **** 		if (res == FR_OK) {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 111


 3681              		.loc 1 1554 0
 3682 0036 2868     		ldr	r0, [r5]
 3683 0038 2969     		ldr	r1, [r5, #16]
 3684 003a FFF7FEFF 		bl	move_window
 3685              	.LVL505:
 3686 003e 041E     		sub	r4, r0, #0
 3687              	.LVL506:
1555:.\sd/ff.c     **** 			dir = dj->dir;
 3688              		.loc 1 1555 0
 3689 0040 0DD1     		bne	.L280
1556:.\sd/ff.c     **** 			mem_set(dir, 0, SZ_DIR);	/* Clean the entry */
 3690              		.loc 1 1556 0
 3691 0042 6E69     		ldr	r6, [r5, #20]
 3692              	.LVL507:
1557:.\sd/ff.c     **** 			mem_cpy(dir, dj->fn, 11);	/* Put SFN */
 3693              		.loc 1 1557 0
 3694 0044 301C     		mov	r0, r6
 3695              	.LVL508:
 3696 0046 0021     		mov	r1, #0
 3697 0048 2022     		mov	r2, #32
 3698 004a FFF7FEFF 		bl	mem_set
 3699              	.LVL509:
1558:.\sd/ff.c     **** #if _USE_LFN
 3700              		.loc 1 1558 0
 3701 004e 301C     		mov	r0, r6
 3702 0050 A969     		ldr	r1, [r5, #24]
 3703 0052 0B22     		mov	r2, #11
 3704 0054 FFF7FEFF 		bl	mem_cpy
 3705              	.LVL510:
1562:.\sd/ff.c     **** 		}
 3706              		.loc 1 1562 0
 3707 0058 2B68     		ldr	r3, [r5]
 3708 005a 0122     		mov	r2, #1
 3709 005c 1A71     		strb	r2, [r3, #4]
 3710              	.LVL511:
 3711              	.L280:
1567:.\sd/ff.c     **** #endif /* !_FS_READONLY */
 3712              		.loc 1 1567 0
 3713 005e 201C     		mov	r0, r4
 3714              		@ sp needed
 3715              	.LVL512:
 3716              	.LVL513:
 3717 0060 70BD     		pop	{r4, r5, r6, pc}
 3718              		.cfi_endproc
 3719              	.LFE20:
 3720              		.size	dir_register, .-dir_register
 3721 0062 C046     		.section	.text.dir_read,"ax",%progbits
 3722              		.align	2
 3723              		.code	16
 3724              		.thumb_func
 3725              		.type	dir_read, %function
 3726              	dir_read:
 3727              	.LFB19:
1417:.\sd/ff.c     **** 	FRESULT res;
 3728              		.loc 1 1417 0
 3729              		.cfi_startproc
 3730              	.LVL514:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 112


 3731 0000 10B5     		push	{r4, lr}
 3732              		.cfi_def_cfa_offset 8
 3733              		.cfi_offset 4, -8
 3734              		.cfi_offset 14, -4
 3735 0002 041C     		mov	r4, r0
 3736              	.LVL515:
1424:.\sd/ff.c     **** 	while (dj->sect) {
 3737              		.loc 1 1424 0
 3738 0004 0420     		mov	r0, #4
 3739              	.LVL516:
1425:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 3740              		.loc 1 1425 0
 3741 0006 15E0     		b	.L282
 3742              	.LVL517:
 3743              	.L285:
1426:.\sd/ff.c     **** 		if (res != FR_OK) break;
 3744              		.loc 1 1426 0
 3745 0008 2068     		ldr	r0, [r4]
 3746              	.LVL518:
 3747 000a FFF7FEFF 		bl	move_window
 3748              	.LVL519:
1427:.\sd/ff.c     **** 		dir = dj->dir;					/* Ptr to the directory entry of current index */
 3749              		.loc 1 1427 0
 3750 000e 0028     		cmp	r0, #0
 3751 0010 15D1     		bne	.L283
1428:.\sd/ff.c     **** 		c = dir[DIR_Name];
 3752              		.loc 1 1428 0
 3753 0012 6269     		ldr	r2, [r4, #20]
 3754              	.LVL520:
1429:.\sd/ff.c     **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3755              		.loc 1 1429 0
 3756 0014 1378     		ldrb	r3, [r2]
 3757              	.LVL521:
1430:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
 3758              		.loc 1 1430 0
 3759 0016 002B     		cmp	r3, #0
 3760 0018 10D0     		beq	.L287
1451:.\sd/ff.c     **** 			break;
 3761              		.loc 1 1451 0
 3762 001a E52B     		cmp	r3, #229
 3763 001c 04D0     		beq	.L284
1451:.\sd/ff.c     **** 			break;
 3764              		.loc 1 1451 0 is_stmt 0 discriminator 1
 3765 001e 2E2B     		cmp	r3, #46
 3766 0020 02D0     		beq	.L284
1451:.\sd/ff.c     **** 			break;
 3767              		.loc 1 1451 0 discriminator 2
 3768 0022 D37A     		ldrb	r3, [r2, #11]
 3769              	.LVL522:
 3770 0024 1B07     		lsl	r3, r3, #28
 3771 0026 0AD5     		bpl	.L283
 3772              	.L284:
1454:.\sd/ff.c     **** 		if (res != FR_OK) break;
 3773              		.loc 1 1454 0 is_stmt 1
 3774 0028 201C     		mov	r0, r4
 3775              	.LVL523:
 3776 002a 0021     		mov	r1, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 113


 3777 002c FFF7FEFF 		bl	dir_next
 3778              	.LVL524:
1455:.\sd/ff.c     **** 	}
 3779              		.loc 1 1455 0
 3780 0030 0028     		cmp	r0, #0
 3781 0032 04D1     		bne	.L283
 3782              	.LVL525:
 3783              	.L282:
1425:.\sd/ff.c     **** 		res = move_window(dj->fs, dj->sect);
 3784              		.loc 1 1425 0
 3785 0034 2169     		ldr	r1, [r4, #16]
 3786 0036 0029     		cmp	r1, #0
 3787 0038 E6D1     		bne	.L285
 3788 003a 00E0     		b	.L283
 3789              	.LVL526:
 3790              	.L287:
1430:.\sd/ff.c     **** #if _USE_LFN	/* LFN configuration */
 3791              		.loc 1 1430 0
 3792 003c 0420     		mov	r0, #4
 3793              	.LVL527:
 3794              	.L283:
1458:.\sd/ff.c     **** 
 3795              		.loc 1 1458 0
 3796 003e 0028     		cmp	r0, #0
 3797 0040 01D0     		beq	.L286
1458:.\sd/ff.c     **** 
 3798              		.loc 1 1458 0 is_stmt 0 discriminator 1
 3799 0042 0023     		mov	r3, #0
 3800 0044 2361     		str	r3, [r4, #16]
 3801              	.L286:
1461:.\sd/ff.c     **** #endif
 3802              		.loc 1 1461 0 is_stmt 1
 3803              		@ sp needed
 3804              	.LVL528:
 3805 0046 10BD     		pop	{r4, pc}
 3806              		.cfi_endproc
 3807              	.LFE19:
 3808              		.size	dir_read, .-dir_read
 3809              		.section	.text.remove_chain,"ax",%progbits
 3810              		.align	2
 3811              		.code	16
 3812              		.thumb_func
 3813              		.type	remove_chain, %function
 3814              	remove_chain:
 3815              	.LFB14:
 929:.\sd/ff.c     **** 	FRESULT res;
 3816              		.loc 1 929 0
 3817              		.cfi_startproc
 3818              	.LVL529:
 3819 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3820              		.cfi_def_cfa_offset 24
 3821              		.cfi_offset 3, -24
 3822              		.cfi_offset 4, -20
 3823              		.cfi_offset 5, -16
 3824              		.cfi_offset 6, -12
 3825              		.cfi_offset 7, -8
 3826              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 114


 3827 0002 041C     		mov	r4, r0
 3828 0004 0D1E     		sub	r5, r1, #0
 936:.\sd/ff.c     **** 		res = FR_INT_ERR;
 3829              		.loc 1 936 0
 3830 0006 012D     		cmp	r5, #1
 3831 0008 21D9     		bls	.L293
 936:.\sd/ff.c     **** 		res = FR_INT_ERR;
 3832              		.loc 1 936 0 is_stmt 0 discriminator 1
 3833 000a 8369     		ldr	r3, [r0, #24]
 3834 000c 8B42     		cmp	r3, r1
 3835 000e 20D9     		bls	.L294
 3836 0010 0027     		mov	r7, #0
 3837 0012 18E0     		b	.L290
 3838              	.LVL530:
 3839              	.L292:
 942:.\sd/ff.c     **** 			if (nxt == 0) break;				/* Empty cluster? */
 3840              		.loc 1 942 0 is_stmt 1
 3841 0014 201C     		mov	r0, r4
 3842 0016 291C     		mov	r1, r5
 3843 0018 FFF7FEFF 		bl	get_fat
 3844              	.LVL531:
 3845 001c 061E     		sub	r6, r0, #0
 3846              	.LVL532:
 943:.\sd/ff.c     **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 3847              		.loc 1 943 0
 3848 001e 1DD0     		beq	.L289
 944:.\sd/ff.c     **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 3849              		.loc 1 944 0
 3850 0020 0128     		cmp	r0, #1
 3851 0022 18D0     		beq	.L295
 945:.\sd/ff.c     **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 3852              		.loc 1 945 0
 3853 0024 431C     		add	r3, r0, #1
 3854 0026 18D0     		beq	.L296
 946:.\sd/ff.c     **** 			if (res != FR_OK) break;
 3855              		.loc 1 946 0
 3856 0028 201C     		mov	r0, r4
 3857              	.LVL533:
 3858 002a 291C     		mov	r1, r5
 3859 002c 0022     		mov	r2, #0
 3860 002e FFF7FEFF 		bl	put_fat
 3861              	.LVL534:
 3862 0032 071E     		sub	r7, r0, #0
 3863              	.LVL535:
 947:.\sd/ff.c     **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSInfo */
 3864              		.loc 1 947 0
 3865 0034 12D1     		bne	.L289
 948:.\sd/ff.c     **** 				fs->free_clust++;
 3866              		.loc 1 948 0
 3867 0036 2369     		ldr	r3, [r4, #16]
 3868 0038 5A1C     		add	r2, r3, #1
 3869 003a 03D0     		beq	.L291
 949:.\sd/ff.c     **** 				fs->fsi_flag = 1;
 3870              		.loc 1 949 0
 3871 003c 0133     		add	r3, r3, #1
 3872 003e 2361     		str	r3, [r4, #16]
 950:.\sd/ff.c     **** 			}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 115


 3873              		.loc 1 950 0
 3874 0040 0123     		mov	r3, #1
 3875 0042 6371     		strb	r3, [r4, #5]
 3876              	.L291:
 3877              	.LVL536:
 962:.\sd/ff.c     **** 		}
 3878              		.loc 1 962 0
 3879 0044 351C     		mov	r5, r6
 3880              	.LVL537:
 3881              	.L290:
 941:.\sd/ff.c     **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 3882              		.loc 1 941 0
 3883 0046 A369     		ldr	r3, [r4, #24]
 3884 0048 AB42     		cmp	r3, r5
 3885 004a E3D8     		bhi	.L292
 3886 004c 06E0     		b	.L289
 3887              	.LVL538:
 3888              	.L293:
 937:.\sd/ff.c     **** 
 3889              		.loc 1 937 0
 3890 004e 0227     		mov	r7, #2
 3891 0050 04E0     		b	.L289
 3892              	.L294:
 3893 0052 0227     		mov	r7, #2
 3894 0054 02E0     		b	.L289
 3895              	.LVL539:
 3896              	.L295:
 944:.\sd/ff.c     **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 3897              		.loc 1 944 0
 3898 0056 0227     		mov	r7, #2
 3899              	.LVL540:
 3900 0058 00E0     		b	.L289
 3901              	.LVL541:
 3902              	.L296:
 945:.\sd/ff.c     **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 3903              		.loc 1 945 0
 3904 005a 0127     		mov	r7, #1
 3905              	.LVL542:
 3906              	.L289:
 967:.\sd/ff.c     **** #endif
 3907              		.loc 1 967 0
 3908 005c 381C     		mov	r0, r7
 3909              		@ sp needed
 3910              	.LVL543:
 3911              	.LVL544:
 3912              	.LVL545:
 3913 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3914              		.cfi_endproc
 3915              	.LFE14:
 3916              		.size	remove_chain, .-remove_chain
 3917              		.section	.text.f_mount,"ax",%progbits
 3918              		.align	2
 3919              		.global	f_mount
 3920              		.code	16
 3921              		.thumb_func
 3922              		.type	f_mount, %function
 3923              	f_mount:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 116


 3924              	.LFB28:
2187:.\sd/ff.c     **** 
2188:.\sd/ff.c     **** 
2189:.\sd/ff.c     **** 
2190:.\sd/ff.c     **** 
2191:.\sd/ff.c     **** /*--------------------------------------------------------------------------
2192:.\sd/ff.c     **** 
2193:.\sd/ff.c     ****    Public Functions
2194:.\sd/ff.c     **** 
2195:.\sd/ff.c     **** --------------------------------------------------------------------------*/
2196:.\sd/ff.c     **** 
2197:.\sd/ff.c     **** 
2198:.\sd/ff.c     **** 
2199:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2200:.\sd/ff.c     **** /* Mount/Unmount a Logical Drive                                         */
2201:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2202:.\sd/ff.c     **** 
2203:.\sd/ff.c     **** FRESULT f_mount (
2204:.\sd/ff.c     **** 	BYTE vol,		/* Logical drive number to be mounted/unmounted */
2205:.\sd/ff.c     **** 	FATFS *fs		/* Pointer to new file system object (NULL for unmount)*/
2206:.\sd/ff.c     **** )
2207:.\sd/ff.c     **** {
 3925              		.loc 1 2207 0
 3926              		.cfi_startproc
 3927              	.LVL546:
 3928 0000 70B5     		push	{r4, r5, r6, lr}
 3929              		.cfi_def_cfa_offset 16
 3930              		.cfi_offset 4, -16
 3931              		.cfi_offset 5, -12
 3932              		.cfi_offset 6, -8
 3933              		.cfi_offset 14, -4
2208:.\sd/ff.c     **** 	FATFS *rfs;
2209:.\sd/ff.c     **** 
2210:.\sd/ff.c     **** 
2211:.\sd/ff.c     **** 	if (vol >= _VOLUMES)		/* Check if the drive number is valid */
 3934              		.loc 1 2211 0
 3935 0002 0028     		cmp	r0, #0
 3936 0004 16D1     		bne	.L301
 3937 0006 0D1C     		mov	r5, r1
 3938 0008 041C     		mov	r4, r0
2212:.\sd/ff.c     **** 		return FR_INVALID_DRIVE;
2213:.\sd/ff.c     **** 	rfs = FatFs[vol];			/* Get current fs object */
 3939              		.loc 1 2213 0
 3940 000a 8300     		lsl	r3, r0, #2
 3941 000c 0A4A     		ldr	r2, .L302
 3942 000e D318     		add	r3, r2, r3
 3943 0010 5E6A     		ldr	r6, [r3, #36]
 3944              	.LVL547:
2214:.\sd/ff.c     **** 
2215:.\sd/ff.c     **** 	if (rfs) {
 3945              		.loc 1 2215 0
 3946 0012 002E     		cmp	r6, #0
 3947 0014 04D0     		beq	.L299
2216:.\sd/ff.c     **** #if _FS_SHARE
2217:.\sd/ff.c     **** 		clear_lock(rfs);
 3948              		.loc 1 2217 0
 3949 0016 301C     		mov	r0, r6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 117


 3950              	.LVL548:
 3951 0018 FFF7FEFF 		bl	clear_lock
 3952              	.LVL549:
2218:.\sd/ff.c     **** #endif
2219:.\sd/ff.c     **** #if _FS_REENTRANT				/* Discard sync object of the current volume */
2220:.\sd/ff.c     **** 		if (!ff_del_syncobj(rfs->sobj)) return FR_INT_ERR;
2221:.\sd/ff.c     **** #endif
2222:.\sd/ff.c     **** 		rfs->fs_type = 0;		/* Clear old fs object */
 3953              		.loc 1 2222 0
 3954 001c 0023     		mov	r3, #0
 3955 001e 3370     		strb	r3, [r6]
 3956              	.L299:
2223:.\sd/ff.c     **** 	}
2224:.\sd/ff.c     **** 
2225:.\sd/ff.c     **** 	if (fs) {
 3957              		.loc 1 2225 0
 3958 0020 002D     		cmp	r5, #0
 3959 0022 01D0     		beq	.L300
2226:.\sd/ff.c     **** 		fs->fs_type = 0;		/* Clear new fs object */
 3960              		.loc 1 2226 0
 3961 0024 0023     		mov	r3, #0
 3962 0026 2B70     		strb	r3, [r5]
 3963              	.L300:
2227:.\sd/ff.c     **** #if _FS_REENTRANT				/* Create sync object for the new volume */
2228:.\sd/ff.c     **** 		if (!ff_cre_syncobj(vol, &fs->sobj)) return FR_INT_ERR;
2229:.\sd/ff.c     **** #endif
2230:.\sd/ff.c     **** 	}
2231:.\sd/ff.c     **** 	FatFs[vol] = fs;			/* Register new fs object */
 3964              		.loc 1 2231 0
 3965 0028 A000     		lsl	r0, r4, #2
 3966 002a 034C     		ldr	r4, .L302
 3967 002c 2018     		add	r0, r4, r0
 3968 002e 4562     		str	r5, [r0, #36]
2232:.\sd/ff.c     **** 
2233:.\sd/ff.c     **** 	return FR_OK;
 3969              		.loc 1 2233 0
 3970 0030 0020     		mov	r0, #0
 3971 0032 00E0     		b	.L298
 3972              	.LVL550:
 3973              	.L301:
2212:.\sd/ff.c     **** 	rfs = FatFs[vol];			/* Get current fs object */
 3974              		.loc 1 2212 0
 3975 0034 0B20     		mov	r0, #11
 3976              	.LVL551:
 3977              	.L298:
2234:.\sd/ff.c     **** }
 3978              		.loc 1 2234 0
 3979              		@ sp needed
 3980 0036 70BD     		pop	{r4, r5, r6, pc}
 3981              	.L303:
 3982              		.align	2
 3983              	.L302:
 3984 0038 00000000 		.word	.LANCHOR0
 3985              		.cfi_endproc
 3986              	.LFE28:
 3987              		.size	f_mount, .-f_mount
 3988              		.section	.text.f_open,"ax",%progbits
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 118


 3989              		.align	2
 3990              		.global	f_open
 3991              		.code	16
 3992              		.thumb_func
 3993              		.type	f_open, %function
 3994              	f_open:
 3995              	.LFB29:
2235:.\sd/ff.c     **** 
2236:.\sd/ff.c     **** 
2237:.\sd/ff.c     **** 
2238:.\sd/ff.c     **** 
2239:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2240:.\sd/ff.c     **** /* Open or Create a File                                                 */
2241:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2242:.\sd/ff.c     **** 
2243:.\sd/ff.c     **** FRESULT f_open (
2244:.\sd/ff.c     **** 	FIL *fp,			/* Pointer to the blank file object */
2245:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the file name */
2246:.\sd/ff.c     **** 	BYTE mode			/* Access mode and file open mode flags */
2247:.\sd/ff.c     **** )
2248:.\sd/ff.c     **** {
 3996              		.loc 1 2248 0
 3997              		.cfi_startproc
 3998              	.LVL552:
 3999 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4000              		.cfi_def_cfa_offset 20
 4001              		.cfi_offset 4, -20
 4002              		.cfi_offset 5, -16
 4003              		.cfi_offset 6, -12
 4004              		.cfi_offset 7, -8
 4005              		.cfi_offset 14, -4
 4006 0002 4F46     		mov	r7, r9
 4007 0004 4646     		mov	r6, r8
 4008 0006 C0B4     		push	{r6, r7}
 4009              		.cfi_def_cfa_offset 28
 4010              		.cfi_offset 8, -28
 4011              		.cfi_offset 9, -24
 4012 0008 8DB0     		sub	sp, sp, #52
 4013              		.cfi_def_cfa_offset 80
 4014 000a 061C     		mov	r6, r0
 4015 000c 0191     		str	r1, [sp, #4]
 4016 000e 9046     		mov	r8, r2
2249:.\sd/ff.c     **** 	FRESULT res;
2250:.\sd/ff.c     **** 	DIR dj;
2251:.\sd/ff.c     **** 	BYTE *dir;
2252:.\sd/ff.c     **** 	DEF_NAMEBUF;
2253:.\sd/ff.c     **** 
2254:.\sd/ff.c     **** 
2255:.\sd/ff.c     **** 	fp->fs = 0;			/* Clear file object */
 4017              		.loc 1 2255 0
 4018 0010 0023     		mov	r3, #0
 4019 0012 0360     		str	r3, [r0]
2256:.\sd/ff.c     **** 
2257:.\sd/ff.c     **** #if !_FS_READONLY
2258:.\sd/ff.c     **** 	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
 4020              		.loc 1 2258 0
 4021 0014 1F27     		mov	r7, #31
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 119


 4022 0016 131C     		mov	r3, r2
 4023 0018 1740     		and	r7, r2
 4024              	.LVL553:
2259:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, (BYTE)(mode & ~FA_READ));
 4025              		.loc 1 2259 0
 4026 001a 1E22     		mov	r2, #30
 4027 001c 1A40     		and	r2, r3
 4028 001e 01A8     		add	r0, sp, #4
 4029              	.LVL554:
 4030 0020 05A9     		add	r1, sp, #20
 4031              	.LVL555:
 4032 0022 FFF7FEFF 		bl	chk_mounted
 4033              	.LVL556:
 4034 0026 041C     		mov	r4, r0
 4035              	.LVL557:
2260:.\sd/ff.c     **** #else
2261:.\sd/ff.c     **** 	mode &= FA_READ;
2262:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
2263:.\sd/ff.c     **** #endif
2264:.\sd/ff.c     **** 	INIT_BUF(dj);
 4036              		.loc 1 2264 0
 4037 0028 02AB     		add	r3, sp, #8
 4038 002a 0B93     		str	r3, [sp, #44]
2265:.\sd/ff.c     **** 	if (res == FR_OK)
 4039              		.loc 1 2265 0
 4040 002c 0028     		cmp	r0, #0
 4041 002e 04D1     		bne	.L305
2266:.\sd/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 4042              		.loc 1 2266 0
 4043 0030 05A8     		add	r0, sp, #20
 4044              	.LVL558:
 4045 0032 0199     		ldr	r1, [sp, #4]
 4046 0034 FFF7FEFF 		bl	follow_path
 4047              	.LVL559:
 4048 0038 041C     		mov	r4, r0
 4049              	.LVL560:
 4050              	.L305:
2267:.\sd/ff.c     **** 	dir = dj.dir;
 4051              		.loc 1 2267 0
 4052 003a 0A9D     		ldr	r5, [sp, #40]
 4053              	.LVL561:
2268:.\sd/ff.c     **** 
2269:.\sd/ff.c     **** #if !_FS_READONLY	/* R/W configuration */
2270:.\sd/ff.c     **** 	if (res == FR_OK) {
 4054              		.loc 1 2270 0
 4055 003c 002C     		cmp	r4, #0
 4056 003e 0CD1     		bne	.L306
2271:.\sd/ff.c     **** 		if (!dir)	/* Current dir itself */
 4057              		.loc 1 2271 0
 4058 0040 002D     		cmp	r5, #0
 4059 0042 09D0     		beq	.L316
2272:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
2273:.\sd/ff.c     **** #if _FS_SHARE
2274:.\sd/ff.c     **** 		else
2275:.\sd/ff.c     **** 			res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 4060              		.loc 1 2275 0
 4061 0044 0123     		mov	r3, #1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 120


 4062 0046 391C     		mov	r1, r7
 4063 0048 9943     		bic	r1, r3
 4064 004a 4B1E     		sub	r3, r1, #1
 4065 004c 9941     		sbc	r1, r1, r3
 4066 004e 05A8     		add	r0, sp, #20
 4067 0050 FFF7FEFF 		bl	chk_lock
 4068              	.LVL562:
 4069 0054 041C     		mov	r4, r0
 4070              	.LVL563:
 4071 0056 00E0     		b	.L306
 4072              	.LVL564:
 4073              	.L316:
2272:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
 4074              		.loc 1 2272 0
 4075 0058 0624     		mov	r4, #6
 4076              	.LVL565:
 4077              	.L306:
2276:.\sd/ff.c     **** #endif
2277:.\sd/ff.c     **** 	}
2278:.\sd/ff.c     **** 	/* Create or Open a file */
2279:.\sd/ff.c     **** 	if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
 4078              		.loc 1 2279 0
 4079 005a 1C23     		mov	r3, #28
 4080 005c 4246     		mov	r2, r8
 4081 005e 1342     		tst	r3, r2
 4082 0060 53D0     		beq	.L307
 4083              	.LBB5:
2280:.\sd/ff.c     **** 		DWORD dw, cl;
2281:.\sd/ff.c     **** 
2282:.\sd/ff.c     **** 		if (res != FR_OK) {					/* No file, create new */
 4084              		.loc 1 2282 0
 4085 0062 002C     		cmp	r4, #0
 4086 0064 0FD0     		beq	.L308
2283:.\sd/ff.c     **** 			if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
 4087              		.loc 1 2283 0
 4088 0066 042C     		cmp	r4, #4
 4089 0068 09D1     		bne	.L309
2284:.\sd/ff.c     **** #if _FS_SHARE
2285:.\sd/ff.c     **** 				res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
 4090              		.loc 1 2285 0
 4091 006a FFF7FEFF 		bl	enq_lock
 4092              	.LVL566:
 4093 006e 0028     		cmp	r0, #0
 4094 0070 04D0     		beq	.L317
 4095              		.loc 1 2285 0 is_stmt 0 discriminator 1
 4096 0072 05A8     		add	r0, sp, #20
 4097 0074 FFF7FEFF 		bl	dir_register
 4098              	.LVL567:
 4099 0078 041C     		mov	r4, r0
 4100              	.LVL568:
 4101 007a 00E0     		b	.L309
 4102              	.LVL569:
 4103              	.L317:
 4104              		.loc 1 2285 0
 4105 007c 1224     		mov	r4, #18
 4106              	.LVL570:
 4107              	.L309:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 121


2286:.\sd/ff.c     **** #else
2287:.\sd/ff.c     **** 				res = dir_register(&dj);
2288:.\sd/ff.c     **** #endif
2289:.\sd/ff.c     **** 			mode |= FA_CREATE_ALWAYS;		/* File is created */
 4108              		.loc 1 2289 0 is_stmt 1
 4109 007e 0823     		mov	r3, #8
 4110 0080 1F43     		orr	r7, r3
 4111              	.LVL571:
2290:.\sd/ff.c     **** 			dir = dj.dir;					/* New entry */
 4112              		.loc 1 2290 0
 4113 0082 0A9D     		ldr	r5, [sp, #40]
 4114              	.LVL572:
 4115 0084 0AE0     		b	.L311
 4116              	.L308:
2291:.\sd/ff.c     **** 		}
2292:.\sd/ff.c     **** 		else {								/* Any object is already existing */
2293:.\sd/ff.c     **** 			if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
 4117              		.loc 1 2293 0
 4118 0086 EB7A     		ldrb	r3, [r5, #11]
 4119 0088 1122     		mov	r2, #17
 4120 008a 1A42     		tst	r2, r3
 4121 008c 03D1     		bne	.L318
2294:.\sd/ff.c     **** 				res = FR_DENIED;
2295:.\sd/ff.c     **** 			} else {
2296:.\sd/ff.c     **** 				if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
 4122              		.loc 1 2296 0
 4123 008e 4346     		mov	r3, r8
 4124 0090 5B07     		lsl	r3, r3, #29
 4125 0092 02D4     		bmi	.L319
 4126 0094 02E0     		b	.L311
 4127              	.L318:
2294:.\sd/ff.c     **** 				res = FR_DENIED;
 4128              		.loc 1 2294 0
 4129 0096 0724     		mov	r4, #7
 4130              	.LVL573:
 4131 0098 00E0     		b	.L311
 4132              	.LVL574:
 4133              	.L319:
2297:.\sd/ff.c     **** 					res = FR_EXIST;
 4134              		.loc 1 2297 0
 4135 009a 0824     		mov	r4, #8
 4136              	.LVL575:
 4137              	.L311:
2298:.\sd/ff.c     **** 			}
2299:.\sd/ff.c     **** 		}
2300:.\sd/ff.c     **** 		if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
 4138              		.loc 1 2300 0
 4139 009c 002C     		cmp	r4, #0
 4140 009e 42D1     		bne	.L312
 4141              		.loc 1 2300 0 is_stmt 0 discriminator 1
 4142 00a0 3B07     		lsl	r3, r7, #28
 4143 00a2 40D5     		bpl	.L312
2301:.\sd/ff.c     **** 			dw = get_fattime();					/* Created time */
 4144              		.loc 1 2301 0 is_stmt 1
 4145 00a4 FFF7FEFF 		bl	get_fattime
 4146              	.LVL576:
2302:.\sd/ff.c     **** 			ST_DWORD(dir+DIR_CrtTime, dw);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 122


 4147              		.loc 1 2302 0
 4148 00a8 A873     		strb	r0, [r5, #14]
 4149 00aa 030A     		lsr	r3, r0, #8
 4150 00ac EB73     		strb	r3, [r5, #15]
 4151 00ae 030C     		lsr	r3, r0, #16
 4152 00b0 2B74     		strb	r3, [r5, #16]
 4153 00b2 000E     		lsr	r0, r0, #24
 4154              	.LVL577:
 4155 00b4 6874     		strb	r0, [r5, #17]
2303:.\sd/ff.c     **** 			dir[DIR_Attr] = 0;					/* Reset attribute */
 4156              		.loc 1 2303 0
 4157 00b6 0023     		mov	r3, #0
 4158 00b8 EB72     		strb	r3, [r5, #11]
2304:.\sd/ff.c     **** 			ST_DWORD(dir+DIR_FileSize, 0);		/* size = 0 */
 4159              		.loc 1 2304 0
 4160 00ba 2B77     		strb	r3, [r5, #28]
 4161 00bc 6B77     		strb	r3, [r5, #29]
 4162 00be AB77     		strb	r3, [r5, #30]
 4163 00c0 EB77     		strb	r3, [r5, #31]
2305:.\sd/ff.c     **** 			cl = LD_CLUST(dir);					/* Get start cluster */
 4164              		.loc 1 2305 0
 4165 00c2 6A7D     		ldrb	r2, [r5, #21]
 4166 00c4 1202     		lsl	r2, r2, #8
 4167 00c6 297D     		ldrb	r1, [r5, #20]
 4168 00c8 0A43     		orr	r2, r1
 4169 00ca 1204     		lsl	r2, r2, #16
 4170 00cc E97E     		ldrb	r1, [r5, #27]
 4171 00ce 0902     		lsl	r1, r1, #8
 4172 00d0 A87E     		ldrb	r0, [r5, #26]
 4173 00d2 0143     		orr	r1, r0
 4174 00d4 0A43     		orr	r2, r1
 4175 00d6 9046     		mov	r8, r2
 4176              	.LVL578:
2306:.\sd/ff.c     **** 			ST_CLUST(dir, 0);					/* cluster = 0 */
 4177              		.loc 1 2306 0
 4178 00d8 AB76     		strb	r3, [r5, #26]
 4179 00da EB76     		strb	r3, [r5, #27]
 4180 00dc 2B75     		strb	r3, [r5, #20]
 4181 00de 6B75     		strb	r3, [r5, #21]
2307:.\sd/ff.c     **** 			dj.fs->wflag = 1;
 4182              		.loc 1 2307 0
 4183 00e0 0598     		ldr	r0, [sp, #20]
 4184 00e2 0133     		add	r3, r3, #1
 4185 00e4 0371     		strb	r3, [r0, #4]
2308:.\sd/ff.c     **** 			if (cl) {							/* Remove the cluster chain if exist */
 4186              		.loc 1 2308 0
 4187 00e6 002A     		cmp	r2, #0
 4188 00e8 1DD0     		beq	.L312
2309:.\sd/ff.c     **** 				dw = dj.fs->winsect;
 4189              		.loc 1 2309 0
 4190 00ea C36A     		ldr	r3, [r0, #44]
 4191 00ec 9946     		mov	r9, r3
 4192              	.LVL579:
2310:.\sd/ff.c     **** 				res = remove_chain(dj.fs, cl);
 4193              		.loc 1 2310 0
 4194 00ee 111C     		mov	r1, r2
 4195 00f0 FFF7FEFF 		bl	remove_chain
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 123


 4196              	.LVL580:
 4197 00f4 041E     		sub	r4, r0, #0
 4198              	.LVL581:
2311:.\sd/ff.c     **** 				if (res == FR_OK) {
 4199              		.loc 1 2311 0
 4200 00f6 16D1     		bne	.L312
2312:.\sd/ff.c     **** 					dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
 4201              		.loc 1 2312 0
 4202 00f8 0598     		ldr	r0, [sp, #20]
 4203              	.LVL582:
 4204 00fa 4346     		mov	r3, r8
 4205 00fc 013B     		sub	r3, r3, #1
 4206 00fe C360     		str	r3, [r0, #12]
2313:.\sd/ff.c     **** 					res = move_window(dj.fs, dw);
 4207              		.loc 1 2313 0
 4208 0100 4946     		mov	r1, r9
 4209 0102 FFF7FEFF 		bl	move_window
 4210              	.LVL583:
 4211 0106 041C     		mov	r4, r0
 4212              	.LVL584:
 4213 0108 0DE0     		b	.L312
 4214              	.LVL585:
 4215              	.L307:
 4216              	.LBE5:
2314:.\sd/ff.c     **** 				}
2315:.\sd/ff.c     **** 			}
2316:.\sd/ff.c     **** 		}
2317:.\sd/ff.c     **** 	}
2318:.\sd/ff.c     **** 	else {	/* Open an existing file */
2319:.\sd/ff.c     **** 		if (res == FR_OK) {						/* Follow succeeded */
 4217              		.loc 1 2319 0
 4218 010a 002C     		cmp	r4, #0
 4219 010c 0BD1     		bne	.L312
2320:.\sd/ff.c     **** 			if (dir[DIR_Attr] & AM_DIR) {		/* It is a directory */
 4220              		.loc 1 2320 0
 4221 010e EB7A     		ldrb	r3, [r5, #11]
 4222 0110 DA06     		lsl	r2, r3, #27
 4223 0112 05D4     		bmi	.L320
2321:.\sd/ff.c     **** 				res = FR_NO_FILE;
2322:.\sd/ff.c     **** 			} else {
2323:.\sd/ff.c     **** 				if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
 4224              		.loc 1 2323 0
 4225 0114 4246     		mov	r2, r8
 4226 0116 9207     		lsl	r2, r2, #30
 4227 0118 05D5     		bpl	.L312
 4228              		.loc 1 2323 0 is_stmt 0 discriminator 1
 4229 011a DB07     		lsl	r3, r3, #31
 4230 011c 02D4     		bmi	.L321
 4231 011e 02E0     		b	.L312
 4232              	.L320:
2321:.\sd/ff.c     **** 				res = FR_NO_FILE;
 4233              		.loc 1 2321 0 is_stmt 1
 4234 0120 0424     		mov	r4, #4
 4235              	.LVL586:
 4236 0122 00E0     		b	.L312
 4237              	.LVL587:
 4238              	.L321:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 124


2324:.\sd/ff.c     **** 					res = FR_DENIED;
 4239              		.loc 1 2324 0
 4240 0124 0724     		mov	r4, #7
 4241              	.LVL588:
 4242              	.L312:
2325:.\sd/ff.c     **** 			}
2326:.\sd/ff.c     **** 		}
2327:.\sd/ff.c     **** 	}
2328:.\sd/ff.c     **** 	if (res == FR_OK) {
 4243              		.loc 1 2328 0
 4244 0126 002C     		cmp	r4, #0
 4245 0128 13D1     		bne	.L313
2329:.\sd/ff.c     **** 		if (mode & FA_CREATE_ALWAYS)			/* Set file change flag if created or overwritten */
 4246              		.loc 1 2329 0
 4247 012a 3B07     		lsl	r3, r7, #28
 4248 012c 01D5     		bpl	.L314
2330:.\sd/ff.c     **** 			mode |= FA__WRITTEN;
 4249              		.loc 1 2330 0
 4250 012e 2023     		mov	r3, #32
 4251 0130 1F43     		orr	r7, r3
 4252              	.LVL589:
 4253              	.L314:
2331:.\sd/ff.c     **** 		fp->dir_sect = dj.fs->winsect;			/* Pointer to the directory entry */
 4254              		.loc 1 2331 0
 4255 0132 059B     		ldr	r3, [sp, #20]
 4256 0134 DB6A     		ldr	r3, [r3, #44]
 4257 0136 F361     		str	r3, [r6, #28]
2332:.\sd/ff.c     **** 		fp->dir_ptr = dir;
 4258              		.loc 1 2332 0
 4259 0138 3562     		str	r5, [r6, #32]
2333:.\sd/ff.c     **** #if _FS_SHARE
2334:.\sd/ff.c     **** 		fp->lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
 4260              		.loc 1 2334 0
 4261 013a 0123     		mov	r3, #1
 4262 013c 391C     		mov	r1, r7
 4263 013e 9943     		bic	r1, r3
 4264 0140 4B1E     		sub	r3, r1, #1
 4265 0142 9941     		sbc	r1, r1, r3
 4266 0144 05A8     		add	r0, sp, #20
 4267 0146 FFF7FEFF 		bl	inc_lock
 4268              	.LVL590:
 4269 014a 7062     		str	r0, [r6, #36]
2335:.\sd/ff.c     **** 		if (!fp->lockid) res = FR_INT_ERR;
 4270              		.loc 1 2335 0
 4271 014c 0028     		cmp	r0, #0
 4272 014e 00D1     		bne	.L313
 4273 0150 0224     		mov	r4, #2
 4274              	.LVL591:
 4275              	.L313:
2336:.\sd/ff.c     **** #endif
2337:.\sd/ff.c     **** 	}
2338:.\sd/ff.c     **** 
2339:.\sd/ff.c     **** #else				/* R/O configuration */
2340:.\sd/ff.c     **** 	if (res == FR_OK) {					/* Follow succeeded */
2341:.\sd/ff.c     **** 		if (!dir) {						/* Current dir itself */
2342:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
2343:.\sd/ff.c     **** 		} else {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 125


2344:.\sd/ff.c     **** 			if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
2345:.\sd/ff.c     **** 				res = FR_NO_FILE;
2346:.\sd/ff.c     **** 		}
2347:.\sd/ff.c     **** 	}
2348:.\sd/ff.c     **** #endif
2349:.\sd/ff.c     **** 	FREE_BUF();
2350:.\sd/ff.c     **** 
2351:.\sd/ff.c     **** 	if (res == FR_OK) {
 4276              		.loc 1 2351 0
 4277 0152 002C     		cmp	r4, #0
 4278 0154 1DD1     		bne	.L315
2352:.\sd/ff.c     **** 		fp->flag = mode;					/* File access mode */
 4279              		.loc 1 2352 0
 4280 0156 B771     		strb	r7, [r6, #6]
2353:.\sd/ff.c     **** 		fp->sclust = LD_CLUST(dir);			/* File start cluster */
 4281              		.loc 1 2353 0
 4282 0158 6B7D     		ldrb	r3, [r5, #21]
 4283 015a 1B02     		lsl	r3, r3, #8
 4284 015c 2A7D     		ldrb	r2, [r5, #20]
 4285 015e 1343     		orr	r3, r2
 4286 0160 1904     		lsl	r1, r3, #16
 4287 0162 EB7E     		ldrb	r3, [r5, #27]
 4288 0164 1B02     		lsl	r3, r3, #8
 4289 0166 AA7E     		ldrb	r2, [r5, #26]
 4290 0168 1343     		orr	r3, r2
 4291 016a 0B43     		orr	r3, r1
 4292 016c 3361     		str	r3, [r6, #16]
2354:.\sd/ff.c     **** 		fp->fsize = LD_DWORD(dir+DIR_FileSize);	/* File size */
 4293              		.loc 1 2354 0
 4294 016e EB7F     		ldrb	r3, [r5, #31]
 4295 0170 1A06     		lsl	r2, r3, #24
 4296 0172 AB7F     		ldrb	r3, [r5, #30]
 4297 0174 1B04     		lsl	r3, r3, #16
 4298 0176 1343     		orr	r3, r2
 4299 0178 6A7F     		ldrb	r2, [r5, #29]
 4300 017a 1202     		lsl	r2, r2, #8
 4301 017c 1343     		orr	r3, r2
 4302 017e 2A7F     		ldrb	r2, [r5, #28]
 4303 0180 1343     		orr	r3, r2
 4304 0182 F360     		str	r3, [r6, #12]
2355:.\sd/ff.c     **** 		fp->fptr = 0;						/* File pointer */
 4305              		.loc 1 2355 0
 4306 0184 0023     		mov	r3, #0
 4307 0186 B360     		str	r3, [r6, #8]
2356:.\sd/ff.c     **** 		fp->dsect = 0;
 4308              		.loc 1 2356 0
 4309 0188 B361     		str	r3, [r6, #24]
2357:.\sd/ff.c     **** #if _USE_FASTSEEK
2358:.\sd/ff.c     **** 		fp->cltbl = 0;						/* Normal seek mode */
2359:.\sd/ff.c     **** #endif
2360:.\sd/ff.c     **** 		fp->fs = dj.fs; fp->id = dj.fs->id;	/* Validate file object */
 4310              		.loc 1 2360 0
 4311 018a 059B     		ldr	r3, [sp, #20]
 4312 018c 3360     		str	r3, [r6]
 4313 018e DB88     		ldrh	r3, [r3, #6]
 4314 0190 B380     		strh	r3, [r6, #4]
 4315              	.L315:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 126


2361:.\sd/ff.c     **** 	}
2362:.\sd/ff.c     **** 
2363:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
2364:.\sd/ff.c     **** }
 4316              		.loc 1 2364 0
 4317 0192 201C     		mov	r0, r4
 4318 0194 0DB0     		add	sp, sp, #52
 4319              		@ sp needed
 4320              	.LVL592:
 4321              	.LVL593:
 4322              	.LVL594:
 4323              	.LVL595:
 4324 0196 0CBC     		pop	{r2, r3}
 4325 0198 9046     		mov	r8, r2
 4326 019a 9946     		mov	r9, r3
 4327 019c F0BD     		pop	{r4, r5, r6, r7, pc}
 4328              		.cfi_endproc
 4329              	.LFE29:
 4330              		.size	f_open, .-f_open
 4331 019e C046     		.section	.text.f_read,"ax",%progbits
 4332              		.align	2
 4333              		.global	f_read
 4334              		.code	16
 4335              		.thumb_func
 4336              		.type	f_read, %function
 4337              	f_read:
 4338              	.LFB30:
2365:.\sd/ff.c     **** 
2366:.\sd/ff.c     **** 
2367:.\sd/ff.c     **** 
2368:.\sd/ff.c     **** 
2369:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2370:.\sd/ff.c     **** /* Read File                                                             */
2371:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2372:.\sd/ff.c     **** 
2373:.\sd/ff.c     **** FRESULT f_read (
2374:.\sd/ff.c     **** 	FIL *fp, 		/* Pointer to the file object */
2375:.\sd/ff.c     **** 	void *buff,		/* Pointer to data buffer */
2376:.\sd/ff.c     **** 	UINT btr,		/* Number of bytes to read */
2377:.\sd/ff.c     **** 	UINT *br		/* Pointer to number of bytes read */
2378:.\sd/ff.c     **** )
2379:.\sd/ff.c     **** {
 4339              		.loc 1 2379 0
 4340              		.cfi_startproc
 4341              	.LVL596:
 4342 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4343              		.cfi_def_cfa_offset 24
 4344              		.cfi_offset 3, -24
 4345              		.cfi_offset 4, -20
 4346              		.cfi_offset 5, -16
 4347              		.cfi_offset 6, -12
 4348              		.cfi_offset 7, -8
 4349              		.cfi_offset 14, -4
 4350 0002 5F46     		mov	r7, fp
 4351 0004 5646     		mov	r6, r10
 4352 0006 4D46     		mov	r5, r9
 4353 0008 4446     		mov	r4, r8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 127


 4354 000a F0B4     		push	{r4, r5, r6, r7}
 4355              		.cfi_def_cfa_offset 40
 4356              		.cfi_offset 8, -40
 4357              		.cfi_offset 9, -36
 4358              		.cfi_offset 10, -32
 4359              		.cfi_offset 11, -28
 4360 000c 041C     		mov	r4, r0
 4361 000e 8846     		mov	r8, r1
 4362 0010 151C     		mov	r5, r2
 4363 0012 1F1C     		mov	r7, r3
 4364              	.LVL597:
2380:.\sd/ff.c     **** 	FRESULT res;
2381:.\sd/ff.c     **** 	DWORD clst, sect, remain;
2382:.\sd/ff.c     **** 	UINT rcnt, cc;
2383:.\sd/ff.c     **** 	BYTE csect, *rbuff = buff;
2384:.\sd/ff.c     **** 
2385:.\sd/ff.c     **** 
2386:.\sd/ff.c     **** 	*br = 0;	/* Initialize byte counter */
 4365              		.loc 1 2386 0
 4366 0014 0023     		mov	r3, #0
 4367              	.LVL598:
 4368 0016 3B60     		str	r3, [r7]
2387:.\sd/ff.c     **** 
2388:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);				/* Check validity */
 4369              		.loc 1 2388 0
 4370 0018 8188     		ldrh	r1, [r0, #4]
 4371              	.LVL599:
 4372 001a 0068     		ldr	r0, [r0]
 4373              	.LVL600:
 4374 001c FFF7FEFF 		bl	validate
 4375              	.LVL601:
2389:.\sd/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4376              		.loc 1 2389 0
 4377 0020 0028     		cmp	r0, #0
 4378 0022 00D0     		beq	.LCB4916
 4379 0024 A6E0     		b	.L324	@long jump
 4380              	.LCB4916:
2390:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)					/* Aborted file? */
 4381              		.loc 1 2390 0
 4382 0026 A379     		ldrb	r3, [r4, #6]
 4383 0028 5AB2     		sxtb	r2, r3
 4384 002a 002A     		cmp	r2, #0
 4385 002c 00DA     		bge	.LCB4921
 4386 002e 9EE0     		b	.L343	@long jump
 4387              	.LCB4921:
2391:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
2392:.\sd/ff.c     **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 4388              		.loc 1 2392 0
 4389 0030 DB07     		lsl	r3, r3, #31
 4390 0032 00D4     		bmi	.LCB4926
 4391 0034 9DE0     		b	.L344	@long jump
 4392              	.LCB4926:
2393:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_DENIED);
2394:.\sd/ff.c     **** 	remain = fp->fsize - fp->fptr;
 4393              		.loc 1 2394 0
 4394 0036 E368     		ldr	r3, [r4, #12]
 4395 0038 A268     		ldr	r2, [r4, #8]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 128


 4396 003a 9E1A     		sub	r6, r3, r2
 4397              	.LVL602:
2395:.\sd/ff.c     **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4398              		.loc 1 2395 0
 4399 003c B542     		cmp	r5, r6
 4400 003e 00D9     		bls	.LCB4934
 4401 0040 90E0     		b	.L326	@long jump
 4402              	.LCB4934:
 4403 0042 2E1C     		mov	r6, r5
 4404              	.LVL603:
 4405 0044 8EE0     		b	.L326
 4406              	.LVL604:
 4407              	.L341:
2396:.\sd/ff.c     **** 
2397:.\sd/ff.c     **** 	for ( ;  btr;								/* Repeat until all data read */
2398:.\sd/ff.c     **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
2399:.\sd/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 4408              		.loc 1 2399 0
 4409 0046 A268     		ldr	r2, [r4, #8]
 4410 0048 D305     		lsl	r3, r2, #23
 4411 004a 62D1     		bne	.L327
2400:.\sd/ff.c     **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4412              		.loc 1 2400 0
 4413 004c 550A     		lsr	r5, r2, #9
 4414 004e 2068     		ldr	r0, [r4]
 4415 0050 8378     		ldrb	r3, [r0, #2]
 4416 0052 013B     		sub	r3, r3, #1
 4417 0054 DBB2     		uxtb	r3, r3
 4418 0056 1D40     		and	r5, r3
 4419              	.LVL605:
2401:.\sd/ff.c     **** 			if (!csect) {						/* On the cluster boundary? */
 4420              		.loc 1 2401 0
 4421 0058 19D1     		bne	.L328
2402:.\sd/ff.c     **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4422              		.loc 1 2402 0
 4423 005a 002A     		cmp	r2, #0
 4424 005c 01D1     		bne	.L329
2403:.\sd/ff.c     **** 					clst = fp->sclust;			/* Follow from the origin */
 4425              		.loc 1 2403 0
 4426 005e 2069     		ldr	r0, [r4, #16]
 4427              	.LVL606:
 4428 0060 02E0     		b	.L330
 4429              	.LVL607:
 4430              	.L329:
2404:.\sd/ff.c     **** 				} else {						/* Middle or end of the file */
2405:.\sd/ff.c     **** #if _USE_FASTSEEK
2406:.\sd/ff.c     **** 					if (fp->cltbl)
2407:.\sd/ff.c     **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2408:.\sd/ff.c     **** 					else
2409:.\sd/ff.c     **** #endif
2410:.\sd/ff.c     **** 						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
 4431              		.loc 1 2410 0
 4432 0062 6169     		ldr	r1, [r4, #20]
 4433 0064 FFF7FEFF 		bl	get_fat
 4434              	.LVL608:
 4435              	.L330:
2411:.\sd/ff.c     **** 				}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 129


2412:.\sd/ff.c     **** 				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
 4436              		.loc 1 2412 0
 4437 0068 0128     		cmp	r0, #1
 4438 006a 06D8     		bhi	.L331
 4439              		.loc 1 2412 0 is_stmt 0 discriminator 1
 4440 006c A379     		ldrb	r3, [r4, #6]
 4441 006e 8022     		mov	r2, #128
 4442 0070 5242     		neg	r2, r2
 4443 0072 1343     		orr	r3, r2
 4444 0074 A371     		strb	r3, [r4, #6]
 4445 0076 0220     		mov	r0, #2
 4446              	.LVL609:
 4447 0078 7CE0     		b	.L324
 4448              	.LVL610:
 4449              	.L331:
2413:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4450              		.loc 1 2413 0 is_stmt 1
 4451 007a 431C     		add	r3, r0, #1
 4452 007c 06D1     		bne	.L332
 4453              		.loc 1 2413 0 is_stmt 0 discriminator 1
 4454 007e A379     		ldrb	r3, [r4, #6]
 4455 0080 8022     		mov	r2, #128
 4456 0082 5242     		neg	r2, r2
 4457 0084 1343     		orr	r3, r2
 4458 0086 A371     		strb	r3, [r4, #6]
 4459 0088 0230     		add	r0, r0, #2
 4460              	.LVL611:
 4461 008a 73E0     		b	.L324
 4462              	.LVL612:
 4463              	.L332:
2414:.\sd/ff.c     **** 				fp->clust = clst;				/* Update current cluster */
 4464              		.loc 1 2414 0 is_stmt 1
 4465 008c 6061     		str	r0, [r4, #20]
 4466              	.LVL613:
 4467              	.L328:
2415:.\sd/ff.c     **** 			}
2416:.\sd/ff.c     **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 4468              		.loc 1 2416 0
 4469 008e 2368     		ldr	r3, [r4]
 4470 0090 9A46     		mov	r10, r3
 4471 0092 181C     		mov	r0, r3
 4472 0094 6169     		ldr	r1, [r4, #20]
 4473 0096 FFF7FEFF 		bl	clust2sect
 4474              	.LVL614:
2417:.\sd/ff.c     **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4475              		.loc 1 2417 0
 4476 009a 0028     		cmp	r0, #0
 4477 009c 06D1     		bne	.L333
 4478              		.loc 1 2417 0 is_stmt 0 discriminator 1
 4479 009e A379     		ldrb	r3, [r4, #6]
 4480 00a0 8022     		mov	r2, #128
 4481 00a2 5242     		neg	r2, r2
 4482 00a4 1343     		orr	r3, r2
 4483 00a6 A371     		strb	r3, [r4, #6]
 4484 00a8 0230     		add	r0, r0, #2
 4485              	.LVL615:
 4486 00aa 63E0     		b	.L324
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 130


 4487              	.LVL616:
 4488              	.L333:
2418:.\sd/ff.c     **** 			sect += csect;
 4489              		.loc 1 2418 0 is_stmt 1
 4490 00ac 8146     		mov	r9, r0
 4491 00ae A944     		add	r9, r9, r5
 4492              	.LVL617:
2419:.\sd/ff.c     **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
 4493              		.loc 1 2419 0
 4494 00b0 730A     		lsr	r3, r6, #9
 4495 00b2 9B46     		mov	fp, r3
 4496              	.LVL618:
2420:.\sd/ff.c     **** 			if (cc) {							/* Read maximum contiguous sectors directly */
 4497              		.loc 1 2420 0
 4498 00b4 2BD0     		beq	.L334
2421:.\sd/ff.c     **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4499              		.loc 1 2421 0
 4500 00b6 EB18     		add	r3, r5, r3
 4501              	.LVL619:
 4502 00b8 5246     		mov	r2, r10
 4503 00ba 9278     		ldrb	r2, [r2, #2]
 4504 00bc 9342     		cmp	r3, r2
 4505 00be 01D9     		bls	.L335
2422:.\sd/ff.c     **** 					cc = fp->fs->csize - csect;
 4506              		.loc 1 2422 0
 4507 00c0 531B     		sub	r3, r2, r5
 4508 00c2 9B46     		mov	fp, r3
 4509              	.LVL620:
 4510              	.L335:
2423:.\sd/ff.c     **** 				if (disk_read(fp->fs->drv, rbuff, sect, (BYTE)cc) != RES_OK)
 4511              		.loc 1 2423 0
 4512 00c4 5346     		mov	r3, r10
 4513 00c6 5878     		ldrb	r0, [r3, #1]
 4514 00c8 FF23     		mov	r3, #255
 4515 00ca 5A46     		mov	r2, fp
 4516 00cc 1340     		and	r3, r2
 4517 00ce 4146     		mov	r1, r8
 4518 00d0 4A46     		mov	r2, r9
 4519 00d2 FFF7FEFF 		bl	disk_read
 4520              	.LVL621:
 4521 00d6 0028     		cmp	r0, #0
 4522 00d8 06D0     		beq	.L336
2424:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
 4523              		.loc 1 2424 0
 4524 00da A379     		ldrb	r3, [r4, #6]
 4525 00dc 8022     		mov	r2, #128
 4526 00de 5242     		neg	r2, r2
 4527 00e0 1343     		orr	r3, r2
 4528 00e2 A371     		strb	r3, [r4, #6]
 4529 00e4 0120     		mov	r0, #1
 4530 00e6 45E0     		b	.L324
 4531              	.L336:
2425:.\sd/ff.c     **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
2426:.\sd/ff.c     **** #if _FS_TINY
2427:.\sd/ff.c     **** 				if (fp->fs->wflag && fp->fs->winsect - sect < cc)
 4532              		.loc 1 2427 0
 4533 00e8 2168     		ldr	r1, [r4]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 131


 4534 00ea 0B79     		ldrb	r3, [r1, #4]
 4535 00ec 002B     		cmp	r3, #0
 4536 00ee 0BD0     		beq	.L337
 4537              		.loc 1 2427 0 is_stmt 0 discriminator 1
 4538 00f0 CB6A     		ldr	r3, [r1, #44]
 4539 00f2 4A46     		mov	r2, r9
 4540 00f4 981A     		sub	r0, r3, r2
 4541 00f6 5845     		cmp	r0, fp
 4542 00f8 06D2     		bcs	.L337
 4543              	.LVL622:
2428:.\sd/ff.c     **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win, SS(fp->fs));
 4544              		.loc 1 2428 0 is_stmt 1
 4545 00fa 4002     		lsl	r0, r0, #9
 4546 00fc 3031     		add	r1, r1, #48
 4547 00fe 4044     		add	r0, r0, r8
 4548 0100 8022     		mov	r2, #128
 4549              	.LVL623:
 4550 0102 9200     		lsl	r2, r2, #2
 4551 0104 FFF7FEFF 		bl	mem_cpy
 4552              	.LVL624:
 4553              	.L337:
2429:.\sd/ff.c     **** #else
2430:.\sd/ff.c     **** 				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
2431:.\sd/ff.c     **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf, SS(fp->fs));
2432:.\sd/ff.c     **** #endif
2433:.\sd/ff.c     **** #endif
2434:.\sd/ff.c     **** 				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
 4554              		.loc 1 2434 0
 4555 0108 5B46     		mov	r3, fp
 4556 010a 5D02     		lsl	r5, r3, #9
 4557              	.LVL625:
2435:.\sd/ff.c     **** 				continue;
 4558              		.loc 1 2435 0
 4559 010c 22E0     		b	.L338
 4560              	.LVL626:
 4561              	.L334:
2436:.\sd/ff.c     **** 			}
2437:.\sd/ff.c     **** #if !_FS_TINY
2438:.\sd/ff.c     **** 			if (fp->dsect != sect) {			/* Load data sector if not in cache */
2439:.\sd/ff.c     **** #if !_FS_READONLY
2440:.\sd/ff.c     **** 				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2441:.\sd/ff.c     **** 					if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2442:.\sd/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2443:.\sd/ff.c     **** 					fp->flag &= ~FA__DIRTY;
2444:.\sd/ff.c     **** 				}
2445:.\sd/ff.c     **** #endif
2446:.\sd/ff.c     **** 				if (disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)	/* Fill sector cache */
2447:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2448:.\sd/ff.c     **** 			}
2449:.\sd/ff.c     **** #endif
2450:.\sd/ff.c     **** 			fp->dsect = sect;
 4562              		.loc 1 2450 0
 4563 010e 4B46     		mov	r3, r9
 4564              	.LVL627:
 4565 0110 A361     		str	r3, [r4, #24]
 4566              	.LVL628:
 4567              	.L327:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 132


2451:.\sd/ff.c     **** 		}
2452:.\sd/ff.c     **** 		rcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer */
 4568              		.loc 1 2452 0
 4569 0112 A368     		ldr	r3, [r4, #8]
 4570 0114 DD05     		lsl	r5, r3, #23
 4571 0116 ED0D     		lsr	r5, r5, #23
 4572 0118 8023     		mov	r3, #128
 4573 011a 9B00     		lsl	r3, r3, #2
 4574 011c 5D1B     		sub	r5, r3, r5
 4575              	.LVL629:
2453:.\sd/ff.c     **** 		if (rcnt > btr) rcnt = btr;
 4576              		.loc 1 2453 0
 4577 011e B542     		cmp	r5, r6
 4578 0120 00D9     		bls	.L339
 4579 0122 351C     		mov	r5, r6
 4580              	.LVL630:
 4581              	.L339:
2454:.\sd/ff.c     **** #if _FS_TINY
2455:.\sd/ff.c     **** 		if (move_window(fp->fs, fp->dsect))		/* Move sector window */
 4582              		.loc 1 2455 0
 4583 0124 2068     		ldr	r0, [r4]
 4584 0126 A169     		ldr	r1, [r4, #24]
 4585 0128 FFF7FEFF 		bl	move_window
 4586              	.LVL631:
 4587 012c 0028     		cmp	r0, #0
 4588 012e 06D0     		beq	.L340
2456:.\sd/ff.c     **** 			ABORT(fp->fs, FR_DISK_ERR);
 4589              		.loc 1 2456 0
 4590 0130 A379     		ldrb	r3, [r4, #6]
 4591 0132 8022     		mov	r2, #128
 4592 0134 5242     		neg	r2, r2
 4593 0136 1343     		orr	r3, r2
 4594 0138 A371     		strb	r3, [r4, #6]
 4595 013a 0120     		mov	r0, #1
 4596 013c 1AE0     		b	.L324
 4597              	.L340:
2457:.\sd/ff.c     **** 		mem_cpy(rbuff, &fp->fs->win[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
 4598              		.loc 1 2457 0
 4599 013e A368     		ldr	r3, [r4, #8]
 4600 0140 D905     		lsl	r1, r3, #23
 4601 0142 C90D     		lsr	r1, r1, #23
 4602 0144 3031     		add	r1, r1, #48
 4603 0146 2368     		ldr	r3, [r4]
 4604 0148 9C46     		mov	ip, r3
 4605 014a 6144     		add	r1, r1, ip
 4606 014c 4046     		mov	r0, r8
 4607 014e 2A1C     		mov	r2, r5
 4608 0150 FFF7FEFF 		bl	mem_cpy
 4609              	.LVL632:
 4610              	.L338:
2398:.\sd/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 4611              		.loc 1 2398 0
 4612 0154 A844     		add	r8, r8, r5
 4613              	.LVL633:
 4614 0156 A368     		ldr	r3, [r4, #8]
 4615 0158 5B19     		add	r3, r3, r5
 4616 015a A360     		str	r3, [r4, #8]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 133


 4617 015c 3B68     		ldr	r3, [r7]
 4618 015e 5B19     		add	r3, r3, r5
 4619 0160 3B60     		str	r3, [r7]
 4620 0162 761B     		sub	r6, r6, r5
 4621              	.LVL634:
 4622              	.L326:
2397:.\sd/ff.c     **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4623              		.loc 1 2397 0
 4624 0164 002E     		cmp	r6, #0
 4625 0166 00D0     		beq	.LCB5212
 4626 0168 6DE7     		b	.L341	@long jump
 4627              	.LCB5212:
2458:.\sd/ff.c     **** #else
2459:.\sd/ff.c     **** 		mem_cpy(rbuff, &fp->buf[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2460:.\sd/ff.c     **** #endif
2461:.\sd/ff.c     **** 	}
2462:.\sd/ff.c     **** 
2463:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, FR_OK);
 4628              		.loc 1 2463 0
 4629 016a 0020     		mov	r0, #0
 4630 016c 02E0     		b	.L324
 4631              	.LVL635:
 4632              	.L343:
2391:.\sd/ff.c     **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 4633              		.loc 1 2391 0
 4634 016e 0220     		mov	r0, #2
 4635              	.LVL636:
 4636 0170 00E0     		b	.L324
 4637              	.LVL637:
 4638              	.L344:
2393:.\sd/ff.c     **** 	remain = fp->fsize - fp->fptr;
 4639              		.loc 1 2393 0
 4640 0172 0720     		mov	r0, #7
 4641              	.LVL638:
 4642              	.L324:
2464:.\sd/ff.c     **** }
 4643              		.loc 1 2464 0
 4644              		@ sp needed
 4645              	.LVL639:
 4646              	.LVL640:
 4647              	.LVL641:
 4648 0174 3CBC     		pop	{r2, r3, r4, r5}
 4649 0176 9046     		mov	r8, r2
 4650 0178 9946     		mov	r9, r3
 4651 017a A246     		mov	r10, r4
 4652 017c AB46     		mov	fp, r5
 4653 017e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4654              		.cfi_endproc
 4655              	.LFE30:
 4656              		.size	f_read, .-f_read
 4657              		.section	.text.f_write,"ax",%progbits
 4658              		.align	2
 4659              		.global	f_write
 4660              		.code	16
 4661              		.thumb_func
 4662              		.type	f_write, %function
 4663              	f_write:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 134


 4664              	.LFB31:
2465:.\sd/ff.c     **** 
2466:.\sd/ff.c     **** 
2467:.\sd/ff.c     **** 
2468:.\sd/ff.c     **** 
2469:.\sd/ff.c     **** #if !_FS_READONLY
2470:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2471:.\sd/ff.c     **** /* Write File                                                            */
2472:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2473:.\sd/ff.c     **** 
2474:.\sd/ff.c     **** FRESULT f_write (
2475:.\sd/ff.c     **** 	FIL *fp,			/* Pointer to the file object */
2476:.\sd/ff.c     **** 	const void *buff,	/* Pointer to the data to be written */
2477:.\sd/ff.c     **** 	UINT btw,			/* Number of bytes to write */
2478:.\sd/ff.c     **** 	UINT *bw			/* Pointer to number of bytes written */
2479:.\sd/ff.c     **** )
2480:.\sd/ff.c     **** {
 4665              		.loc 1 2480 0
 4666              		.cfi_startproc
 4667              	.LVL642:
 4668 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4669              		.cfi_def_cfa_offset 24
 4670              		.cfi_offset 3, -24
 4671              		.cfi_offset 4, -20
 4672              		.cfi_offset 5, -16
 4673              		.cfi_offset 6, -12
 4674              		.cfi_offset 7, -8
 4675              		.cfi_offset 14, -4
 4676 0002 5F46     		mov	r7, fp
 4677 0004 5646     		mov	r6, r10
 4678 0006 4D46     		mov	r5, r9
 4679 0008 4446     		mov	r4, r8
 4680 000a F0B4     		push	{r4, r5, r6, r7}
 4681              		.cfi_def_cfa_offset 40
 4682              		.cfi_offset 8, -40
 4683              		.cfi_offset 9, -36
 4684              		.cfi_offset 10, -32
 4685              		.cfi_offset 11, -28
 4686 000c 041C     		mov	r4, r0
 4687 000e 8846     		mov	r8, r1
 4688 0010 161C     		mov	r6, r2
 4689 0012 1F1C     		mov	r7, r3
 4690              	.LVL643:
2481:.\sd/ff.c     **** 	FRESULT res;
2482:.\sd/ff.c     **** 	DWORD clst, sect;
2483:.\sd/ff.c     **** 	UINT wcnt, cc;
2484:.\sd/ff.c     **** 	const BYTE *wbuff = buff;
2485:.\sd/ff.c     **** 	BYTE csect;
2486:.\sd/ff.c     **** 
2487:.\sd/ff.c     **** 
2488:.\sd/ff.c     **** 	*bw = 0;	/* Initialize byte counter */
 4691              		.loc 1 2488 0
 4692 0014 0023     		mov	r3, #0
 4693              	.LVL644:
 4694 0016 3B60     		str	r3, [r7]
2489:.\sd/ff.c     **** 
2490:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);			/* Check validity */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 135


 4695              		.loc 1 2490 0
 4696 0018 8188     		ldrh	r1, [r0, #4]
 4697              	.LVL645:
 4698 001a 0068     		ldr	r0, [r0]
 4699              	.LVL646:
 4700 001c FFF7FEFF 		bl	validate
 4701              	.LVL647:
2491:.\sd/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4702              		.loc 1 2491 0
 4703 0020 0028     		cmp	r0, #0
 4704 0022 00D0     		beq	.LCB5301
 4705 0024 E2E0     		b	.L347	@long jump
 4706              	.LCB5301:
2492:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)				/* Aborted file? */
 4707              		.loc 1 2492 0
 4708 0026 A379     		ldrb	r3, [r4, #6]
 4709 0028 5AB2     		sxtb	r2, r3
 4710 002a 002A     		cmp	r2, #0
 4711 002c 00DA     		bge	.LCB5306
 4712 002e DAE0     		b	.L371	@long jump
 4713              	.LCB5306:
2493:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
2494:.\sd/ff.c     **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 4714              		.loc 1 2494 0
 4715 0030 9B07     		lsl	r3, r3, #30
 4716 0032 00D4     		bmi	.LCB5311
 4717 0034 D9E0     		b	.L372	@long jump
 4718              	.LCB5311:
2495:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_DENIED);
2496:.\sd/ff.c     **** 	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */
 4719              		.loc 1 2496 0
 4720 0036 E368     		ldr	r3, [r4, #12]
 4721 0038 9A19     		add	r2, r3, r6
 4722 003a 9342     		cmp	r3, r2
 4723 003c 00D8     		bhi	.LCB5315
 4724 003e C4E0     		b	.L349	@long jump
 4725              	.LCB5315:
 4726 0040 0026     		mov	r6, #0
 4727              	.LVL648:
 4728 0042 C2E0     		b	.L349
 4729              	.LVL649:
 4730              	.L368:
2497:.\sd/ff.c     **** 
2498:.\sd/ff.c     **** 	for ( ;  btw;							/* Repeat until all data written */
2499:.\sd/ff.c     **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
2500:.\sd/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 4731              		.loc 1 2500 0
 4732 0044 A268     		ldr	r2, [r4, #8]
 4733 0046 D305     		lsl	r3, r2, #23
 4734 0048 00D0     		beq	.LCB5330
 4735 004a 92E0     		b	.L350	@long jump
 4736              	.LCB5330:
2501:.\sd/ff.c     **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4737              		.loc 1 2501 0
 4738 004c 550A     		lsr	r5, r2, #9
 4739 004e 2068     		ldr	r0, [r4]
 4740 0050 8378     		ldrb	r3, [r0, #2]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 136


 4741 0052 013B     		sub	r3, r3, #1
 4742 0054 DBB2     		uxtb	r3, r3
 4743 0056 1D40     		and	r5, r3
 4744              	.LVL650:
2502:.\sd/ff.c     **** 			if (!csect) {					/* On the cluster boundary? */
 4745              		.loc 1 2502 0
 4746 0058 24D1     		bne	.L351
2503:.\sd/ff.c     **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 4747              		.loc 1 2503 0
 4748 005a 002A     		cmp	r2, #0
 4749 005c 08D1     		bne	.L352
2504:.\sd/ff.c     **** 					clst = fp->sclust;		/* Follow from the origin */
 4750              		.loc 1 2504 0
 4751 005e 2369     		ldr	r3, [r4, #16]
 4752              	.LVL651:
2505:.\sd/ff.c     **** 					if (clst == 0)			/* When no cluster is allocated, */
 4753              		.loc 1 2505 0
 4754 0060 002B     		cmp	r3, #0
 4755 0062 09D1     		bne	.L353
2506:.\sd/ff.c     **** 						fp->sclust = clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
 4756              		.loc 1 2506 0
 4757 0064 0021     		mov	r1, #0
 4758 0066 FFF7FEFF 		bl	create_chain
 4759              	.LVL652:
 4760 006a 031C     		mov	r3, r0
 4761              	.LVL653:
 4762 006c 2061     		str	r0, [r4, #16]
 4763 006e 03E0     		b	.L353
 4764              	.LVL654:
 4765              	.L352:
2507:.\sd/ff.c     **** 				} else {					/* Middle or end of the file */
2508:.\sd/ff.c     **** #if _USE_FASTSEEK
2509:.\sd/ff.c     **** 					if (fp->cltbl)
2510:.\sd/ff.c     **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2511:.\sd/ff.c     **** 					else
2512:.\sd/ff.c     **** #endif
2513:.\sd/ff.c     **** 						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
 4766              		.loc 1 2513 0
 4767 0070 6169     		ldr	r1, [r4, #20]
 4768 0072 FFF7FEFF 		bl	create_chain
 4769              	.LVL655:
 4770 0076 031C     		mov	r3, r0
 4771              	.LVL656:
 4772              	.L353:
2514:.\sd/ff.c     **** 				}
2515:.\sd/ff.c     **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
 4773              		.loc 1 2515 0
 4774 0078 002B     		cmp	r3, #0
 4775 007a 00D1     		bne	.LCB5372
 4776 007c A8E0     		b	.L354	@long jump
 4777              	.LCB5372:
2516:.\sd/ff.c     **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 4778              		.loc 1 2516 0
 4779 007e 012B     		cmp	r3, #1
 4780 0080 06D1     		bne	.L355
 4781              		.loc 1 2516 0 is_stmt 0 discriminator 1
 4782 0082 A379     		ldrb	r3, [r4, #6]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 137


 4783              	.LVL657:
 4784 0084 8022     		mov	r2, #128
 4785 0086 5242     		neg	r2, r2
 4786 0088 1343     		orr	r3, r2
 4787 008a A371     		strb	r3, [r4, #6]
 4788 008c 0220     		mov	r0, #2
 4789 008e ADE0     		b	.L347
 4790              	.LVL658:
 4791              	.L355:
2517:.\sd/ff.c     **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4792              		.loc 1 2517 0 is_stmt 1
 4793 0090 5A1C     		add	r2, r3, #1
 4794 0092 06D1     		bne	.L356
 4795              		.loc 1 2517 0 is_stmt 0 discriminator 1
 4796 0094 A379     		ldrb	r3, [r4, #6]
 4797              	.LVL659:
 4798 0096 8022     		mov	r2, #128
 4799 0098 5242     		neg	r2, r2
 4800 009a 1343     		orr	r3, r2
 4801 009c A371     		strb	r3, [r4, #6]
 4802 009e 0120     		mov	r0, #1
 4803 00a0 A4E0     		b	.L347
 4804              	.LVL660:
 4805              	.L356:
2518:.\sd/ff.c     **** 				fp->clust = clst;			/* Update current cluster */
 4806              		.loc 1 2518 0 is_stmt 1
 4807 00a2 6361     		str	r3, [r4, #20]
 4808              	.LVL661:
 4809              	.L351:
2519:.\sd/ff.c     **** 			}
2520:.\sd/ff.c     **** #if _FS_TINY
2521:.\sd/ff.c     **** 			if (fp->fs->winsect == fp->dsect && move_window(fp->fs, 0))	/* Write-back sector cache */
 4810              		.loc 1 2521 0
 4811 00a4 2068     		ldr	r0, [r4]
 4812 00a6 C36A     		ldr	r3, [r0, #44]
 4813 00a8 A269     		ldr	r2, [r4, #24]
 4814 00aa 9342     		cmp	r3, r2
 4815 00ac 0BD1     		bne	.L357
 4816              		.loc 1 2521 0 is_stmt 0 discriminator 1
 4817 00ae 0021     		mov	r1, #0
 4818 00b0 FFF7FEFF 		bl	move_window
 4819              	.LVL662:
 4820 00b4 0028     		cmp	r0, #0
 4821 00b6 06D0     		beq	.L357
2522:.\sd/ff.c     **** 				ABORT(fp->fs, FR_DISK_ERR);
 4822              		.loc 1 2522 0 is_stmt 1
 4823 00b8 A379     		ldrb	r3, [r4, #6]
 4824 00ba 8022     		mov	r2, #128
 4825 00bc 5242     		neg	r2, r2
 4826 00be 1343     		orr	r3, r2
 4827 00c0 A371     		strb	r3, [r4, #6]
 4828 00c2 0120     		mov	r0, #1
 4829 00c4 92E0     		b	.L347
 4830              	.L357:
2523:.\sd/ff.c     **** #else
2524:.\sd/ff.c     **** 			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
2525:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 138


2526:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2527:.\sd/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2528:.\sd/ff.c     **** 			}
2529:.\sd/ff.c     **** #endif
2530:.\sd/ff.c     **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
 4831              		.loc 1 2530 0
 4832 00c6 2368     		ldr	r3, [r4]
 4833 00c8 9A46     		mov	r10, r3
 4834 00ca 181C     		mov	r0, r3
 4835 00cc 6169     		ldr	r1, [r4, #20]
 4836 00ce FFF7FEFF 		bl	clust2sect
 4837              	.LVL663:
2531:.\sd/ff.c     **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4838              		.loc 1 2531 0
 4839 00d2 0028     		cmp	r0, #0
 4840 00d4 06D1     		bne	.L358
 4841              		.loc 1 2531 0 is_stmt 0 discriminator 1
 4842 00d6 A379     		ldrb	r3, [r4, #6]
 4843 00d8 8022     		mov	r2, #128
 4844 00da 5242     		neg	r2, r2
 4845 00dc 1343     		orr	r3, r2
 4846 00de A371     		strb	r3, [r4, #6]
 4847 00e0 0230     		add	r0, r0, #2
 4848              	.LVL664:
 4849 00e2 83E0     		b	.L347
 4850              	.LVL665:
 4851              	.L358:
2532:.\sd/ff.c     **** 			sect += csect;
 4852              		.loc 1 2532 0 is_stmt 1
 4853 00e4 8146     		mov	r9, r0
 4854 00e6 A944     		add	r9, r9, r5
 4855              	.LVL666:
2533:.\sd/ff.c     **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
 4856              		.loc 1 2533 0
 4857 00e8 730A     		lsr	r3, r6, #9
 4858 00ea 9B46     		mov	fp, r3
 4859              	.LVL667:
2534:.\sd/ff.c     **** 			if (cc) {						/* Write maximum contiguous sectors directly */
 4860              		.loc 1 2534 0
 4861 00ec 2BD0     		beq	.L359
2535:.\sd/ff.c     **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4862              		.loc 1 2535 0
 4863 00ee EB18     		add	r3, r5, r3
 4864              	.LVL668:
 4865 00f0 5246     		mov	r2, r10
 4866 00f2 9278     		ldrb	r2, [r2, #2]
 4867 00f4 9342     		cmp	r3, r2
 4868 00f6 01D9     		bls	.L360
2536:.\sd/ff.c     **** 					cc = fp->fs->csize - csect;
 4869              		.loc 1 2536 0
 4870 00f8 531B     		sub	r3, r2, r5
 4871 00fa 9B46     		mov	fp, r3
 4872              	.LVL669:
 4873              	.L360:
2537:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, wbuff, sect, (BYTE)cc) != RES_OK)
 4874              		.loc 1 2537 0
 4875 00fc 5346     		mov	r3, r10
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 139


 4876 00fe 5878     		ldrb	r0, [r3, #1]
 4877 0100 FF23     		mov	r3, #255
 4878 0102 5A46     		mov	r2, fp
 4879 0104 1340     		and	r3, r2
 4880 0106 4146     		mov	r1, r8
 4881 0108 4A46     		mov	r2, r9
 4882 010a FFF7FEFF 		bl	disk_write
 4883              	.LVL670:
 4884 010e 0028     		cmp	r0, #0
 4885 0110 06D0     		beq	.L361
2538:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
 4886              		.loc 1 2538 0
 4887 0112 A379     		ldrb	r3, [r4, #6]
 4888 0114 8022     		mov	r2, #128
 4889 0116 5242     		neg	r2, r2
 4890 0118 1343     		orr	r3, r2
 4891 011a A371     		strb	r3, [r4, #6]
 4892 011c 0120     		mov	r0, #1
 4893 011e 65E0     		b	.L347
 4894              	.L361:
2539:.\sd/ff.c     **** #if _FS_TINY
2540:.\sd/ff.c     **** 				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct 
 4895              		.loc 1 2540 0
 4896 0120 2068     		ldr	r0, [r4]
 4897 0122 C36A     		ldr	r3, [r0, #44]
 4898 0124 4A46     		mov	r2, r9
 4899 0126 991A     		sub	r1, r3, r2
 4900 0128 5945     		cmp	r1, fp
 4901 012a 09D2     		bcs	.L362
 4902              	.LVL671:
2541:.\sd/ff.c     **** 					mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
 4903              		.loc 1 2541 0
 4904 012c 3030     		add	r0, r0, #48
 4905 012e 4902     		lsl	r1, r1, #9
 4906 0130 4144     		add	r1, r1, r8
 4907 0132 8022     		mov	r2, #128
 4908              	.LVL672:
 4909 0134 9200     		lsl	r2, r2, #2
 4910 0136 FFF7FEFF 		bl	mem_cpy
 4911              	.LVL673:
2542:.\sd/ff.c     **** 					fp->fs->wflag = 0;
 4912              		.loc 1 2542 0
 4913 013a 0023     		mov	r3, #0
 4914 013c 2268     		ldr	r2, [r4]
 4915 013e 1371     		strb	r3, [r2, #4]
 4916              	.L362:
2543:.\sd/ff.c     **** 				}
2544:.\sd/ff.c     **** #else
2545:.\sd/ff.c     **** 				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write 
2546:.\sd/ff.c     **** 					mem_cpy(fp->buf, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
2547:.\sd/ff.c     **** 					fp->flag &= ~FA__DIRTY;
2548:.\sd/ff.c     **** 				}
2549:.\sd/ff.c     **** #endif
2550:.\sd/ff.c     **** 				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
 4917              		.loc 1 2550 0
 4918 0140 5B46     		mov	r3, fp
 4919 0142 5D02     		lsl	r5, r3, #9
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 140


 4920              	.LVL674:
2551:.\sd/ff.c     **** 				continue;
 4921              		.loc 1 2551 0
 4922 0144 39E0     		b	.L363
 4923              	.LVL675:
 4924              	.L359:
2552:.\sd/ff.c     **** 			}
2553:.\sd/ff.c     **** #if _FS_TINY
2554:.\sd/ff.c     **** 			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
 4925              		.loc 1 2554 0
 4926 0146 A368     		ldr	r3, [r4, #8]
 4927              	.LVL676:
 4928 0148 E268     		ldr	r2, [r4, #12]
 4929 014a 9342     		cmp	r3, r2
 4930 014c 0FD3     		bcc	.L364
2555:.\sd/ff.c     **** 				if (move_window(fp->fs, 0)) ABORT(fp->fs, FR_DISK_ERR);
 4931              		.loc 1 2555 0
 4932 014e 5046     		mov	r0, r10
 4933 0150 0021     		mov	r1, #0
 4934 0152 FFF7FEFF 		bl	move_window
 4935              	.LVL677:
 4936 0156 0028     		cmp	r0, #0
 4937 0158 06D0     		beq	.L365
 4938              		.loc 1 2555 0 is_stmt 0 discriminator 1
 4939 015a A379     		ldrb	r3, [r4, #6]
 4940 015c 8022     		mov	r2, #128
 4941 015e 5242     		neg	r2, r2
 4942 0160 1343     		orr	r3, r2
 4943 0162 A371     		strb	r3, [r4, #6]
 4944 0164 0120     		mov	r0, #1
 4945 0166 41E0     		b	.L347
 4946              	.L365:
2556:.\sd/ff.c     **** 				fp->fs->winsect = sect;
 4947              		.loc 1 2556 0 is_stmt 1
 4948 0168 2368     		ldr	r3, [r4]
 4949 016a 4A46     		mov	r2, r9
 4950 016c DA62     		str	r2, [r3, #44]
 4951              	.L364:
2557:.\sd/ff.c     **** 			}
2558:.\sd/ff.c     **** #else
2559:.\sd/ff.c     **** 			if (fp->dsect != sect) {		/* Fill sector cache with file data */
2560:.\sd/ff.c     **** 				if (fp->fptr < fp->fsize &&
2561:.\sd/ff.c     **** 					disk_read(fp->fs->drv, fp->buf, sect, 1) != RES_OK)
2562:.\sd/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2563:.\sd/ff.c     **** 			}
2564:.\sd/ff.c     **** #endif
2565:.\sd/ff.c     **** 			fp->dsect = sect;
 4952              		.loc 1 2565 0
 4953 016e 4B46     		mov	r3, r9
 4954 0170 A361     		str	r3, [r4, #24]
 4955              	.LVL678:
 4956              	.L350:
2566:.\sd/ff.c     **** 		}
2567:.\sd/ff.c     **** 		wcnt = SS(fp->fs) - (fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
 4957              		.loc 1 2567 0
 4958 0172 A368     		ldr	r3, [r4, #8]
 4959 0174 DD05     		lsl	r5, r3, #23
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 141


 4960 0176 ED0D     		lsr	r5, r5, #23
 4961 0178 8023     		mov	r3, #128
 4962 017a 9B00     		lsl	r3, r3, #2
 4963 017c 5D1B     		sub	r5, r3, r5
 4964              	.LVL679:
2568:.\sd/ff.c     **** 		if (wcnt > btw) wcnt = btw;
 4965              		.loc 1 2568 0
 4966 017e B542     		cmp	r5, r6
 4967 0180 00D9     		bls	.L366
 4968 0182 351C     		mov	r5, r6
 4969              	.LVL680:
 4970              	.L366:
2569:.\sd/ff.c     **** #if _FS_TINY
2570:.\sd/ff.c     **** 		if (move_window(fp->fs, fp->dsect))	/* Move sector window */
 4971              		.loc 1 2570 0
 4972 0184 2068     		ldr	r0, [r4]
 4973 0186 A169     		ldr	r1, [r4, #24]
 4974 0188 FFF7FEFF 		bl	move_window
 4975              	.LVL681:
 4976 018c 0028     		cmp	r0, #0
 4977 018e 06D0     		beq	.L367
2571:.\sd/ff.c     **** 			ABORT(fp->fs, FR_DISK_ERR);
 4978              		.loc 1 2571 0
 4979 0190 A379     		ldrb	r3, [r4, #6]
 4980 0192 8022     		mov	r2, #128
 4981 0194 5242     		neg	r2, r2
 4982 0196 1343     		orr	r3, r2
 4983 0198 A371     		strb	r3, [r4, #6]
 4984 019a 0120     		mov	r0, #1
 4985 019c 26E0     		b	.L347
 4986              	.L367:
2572:.\sd/ff.c     **** 		mem_cpy(&fp->fs->win[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
 4987              		.loc 1 2572 0
 4988 019e A368     		ldr	r3, [r4, #8]
 4989 01a0 D805     		lsl	r0, r3, #23
 4990 01a2 C00D     		lsr	r0, r0, #23
 4991 01a4 3030     		add	r0, r0, #48
 4992 01a6 2368     		ldr	r3, [r4]
 4993 01a8 9C46     		mov	ip, r3
 4994 01aa 6044     		add	r0, r0, ip
 4995 01ac 4146     		mov	r1, r8
 4996 01ae 2A1C     		mov	r2, r5
 4997 01b0 FFF7FEFF 		bl	mem_cpy
 4998              	.LVL682:
2573:.\sd/ff.c     **** 		fp->fs->wflag = 1;
 4999              		.loc 1 2573 0
 5000 01b4 0123     		mov	r3, #1
 5001 01b6 2268     		ldr	r2, [r4]
 5002 01b8 1371     		strb	r3, [r2, #4]
 5003              	.L363:
2499:.\sd/ff.c     **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 5004              		.loc 1 2499 0
 5005 01ba A844     		add	r8, r8, r5
 5006              	.LVL683:
 5007 01bc A368     		ldr	r3, [r4, #8]
 5008 01be 5B19     		add	r3, r3, r5
 5009 01c0 A360     		str	r3, [r4, #8]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 142


 5010 01c2 3B68     		ldr	r3, [r7]
 5011 01c4 5B19     		add	r3, r3, r5
 5012 01c6 3B60     		str	r3, [r7]
 5013 01c8 761B     		sub	r6, r6, r5
 5014              	.LVL684:
 5015              	.L349:
2498:.\sd/ff.c     **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
 5016              		.loc 1 2498 0
 5017 01ca 002E     		cmp	r6, #0
 5018 01cc 00D0     		beq	.LCB5660
 5019 01ce 39E7     		b	.L368	@long jump
 5020              	.LCB5660:
 5021              	.L354:
2574:.\sd/ff.c     **** #else
2575:.\sd/ff.c     **** 		mem_cpy(&fp->buf[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2576:.\sd/ff.c     **** 		fp->flag |= FA__DIRTY;
2577:.\sd/ff.c     **** #endif
2578:.\sd/ff.c     **** 	}
2579:.\sd/ff.c     **** 
2580:.\sd/ff.c     **** 	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
 5022              		.loc 1 2580 0
 5023 01d0 A368     		ldr	r3, [r4, #8]
 5024 01d2 E268     		ldr	r2, [r4, #12]
 5025 01d4 9342     		cmp	r3, r2
 5026 01d6 00D9     		bls	.L369
 5027              		.loc 1 2580 0 is_stmt 0 discriminator 1
 5028 01d8 E360     		str	r3, [r4, #12]
 5029              	.L369:
2581:.\sd/ff.c     **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
 5030              		.loc 1 2581 0 is_stmt 1
 5031 01da A279     		ldrb	r2, [r4, #6]
 5032 01dc 2023     		mov	r3, #32
 5033 01de 1343     		orr	r3, r2
 5034 01e0 A371     		strb	r3, [r4, #6]
2582:.\sd/ff.c     **** 
2583:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, FR_OK);
 5035              		.loc 1 2583 0
 5036 01e2 0020     		mov	r0, #0
 5037 01e4 02E0     		b	.L347
 5038              	.LVL685:
 5039              	.L371:
2493:.\sd/ff.c     **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 5040              		.loc 1 2493 0
 5041 01e6 0220     		mov	r0, #2
 5042              	.LVL686:
 5043 01e8 00E0     		b	.L347
 5044              	.LVL687:
 5045              	.L372:
2495:.\sd/ff.c     **** 	if ((DWORD)(fp->fsize + btw) < fp->fsize) btw = 0;	/* File size cannot reach 4GB */
 5046              		.loc 1 2495 0
 5047 01ea 0720     		mov	r0, #7
 5048              	.LVL688:
 5049              	.L347:
2584:.\sd/ff.c     **** }
 5050              		.loc 1 2584 0
 5051              		@ sp needed
 5052              	.LVL689:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 143


 5053              	.LVL690:
 5054              	.LVL691:
 5055              	.LVL692:
 5056 01ec 3CBC     		pop	{r2, r3, r4, r5}
 5057 01ee 9046     		mov	r8, r2
 5058 01f0 9946     		mov	r9, r3
 5059 01f2 A246     		mov	r10, r4
 5060 01f4 AB46     		mov	fp, r5
 5061 01f6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5062              		.cfi_endproc
 5063              	.LFE31:
 5064              		.size	f_write, .-f_write
 5065              		.section	.text.f_sync,"ax",%progbits
 5066              		.align	2
 5067              		.global	f_sync
 5068              		.code	16
 5069              		.thumb_func
 5070              		.type	f_sync, %function
 5071              	f_sync:
 5072              	.LFB32:
2585:.\sd/ff.c     **** 
2586:.\sd/ff.c     **** 
2587:.\sd/ff.c     **** 
2588:.\sd/ff.c     **** 
2589:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2590:.\sd/ff.c     **** /* Synchronize the File Object                                           */
2591:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2592:.\sd/ff.c     **** 
2593:.\sd/ff.c     **** FRESULT f_sync (
2594:.\sd/ff.c     **** 	FIL *fp		/* Pointer to the file object */
2595:.\sd/ff.c     **** )
2596:.\sd/ff.c     **** {
 5073              		.loc 1 2596 0
 5074              		.cfi_startproc
 5075              	.LVL693:
 5076 0000 38B5     		push	{r3, r4, r5, lr}
 5077              		.cfi_def_cfa_offset 16
 5078              		.cfi_offset 3, -16
 5079              		.cfi_offset 4, -12
 5080              		.cfi_offset 5, -8
 5081              		.cfi_offset 14, -4
 5082 0002 041C     		mov	r4, r0
2597:.\sd/ff.c     **** 	FRESULT res;
2598:.\sd/ff.c     **** 	DWORD tim;
2599:.\sd/ff.c     **** 	BYTE *dir;
2600:.\sd/ff.c     **** 
2601:.\sd/ff.c     **** 
2602:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 5083              		.loc 1 2602 0
 5084 0004 8188     		ldrh	r1, [r0, #4]
 5085 0006 0068     		ldr	r0, [r0]
 5086              	.LVL694:
 5087 0008 FFF7FEFF 		bl	validate
 5088              	.LVL695:
2603:.\sd/ff.c     **** 	if (res == FR_OK) {
 5089              		.loc 1 2603 0
 5090 000c 0028     		cmp	r0, #0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 144


 5091 000e 33D1     		bne	.L376
2604:.\sd/ff.c     **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
 5092              		.loc 1 2604 0
 5093 0010 A379     		ldrb	r3, [r4, #6]
 5094 0012 9B06     		lsl	r3, r3, #26
 5095 0014 30D5     		bpl	.L376
2605:.\sd/ff.c     **** #if !_FS_TINY	/* Write-back dirty buffer */
2606:.\sd/ff.c     **** 			if (fp->flag & FA__DIRTY) {
2607:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2608:.\sd/ff.c     **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
2609:.\sd/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2610:.\sd/ff.c     **** 			}
2611:.\sd/ff.c     **** #endif
2612:.\sd/ff.c     **** 			/* Update the directory entry */
2613:.\sd/ff.c     **** 			res = move_window(fp->fs, fp->dir_sect);
 5096              		.loc 1 2613 0
 5097 0016 2068     		ldr	r0, [r4]
 5098              	.LVL696:
 5099 0018 E169     		ldr	r1, [r4, #28]
 5100 001a FFF7FEFF 		bl	move_window
 5101              	.LVL697:
2614:.\sd/ff.c     **** 			if (res == FR_OK) {
 5102              		.loc 1 2614 0
 5103 001e 0028     		cmp	r0, #0
 5104 0020 2AD1     		bne	.L376
2615:.\sd/ff.c     **** 				dir = fp->dir_ptr;
 5105              		.loc 1 2615 0
 5106 0022 256A     		ldr	r5, [r4, #32]
 5107              	.LVL698:
2616:.\sd/ff.c     **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
 5108              		.loc 1 2616 0
 5109 0024 EA7A     		ldrb	r2, [r5, #11]
 5110 0026 2023     		mov	r3, #32
 5111 0028 1343     		orr	r3, r2
 5112 002a EB72     		strb	r3, [r5, #11]
2617:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_FileSize, fp->fsize);		/* Update file size */
 5113              		.loc 1 2617 0
 5114 002c 237B     		ldrb	r3, [r4, #12]
 5115 002e 2B77     		strb	r3, [r5, #28]
 5116 0030 A389     		ldrh	r3, [r4, #12]
 5117 0032 1B0A     		lsr	r3, r3, #8
 5118 0034 6B77     		strb	r3, [r5, #29]
 5119 0036 A37B     		ldrb	r3, [r4, #14]
 5120 0038 AB77     		strb	r3, [r5, #30]
 5121 003a E37B     		ldrb	r3, [r4, #15]
 5122 003c EB77     		strb	r3, [r5, #31]
2618:.\sd/ff.c     **** 				ST_CLUST(dir, fp->sclust);					/* Update start cluster */
 5123              		.loc 1 2618 0
 5124 003e 237C     		ldrb	r3, [r4, #16]
 5125 0040 AB76     		strb	r3, [r5, #26]
 5126 0042 238A     		ldrh	r3, [r4, #16]
 5127 0044 1B0A     		lsr	r3, r3, #8
 5128 0046 EB76     		strb	r3, [r5, #27]
 5129 0048 A37C     		ldrb	r3, [r4, #18]
 5130 004a 2B75     		strb	r3, [r5, #20]
 5131 004c 638A     		ldrh	r3, [r4, #18]
 5132 004e 1B0A     		lsr	r3, r3, #8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 145


 5133 0050 6B75     		strb	r3, [r5, #21]
2619:.\sd/ff.c     **** 				tim = get_fattime();						/* Update updated time */
 5134              		.loc 1 2619 0
 5135 0052 FFF7FEFF 		bl	get_fattime
 5136              	.LVL699:
2620:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);
 5137              		.loc 1 2620 0
 5138 0056 A875     		strb	r0, [r5, #22]
 5139 0058 030A     		lsr	r3, r0, #8
 5140 005a EB75     		strb	r3, [r5, #23]
 5141 005c 030C     		lsr	r3, r0, #16
 5142 005e 2B76     		strb	r3, [r5, #24]
 5143 0060 000E     		lsr	r0, r0, #24
 5144              	.LVL700:
 5145 0062 6876     		strb	r0, [r5, #25]
2621:.\sd/ff.c     **** 				fp->flag &= ~FA__WRITTEN;
 5146              		.loc 1 2621 0
 5147 0064 A379     		ldrb	r3, [r4, #6]
 5148 0066 2022     		mov	r2, #32
 5149 0068 9343     		bic	r3, r2
 5150 006a A371     		strb	r3, [r4, #6]
2622:.\sd/ff.c     **** 				fp->fs->wflag = 1;
 5151              		.loc 1 2622 0
 5152 006c 0123     		mov	r3, #1
 5153 006e 2268     		ldr	r2, [r4]
 5154 0070 1371     		strb	r3, [r2, #4]
2623:.\sd/ff.c     **** 				res = sync(fp->fs);
 5155              		.loc 1 2623 0
 5156 0072 2068     		ldr	r0, [r4]
 5157 0074 FFF7FEFF 		bl	sync
 5158              	.LVL701:
 5159              	.L376:
2624:.\sd/ff.c     **** 			}
2625:.\sd/ff.c     **** 		}
2626:.\sd/ff.c     **** 	}
2627:.\sd/ff.c     **** 
2628:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, res);
2629:.\sd/ff.c     **** }
 5160              		.loc 1 2629 0
 5161              		@ sp needed
 5162              	.LVL702:
 5163 0078 38BD     		pop	{r3, r4, r5, pc}
 5164              		.cfi_endproc
 5165              	.LFE32:
 5166              		.size	f_sync, .-f_sync
 5167 007a C046     		.section	.text.f_close,"ax",%progbits
 5168              		.align	2
 5169              		.global	f_close
 5170              		.code	16
 5171              		.thumb_func
 5172              		.type	f_close, %function
 5173              	f_close:
 5174              	.LFB33:
2630:.\sd/ff.c     **** 
2631:.\sd/ff.c     **** #endif /* !_FS_READONLY */
2632:.\sd/ff.c     **** 
2633:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 146


2634:.\sd/ff.c     **** 
2635:.\sd/ff.c     **** 
2636:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2637:.\sd/ff.c     **** /* Close File                                                            */
2638:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2639:.\sd/ff.c     **** 
2640:.\sd/ff.c     **** FRESULT f_close (
2641:.\sd/ff.c     **** 	FIL *fp		/* Pointer to the file object to be closed */
2642:.\sd/ff.c     **** )
2643:.\sd/ff.c     **** {
 5175              		.loc 1 2643 0
 5176              		.cfi_startproc
 5177              	.LVL703:
 5178 0000 10B5     		push	{r4, lr}
 5179              		.cfi_def_cfa_offset 8
 5180              		.cfi_offset 4, -8
 5181              		.cfi_offset 14, -4
 5182 0002 041C     		mov	r4, r0
2644:.\sd/ff.c     **** 	FRESULT res;
2645:.\sd/ff.c     **** 
2646:.\sd/ff.c     **** #if _FS_READONLY
2647:.\sd/ff.c     **** 	FATFS *fs = fp->fs;
2648:.\sd/ff.c     **** 	res = validate(fs, fp->id);
2649:.\sd/ff.c     **** 	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
2650:.\sd/ff.c     **** 	LEAVE_FF(fs, res);
2651:.\sd/ff.c     **** 
2652:.\sd/ff.c     **** #else
2653:.\sd/ff.c     **** 	res = f_sync(fp);		/* Flush cached data */
 5183              		.loc 1 2653 0
 5184 0004 FFF7FEFF 		bl	f_sync
 5185              	.LVL704:
2654:.\sd/ff.c     **** #if _FS_SHARE
2655:.\sd/ff.c     **** 	if (res == FR_OK) {		/* Decrement open counter */
 5186              		.loc 1 2655 0
 5187 0008 0028     		cmp	r0, #0
 5188 000a 02D1     		bne	.L378
2656:.\sd/ff.c     **** #if _FS_REENTRANT
2657:.\sd/ff.c     **** 		res = validate(fp->fs, fp->id);
2658:.\sd/ff.c     **** 		if (res == FR_OK) {
2659:.\sd/ff.c     **** 			res = dec_lock(fp->lockid);	
2660:.\sd/ff.c     **** 			unlock_fs(fp->fs, FR_OK);
2661:.\sd/ff.c     **** 		}
2662:.\sd/ff.c     **** #else
2663:.\sd/ff.c     **** 		res = dec_lock(fp->lockid);
 5189              		.loc 1 2663 0
 5190 000c 606A     		ldr	r0, [r4, #36]
 5191              	.LVL705:
 5192 000e FFF7FEFF 		bl	dec_lock
 5193              	.LVL706:
 5194              	.L378:
2664:.\sd/ff.c     **** #endif
2665:.\sd/ff.c     **** 	}
2666:.\sd/ff.c     **** #endif
2667:.\sd/ff.c     **** 	if (res == FR_OK) fp->fs = 0;	/* Discard file object */
 5195              		.loc 1 2667 0
 5196 0012 0028     		cmp	r0, #0
 5197 0014 01D1     		bne	.L379
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 147


 5198              		.loc 1 2667 0 is_stmt 0 discriminator 1
 5199 0016 0023     		mov	r3, #0
 5200 0018 2360     		str	r3, [r4]
 5201              	.L379:
2668:.\sd/ff.c     **** 	return res;
2669:.\sd/ff.c     **** #endif
2670:.\sd/ff.c     **** }
 5202              		.loc 1 2670 0 is_stmt 1
 5203              		@ sp needed
 5204              	.LVL707:
 5205 001a 10BD     		pop	{r4, pc}
 5206              		.cfi_endproc
 5207              	.LFE33:
 5208              		.size	f_close, .-f_close
 5209              		.section	.text.f_lseek,"ax",%progbits
 5210              		.align	2
 5211              		.global	f_lseek
 5212              		.code	16
 5213              		.thumb_func
 5214              		.type	f_lseek, %function
 5215              	f_lseek:
 5216              	.LFB34:
2671:.\sd/ff.c     **** 
2672:.\sd/ff.c     **** 
2673:.\sd/ff.c     **** 
2674:.\sd/ff.c     **** 
2675:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2676:.\sd/ff.c     **** /* Current Drive/Directory Handlings                                     */
2677:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2678:.\sd/ff.c     **** 
2679:.\sd/ff.c     **** #if _FS_RPATH >= 1
2680:.\sd/ff.c     **** 
2681:.\sd/ff.c     **** FRESULT f_chdrive (
2682:.\sd/ff.c     **** 	BYTE drv		/* Drive number */
2683:.\sd/ff.c     **** )
2684:.\sd/ff.c     **** {
2685:.\sd/ff.c     **** 	if (drv >= _VOLUMES) return FR_INVALID_DRIVE;
2686:.\sd/ff.c     **** 
2687:.\sd/ff.c     **** 	CurrVol = drv;
2688:.\sd/ff.c     **** 
2689:.\sd/ff.c     **** 	return FR_OK;
2690:.\sd/ff.c     **** }
2691:.\sd/ff.c     **** 
2692:.\sd/ff.c     **** 
2693:.\sd/ff.c     **** 
2694:.\sd/ff.c     **** FRESULT f_chdir (
2695:.\sd/ff.c     **** 	const TCHAR *path	/* Pointer to the directory path */
2696:.\sd/ff.c     **** )
2697:.\sd/ff.c     **** {
2698:.\sd/ff.c     **** 	FRESULT res;
2699:.\sd/ff.c     **** 	DIR dj;
2700:.\sd/ff.c     **** 	DEF_NAMEBUF;
2701:.\sd/ff.c     **** 
2702:.\sd/ff.c     **** 
2703:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
2704:.\sd/ff.c     **** 	if (res == FR_OK) {
2705:.\sd/ff.c     **** 		INIT_BUF(dj);
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 148


2706:.\sd/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the path */
2707:.\sd/ff.c     **** 		FREE_BUF();
2708:.\sd/ff.c     **** 		if (res == FR_OK) {					/* Follow completed */
2709:.\sd/ff.c     **** 			if (!dj.dir) {
2710:.\sd/ff.c     **** 				dj.fs->cdir = dj.sclust;	/* Start directory itself */
2711:.\sd/ff.c     **** 			} else {
2712:.\sd/ff.c     **** 				if (dj.dir[DIR_Attr] & AM_DIR)	/* Reached to the directory */
2713:.\sd/ff.c     **** 					dj.fs->cdir = LD_CLUST(dj.dir);
2714:.\sd/ff.c     **** 				else
2715:.\sd/ff.c     **** 					res = FR_NO_PATH;		/* Reached but a file */
2716:.\sd/ff.c     **** 			}
2717:.\sd/ff.c     **** 		}
2718:.\sd/ff.c     **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
2719:.\sd/ff.c     **** 	}
2720:.\sd/ff.c     **** 
2721:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
2722:.\sd/ff.c     **** }
2723:.\sd/ff.c     **** 
2724:.\sd/ff.c     **** 
2725:.\sd/ff.c     **** #if _FS_RPATH >= 2
2726:.\sd/ff.c     **** FRESULT f_getcwd (
2727:.\sd/ff.c     **** 	TCHAR *path,	/* Pointer to the directory path */
2728:.\sd/ff.c     **** 	UINT sz_path	/* Size of path */
2729:.\sd/ff.c     **** )
2730:.\sd/ff.c     **** {
2731:.\sd/ff.c     **** 	FRESULT res;
2732:.\sd/ff.c     **** 	DIR dj;
2733:.\sd/ff.c     **** 	UINT i, n;
2734:.\sd/ff.c     **** 	DWORD ccl;
2735:.\sd/ff.c     **** 	TCHAR *tp;
2736:.\sd/ff.c     **** 	FILINFO fno;
2737:.\sd/ff.c     **** 	DEF_NAMEBUF;
2738:.\sd/ff.c     **** 
2739:.\sd/ff.c     **** 
2740:.\sd/ff.c     **** 	*path = 0;
2741:.\sd/ff.c     **** 	res = chk_mounted((const TCHAR**)&path, &dj.fs, 0);	/* Get current volume */
2742:.\sd/ff.c     **** 	if (res == FR_OK) {
2743:.\sd/ff.c     **** 		INIT_BUF(dj);
2744:.\sd/ff.c     **** 		i = sz_path;		/* Bottom of buffer (dir stack base) */
2745:.\sd/ff.c     **** 		dj.sclust = dj.fs->cdir;			/* Start to follow upper dir from current dir */
2746:.\sd/ff.c     **** 		while ((ccl = dj.sclust) != 0) {	/* Repeat while current dir is a sub-dir */
2747:.\sd/ff.c     **** 			res = dir_sdi(&dj, 1);			/* Get parent dir */
2748:.\sd/ff.c     **** 			if (res != FR_OK) break;
2749:.\sd/ff.c     **** 			res = dir_read(&dj);
2750:.\sd/ff.c     **** 			if (res != FR_OK) break;
2751:.\sd/ff.c     **** 			dj.sclust = LD_CLUST(dj.dir);	/* Goto parent dir */
2752:.\sd/ff.c     **** 			res = dir_sdi(&dj, 0);
2753:.\sd/ff.c     **** 			if (res != FR_OK) break;
2754:.\sd/ff.c     **** 			do {							/* Find the entry links to the child dir */
2755:.\sd/ff.c     **** 				res = dir_read(&dj);
2756:.\sd/ff.c     **** 				if (res != FR_OK) break;
2757:.\sd/ff.c     **** 				if (ccl == LD_CLUST(dj.dir)) break;	/* Found the entry */
2758:.\sd/ff.c     **** 				res = dir_next(&dj, 0);	
2759:.\sd/ff.c     **** 			} while (res == FR_OK);
2760:.\sd/ff.c     **** 			if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
2761:.\sd/ff.c     **** 			if (res != FR_OK) break;
2762:.\sd/ff.c     **** #if _USE_LFN
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 149


2763:.\sd/ff.c     **** 			fno.lfname = path;
2764:.\sd/ff.c     **** 			fno.lfsize = i;
2765:.\sd/ff.c     **** #endif
2766:.\sd/ff.c     **** 			get_fileinfo(&dj, &fno);		/* Get the dir name and push it to the buffer */
2767:.\sd/ff.c     **** 			tp = fno.fname;
2768:.\sd/ff.c     **** 			if (_USE_LFN && *path) tp = path;
2769:.\sd/ff.c     **** 			for (n = 0; tp[n]; n++) ;
2770:.\sd/ff.c     **** 			if (i < n + 3) {
2771:.\sd/ff.c     **** 				res = FR_NOT_ENOUGH_CORE; break;
2772:.\sd/ff.c     **** 			}
2773:.\sd/ff.c     **** 			while (n) path[--i] = tp[--n];
2774:.\sd/ff.c     **** 			path[--i] = '/';
2775:.\sd/ff.c     **** 		}
2776:.\sd/ff.c     **** 		tp = path;
2777:.\sd/ff.c     **** 		if (res == FR_OK) {
2778:.\sd/ff.c     **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
2779:.\sd/ff.c     **** 			*tp++ = ':';
2780:.\sd/ff.c     **** 			if (i == sz_path) {				/* Root-dir */
2781:.\sd/ff.c     **** 				*tp++ = '/';
2782:.\sd/ff.c     **** 			} else {						/* Sub-dir */
2783:.\sd/ff.c     **** 				do		/* Add stacked path str */
2784:.\sd/ff.c     **** 					*tp++ = path[i++];
2785:.\sd/ff.c     **** 				while (i < sz_path);
2786:.\sd/ff.c     **** 			}
2787:.\sd/ff.c     **** 		}
2788:.\sd/ff.c     **** 		*tp = 0;
2789:.\sd/ff.c     **** 		FREE_BUF();
2790:.\sd/ff.c     **** 	}
2791:.\sd/ff.c     **** 
2792:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
2793:.\sd/ff.c     **** }
2794:.\sd/ff.c     **** #endif /* _FS_RPATH >= 2 */
2795:.\sd/ff.c     **** #endif /* _FS_RPATH >= 1 */
2796:.\sd/ff.c     **** 
2797:.\sd/ff.c     **** 
2798:.\sd/ff.c     **** 
2799:.\sd/ff.c     **** #if _FS_MINIMIZE <= 2
2800:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2801:.\sd/ff.c     **** /* Seek File R/W Pointer                                                 */
2802:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2803:.\sd/ff.c     **** 
2804:.\sd/ff.c     **** FRESULT f_lseek (
2805:.\sd/ff.c     **** 	FIL *fp,		/* Pointer to the file object */
2806:.\sd/ff.c     **** 	DWORD ofs		/* File pointer from top of file */
2807:.\sd/ff.c     **** )
2808:.\sd/ff.c     **** {
 5217              		.loc 1 2808 0
 5218              		.cfi_startproc
 5219              	.LVL708:
 5220 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5221              		.cfi_def_cfa_offset 20
 5222              		.cfi_offset 4, -20
 5223              		.cfi_offset 5, -16
 5224              		.cfi_offset 6, -12
 5225              		.cfi_offset 7, -8
 5226              		.cfi_offset 14, -4
 5227 0002 5746     		mov	r7, r10
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 150


 5228 0004 4E46     		mov	r6, r9
 5229 0006 4546     		mov	r5, r8
 5230 0008 E0B4     		push	{r5, r6, r7}
 5231              		.cfi_def_cfa_offset 32
 5232              		.cfi_offset 8, -32
 5233              		.cfi_offset 9, -28
 5234              		.cfi_offset 10, -24
 5235 000a 041C     		mov	r4, r0
 5236 000c 0E1C     		mov	r6, r1
2809:.\sd/ff.c     **** 	FRESULT res;
2810:.\sd/ff.c     **** 
2811:.\sd/ff.c     **** 
2812:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 5237              		.loc 1 2812 0
 5238 000e 8188     		ldrh	r1, [r0, #4]
 5239              	.LVL709:
 5240 0010 0068     		ldr	r0, [r0]
 5241              	.LVL710:
 5242 0012 FFF7FEFF 		bl	validate
 5243              	.LVL711:
 5244 0016 051E     		sub	r5, r0, #0
 5245              	.LVL712:
2813:.\sd/ff.c     **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 5246              		.loc 1 2813 0
 5247 0018 00D0     		beq	.LCB5913
 5248 001a A0E0     		b	.L400	@long jump
 5249              	.LCB5913:
2814:.\sd/ff.c     **** 	if (fp->flag & FA__ERROR)			/* Check abort flag */
 5250              		.loc 1 2814 0
 5251 001c A379     		ldrb	r3, [r4, #6]
 5252 001e 5AB2     		sxtb	r2, r3
 5253 0020 002A     		cmp	r2, #0
 5254 0022 00DA     		bge	.LCB5918
 5255 0024 9CE0     		b	.L401	@long jump
 5256              	.LCB5918:
 5257              	.LBB6:
2815:.\sd/ff.c     **** 		LEAVE_FF(fp->fs, FR_INT_ERR);
2816:.\sd/ff.c     **** 
2817:.\sd/ff.c     **** #if _USE_FASTSEEK
2818:.\sd/ff.c     **** 	if (fp->cltbl) {	/* Fast seek */
2819:.\sd/ff.c     **** 		DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
2820:.\sd/ff.c     **** 
2821:.\sd/ff.c     **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
2822:.\sd/ff.c     **** 			tbl = fp->cltbl;
2823:.\sd/ff.c     **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
2824:.\sd/ff.c     **** 			cl = fp->sclust;			/* Top of the chain */
2825:.\sd/ff.c     **** 			if (cl) {
2826:.\sd/ff.c     **** 				do {
2827:.\sd/ff.c     **** 					/* Get a fragment */
2828:.\sd/ff.c     **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
2829:.\sd/ff.c     **** 					do {
2830:.\sd/ff.c     **** 						pcl = cl; ncl++;
2831:.\sd/ff.c     **** 						cl = get_fat(fp->fs, cl);
2832:.\sd/ff.c     **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
2833:.\sd/ff.c     **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2834:.\sd/ff.c     **** 					} while (cl == pcl + 1);
2835:.\sd/ff.c     **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 151


2836:.\sd/ff.c     **** 						*tbl++ = ncl; *tbl++ = tcl;
2837:.\sd/ff.c     **** 					}
2838:.\sd/ff.c     **** 				} while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
2839:.\sd/ff.c     **** 			}
2840:.\sd/ff.c     **** 			*fp->cltbl = ulen;	/* Number of items used */
2841:.\sd/ff.c     **** 			if (ulen <= tlen)
2842:.\sd/ff.c     **** 				*tbl = 0;		/* Terminate table */
2843:.\sd/ff.c     **** 			else
2844:.\sd/ff.c     **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
2845:.\sd/ff.c     **** 
2846:.\sd/ff.c     **** 		} else {						/* Fast seek */
2847:.\sd/ff.c     **** 			if (ofs > fp->fsize)		/* Clip offset at the file size */
2848:.\sd/ff.c     **** 				ofs = fp->fsize;
2849:.\sd/ff.c     **** 			fp->fptr = ofs;				/* Set file pointer */
2850:.\sd/ff.c     **** 			if (ofs) {
2851:.\sd/ff.c     **** 				fp->clust = clmt_clust(fp, ofs - 1);
2852:.\sd/ff.c     **** 				dsc = clust2sect(fp->fs, fp->clust);
2853:.\sd/ff.c     **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
2854:.\sd/ff.c     **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
2855:.\sd/ff.c     **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
2856:.\sd/ff.c     **** #if !_FS_TINY
2857:.\sd/ff.c     **** #if !_FS_READONLY
2858:.\sd/ff.c     **** 					if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2859:.\sd/ff.c     **** 						if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2860:.\sd/ff.c     **** 							ABORT(fp->fs, FR_DISK_ERR);
2861:.\sd/ff.c     **** 						fp->flag &= ~FA__DIRTY;
2862:.\sd/ff.c     **** 					}
2863:.\sd/ff.c     **** #endif
2864:.\sd/ff.c     **** 					if (disk_read(fp->fs->drv, fp->buf, dsc, 1) != RES_OK)	/* Load current sector */
2865:.\sd/ff.c     **** 						ABORT(fp->fs, FR_DISK_ERR);
2866:.\sd/ff.c     **** #endif
2867:.\sd/ff.c     **** 					fp->dsect = dsc;
2868:.\sd/ff.c     **** 				}
2869:.\sd/ff.c     **** 			}
2870:.\sd/ff.c     **** 		}
2871:.\sd/ff.c     **** 	} else
2872:.\sd/ff.c     **** #endif
2873:.\sd/ff.c     **** 
2874:.\sd/ff.c     **** 	/* Normal Seek */
2875:.\sd/ff.c     **** 	{
2876:.\sd/ff.c     **** 		DWORD clst, bcs, nsect, ifptr;
2877:.\sd/ff.c     **** 
2878:.\sd/ff.c     **** 		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
 5258              		.loc 1 2878 0
 5259 0026 E268     		ldr	r2, [r4, #12]
 5260 0028 B242     		cmp	r2, r6
 5261 002a 02D2     		bcs	.L382
2879:.\sd/ff.c     **** #if !_FS_READONLY
2880:.\sd/ff.c     **** 			 && !(fp->flag & FA_WRITE)
 5262              		.loc 1 2880 0
 5263 002c 9B07     		lsl	r3, r3, #30
 5264 002e 00D4     		bmi	.L382
2881:.\sd/ff.c     **** #endif
2882:.\sd/ff.c     **** 			) ofs = fp->fsize;
 5265              		.loc 1 2882 0
 5266 0030 161C     		mov	r6, r2
 5267              	.LVL713:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 152


 5268              	.L382:
2883:.\sd/ff.c     **** 
2884:.\sd/ff.c     **** 		ifptr = fp->fptr;
 5269              		.loc 1 2884 0
 5270 0032 A368     		ldr	r3, [r4, #8]
 5271 0034 9846     		mov	r8, r3
 5272              	.LVL714:
2885:.\sd/ff.c     **** 		fp->fptr = nsect = 0;
 5273              		.loc 1 2885 0
 5274 0036 0023     		mov	r3, #0
 5275              	.LVL715:
 5276 0038 A360     		str	r3, [r4, #8]
2886:.\sd/ff.c     **** 		if (ofs) {
 5277              		.loc 1 2886 0
 5278 003a 002E     		cmp	r6, #0
 5279 003c 7BD0     		beq	.L403
2887:.\sd/ff.c     **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
 5280              		.loc 1 2887 0
 5281 003e 2368     		ldr	r3, [r4]
 5282 0040 9946     		mov	r9, r3
 5283 0042 9F78     		ldrb	r7, [r3, #2]
 5284 0044 7F02     		lsl	r7, r7, #9
 5285              	.LVL716:
2888:.\sd/ff.c     **** 			if (ifptr > 0 &&
 5286              		.loc 1 2888 0
 5287 0046 4346     		mov	r3, r8
 5288 0048 002B     		cmp	r3, #0
 5289 004a 15D0     		beq	.L384
2889:.\sd/ff.c     **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5290              		.loc 1 2889 0 discriminator 1
 5291 004c 701E     		sub	r0, r6, #1
 5292              	.LVL717:
 5293 004e 391C     		mov	r1, r7
 5294 0050 FFF7FEFF 		bl	__aeabi_uidiv
 5295              	.LVL718:
 5296 0054 8246     		mov	r10, r0
 5297 0056 0123     		mov	r3, #1
 5298 0058 5B42     		neg	r3, r3
 5299 005a 9C46     		mov	ip, r3
 5300 005c E044     		add	r8, r8, ip
 5301              	.LVL719:
 5302 005e 4046     		mov	r0, r8
 5303 0060 391C     		mov	r1, r7
 5304 0062 FFF7FEFF 		bl	__aeabi_uidiv
 5305              	.LVL720:
2888:.\sd/ff.c     **** 			if (ifptr > 0 &&
 5306              		.loc 1 2888 0 discriminator 1
 5307 0066 8245     		cmp	r10, r0
 5308 0068 06D3     		bcc	.L384
2890:.\sd/ff.c     **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
 5309              		.loc 1 2890 0
 5310 006a 7B42     		neg	r3, r7
 5311 006c 4246     		mov	r2, r8
 5312 006e 1340     		and	r3, r2
 5313 0070 A360     		str	r3, [r4, #8]
2891:.\sd/ff.c     **** 				ofs -= fp->fptr;
 5314              		.loc 1 2891 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 153


 5315 0072 F61A     		sub	r6, r6, r3
 5316              	.LVL721:
2892:.\sd/ff.c     **** 				clst = fp->clust;
 5317              		.loc 1 2892 0
 5318 0074 6169     		ldr	r1, [r4, #20]
 5319              	.LVL722:
 5320 0076 1AE0     		b	.L385
 5321              	.LVL723:
 5322              	.L384:
2893:.\sd/ff.c     **** 			} else {									/* When seek to back cluster, */
2894:.\sd/ff.c     **** 				clst = fp->sclust;						/* start from the first cluster */
 5323              		.loc 1 2894 0
 5324 0078 2169     		ldr	r1, [r4, #16]
 5325              	.LVL724:
2895:.\sd/ff.c     **** #if !_FS_READONLY
2896:.\sd/ff.c     **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
 5326              		.loc 1 2896 0
 5327 007a 0029     		cmp	r1, #0
 5328 007c 16D1     		bne	.L386
2897:.\sd/ff.c     **** 					clst = create_chain(fp->fs, 0);
 5329              		.loc 1 2897 0
 5330 007e 4846     		mov	r0, r9
 5331 0080 FFF7FEFF 		bl	create_chain
 5332              	.LVL725:
 5333 0084 011E     		sub	r1, r0, #0
 5334              	.LVL726:
2898:.\sd/ff.c     **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 5335              		.loc 1 2898 0
 5336 0086 0129     		cmp	r1, #1
 5337 0088 06D1     		bne	.L387
 5338              		.loc 1 2898 0 is_stmt 0 discriminator 1
 5339 008a A379     		ldrb	r3, [r4, #6]
 5340 008c 8022     		mov	r2, #128
 5341 008e 5242     		neg	r2, r2
 5342 0090 1343     		orr	r3, r2
 5343 0092 A371     		strb	r3, [r4, #6]
 5344 0094 0220     		mov	r0, #2
 5345              	.LVL727:
 5346 0096 64E0     		b	.L381
 5347              	.LVL728:
 5348              	.L387:
2899:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5349              		.loc 1 2899 0 is_stmt 1
 5350 0098 431C     		add	r3, r0, #1
 5351 009a 06D1     		bne	.L388
 5352              		.loc 1 2899 0 is_stmt 0 discriminator 1
 5353 009c A379     		ldrb	r3, [r4, #6]
 5354 009e 8022     		mov	r2, #128
 5355 00a0 5242     		neg	r2, r2
 5356 00a2 1343     		orr	r3, r2
 5357 00a4 A371     		strb	r3, [r4, #6]
 5358 00a6 0120     		mov	r0, #1
 5359              	.LVL729:
 5360 00a8 5BE0     		b	.L381
 5361              	.LVL730:
 5362              	.L388:
2900:.\sd/ff.c     **** 					fp->sclust = clst;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 154


 5363              		.loc 1 2900 0 is_stmt 1
 5364 00aa 2061     		str	r0, [r4, #16]
 5365              	.LVL731:
 5366              	.L386:
2901:.\sd/ff.c     **** 				}
2902:.\sd/ff.c     **** #endif
2903:.\sd/ff.c     **** 				fp->clust = clst;
 5367              		.loc 1 2903 0
 5368 00ac 6161     		str	r1, [r4, #20]
 5369              	.L385:
2904:.\sd/ff.c     **** 			}
2905:.\sd/ff.c     **** 			if (clst != 0) {
 5370              		.loc 1 2905 0
 5371 00ae 0029     		cmp	r1, #0
 5372 00b0 29D1     		bne	.L389
2885:.\sd/ff.c     **** 		if (ofs) {
 5373              		.loc 1 2885 0
 5374 00b2 0026     		mov	r6, #0
 5375              	.LVL732:
 5376 00b4 42E0     		b	.L383
 5377              	.LVL733:
 5378              	.L396:
2906:.\sd/ff.c     **** 				while (ofs > bcs) {						/* Cluster following loop */
2907:.\sd/ff.c     **** #if !_FS_READONLY
2908:.\sd/ff.c     **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
 5379              		.loc 1 2908 0
 5380 00b6 A379     		ldrb	r3, [r4, #6]
 5381 00b8 9B07     		lsl	r3, r3, #30
 5382 00ba 05D5     		bpl	.L390
2909:.\sd/ff.c     **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 5383              		.loc 1 2909 0
 5384 00bc 2068     		ldr	r0, [r4]
 5385 00be FFF7FEFF 		bl	create_chain
 5386              	.LVL734:
 5387 00c2 011E     		sub	r1, r0, #0
 5388              	.LVL735:
2910:.\sd/ff.c     **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 5389              		.loc 1 2910 0
 5390 00c4 04D1     		bne	.L392
 5391 00c6 21E0     		b	.L404
 5392              	.LVL736:
 5393              	.L390:
2911:.\sd/ff.c     **** 							ofs = bcs; break;
2912:.\sd/ff.c     **** 						}
2913:.\sd/ff.c     **** 					} else
2914:.\sd/ff.c     **** #endif
2915:.\sd/ff.c     **** 						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
 5394              		.loc 1 2915 0
 5395 00c8 2068     		ldr	r0, [r4]
 5396 00ca FFF7FEFF 		bl	get_fat
 5397              	.LVL737:
 5398 00ce 011C     		mov	r1, r0
 5399              	.LVL738:
 5400              	.L392:
2916:.\sd/ff.c     **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5401              		.loc 1 2916 0
 5402 00d0 4B1C     		add	r3, r1, #1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 155


 5403 00d2 06D1     		bne	.L393
 5404              		.loc 1 2916 0 is_stmt 0 discriminator 1
 5405 00d4 A379     		ldrb	r3, [r4, #6]
 5406 00d6 8022     		mov	r2, #128
 5407 00d8 5242     		neg	r2, r2
 5408 00da 1343     		orr	r3, r2
 5409 00dc A371     		strb	r3, [r4, #6]
 5410 00de 0120     		mov	r0, #1
 5411              	.LVL739:
 5412 00e0 3FE0     		b	.L381
 5413              	.LVL740:
 5414              	.L393:
2917:.\sd/ff.c     **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 5415              		.loc 1 2917 0 is_stmt 1
 5416 00e2 0129     		cmp	r1, #1
 5417 00e4 03D9     		bls	.L394
 5418              		.loc 1 2917 0 is_stmt 0 discriminator 2
 5419 00e6 2368     		ldr	r3, [r4]
 5420 00e8 9B69     		ldr	r3, [r3, #24]
 5421 00ea 8B42     		cmp	r3, r1
 5422 00ec 06D8     		bhi	.L395
 5423              	.L394:
 5424              		.loc 1 2917 0 discriminator 3
 5425 00ee A379     		ldrb	r3, [r4, #6]
 5426 00f0 8022     		mov	r2, #128
 5427 00f2 5242     		neg	r2, r2
 5428 00f4 1343     		orr	r3, r2
 5429 00f6 A371     		strb	r3, [r4, #6]
 5430 00f8 0220     		mov	r0, #2
 5431              	.LVL741:
 5432 00fa 32E0     		b	.L381
 5433              	.LVL742:
 5434              	.L395:
2918:.\sd/ff.c     **** 					fp->clust = clst;
 5435              		.loc 1 2918 0 is_stmt 1
 5436 00fc 6161     		str	r1, [r4, #20]
2919:.\sd/ff.c     **** 					fp->fptr += bcs;
 5437              		.loc 1 2919 0
 5438 00fe A368     		ldr	r3, [r4, #8]
 5439 0100 DB19     		add	r3, r3, r7
 5440 0102 A360     		str	r3, [r4, #8]
2920:.\sd/ff.c     **** 					ofs -= bcs;
 5441              		.loc 1 2920 0
 5442 0104 F61B     		sub	r6, r6, r7
 5443              	.LVL743:
 5444              	.L389:
2906:.\sd/ff.c     **** #if !_FS_READONLY
 5445              		.loc 1 2906 0
 5446 0106 BE42     		cmp	r6, r7
 5447 0108 D5D8     		bhi	.L396
 5448 010a 00E0     		b	.L391
 5449              	.LVL744:
 5450              	.L404:
2911:.\sd/ff.c     **** 						}
 5451              		.loc 1 2911 0
 5452 010c 3E1C     		mov	r6, r7
 5453              	.LVL745:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 156


 5454              	.L391:
2921:.\sd/ff.c     **** 				}
2922:.\sd/ff.c     **** 				fp->fptr += ofs;
 5455              		.loc 1 2922 0
 5456 010e A368     		ldr	r3, [r4, #8]
 5457 0110 9B19     		add	r3, r3, r6
 5458 0112 A360     		str	r3, [r4, #8]
2923:.\sd/ff.c     **** 				if (ofs % SS(fp->fs)) {
 5459              		.loc 1 2923 0
 5460 0114 F305     		lsl	r3, r6, #23
 5461 0116 10D0     		beq	.L405
2924:.\sd/ff.c     **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
 5462              		.loc 1 2924 0
 5463 0118 2068     		ldr	r0, [r4]
 5464 011a FFF7FEFF 		bl	clust2sect
 5465              	.LVL746:
2925:.\sd/ff.c     **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
 5466              		.loc 1 2925 0
 5467 011e 0028     		cmp	r0, #0
 5468 0120 06D1     		bne	.L397
 5469              		.loc 1 2925 0 is_stmt 0 discriminator 1
 5470 0122 A379     		ldrb	r3, [r4, #6]
 5471 0124 8022     		mov	r2, #128
 5472 0126 5242     		neg	r2, r2
 5473 0128 1343     		orr	r3, r2
 5474 012a A371     		strb	r3, [r4, #6]
 5475 012c 0230     		add	r0, r0, #2
 5476              	.LVL747:
 5477 012e 18E0     		b	.L381
 5478              	.LVL748:
 5479              	.L397:
2926:.\sd/ff.c     **** 					nsect += ofs / SS(fp->fs);
 5480              		.loc 1 2926 0 is_stmt 1
 5481 0130 760A     		lsr	r6, r6, #9
 5482              	.LVL749:
 5483 0132 3618     		add	r6, r6, r0
 5484              	.LVL750:
 5485 0134 02E0     		b	.L383
 5486              	.LVL751:
 5487              	.L403:
2885:.\sd/ff.c     **** 		if (ofs) {
 5488              		.loc 1 2885 0
 5489 0136 0026     		mov	r6, #0
 5490              	.LVL752:
 5491 0138 00E0     		b	.L383
 5492              	.LVL753:
 5493              	.L405:
 5494 013a 0026     		mov	r6, #0
 5495              	.LVL754:
 5496              	.L383:
2927:.\sd/ff.c     **** 				}
2928:.\sd/ff.c     **** 			}
2929:.\sd/ff.c     **** 		}
2930:.\sd/ff.c     **** 		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
 5497              		.loc 1 2930 0
 5498 013c A368     		ldr	r3, [r4, #8]
 5499 013e DA05     		lsl	r2, r3, #23
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 157


 5500 0140 03D0     		beq	.L398
 5501              		.loc 1 2930 0 is_stmt 0 discriminator 1
 5502 0142 A269     		ldr	r2, [r4, #24]
 5503 0144 B242     		cmp	r2, r6
 5504 0146 00D0     		beq	.L398
2931:.\sd/ff.c     **** #if !_FS_TINY
2932:.\sd/ff.c     **** #if !_FS_READONLY
2933:.\sd/ff.c     **** 			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
2934:.\sd/ff.c     **** 				if (disk_write(fp->fs->drv, fp->buf, fp->dsect, 1) != RES_OK)
2935:.\sd/ff.c     **** 					ABORT(fp->fs, FR_DISK_ERR);
2936:.\sd/ff.c     **** 				fp->flag &= ~FA__DIRTY;
2937:.\sd/ff.c     **** 			}
2938:.\sd/ff.c     **** #endif
2939:.\sd/ff.c     **** 			if (disk_read(fp->fs->drv, fp->buf, nsect, 1) != RES_OK)	/* Fill sector cache */
2940:.\sd/ff.c     **** 				ABORT(fp->fs, FR_DISK_ERR);
2941:.\sd/ff.c     **** #endif
2942:.\sd/ff.c     **** 			fp->dsect = nsect;
 5505              		.loc 1 2942 0 is_stmt 1
 5506 0148 A661     		str	r6, [r4, #24]
 5507              	.L398:
2943:.\sd/ff.c     **** 		}
2944:.\sd/ff.c     **** #if !_FS_READONLY
2945:.\sd/ff.c     **** 		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
 5508              		.loc 1 2945 0
 5509 014a E268     		ldr	r2, [r4, #12]
 5510 014c 9342     		cmp	r3, r2
 5511 014e 04D9     		bls	.L399
2946:.\sd/ff.c     **** 			fp->fsize = fp->fptr;
 5512              		.loc 1 2946 0
 5513 0150 E360     		str	r3, [r4, #12]
2947:.\sd/ff.c     **** 			fp->flag |= FA__WRITTEN;
 5514              		.loc 1 2947 0
 5515 0152 A279     		ldrb	r2, [r4, #6]
 5516 0154 2023     		mov	r3, #32
 5517 0156 1343     		orr	r3, r2
 5518 0158 A371     		strb	r3, [r4, #6]
 5519              	.L399:
 5520              	.LBE6:
2948:.\sd/ff.c     **** 		}
2949:.\sd/ff.c     **** #endif
2950:.\sd/ff.c     **** 	}
2951:.\sd/ff.c     **** 
2952:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, res);
 5521              		.loc 1 2952 0
 5522 015a 281C     		mov	r0, r5
 5523 015c 01E0     		b	.L381
 5524              	.LVL755:
 5525              	.L400:
 5526 015e 00E0     		b	.L381
 5527              	.L401:
2815:.\sd/ff.c     **** 
 5528              		.loc 1 2815 0
 5529 0160 0220     		mov	r0, #2
 5530              	.LVL756:
 5531              	.L381:
2953:.\sd/ff.c     **** }
 5532              		.loc 1 2953 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 158


 5533              		@ sp needed
 5534              	.LVL757:
 5535 0162 1CBC     		pop	{r2, r3, r4}
 5536 0164 9046     		mov	r8, r2
 5537 0166 9946     		mov	r9, r3
 5538 0168 A246     		mov	r10, r4
 5539 016a F0BD     		pop	{r4, r5, r6, r7, pc}
 5540              		.cfi_endproc
 5541              	.LFE34:
 5542              		.size	f_lseek, .-f_lseek
 5543              		.section	.text.f_opendir,"ax",%progbits
 5544              		.align	2
 5545              		.global	f_opendir
 5546              		.code	16
 5547              		.thumb_func
 5548              		.type	f_opendir, %function
 5549              	f_opendir:
 5550              	.LFB35:
2954:.\sd/ff.c     **** 
2955:.\sd/ff.c     **** 
2956:.\sd/ff.c     **** 
2957:.\sd/ff.c     **** #if _FS_MINIMIZE <= 1
2958:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2959:.\sd/ff.c     **** /* Create a Directroy Object                                             */
2960:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2961:.\sd/ff.c     **** 
2962:.\sd/ff.c     **** FRESULT f_opendir (
2963:.\sd/ff.c     **** 	DIR *dj,			/* Pointer to directory object to create */
2964:.\sd/ff.c     **** 	const TCHAR *path	/* Pointer to the directory path */
2965:.\sd/ff.c     **** )
2966:.\sd/ff.c     **** {
 5551              		.loc 1 2966 0
 5552              		.cfi_startproc
 5553              	.LVL758:
 5554 0000 30B5     		push	{r4, r5, lr}
 5555              		.cfi_def_cfa_offset 12
 5556              		.cfi_offset 4, -12
 5557              		.cfi_offset 5, -8
 5558              		.cfi_offset 14, -4
 5559 0002 87B0     		sub	sp, sp, #28
 5560              		.cfi_def_cfa_offset 40
 5561 0004 041C     		mov	r4, r0
 5562 0006 0191     		str	r1, [sp, #4]
2967:.\sd/ff.c     **** 	FRESULT res;
2968:.\sd/ff.c     **** 	DEF_NAMEBUF;
2969:.\sd/ff.c     **** 
2970:.\sd/ff.c     **** 
2971:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj->fs, 0);
 5563              		.loc 1 2971 0
 5564 0008 01A8     		add	r0, sp, #4
 5565              	.LVL759:
 5566 000a 211C     		mov	r1, r4
 5567              	.LVL760:
 5568 000c 0022     		mov	r2, #0
 5569 000e FFF7FEFF 		bl	chk_mounted
 5570              	.LVL761:
2972:.\sd/ff.c     **** 	if (res == FR_OK) {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 159


 5571              		.loc 1 2972 0
 5572 0012 0028     		cmp	r0, #0
 5573 0014 27D1     		bne	.L407
2973:.\sd/ff.c     **** 		INIT_BUF(*dj);
 5574              		.loc 1 2973 0
 5575 0016 03AB     		add	r3, sp, #12
 5576 0018 A361     		str	r3, [r4, #24]
2974:.\sd/ff.c     **** 		res = follow_path(dj, path);			/* Follow the path to the directory */
 5577              		.loc 1 2974 0
 5578 001a 201C     		mov	r0, r4
 5579              	.LVL762:
 5580 001c 0199     		ldr	r1, [sp, #4]
 5581 001e FFF7FEFF 		bl	follow_path
 5582              	.LVL763:
2975:.\sd/ff.c     **** 		FREE_BUF();
2976:.\sd/ff.c     **** 		if (res == FR_OK) {						/* Follow completed */
 5583              		.loc 1 2976 0
 5584 0022 0028     		cmp	r0, #0
 5585 0024 1CD1     		bne	.L408
2977:.\sd/ff.c     **** 			if (dj->dir) {						/* It is not the root dir */
 5586              		.loc 1 2977 0
 5587 0026 6369     		ldr	r3, [r4, #20]
 5588 0028 002B     		cmp	r3, #0
 5589 002a 10D0     		beq	.L409
2978:.\sd/ff.c     **** 				if (dj->dir[DIR_Attr] & AM_DIR) {	/* The object is a directory */
 5590              		.loc 1 2978 0
 5591 002c DA7A     		ldrb	r2, [r3, #11]
 5592 002e D206     		lsl	r2, r2, #27
 5593 0030 0CD5     		bpl	.L410
2979:.\sd/ff.c     **** 					dj->sclust = LD_CLUST(dj->dir);
 5594              		.loc 1 2979 0
 5595 0032 597D     		ldrb	r1, [r3, #21]
 5596 0034 0902     		lsl	r1, r1, #8
 5597 0036 1A7D     		ldrb	r2, [r3, #20]
 5598 0038 1143     		orr	r1, r2
 5599 003a 0904     		lsl	r1, r1, #16
 5600 003c DD7E     		ldrb	r5, [r3, #27]
 5601 003e 2D02     		lsl	r5, r5, #8
 5602 0040 9A7E     		ldrb	r2, [r3, #26]
 5603 0042 2B1C     		mov	r3, r5
 5604 0044 1343     		orr	r3, r2
 5605 0046 0B43     		orr	r3, r1
 5606 0048 A360     		str	r3, [r4, #8]
 5607 004a 00E0     		b	.L409
 5608              	.L410:
2980:.\sd/ff.c     **** 				} else {						/* The object is not a directory */
2981:.\sd/ff.c     **** 					res = FR_NO_PATH;
 5609              		.loc 1 2981 0
 5610 004c 0520     		mov	r0, #5
 5611              	.LVL764:
 5612              	.L409:
2982:.\sd/ff.c     **** 				}
2983:.\sd/ff.c     **** 			}
2984:.\sd/ff.c     **** 			if (res == FR_OK) {
 5613              		.loc 1 2984 0
 5614 004e 0028     		cmp	r0, #0
 5615 0050 06D1     		bne	.L408
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 160


2985:.\sd/ff.c     **** 				dj->id = dj->fs->id;
 5616              		.loc 1 2985 0
 5617 0052 2368     		ldr	r3, [r4]
 5618 0054 DB88     		ldrh	r3, [r3, #6]
 5619 0056 A380     		strh	r3, [r4, #4]
2986:.\sd/ff.c     **** 				res = dir_sdi(dj, 0);			/* Rewind dir */
 5620              		.loc 1 2986 0
 5621 0058 201C     		mov	r0, r4
 5622              	.LVL765:
 5623 005a 0021     		mov	r1, #0
 5624 005c FFF7FEFF 		bl	dir_sdi
 5625              	.LVL766:
 5626              	.L408:
2987:.\sd/ff.c     **** 			}
2988:.\sd/ff.c     **** 		}
2989:.\sd/ff.c     **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
 5627              		.loc 1 2989 0
 5628 0060 0428     		cmp	r0, #4
 5629 0062 00D1     		bne	.L407
 5630 0064 0130     		add	r0, r0, #1
 5631              	.LVL767:
 5632              	.L407:
2990:.\sd/ff.c     **** 	}
2991:.\sd/ff.c     **** 
2992:.\sd/ff.c     **** 	LEAVE_FF(dj->fs, res);
2993:.\sd/ff.c     **** }
 5633              		.loc 1 2993 0
 5634 0066 07B0     		add	sp, sp, #28
 5635              		@ sp needed
 5636              	.LVL768:
 5637 0068 30BD     		pop	{r4, r5, pc}
 5638              		.cfi_endproc
 5639              	.LFE35:
 5640              		.size	f_opendir, .-f_opendir
 5641 006a C046     		.section	.text.f_readdir,"ax",%progbits
 5642              		.align	2
 5643              		.global	f_readdir
 5644              		.code	16
 5645              		.thumb_func
 5646              		.type	f_readdir, %function
 5647              	f_readdir:
 5648              	.LFB36:
2994:.\sd/ff.c     **** 
2995:.\sd/ff.c     **** 
2996:.\sd/ff.c     **** 
2997:.\sd/ff.c     **** 
2998:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
2999:.\sd/ff.c     **** /* Read Directory Entry in Sequense                                      */
3000:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3001:.\sd/ff.c     **** 
3002:.\sd/ff.c     **** FRESULT f_readdir (
3003:.\sd/ff.c     **** 	DIR *dj,			/* Pointer to the open directory object */
3004:.\sd/ff.c     **** 	FILINFO *fno		/* Pointer to file information to return */
3005:.\sd/ff.c     **** )
3006:.\sd/ff.c     **** {
 5649              		.loc 1 3006 0
 5650              		.cfi_startproc
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 161


 5651              	.LVL769:
 5652 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5653              		.cfi_def_cfa_offset 20
 5654              		.cfi_offset 4, -20
 5655              		.cfi_offset 5, -16
 5656              		.cfi_offset 6, -12
 5657              		.cfi_offset 7, -8
 5658              		.cfi_offset 14, -4
 5659 0002 85B0     		sub	sp, sp, #20
 5660              		.cfi_def_cfa_offset 40
 5661 0004 041C     		mov	r4, r0
 5662 0006 0E1C     		mov	r6, r1
3007:.\sd/ff.c     **** 	FRESULT res;
3008:.\sd/ff.c     **** 	DEF_NAMEBUF;
3009:.\sd/ff.c     **** 
3010:.\sd/ff.c     **** 
3011:.\sd/ff.c     **** 	res = validate(dj->fs, dj->id);			/* Check validity of the object */
 5663              		.loc 1 3011 0
 5664 0008 8188     		ldrh	r1, [r0, #4]
 5665              	.LVL770:
 5666 000a 0068     		ldr	r0, [r0]
 5667              	.LVL771:
 5668 000c FFF7FEFF 		bl	validate
 5669              	.LVL772:
 5670 0010 051E     		sub	r5, r0, #0
 5671              	.LVL773:
3012:.\sd/ff.c     **** 	if (res == FR_OK) {
 5672              		.loc 1 3012 0
 5673 0012 22D1     		bne	.L413
3013:.\sd/ff.c     **** 		if (!fno) {
 5674              		.loc 1 3013 0
 5675 0014 002E     		cmp	r6, #0
 5676 0016 04D1     		bne	.L414
3014:.\sd/ff.c     **** 			res = dir_sdi(dj, 0);			/* Rewind the directory object */
 5677              		.loc 1 3014 0
 5678 0018 201C     		mov	r0, r4
 5679 001a 0021     		mov	r1, #0
 5680 001c FFF7FEFF 		bl	dir_sdi
 5681              	.LVL774:
 5682 0020 1BE0     		b	.L413
 5683              	.LVL775:
 5684              	.L414:
3015:.\sd/ff.c     **** 		} else {
3016:.\sd/ff.c     **** 			INIT_BUF(*dj);
 5685              		.loc 1 3016 0
 5686 0022 01AB     		add	r3, sp, #4
 5687 0024 A361     		str	r3, [r4, #24]
3017:.\sd/ff.c     **** 			res = dir_read(dj);				/* Read an directory item */
 5688              		.loc 1 3017 0
 5689 0026 201C     		mov	r0, r4
 5690 0028 FFF7FEFF 		bl	dir_read
 5691              	.LVL776:
 5692 002c 071E     		sub	r7, r0, #0
 5693              	.LVL777:
3018:.\sd/ff.c     **** 			if (res == FR_NO_FILE) {		/* Reached end of dir */
 5694              		.loc 1 3018 0
 5695 002e 042F     		cmp	r7, #4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 162


 5696 0030 02D1     		bne	.L415
3019:.\sd/ff.c     **** 				dj->sect = 0;
 5697              		.loc 1 3019 0
 5698 0032 0023     		mov	r3, #0
 5699 0034 2361     		str	r3, [r4, #16]
 5700              	.LVL778:
3020:.\sd/ff.c     **** 				res = FR_OK;
 5701              		.loc 1 3020 0
 5702 0036 2F1C     		mov	r7, r5
 5703              	.LVL779:
 5704              	.L415:
3021:.\sd/ff.c     **** 			}
3022:.\sd/ff.c     **** 			if (res == FR_OK) {				/* A valid entry is found */
 5705              		.loc 1 3022 0
 5706 0038 002F     		cmp	r7, #0
 5707 003a 0DD1     		bne	.L416
3023:.\sd/ff.c     **** 				get_fileinfo(dj, fno);		/* Get the object information */
 5708              		.loc 1 3023 0
 5709 003c 201C     		mov	r0, r4
 5710 003e 311C     		mov	r1, r6
 5711 0040 FFF7FEFF 		bl	get_fileinfo
 5712              	.LVL780:
3024:.\sd/ff.c     **** 				res = dir_next(dj, 0);		/* Increment index for next */
 5713              		.loc 1 3024 0
 5714 0044 201C     		mov	r0, r4
 5715 0046 0021     		mov	r1, #0
 5716 0048 FFF7FEFF 		bl	dir_next
 5717              	.LVL781:
3025:.\sd/ff.c     **** 				if (res == FR_NO_FILE) {
 5718              		.loc 1 3025 0
 5719 004c 0428     		cmp	r0, #4
 5720 004e 04D1     		bne	.L413
3026:.\sd/ff.c     **** 					dj->sect = 0;
 5721              		.loc 1 3026 0
 5722 0050 0023     		mov	r3, #0
 5723 0052 2361     		str	r3, [r4, #16]
 5724              	.LVL782:
3027:.\sd/ff.c     **** 					res = FR_OK;
 5725              		.loc 1 3027 0
 5726 0054 381C     		mov	r0, r7
 5727 0056 00E0     		b	.L413
 5728              	.LVL783:
 5729              	.L416:
 5730 0058 381C     		mov	r0, r7
 5731              	.LVL784:
 5732              	.L413:
3028:.\sd/ff.c     **** 				}
3029:.\sd/ff.c     **** 			}
3030:.\sd/ff.c     **** 			FREE_BUF();
3031:.\sd/ff.c     **** 		}
3032:.\sd/ff.c     **** 	}
3033:.\sd/ff.c     **** 
3034:.\sd/ff.c     **** 	LEAVE_FF(dj->fs, res);
3035:.\sd/ff.c     **** }
 5733              		.loc 1 3035 0
 5734 005a 05B0     		add	sp, sp, #20
 5735              		@ sp needed
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 163


 5736              	.LVL785:
 5737              	.LVL786:
 5738 005c F0BD     		pop	{r4, r5, r6, r7, pc}
 5739              		.cfi_endproc
 5740              	.LFE36:
 5741              		.size	f_readdir, .-f_readdir
 5742 005e C046     		.section	.text.f_stat,"ax",%progbits
 5743              		.align	2
 5744              		.global	f_stat
 5745              		.code	16
 5746              		.thumb_func
 5747              		.type	f_stat, %function
 5748              	f_stat:
 5749              	.LFB37:
3036:.\sd/ff.c     **** 
3037:.\sd/ff.c     **** 
3038:.\sd/ff.c     **** 
3039:.\sd/ff.c     **** #if _FS_MINIMIZE == 0
3040:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3041:.\sd/ff.c     **** /* Get File Status                                                       */
3042:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3043:.\sd/ff.c     **** 
3044:.\sd/ff.c     **** FRESULT f_stat (
3045:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the file path */
3046:.\sd/ff.c     **** 	FILINFO *fno		/* Pointer to file information to return */
3047:.\sd/ff.c     **** )
3048:.\sd/ff.c     **** {
 5750              		.loc 1 3048 0
 5751              		.cfi_startproc
 5752              	.LVL787:
 5753 0000 30B5     		push	{r4, r5, lr}
 5754              		.cfi_def_cfa_offset 12
 5755              		.cfi_offset 4, -12
 5756              		.cfi_offset 5, -8
 5757              		.cfi_offset 14, -4
 5758 0002 8DB0     		sub	sp, sp, #52
 5759              		.cfi_def_cfa_offset 64
 5760 0004 0190     		str	r0, [sp, #4]
 5761 0006 0D1C     		mov	r5, r1
3049:.\sd/ff.c     **** 	FRESULT res;
3050:.\sd/ff.c     **** 	DIR dj;
3051:.\sd/ff.c     **** 	DEF_NAMEBUF;
3052:.\sd/ff.c     **** 
3053:.\sd/ff.c     **** 
3054:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 0);
 5762              		.loc 1 3054 0
 5763 0008 01A8     		add	r0, sp, #4
 5764              	.LVL788:
 5765 000a 05A9     		add	r1, sp, #20
 5766              	.LVL789:
 5767 000c 0022     		mov	r2, #0
 5768 000e FFF7FEFF 		bl	chk_mounted
 5769              	.LVL790:
 5770 0012 041E     		sub	r4, r0, #0
 5771              	.LVL791:
3055:.\sd/ff.c     **** 	if (res == FR_OK) {
 5772              		.loc 1 3055 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 164


 5773 0014 10D1     		bne	.L418
3056:.\sd/ff.c     **** 		INIT_BUF(dj);
 5774              		.loc 1 3056 0
 5775 0016 02AB     		add	r3, sp, #8
 5776 0018 0B93     		str	r3, [sp, #44]
3057:.\sd/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 5777              		.loc 1 3057 0
 5778 001a 05A8     		add	r0, sp, #20
 5779              	.LVL792:
 5780 001c 0199     		ldr	r1, [sp, #4]
 5781 001e FFF7FEFF 		bl	follow_path
 5782              	.LVL793:
 5783 0022 041E     		sub	r4, r0, #0
 5784              	.LVL794:
3058:.\sd/ff.c     **** 		if (res == FR_OK) {				/* Follow completed */
 5785              		.loc 1 3058 0
 5786 0024 08D1     		bne	.L418
3059:.\sd/ff.c     **** 			if (dj.dir)		/* Found an object */
 5787              		.loc 1 3059 0
 5788 0026 0A9B     		ldr	r3, [sp, #40]
 5789 0028 002B     		cmp	r3, #0
 5790 002a 04D0     		beq	.L419
3060:.\sd/ff.c     **** 				get_fileinfo(&dj, fno);
 5791              		.loc 1 3060 0
 5792 002c 05A8     		add	r0, sp, #20
 5793              	.LVL795:
 5794 002e 291C     		mov	r1, r5
 5795 0030 FFF7FEFF 		bl	get_fileinfo
 5796              	.LVL796:
 5797 0034 00E0     		b	.L418
 5798              	.LVL797:
 5799              	.L419:
3061:.\sd/ff.c     **** 			else			/* It is root dir */
3062:.\sd/ff.c     **** 				res = FR_INVALID_NAME;
 5800              		.loc 1 3062 0
 5801 0036 0624     		mov	r4, #6
 5802              	.LVL798:
 5803              	.L418:
3063:.\sd/ff.c     **** 		}
3064:.\sd/ff.c     **** 		FREE_BUF();
3065:.\sd/ff.c     **** 	}
3066:.\sd/ff.c     **** 
3067:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3068:.\sd/ff.c     **** }
 5804              		.loc 1 3068 0
 5805 0038 201C     		mov	r0, r4
 5806 003a 0DB0     		add	sp, sp, #52
 5807              		@ sp needed
 5808              	.LVL799:
 5809              	.LVL800:
 5810 003c 30BD     		pop	{r4, r5, pc}
 5811              		.cfi_endproc
 5812              	.LFE37:
 5813              		.size	f_stat, .-f_stat
 5814 003e C046     		.section	.text.f_getfree,"ax",%progbits
 5815              		.align	2
 5816              		.global	f_getfree
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 165


 5817              		.code	16
 5818              		.thumb_func
 5819              		.type	f_getfree, %function
 5820              	f_getfree:
 5821              	.LFB38:
3069:.\sd/ff.c     **** 
3070:.\sd/ff.c     **** 
3071:.\sd/ff.c     **** 
3072:.\sd/ff.c     **** #if !_FS_READONLY
3073:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3074:.\sd/ff.c     **** /* Get Number of Free Clusters                                           */
3075:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3076:.\sd/ff.c     **** 
3077:.\sd/ff.c     **** FRESULT f_getfree (
3078:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the logical drive number (root dir) */
3079:.\sd/ff.c     **** 	DWORD *nclst,		/* Pointer to the variable to return number of free clusters */
3080:.\sd/ff.c     **** 	FATFS **fatfs		/* Pointer to pointer to corresponding file system object to return */
3081:.\sd/ff.c     **** )
3082:.\sd/ff.c     **** {
 5822              		.loc 1 3082 0
 5823              		.cfi_startproc
 5824              	.LVL801:
 5825 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5826              		.cfi_def_cfa_offset 20
 5827              		.cfi_offset 4, -20
 5828              		.cfi_offset 5, -16
 5829              		.cfi_offset 6, -12
 5830              		.cfi_offset 7, -8
 5831              		.cfi_offset 14, -4
 5832 0002 5746     		mov	r7, r10
 5833 0004 4E46     		mov	r6, r9
 5834 0006 C0B4     		push	{r6, r7}
 5835              		.cfi_def_cfa_offset 28
 5836              		.cfi_offset 9, -28
 5837              		.cfi_offset 10, -24
 5838 0008 85B0     		sub	sp, sp, #20
 5839              		.cfi_def_cfa_offset 48
 5840 000a 0390     		str	r0, [sp, #12]
 5841 000c 8946     		mov	r9, r1
 5842 000e 161C     		mov	r6, r2
3083:.\sd/ff.c     **** 	FRESULT res;
3084:.\sd/ff.c     **** 	DWORD n, clst, sect, stat;
3085:.\sd/ff.c     **** 	UINT i;
3086:.\sd/ff.c     **** 	BYTE fat, *p;
3087:.\sd/ff.c     **** 
3088:.\sd/ff.c     **** 
3089:.\sd/ff.c     **** 	/* Get drive number */
3090:.\sd/ff.c     **** 	res = chk_mounted(&path, fatfs, 0);
 5843              		.loc 1 3090 0
 5844 0010 03A8     		add	r0, sp, #12
 5845              	.LVL802:
 5846 0012 111C     		mov	r1, r2
 5847              	.LVL803:
 5848 0014 0022     		mov	r2, #0
 5849              	.LVL804:
 5850 0016 FFF7FEFF 		bl	chk_mounted
 5851              	.LVL805:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 166


 5852 001a 0190     		str	r0, [sp, #4]
 5853              	.LVL806:
3091:.\sd/ff.c     **** 	if (res == FR_OK) {
 5854              		.loc 1 3091 0
 5855 001c 0028     		cmp	r0, #0
 5856 001e 63D1     		bne	.L421
3092:.\sd/ff.c     **** 		/* If free_clust is valid, return it without full cluster scan */
3093:.\sd/ff.c     **** 		if ((*fatfs)->free_clust <= (*fatfs)->n_fatent - 2) {
 5857              		.loc 1 3093 0
 5858 0020 3368     		ldr	r3, [r6]
 5859 0022 1A69     		ldr	r2, [r3, #16]
 5860 0024 9C69     		ldr	r4, [r3, #24]
 5861 0026 A11E     		sub	r1, r4, #2
 5862 0028 8A42     		cmp	r2, r1
 5863 002a 02D8     		bhi	.L422
3094:.\sd/ff.c     **** 			*nclst = (*fatfs)->free_clust;
 5864              		.loc 1 3094 0
 5865 002c 4B46     		mov	r3, r9
 5866 002e 1A60     		str	r2, [r3]
 5867 0030 5AE0     		b	.L421
 5868              	.L422:
3095:.\sd/ff.c     **** 		} else {
3096:.\sd/ff.c     **** 			/* Get number of free clusters */
3097:.\sd/ff.c     **** 			fat = (*fatfs)->fs_type;
 5869              		.loc 1 3097 0
 5870 0032 1D78     		ldrb	r5, [r3]
 5871              	.LVL807:
3098:.\sd/ff.c     **** 			n = 0;
3099:.\sd/ff.c     **** 			if (fat == FS_FAT12) {
 5872              		.loc 1 3099 0
 5873 0034 012D     		cmp	r5, #1
 5874 0036 12D1     		bne	.L423
 5875 0038 0224     		mov	r4, #2
 5876 003a 0027     		mov	r7, #0
 5877              	.LVL808:
 5878              	.L426:
3100:.\sd/ff.c     **** 				clst = 2;
3101:.\sd/ff.c     **** 				do {
3102:.\sd/ff.c     **** 					stat = get_fat(*fatfs, clst);
 5879              		.loc 1 3102 0
 5880 003c 3068     		ldr	r0, [r6]
 5881 003e 211C     		mov	r1, r4
 5882 0040 FFF7FEFF 		bl	get_fat
 5883              	.LVL809:
3103:.\sd/ff.c     **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 5884              		.loc 1 3103 0
 5885 0044 431C     		add	r3, r0, #1
 5886 0046 41D0     		beq	.L434
3104:.\sd/ff.c     **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 5887              		.loc 1 3104 0
 5888 0048 0128     		cmp	r0, #1
 5889 004a 42D0     		beq	.L435
3105:.\sd/ff.c     **** 					if (stat == 0) n++;
 5890              		.loc 1 3105 0
 5891 004c 0028     		cmp	r0, #0
 5892 004e 00D1     		bne	.L425
 5893              		.loc 1 3105 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 167


 5894 0050 0137     		add	r7, r7, #1
 5895              	.LVL810:
 5896              	.L425:
3106:.\sd/ff.c     **** 				} while (++clst < (*fatfs)->n_fatent);
 5897              		.loc 1 3106 0 is_stmt 1
 5898 0052 0134     		add	r4, r4, #1
 5899              	.LVL811:
 5900 0054 3368     		ldr	r3, [r6]
 5901 0056 9B69     		ldr	r3, [r3, #24]
 5902 0058 9C42     		cmp	r4, r3
 5903 005a EFD3     		bcc	.L426
 5904 005c 3BE0     		b	.L424
 5905              	.LVL812:
 5906              	.L423:
3107:.\sd/ff.c     **** 			} else {
3108:.\sd/ff.c     **** 				clst = (*fatfs)->n_fatent;
3109:.\sd/ff.c     **** 				sect = (*fatfs)->fatbase;
 5907              		.loc 1 3109 0
 5908 005e 1B6A     		ldr	r3, [r3, #32]
 5909 0060 0293     		str	r3, [sp, #8]
 5910              	.LVL813:
3110:.\sd/ff.c     **** 				i = 0; p = 0;
 5911              		.loc 1 3110 0
 5912 0062 0023     		mov	r3, #0
 5913              	.LVL814:
 5914 0064 0021     		mov	r1, #0
3098:.\sd/ff.c     **** 			if (fat == FS_FAT12) {
 5915              		.loc 1 3098 0
 5916 0066 0027     		mov	r7, #0
 5917              	.LVL815:
 5918              	.L432:
3111:.\sd/ff.c     **** 				do {
3112:.\sd/ff.c     **** 					if (!i) {
 5919              		.loc 1 3112 0
 5920 0068 0029     		cmp	r1, #0
 5921 006a 0FD1     		bne	.L427
3113:.\sd/ff.c     **** 						res = move_window(*fatfs, sect++);
 5922              		.loc 1 3113 0
 5923 006c 029B     		ldr	r3, [sp, #8]
 5924              	.LVL816:
 5925 006e 5A1C     		add	r2, r3, #1
 5926 0070 9246     		mov	r10, r2
 5927              	.LVL817:
 5928 0072 3068     		ldr	r0, [r6]
 5929 0074 191C     		mov	r1, r3
 5930              	.LVL818:
 5931 0076 FFF7FEFF 		bl	move_window
 5932              	.LVL819:
 5933 007a 0190     		str	r0, [sp, #4]
 5934              	.LVL820:
3114:.\sd/ff.c     **** 						if (res != FR_OK) break;
 5935              		.loc 1 3114 0
 5936 007c 0028     		cmp	r0, #0
 5937 007e 2AD1     		bne	.L424
3115:.\sd/ff.c     **** 						p = (*fatfs)->win;
 5938              		.loc 1 3115 0
 5939 0080 3368     		ldr	r3, [r6]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 168


 5940 0082 3033     		add	r3, r3, #48
 5941              	.LVL821:
3113:.\sd/ff.c     **** 						res = move_window(*fatfs, sect++);
 5942              		.loc 1 3113 0
 5943 0084 5246     		mov	r2, r10
 5944 0086 0292     		str	r2, [sp, #8]
3116:.\sd/ff.c     **** 						i = SS(*fatfs);
 5945              		.loc 1 3116 0
 5946 0088 8021     		mov	r1, #128
 5947 008a 8900     		lsl	r1, r1, #2
 5948              	.LVL822:
 5949              	.L427:
3117:.\sd/ff.c     **** 					}
3118:.\sd/ff.c     **** 					if (fat == FS_FAT16) {
 5950              		.loc 1 3118 0
 5951 008c 022D     		cmp	r5, #2
 5952 008e 08D1     		bne	.L428
3119:.\sd/ff.c     **** 						if (LD_WORD(p) == 0) n++;
 5953              		.loc 1 3119 0
 5954 0090 5A78     		ldrb	r2, [r3, #1]
 5955 0092 1202     		lsl	r2, r2, #8
 5956 0094 1878     		ldrb	r0, [r3]
 5957 0096 0243     		orr	r2, r0
 5958 0098 00D1     		bne	.L429
 5959              		.loc 1 3119 0 is_stmt 0 discriminator 1
 5960 009a 0137     		add	r7, r7, #1
 5961              	.LVL823:
 5962              	.L429:
3120:.\sd/ff.c     **** 						p += 2; i -= 2;
 5963              		.loc 1 3120 0 is_stmt 1
 5964 009c 0233     		add	r3, r3, #2
 5965              	.LVL824:
 5966 009e 0239     		sub	r1, r1, #2
 5967              	.LVL825:
 5968 00a0 10E0     		b	.L430
 5969              	.L428:
3121:.\sd/ff.c     **** 					} else {
3122:.\sd/ff.c     **** 						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
 5970              		.loc 1 3122 0
 5971 00a2 DA78     		ldrb	r2, [r3, #3]
 5972 00a4 1206     		lsl	r2, r2, #24
 5973 00a6 9246     		mov	r10, r2
 5974 00a8 9878     		ldrb	r0, [r3, #2]
 5975 00aa 0204     		lsl	r2, r0, #16
 5976 00ac 5046     		mov	r0, r10
 5977 00ae 0243     		orr	r2, r0
 5978 00b0 5878     		ldrb	r0, [r3, #1]
 5979 00b2 0002     		lsl	r0, r0, #8
 5980 00b4 0243     		orr	r2, r0
 5981 00b6 1878     		ldrb	r0, [r3]
 5982 00b8 0243     		orr	r2, r0
 5983 00ba 1201     		lsl	r2, r2, #4
 5984 00bc 00D1     		bne	.L431
 5985              		.loc 1 3122 0 is_stmt 0 discriminator 1
 5986 00be 0137     		add	r7, r7, #1
 5987              	.LVL826:
 5988              	.L431:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 169


3123:.\sd/ff.c     **** 						p += 4; i -= 4;
 5989              		.loc 1 3123 0 is_stmt 1
 5990 00c0 0433     		add	r3, r3, #4
 5991              	.LVL827:
 5992 00c2 0439     		sub	r1, r1, #4
 5993              	.LVL828:
 5994              	.L430:
3124:.\sd/ff.c     **** 					}
3125:.\sd/ff.c     **** 				} while (--clst);
 5995              		.loc 1 3125 0
 5996 00c4 013C     		sub	r4, r4, #1
 5997              	.LVL829:
 5998 00c6 002C     		cmp	r4, #0
 5999 00c8 CED1     		bne	.L432
 6000 00ca 04E0     		b	.L424
 6001              	.LVL830:
 6002              	.L434:
3103:.\sd/ff.c     **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6003              		.loc 1 3103 0
 6004 00cc 0123     		mov	r3, #1
 6005 00ce 0193     		str	r3, [sp, #4]
 6006              	.LVL831:
 6007 00d0 01E0     		b	.L424
 6008              	.LVL832:
 6009              	.L435:
3104:.\sd/ff.c     **** 					if (stat == 0) n++;
 6010              		.loc 1 3104 0
 6011 00d2 0223     		mov	r3, #2
 6012 00d4 0193     		str	r3, [sp, #4]
 6013              	.LVL833:
 6014              	.L424:
3126:.\sd/ff.c     **** 			}
3127:.\sd/ff.c     **** 			(*fatfs)->free_clust = n;
 6015              		.loc 1 3127 0
 6016 00d6 3368     		ldr	r3, [r6]
 6017 00d8 1F61     		str	r7, [r3, #16]
3128:.\sd/ff.c     **** 			if (fat == FS_FAT32) (*fatfs)->fsi_flag = 1;
 6018              		.loc 1 3128 0
 6019 00da 032D     		cmp	r5, #3
 6020 00dc 02D1     		bne	.L433
 6021              		.loc 1 3128 0 is_stmt 0 discriminator 1
 6022 00de 3368     		ldr	r3, [r6]
 6023 00e0 0122     		mov	r2, #1
 6024 00e2 5A71     		strb	r2, [r3, #5]
 6025              	.L433:
3129:.\sd/ff.c     **** 			*nclst = n;
 6026              		.loc 1 3129 0 is_stmt 1
 6027 00e4 4B46     		mov	r3, r9
 6028 00e6 1F60     		str	r7, [r3]
 6029              	.LVL834:
 6030              	.L421:
3130:.\sd/ff.c     **** 		}
3131:.\sd/ff.c     **** 	}
3132:.\sd/ff.c     **** 	LEAVE_FF(*fatfs, res);
3133:.\sd/ff.c     **** }
 6031              		.loc 1 3133 0
 6032 00e8 0198     		ldr	r0, [sp, #4]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 170


 6033 00ea 05B0     		add	sp, sp, #20
 6034              		@ sp needed
 6035              	.LVL835:
 6036              	.LVL836:
 6037 00ec 0CBC     		pop	{r2, r3}
 6038 00ee 9146     		mov	r9, r2
 6039 00f0 9A46     		mov	r10, r3
 6040 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 6041              		.cfi_endproc
 6042              	.LFE38:
 6043              		.size	f_getfree, .-f_getfree
 6044              		.section	.text.f_truncate,"ax",%progbits
 6045              		.align	2
 6046              		.global	f_truncate
 6047              		.code	16
 6048              		.thumb_func
 6049              		.type	f_truncate, %function
 6050              	f_truncate:
 6051              	.LFB39:
3134:.\sd/ff.c     **** 
3135:.\sd/ff.c     **** 
3136:.\sd/ff.c     **** 
3137:.\sd/ff.c     **** 
3138:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3139:.\sd/ff.c     **** /* Truncate File                                                         */
3140:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3141:.\sd/ff.c     **** 
3142:.\sd/ff.c     **** FRESULT f_truncate (
3143:.\sd/ff.c     **** 	FIL *fp		/* Pointer to the file object */
3144:.\sd/ff.c     **** )
3145:.\sd/ff.c     **** {
 6052              		.loc 1 3145 0
 6053              		.cfi_startproc
 6054              	.LVL837:
 6055 0000 70B5     		push	{r4, r5, r6, lr}
 6056              		.cfi_def_cfa_offset 16
 6057              		.cfi_offset 4, -16
 6058              		.cfi_offset 5, -12
 6059              		.cfi_offset 6, -8
 6060              		.cfi_offset 14, -4
 6061 0002 051C     		mov	r5, r0
3146:.\sd/ff.c     **** 	FRESULT res;
3147:.\sd/ff.c     **** 	DWORD ncl;
3148:.\sd/ff.c     **** 
3149:.\sd/ff.c     **** 
3150:.\sd/ff.c     **** 	res = validate(fp->fs, fp->id);		/* Check validity of the object */
 6062              		.loc 1 3150 0
 6063 0004 8188     		ldrh	r1, [r0, #4]
 6064 0006 0068     		ldr	r0, [r0]
 6065              	.LVL838:
 6066 0008 FFF7FEFF 		bl	validate
 6067              	.LVL839:
 6068 000c 041E     		sub	r4, r0, #0
 6069              	.LVL840:
3151:.\sd/ff.c     **** 	if (res == FR_OK) {
 6070              		.loc 1 3151 0
 6071 000e 09D1     		bne	.L437
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 171


3152:.\sd/ff.c     **** 		if (fp->flag & FA__ERROR) {			/* Check abort flag */
 6072              		.loc 1 3152 0
 6073 0010 AB79     		ldrb	r3, [r5, #6]
 6074 0012 5AB2     		sxtb	r2, r3
 6075 0014 002A     		cmp	r2, #0
 6076 0016 02DB     		blt	.L443
3153:.\sd/ff.c     **** 			res = FR_INT_ERR;
3154:.\sd/ff.c     **** 		} else {
3155:.\sd/ff.c     **** 			if (!(fp->flag & FA_WRITE))		/* Check access mode */
 6077              		.loc 1 3155 0
 6078 0018 9B07     		lsl	r3, r3, #30
 6079 001a 02D5     		bpl	.L444
 6080 001c 02E0     		b	.L437
 6081              	.L443:
3153:.\sd/ff.c     **** 			res = FR_INT_ERR;
 6082              		.loc 1 3153 0
 6083 001e 0224     		mov	r4, #2
 6084 0020 00E0     		b	.L437
 6085              	.L444:
3156:.\sd/ff.c     **** 				res = FR_DENIED;
 6086              		.loc 1 3156 0
 6087 0022 0724     		mov	r4, #7
 6088              	.L437:
 6089              	.LVL841:
3157:.\sd/ff.c     **** 		}
3158:.\sd/ff.c     **** 	}
3159:.\sd/ff.c     **** 	if (res == FR_OK) {
 6090              		.loc 1 3159 0
 6091 0024 002C     		cmp	r4, #0
 6092 0026 35D1     		bne	.L438
3160:.\sd/ff.c     **** 		if (fp->fsize > fp->fptr) {
 6093              		.loc 1 3160 0
 6094 0028 AB68     		ldr	r3, [r5, #8]
 6095 002a EA68     		ldr	r2, [r5, #12]
 6096 002c 9A42     		cmp	r2, r3
 6097 002e 2AD9     		bls	.L439
3161:.\sd/ff.c     **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
 6098              		.loc 1 3161 0
 6099 0030 EB60     		str	r3, [r5, #12]
3162:.\sd/ff.c     **** 			fp->flag |= FA__WRITTEN;
 6100              		.loc 1 3162 0
 6101 0032 A979     		ldrb	r1, [r5, #6]
 6102 0034 2022     		mov	r2, #32
 6103 0036 0A43     		orr	r2, r1
 6104 0038 AA71     		strb	r2, [r5, #6]
3163:.\sd/ff.c     **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 6105              		.loc 1 3163 0
 6106 003a 002B     		cmp	r3, #0
 6107 003c 07D1     		bne	.L440
3164:.\sd/ff.c     **** 				res = remove_chain(fp->fs, fp->sclust);
 6108              		.loc 1 3164 0
 6109 003e 2868     		ldr	r0, [r5]
 6110 0040 2969     		ldr	r1, [r5, #16]
 6111 0042 FFF7FEFF 		bl	remove_chain
 6112              	.LVL842:
 6113 0046 041C     		mov	r4, r0
 6114              	.LVL843:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 172


3165:.\sd/ff.c     **** 				fp->sclust = 0;
 6115              		.loc 1 3165 0
 6116 0048 0023     		mov	r3, #0
 6117 004a 2B61     		str	r3, [r5, #16]
 6118 004c 1BE0     		b	.L439
 6119              	.LVL844:
 6120              	.L440:
3166:.\sd/ff.c     **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
3167:.\sd/ff.c     **** 				ncl = get_fat(fp->fs, fp->clust);
 6121              		.loc 1 3167 0
 6122 004e 2868     		ldr	r0, [r5]
 6123 0050 6969     		ldr	r1, [r5, #20]
 6124 0052 FFF7FEFF 		bl	get_fat
 6125              	.LVL845:
 6126 0056 061C     		mov	r6, r0
 6127              	.LVL846:
3168:.\sd/ff.c     **** 				res = FR_OK;
3169:.\sd/ff.c     **** 				if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
 6128              		.loc 1 3169 0
 6129 0058 431C     		add	r3, r0, #1
 6130 005a 00D1     		bne	.L441
 6131 005c 0124     		mov	r4, #1
 6132              	.L441:
 6133              	.LVL847:
3170:.\sd/ff.c     **** 				if (ncl == 1) res = FR_INT_ERR;
 6134              		.loc 1 3170 0
 6135 005e 012E     		cmp	r6, #1
 6136 0060 00D1     		bne	.L442
 6137 0062 0224     		mov	r4, #2
 6138              	.LVL848:
 6139              	.L442:
3171:.\sd/ff.c     **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 6140              		.loc 1 3171 0
 6141 0064 002C     		cmp	r4, #0
 6142 0066 0ED1     		bne	.L439
 6143              		.loc 1 3171 0 is_stmt 0 discriminator 1
 6144 0068 2868     		ldr	r0, [r5]
 6145              	.LVL849:
 6146 006a 8369     		ldr	r3, [r0, #24]
 6147 006c B342     		cmp	r3, r6
 6148 006e 0AD9     		bls	.L439
3172:.\sd/ff.c     **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 6149              		.loc 1 3172 0 is_stmt 1
 6150 0070 6969     		ldr	r1, [r5, #20]
 6151 0072 094A     		ldr	r2, .L447
 6152 0074 FFF7FEFF 		bl	put_fat
 6153              	.LVL850:
 6154 0078 041E     		sub	r4, r0, #0
 6155              	.LVL851:
3173:.\sd/ff.c     **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 6156              		.loc 1 3173 0
 6157 007a 04D1     		bne	.L439
 6158              		.loc 1 3173 0 is_stmt 0 discriminator 1
 6159 007c 2868     		ldr	r0, [r5]
 6160              	.LVL852:
 6161 007e 311C     		mov	r1, r6
 6162 0080 FFF7FEFF 		bl	remove_chain
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 173


 6163              	.LVL853:
 6164 0084 041C     		mov	r4, r0
 6165              	.LVL854:
 6166              	.L439:
3174:.\sd/ff.c     **** 				}
3175:.\sd/ff.c     **** 			}
3176:.\sd/ff.c     **** 		}
3177:.\sd/ff.c     **** 		if (res != FR_OK) fp->flag |= FA__ERROR;
 6167              		.loc 1 3177 0 is_stmt 1
 6168 0086 002C     		cmp	r4, #0
 6169 0088 04D0     		beq	.L438
 6170              		.loc 1 3177 0 is_stmt 0 discriminator 1
 6171 008a AB79     		ldrb	r3, [r5, #6]
 6172 008c 8022     		mov	r2, #128
 6173 008e 5242     		neg	r2, r2
 6174 0090 1343     		orr	r3, r2
 6175 0092 AB71     		strb	r3, [r5, #6]
 6176              	.L438:
3178:.\sd/ff.c     **** 	}
3179:.\sd/ff.c     **** 
3180:.\sd/ff.c     **** 	LEAVE_FF(fp->fs, res);
3181:.\sd/ff.c     **** }
 6177              		.loc 1 3181 0 is_stmt 1
 6178 0094 201C     		mov	r0, r4
 6179              		@ sp needed
 6180              	.LVL855:
 6181              	.LVL856:
 6182 0096 70BD     		pop	{r4, r5, r6, pc}
 6183              	.L448:
 6184              		.align	2
 6185              	.L447:
 6186 0098 FFFFFF0F 		.word	268435455
 6187              		.cfi_endproc
 6188              	.LFE39:
 6189              		.size	f_truncate, .-f_truncate
 6190              		.section	.text.f_unlink,"ax",%progbits
 6191              		.align	2
 6192              		.global	f_unlink
 6193              		.code	16
 6194              		.thumb_func
 6195              		.type	f_unlink, %function
 6196              	f_unlink:
 6197              	.LFB40:
3182:.\sd/ff.c     **** 
3183:.\sd/ff.c     **** 
3184:.\sd/ff.c     **** 
3185:.\sd/ff.c     **** 
3186:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3187:.\sd/ff.c     **** /* Delete a File or Directory                                            */
3188:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3189:.\sd/ff.c     **** 
3190:.\sd/ff.c     **** FRESULT f_unlink (
3191:.\sd/ff.c     **** 	const TCHAR *path		/* Pointer to the file or directory path */
3192:.\sd/ff.c     **** )
3193:.\sd/ff.c     **** {
 6198              		.loc 1 3193 0
 6199              		.cfi_startproc
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 174


 6200              	.LVL857:
 6201 0000 30B5     		push	{r4, r5, lr}
 6202              		.cfi_def_cfa_offset 12
 6203              		.cfi_offset 4, -12
 6204              		.cfi_offset 5, -8
 6205              		.cfi_offset 14, -4
 6206 0002 95B0     		sub	sp, sp, #84
 6207              		.cfi_def_cfa_offset 96
 6208 0004 0190     		str	r0, [sp, #4]
3194:.\sd/ff.c     **** 	FRESULT res;
3195:.\sd/ff.c     **** 	DIR dj, sdj;
3196:.\sd/ff.c     **** 	BYTE *dir;
3197:.\sd/ff.c     **** 	DWORD dclst;
3198:.\sd/ff.c     **** 	DEF_NAMEBUF;
3199:.\sd/ff.c     **** 
3200:.\sd/ff.c     **** 
3201:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 6209              		.loc 1 3201 0
 6210 0006 01A8     		add	r0, sp, #4
 6211              	.LVL858:
 6212 0008 0DA9     		add	r1, sp, #52
 6213 000a 0122     		mov	r2, #1
 6214 000c FFF7FEFF 		bl	chk_mounted
 6215              	.LVL859:
 6216 0010 041E     		sub	r4, r0, #0
 6217              	.LVL860:
3202:.\sd/ff.c     **** 	if (res == FR_OK) {
 6218              		.loc 1 3202 0
 6219 0012 55D1     		bne	.L450
3203:.\sd/ff.c     **** 		INIT_BUF(dj);
 6220              		.loc 1 3203 0
 6221 0014 03AB     		add	r3, sp, #12
 6222 0016 1393     		str	r3, [sp, #76]
3204:.\sd/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the file path */
 6223              		.loc 1 3204 0
 6224 0018 0DA8     		add	r0, sp, #52
 6225              	.LVL861:
 6226 001a 0199     		ldr	r1, [sp, #4]
 6227 001c FFF7FEFF 		bl	follow_path
 6228              	.LVL862:
 6229 0020 041E     		sub	r4, r0, #0
 6230              	.LVL863:
3205:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3206:.\sd/ff.c     **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
3207:.\sd/ff.c     **** #if _FS_SHARE
3208:.\sd/ff.c     **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open file */
 6231              		.loc 1 3208 0
 6232 0022 04D1     		bne	.L451
 6233              		.loc 1 3208 0 is_stmt 0 discriminator 1
 6234 0024 0DA8     		add	r0, sp, #52
 6235              	.LVL864:
 6236 0026 0221     		mov	r1, #2
 6237 0028 FFF7FEFF 		bl	chk_lock
 6238              	.LVL865:
 6239 002c 041C     		mov	r4, r0
 6240              	.LVL866:
 6241              	.L451:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 175


3209:.\sd/ff.c     **** #endif
3210:.\sd/ff.c     **** 		if (res == FR_OK) {					/* The object is accessible */
 6242              		.loc 1 3210 0 is_stmt 1
 6243 002e 002C     		cmp	r4, #0
 6244 0030 46D1     		bne	.L450
3211:.\sd/ff.c     **** 			dir = dj.dir;
 6245              		.loc 1 3211 0
 6246 0032 129B     		ldr	r3, [sp, #72]
 6247              	.LVL867:
3212:.\sd/ff.c     **** 			if (!dir) {
 6248              		.loc 1 3212 0
 6249 0034 002B     		cmp	r3, #0
 6250 0036 03D0     		beq	.L456
3213:.\sd/ff.c     **** 				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
3214:.\sd/ff.c     **** 			} else {
3215:.\sd/ff.c     **** 				if (dir[DIR_Attr] & AM_RDO)
 6251              		.loc 1 3215 0
 6252 0038 DA7A     		ldrb	r2, [r3, #11]
 6253 003a D207     		lsl	r2, r2, #31
 6254 003c 02D4     		bmi	.L457
 6255 003e 02E0     		b	.L452
 6256              	.L456:
3213:.\sd/ff.c     **** 				res = FR_INVALID_NAME;		/* Cannot remove the start directory */
 6257              		.loc 1 3213 0
 6258 0040 0624     		mov	r4, #6
 6259              	.LVL868:
 6260 0042 00E0     		b	.L452
 6261              	.LVL869:
 6262              	.L457:
3216:.\sd/ff.c     **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 6263              		.loc 1 3216 0
 6264 0044 0724     		mov	r4, #7
 6265              	.LVL870:
 6266              	.L452:
3217:.\sd/ff.c     **** 			}
3218:.\sd/ff.c     **** 			dclst = LD_CLUST(dir);
 6267              		.loc 1 3218 0
 6268 0046 5A7D     		ldrb	r2, [r3, #21]
 6269 0048 1202     		lsl	r2, r2, #8
 6270 004a 197D     		ldrb	r1, [r3, #20]
 6271 004c 0A43     		orr	r2, r1
 6272 004e 1204     		lsl	r2, r2, #16
 6273 0050 D97E     		ldrb	r1, [r3, #27]
 6274 0052 0902     		lsl	r1, r1, #8
 6275 0054 987E     		ldrb	r0, [r3, #26]
 6276 0056 0143     		orr	r1, r0
 6277 0058 0A43     		orr	r2, r1
 6278 005a 151C     		mov	r5, r2
 6279              	.LVL871:
3219:.\sd/ff.c     **** 			if (res == FR_OK && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-dir? */
 6280              		.loc 1 3219 0
 6281 005c 002C     		cmp	r4, #0
 6282 005e 1BD1     		bne	.L453
 6283              		.loc 1 3219 0 is_stmt 0 discriminator 1
 6284 0060 DB7A     		ldrb	r3, [r3, #11]
 6285              	.LVL872:
 6286 0062 DB06     		lsl	r3, r3, #27
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 176


 6287 0064 18D5     		bpl	.L453
3220:.\sd/ff.c     **** 				if (dclst < 2) {
 6288              		.loc 1 3220 0 is_stmt 1
 6289 0066 012A     		cmp	r2, #1
 6290 0068 15D9     		bls	.L458
3221:.\sd/ff.c     **** 					res = FR_INT_ERR;
3222:.\sd/ff.c     **** 				} else {
3223:.\sd/ff.c     **** 					mem_cpy(&sdj, &dj, sizeof(DIR));	/* Check if the sub-dir is empty or not */
 6291              		.loc 1 3223 0
 6292 006a 06A8     		add	r0, sp, #24
 6293 006c 0DA9     		add	r1, sp, #52
 6294 006e 1C22     		mov	r2, #28
 6295              	.LVL873:
 6296 0070 FFF7FEFF 		bl	mem_cpy
 6297              	.LVL874:
3224:.\sd/ff.c     **** 					sdj.sclust = dclst;
 6298              		.loc 1 3224 0
 6299 0074 0895     		str	r5, [sp, #32]
3225:.\sd/ff.c     **** 					res = dir_sdi(&sdj, 2);		/* Exclude dot entries */
 6300              		.loc 1 3225 0
 6301 0076 06A8     		add	r0, sp, #24
 6302 0078 0221     		mov	r1, #2
 6303 007a FFF7FEFF 		bl	dir_sdi
 6304              	.LVL875:
 6305 007e 041E     		sub	r4, r0, #0
 6306              	.LVL876:
3226:.\sd/ff.c     **** 					if (res == FR_OK) {
 6307              		.loc 1 3226 0
 6308 0080 0AD1     		bne	.L453
3227:.\sd/ff.c     **** 						res = dir_read(&sdj);
 6309              		.loc 1 3227 0
 6310 0082 06A8     		add	r0, sp, #24
 6311              	.LVL877:
 6312 0084 FFF7FEFF 		bl	dir_read
 6313              	.LVL878:
3228:.\sd/ff.c     **** 						if (res == FR_OK			/* Not empty dir */
 6314              		.loc 1 3228 0
 6315 0088 0028     		cmp	r0, #0
 6316 008a 00D1     		bne	.L454
3229:.\sd/ff.c     **** #if _FS_RPATH
3230:.\sd/ff.c     **** 						|| dclst == sdj.fs->cdir	/* Current dir */
3231:.\sd/ff.c     **** #endif
3232:.\sd/ff.c     **** 						) res = FR_DENIED;
 6317              		.loc 1 3232 0
 6318 008c 0730     		add	r0, r0, #7
 6319              	.LVL879:
 6320              	.L454:
3233:.\sd/ff.c     **** 						if (res == FR_NO_FILE) res = FR_OK;	/* Empty */
 6321              		.loc 1 3233 0
 6322 008e 0428     		cmp	r0, #4
 6323 0090 02D0     		beq	.L453
 6324 0092 041C     		mov	r4, r0
 6325 0094 00E0     		b	.L453
 6326              	.LVL880:
 6327              	.L458:
3221:.\sd/ff.c     **** 				} else {
 6328              		.loc 1 3221 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 177


 6329 0096 0224     		mov	r4, #2
 6330              	.LVL881:
 6331              	.L453:
3234:.\sd/ff.c     **** 					}
3235:.\sd/ff.c     **** 				}
3236:.\sd/ff.c     **** 			}
3237:.\sd/ff.c     **** 			if (res == FR_OK) {
 6332              		.loc 1 3237 0
 6333 0098 002C     		cmp	r4, #0
 6334 009a 11D1     		bne	.L450
3238:.\sd/ff.c     **** 				res = dir_remove(&dj);		/* Remove the directory entry */
 6335              		.loc 1 3238 0
 6336 009c 0DA8     		add	r0, sp, #52
 6337 009e FFF7FEFF 		bl	dir_remove
 6338              	.LVL882:
 6339 00a2 041E     		sub	r4, r0, #0
 6340              	.LVL883:
3239:.\sd/ff.c     **** 				if (res == FR_OK) {
 6341              		.loc 1 3239 0
 6342 00a4 0CD1     		bne	.L450
3240:.\sd/ff.c     **** 					if (dclst)				/* Remove the cluster chain if exist */
 6343              		.loc 1 3240 0
 6344 00a6 002D     		cmp	r5, #0
 6345 00a8 04D0     		beq	.L455
3241:.\sd/ff.c     **** 						res = remove_chain(dj.fs, dclst);
 6346              		.loc 1 3241 0
 6347 00aa 0D98     		ldr	r0, [sp, #52]
 6348              	.LVL884:
 6349 00ac 291C     		mov	r1, r5
 6350 00ae FFF7FEFF 		bl	remove_chain
 6351              	.LVL885:
 6352 00b2 041C     		mov	r4, r0
 6353              	.LVL886:
 6354              	.L455:
3242:.\sd/ff.c     **** 					if (res == FR_OK) res = sync(dj.fs);
 6355              		.loc 1 3242 0
 6356 00b4 002C     		cmp	r4, #0
 6357 00b6 03D1     		bne	.L450
 6358              		.loc 1 3242 0 is_stmt 0 discriminator 1
 6359 00b8 0D98     		ldr	r0, [sp, #52]
 6360 00ba FFF7FEFF 		bl	sync
 6361              	.LVL887:
 6362 00be 041C     		mov	r4, r0
 6363              	.LVL888:
 6364              	.L450:
3243:.\sd/ff.c     **** 				}
3244:.\sd/ff.c     **** 			}
3245:.\sd/ff.c     **** 		}
3246:.\sd/ff.c     **** 		FREE_BUF();
3247:.\sd/ff.c     **** 	}
3248:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3249:.\sd/ff.c     **** }
 6365              		.loc 1 3249 0 is_stmt 1
 6366 00c0 201C     		mov	r0, r4
 6367 00c2 15B0     		add	sp, sp, #84
 6368              		@ sp needed
 6369              	.LVL889:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 178


 6370 00c4 30BD     		pop	{r4, r5, pc}
 6371              		.cfi_endproc
 6372              	.LFE40:
 6373              		.size	f_unlink, .-f_unlink
 6374 00c6 C046     		.section	.text.f_mkdir,"ax",%progbits
 6375              		.align	2
 6376              		.global	f_mkdir
 6377              		.code	16
 6378              		.thumb_func
 6379              		.type	f_mkdir, %function
 6380              	f_mkdir:
 6381              	.LFB41:
3250:.\sd/ff.c     **** 
3251:.\sd/ff.c     **** 
3252:.\sd/ff.c     **** 
3253:.\sd/ff.c     **** 
3254:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3255:.\sd/ff.c     **** /* Create a Directory                                                    */
3256:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3257:.\sd/ff.c     **** 
3258:.\sd/ff.c     **** FRESULT f_mkdir (
3259:.\sd/ff.c     **** 	const TCHAR *path		/* Pointer to the directory path */
3260:.\sd/ff.c     **** )
3261:.\sd/ff.c     **** {
 6382              		.loc 1 3261 0
 6383              		.cfi_startproc
 6384              	.LVL890:
 6385 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6386              		.cfi_def_cfa_offset 20
 6387              		.cfi_offset 4, -20
 6388              		.cfi_offset 5, -16
 6389              		.cfi_offset 6, -12
 6390              		.cfi_offset 7, -8
 6391              		.cfi_offset 14, -4
 6392 0002 5746     		mov	r7, r10
 6393 0004 4E46     		mov	r6, r9
 6394 0006 C0B4     		push	{r6, r7}
 6395              		.cfi_def_cfa_offset 28
 6396              		.cfi_offset 9, -28
 6397              		.cfi_offset 10, -24
 6398 0008 8DB0     		sub	sp, sp, #52
 6399              		.cfi_def_cfa_offset 80
 6400 000a 0190     		str	r0, [sp, #4]
3262:.\sd/ff.c     **** 	FRESULT res;
3263:.\sd/ff.c     **** 	DIR dj;
3264:.\sd/ff.c     **** 	BYTE *dir, n;
3265:.\sd/ff.c     **** 	DWORD dsc, dcl, pcl, tim = get_fattime();
 6401              		.loc 1 3265 0
 6402 000c FFF7FEFF 		bl	get_fattime
 6403              	.LVL891:
 6404 0010 051C     		mov	r5, r0
 6405              	.LVL892:
3266:.\sd/ff.c     **** 	DEF_NAMEBUF;
3267:.\sd/ff.c     **** 
3268:.\sd/ff.c     **** 
3269:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 6406              		.loc 1 3269 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 179


 6407 0012 01A8     		add	r0, sp, #4
 6408              	.LVL893:
 6409 0014 05A9     		add	r1, sp, #20
 6410 0016 0122     		mov	r2, #1
 6411 0018 FFF7FEFF 		bl	chk_mounted
 6412              	.LVL894:
 6413 001c 041E     		sub	r4, r0, #0
 6414              	.LVL895:
3270:.\sd/ff.c     **** 	if (res == FR_OK) {
 6415              		.loc 1 3270 0
 6416 001e 00D0     		beq	.LCB7265
 6417 0020 B2E0     		b	.L461	@long jump
 6418              	.LCB7265:
3271:.\sd/ff.c     **** 		INIT_BUF(dj);
 6419              		.loc 1 3271 0
 6420 0022 02AB     		add	r3, sp, #8
 6421 0024 0B93     		str	r3, [sp, #44]
3272:.\sd/ff.c     **** 		res = follow_path(&dj, path);			/* Follow the file path */
 6422              		.loc 1 3272 0
 6423 0026 05A8     		add	r0, sp, #20
 6424              	.LVL896:
 6425 0028 0199     		ldr	r1, [sp, #4]
 6426 002a FFF7FEFF 		bl	follow_path
 6427              	.LVL897:
3273:.\sd/ff.c     **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 6428              		.loc 1 3273 0
 6429 002e 0028     		cmp	r0, #0
 6430 0030 00D1     		bne	.L462
 6431 0032 0830     		add	r0, r0, #8
 6432              	.LVL898:
 6433              	.L462:
3274:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NS] & NS_DOT))
3275:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
3276:.\sd/ff.c     **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
 6434              		.loc 1 3276 0
 6435 0034 0428     		cmp	r0, #4
 6436 0036 00D0     		beq	.LCB7284
 6437 0038 A5E0     		b	.L474	@long jump
 6438              	.LCB7284:
3277:.\sd/ff.c     **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
 6439              		.loc 1 3277 0
 6440 003a 0598     		ldr	r0, [sp, #20]
 6441              	.LVL899:
 6442 003c 0021     		mov	r1, #0
 6443 003e FFF7FEFF 		bl	create_chain
 6444              	.LVL900:
 6445 0042 071E     		sub	r7, r0, #0
 6446              	.LVL901:
3278:.\sd/ff.c     **** 			res = FR_OK;
3279:.\sd/ff.c     **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
 6447              		.loc 1 3279 0
 6448 0044 00D1     		bne	.L463
 6449 0046 0724     		mov	r4, #7
 6450              	.L463:
 6451              	.LVL902:
3280:.\sd/ff.c     **** 			if (dcl == 1) res = FR_INT_ERR;
 6452              		.loc 1 3280 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 180


 6453 0048 012F     		cmp	r7, #1
 6454 004a 00D1     		bne	.L464
 6455 004c 0224     		mov	r4, #2
 6456              	.LVL903:
 6457              	.L464:
3281:.\sd/ff.c     **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 6458              		.loc 1 3281 0
 6459 004e 7B1C     		add	r3, r7, #1
 6460 0050 00D1     		bne	.L465
 6461 0052 0124     		mov	r4, #1
 6462              	.LVL904:
 6463              	.L465:
3282:.\sd/ff.c     **** 			if (res == FR_OK)					/* Flush FAT */
 6464              		.loc 1 3282 0
 6465 0054 002C     		cmp	r4, #0
 6466 0056 04D1     		bne	.L466
3283:.\sd/ff.c     **** 				res = move_window(dj.fs, 0);
 6467              		.loc 1 3283 0
 6468 0058 0598     		ldr	r0, [sp, #20]
 6469              	.LVL905:
 6470 005a 0021     		mov	r1, #0
 6471 005c FFF7FEFF 		bl	move_window
 6472              	.LVL906:
 6473 0060 041C     		mov	r4, r0
 6474              	.LVL907:
 6475              	.L466:
3284:.\sd/ff.c     **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 6476              		.loc 1 3284 0
 6477 0062 002C     		cmp	r4, #0
 6478 0064 69D1     		bne	.L467
3285:.\sd/ff.c     **** 				dsc = clust2sect(dj.fs, dcl);
 6479              		.loc 1 3285 0
 6480 0066 059E     		ldr	r6, [sp, #20]
 6481 0068 301C     		mov	r0, r6
 6482 006a 391C     		mov	r1, r7
 6483 006c FFF7FEFF 		bl	clust2sect
 6484              	.LVL908:
 6485 0070 8146     		mov	r9, r0
 6486              	.LVL909:
3286:.\sd/ff.c     **** 				dir = dj.fs->win;
 6487              		.loc 1 3286 0
 6488 0072 3023     		mov	r3, #48
 6489 0074 9C46     		mov	ip, r3
 6490 0076 B444     		add	ip, ip, r6
 6491 0078 6346     		mov	r3, ip
 6492 007a 0093     		str	r3, [sp]
 6493              	.LVL910:
3287:.\sd/ff.c     **** 				mem_set(dir, 0, SS(dj.fs));
 6494              		.loc 1 3287 0
 6495 007c 6046     		mov	r0, ip
 6496              	.LVL911:
 6497 007e 0021     		mov	r1, #0
 6498 0080 8022     		mov	r2, #128
 6499 0082 9200     		lsl	r2, r2, #2
 6500 0084 FFF7FEFF 		bl	mem_set
 6501              	.LVL912:
3288:.\sd/ff.c     **** 				mem_set(dir+DIR_Name, ' ', 8+3);	/* Create "." entry */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 181


 6502              		.loc 1 3288 0
 6503 0088 0098     		ldr	r0, [sp]
 6504 008a 2021     		mov	r1, #32
 6505 008c 0B22     		mov	r2, #11
 6506 008e FFF7FEFF 		bl	mem_set
 6507              	.LVL913:
3289:.\sd/ff.c     **** 				dir[DIR_Name] = '.';
 6508              		.loc 1 3289 0
 6509 0092 2E22     		mov	r2, #46
 6510 0094 9246     		mov	r10, r2
 6511 0096 3023     		mov	r3, #48
 6512 0098 F254     		strb	r2, [r6, r3]
3290:.\sd/ff.c     **** 				dir[DIR_Attr] = AM_DIR;
 6513              		.loc 1 3290 0
 6514 009a 1022     		mov	r2, #16
 6515 009c 0B33     		add	r3, r3, #11
 6516 009e F254     		strb	r2, [r6, r3]
3291:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);
 6517              		.loc 1 3291 0
 6518 00a0 0B33     		add	r3, r3, #11
 6519 00a2 F554     		strb	r5, [r6, r3]
 6520 00a4 2B0A     		lsr	r3, r5, #8
 6521 00a6 3732     		add	r2, r2, #55
 6522 00a8 B354     		strb	r3, [r6, r2]
 6523 00aa 2B0C     		lsr	r3, r5, #16
 6524 00ac 0132     		add	r2, r2, #1
 6525 00ae B354     		strb	r3, [r6, r2]
 6526 00b0 2B0E     		lsr	r3, r5, #24
 6527 00b2 0132     		add	r2, r2, #1
 6528 00b4 B354     		strb	r3, [r6, r2]
3292:.\sd/ff.c     **** 				ST_CLUST(dir, dcl);
 6529              		.loc 1 3292 0
 6530 00b6 4A23     		mov	r3, #74
 6531 00b8 F754     		strb	r7, [r6, r3]
 6532 00ba 3B0A     		lsr	r3, r7, #8
 6533 00bc 0232     		add	r2, r2, #2
 6534 00be B354     		strb	r3, [r6, r2]
 6535 00c0 3B0C     		lsr	r3, r7, #16
 6536 00c2 073A     		sub	r2, r2, #7
 6537 00c4 B354     		strb	r3, [r6, r2]
 6538 00c6 1B0A     		lsr	r3, r3, #8
 6539 00c8 0132     		add	r2, r2, #1
 6540 00ca B354     		strb	r3, [r6, r2]
3293:.\sd/ff.c     **** 				mem_cpy(dir+SZ_DIR, dir, SZ_DIR); 	/* Create ".." entry */
 6541              		.loc 1 3293 0
 6542 00cc 301C     		mov	r0, r6
 6543 00ce 5030     		add	r0, r0, #80
 6544 00d0 0099     		ldr	r1, [sp]
 6545 00d2 253A     		sub	r2, r2, #37
 6546 00d4 FFF7FEFF 		bl	mem_cpy
 6547              	.LVL914:
3294:.\sd/ff.c     **** 				dir[33] = '.'; pcl = dj.sclust;
 6548              		.loc 1 3294 0
 6549 00d8 5123     		mov	r3, #81
 6550 00da 5246     		mov	r2, r10
 6551 00dc F254     		strb	r2, [r6, r3]
 6552 00de 079B     		ldr	r3, [sp, #28]
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 182


 6553              	.LVL915:
3295:.\sd/ff.c     **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 6554              		.loc 1 3295 0
 6555 00e0 059A     		ldr	r2, [sp, #20]
 6556 00e2 1178     		ldrb	r1, [r2]
 6557 00e4 0329     		cmp	r1, #3
 6558 00e6 03D1     		bne	.L468
 6559              		.loc 1 3295 0 is_stmt 0 discriminator 1
 6560 00e8 516A     		ldr	r1, [r2, #36]
 6561 00ea 9942     		cmp	r1, r3
 6562 00ec 00D1     		bne	.L468
3296:.\sd/ff.c     **** 					pcl = 0;
 6563              		.loc 1 3296 0 is_stmt 1
 6564 00ee 0023     		mov	r3, #0
 6565              	.LVL916:
 6566              	.L468:
3297:.\sd/ff.c     **** 				ST_CLUST(dir+SZ_DIR, pcl);
 6567              		.loc 1 3297 0
 6568 00f0 6A21     		mov	r1, #106
 6569 00f2 7354     		strb	r3, [r6, r1]
 6570 00f4 180A     		lsr	r0, r3, #8
 6571 00f6 0131     		add	r1, r1, #1
 6572 00f8 7054     		strb	r0, [r6, r1]
 6573 00fa 1B0C     		lsr	r3, r3, #16
 6574              	.LVL917:
 6575 00fc 0739     		sub	r1, r1, #7
 6576 00fe 7354     		strb	r3, [r6, r1]
 6577 0100 1B0A     		lsr	r3, r3, #8
 6578 0102 0131     		add	r1, r1, #1
 6579 0104 7354     		strb	r3, [r6, r1]
3298:.\sd/ff.c     **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
 6580              		.loc 1 3298 0
 6581 0106 9678     		ldrb	r6, [r2, #2]
 6582              	.LVL918:
 6583 0108 15E0     		b	.L469
 6584              	.L470:
3299:.\sd/ff.c     **** 					dj.fs->winsect = dsc++;
 6585              		.loc 1 3299 0
 6586 010a 0598     		ldr	r0, [sp, #20]
 6587 010c 0123     		mov	r3, #1
 6588 010e 4B44     		add	r3, r3, r9
 6589 0110 9A46     		mov	r10, r3
 6590              	.LVL919:
 6591 0112 4B46     		mov	r3, r9
 6592              	.LVL920:
 6593 0114 C362     		str	r3, [r0, #44]
3300:.\sd/ff.c     **** 					dj.fs->wflag = 1;
 6594              		.loc 1 3300 0
 6595 0116 0123     		mov	r3, #1
 6596 0118 0371     		strb	r3, [r0, #4]
3301:.\sd/ff.c     **** 					res = move_window(dj.fs, 0);
 6597              		.loc 1 3301 0
 6598 011a 0021     		mov	r1, #0
 6599 011c FFF7FEFF 		bl	move_window
 6600              	.LVL921:
 6601 0120 041E     		sub	r4, r0, #0
 6602              	.LVL922:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 183


3302:.\sd/ff.c     **** 					if (res != FR_OK) break;
 6603              		.loc 1 3302 0
 6604 0122 0AD1     		bne	.L467
3303:.\sd/ff.c     **** 					mem_set(dir, 0, SS(dj.fs));
 6605              		.loc 1 3303 0 discriminator 2
 6606 0124 0098     		ldr	r0, [sp]
 6607              	.LVL923:
 6608 0126 0021     		mov	r1, #0
 6609 0128 8022     		mov	r2, #128
 6610 012a 9200     		lsl	r2, r2, #2
 6611 012c FFF7FEFF 		bl	mem_set
 6612              	.LVL924:
3298:.\sd/ff.c     **** 					dj.fs->winsect = dsc++;
 6613              		.loc 1 3298 0 discriminator 2
 6614 0130 013E     		sub	r6, r6, #1
 6615              	.LVL925:
 6616 0132 F6B2     		uxtb	r6, r6
 6617              	.LVL926:
3299:.\sd/ff.c     **** 					dj.fs->wflag = 1;
 6618              		.loc 1 3299 0 discriminator 2
 6619 0134 D146     		mov	r9, r10
 6620              	.LVL927:
 6621              	.L469:
3298:.\sd/ff.c     **** 					dj.fs->winsect = dsc++;
 6622              		.loc 1 3298 0 discriminator 1
 6623 0136 002E     		cmp	r6, #0
 6624 0138 E7D1     		bne	.L470
 6625              	.LVL928:
 6626              	.L467:
3304:.\sd/ff.c     **** 				}
3305:.\sd/ff.c     **** 			}
3306:.\sd/ff.c     **** 			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
 6627              		.loc 1 3306 0
 6628 013a 002C     		cmp	r4, #0
 6629 013c 03D1     		bne	.L471
 6630              		.loc 1 3306 0 is_stmt 0 discriminator 1
 6631 013e 05A8     		add	r0, sp, #20
 6632 0140 FFF7FEFF 		bl	dir_register
 6633              	.LVL929:
 6634 0144 041C     		mov	r4, r0
 6635              	.LVL930:
 6636              	.L471:
3307:.\sd/ff.c     **** 			if (res != FR_OK) {
 6637              		.loc 1 3307 0 is_stmt 1
 6638 0146 002C     		cmp	r4, #0
 6639 0148 04D0     		beq	.L472
3308:.\sd/ff.c     **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
 6640              		.loc 1 3308 0
 6641 014a 0598     		ldr	r0, [sp, #20]
 6642 014c 391C     		mov	r1, r7
 6643 014e FFF7FEFF 		bl	remove_chain
 6644              	.LVL931:
 6645 0152 19E0     		b	.L461
 6646              	.L472:
3309:.\sd/ff.c     **** 			} else {
3310:.\sd/ff.c     **** 				dir = dj.dir;
 6647              		.loc 1 3310 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 184


 6648 0154 0A9A     		ldr	r2, [sp, #40]
 6649              	.LVL932:
3311:.\sd/ff.c     **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 6650              		.loc 1 3311 0
 6651 0156 1023     		mov	r3, #16
 6652 0158 D372     		strb	r3, [r2, #11]
3312:.\sd/ff.c     **** 				ST_DWORD(dir+DIR_WrtTime, tim);		/* Created time */
 6653              		.loc 1 3312 0
 6654 015a 9575     		strb	r5, [r2, #22]
 6655 015c 2B0A     		lsr	r3, r5, #8
 6656 015e D375     		strb	r3, [r2, #23]
 6657 0160 2B0C     		lsr	r3, r5, #16
 6658 0162 1376     		strb	r3, [r2, #24]
 6659 0164 2D0E     		lsr	r5, r5, #24
 6660              	.LVL933:
 6661 0166 5576     		strb	r5, [r2, #25]
3313:.\sd/ff.c     **** 				ST_CLUST(dir, dcl);					/* Table start cluster */
 6662              		.loc 1 3313 0
 6663 0168 9776     		strb	r7, [r2, #26]
 6664 016a 3B0A     		lsr	r3, r7, #8
 6665 016c D376     		strb	r3, [r2, #27]
 6666 016e 3B0C     		lsr	r3, r7, #16
 6667 0170 1375     		strb	r3, [r2, #20]
 6668 0172 1B0A     		lsr	r3, r3, #8
 6669 0174 5375     		strb	r3, [r2, #21]
3314:.\sd/ff.c     **** 				dj.fs->wflag = 1;
 6670              		.loc 1 3314 0
 6671 0176 0123     		mov	r3, #1
 6672 0178 059A     		ldr	r2, [sp, #20]
 6673              	.LVL934:
 6674 017a 1371     		strb	r3, [r2, #4]
3315:.\sd/ff.c     **** 				res = sync(dj.fs);
 6675              		.loc 1 3315 0
 6676 017c 101C     		mov	r0, r2
 6677 017e FFF7FEFF 		bl	sync
 6678              	.LVL935:
 6679 0182 041C     		mov	r4, r0
 6680              	.LVL936:
 6681 0184 00E0     		b	.L461
 6682              	.LVL937:
 6683              	.L474:
 6684 0186 041C     		mov	r4, r0
 6685              	.LVL938:
 6686              	.L461:
3316:.\sd/ff.c     **** 			}
3317:.\sd/ff.c     **** 		}
3318:.\sd/ff.c     **** 		FREE_BUF();
3319:.\sd/ff.c     **** 	}
3320:.\sd/ff.c     **** 
3321:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3322:.\sd/ff.c     **** }
 6687              		.loc 1 3322 0
 6688 0188 201C     		mov	r0, r4
 6689 018a 0DB0     		add	sp, sp, #52
 6690              		@ sp needed
 6691              	.LVL939:
 6692 018c 0CBC     		pop	{r2, r3}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 185


 6693 018e 9146     		mov	r9, r2
 6694 0190 9A46     		mov	r10, r3
 6695 0192 F0BD     		pop	{r4, r5, r6, r7, pc}
 6696              		.cfi_endproc
 6697              	.LFE41:
 6698              		.size	f_mkdir, .-f_mkdir
 6699              		.section	.text.f_chmod,"ax",%progbits
 6700              		.align	2
 6701              		.global	f_chmod
 6702              		.code	16
 6703              		.thumb_func
 6704              		.type	f_chmod, %function
 6705              	f_chmod:
 6706              	.LFB42:
3323:.\sd/ff.c     **** 
3324:.\sd/ff.c     **** 
3325:.\sd/ff.c     **** 
3326:.\sd/ff.c     **** 
3327:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3328:.\sd/ff.c     **** /* Change Attribute                                                      */
3329:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3330:.\sd/ff.c     **** 
3331:.\sd/ff.c     **** FRESULT f_chmod (
3332:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the file path */
3333:.\sd/ff.c     **** 	BYTE value,			/* Attribute bits */
3334:.\sd/ff.c     **** 	BYTE mask			/* Attribute mask to change */
3335:.\sd/ff.c     **** )
3336:.\sd/ff.c     **** {
 6707              		.loc 1 3336 0
 6708              		.cfi_startproc
 6709              	.LVL940:
 6710 0000 30B5     		push	{r4, r5, lr}
 6711              		.cfi_def_cfa_offset 12
 6712              		.cfi_offset 4, -12
 6713              		.cfi_offset 5, -8
 6714              		.cfi_offset 14, -4
 6715 0002 8DB0     		sub	sp, sp, #52
 6716              		.cfi_def_cfa_offset 64
 6717 0004 0190     		str	r0, [sp, #4]
 6718 0006 0D1C     		mov	r5, r1
 6719 0008 141C     		mov	r4, r2
3337:.\sd/ff.c     **** 	FRESULT res;
3338:.\sd/ff.c     **** 	DIR dj;
3339:.\sd/ff.c     **** 	BYTE *dir;
3340:.\sd/ff.c     **** 	DEF_NAMEBUF;
3341:.\sd/ff.c     **** 
3342:.\sd/ff.c     **** 
3343:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 6720              		.loc 1 3343 0
 6721 000a 01A8     		add	r0, sp, #4
 6722              	.LVL941:
 6723 000c 05A9     		add	r1, sp, #20
 6724              	.LVL942:
 6725 000e 0122     		mov	r2, #1
 6726              	.LVL943:
 6727 0010 FFF7FEFF 		bl	chk_mounted
 6728              	.LVL944:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 186


3344:.\sd/ff.c     **** 	if (res == FR_OK) {
 6729              		.loc 1 3344 0
 6730 0014 0028     		cmp	r0, #0
 6731 0016 19D1     		bne	.L480
3345:.\sd/ff.c     **** 		INIT_BUF(dj);
 6732              		.loc 1 3345 0
 6733 0018 02AB     		add	r3, sp, #8
 6734 001a 0B93     		str	r3, [sp, #44]
3346:.\sd/ff.c     **** 		res = follow_path(&dj, path);		/* Follow the file path */
 6735              		.loc 1 3346 0
 6736 001c 05A8     		add	r0, sp, #20
 6737              	.LVL945:
 6738 001e 0199     		ldr	r1, [sp, #4]
 6739 0020 FFF7FEFF 		bl	follow_path
 6740              	.LVL946:
3347:.\sd/ff.c     **** 		FREE_BUF();
3348:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3349:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
3350:.\sd/ff.c     **** 		if (res == FR_OK) {
 6741              		.loc 1 3350 0
 6742 0024 0028     		cmp	r0, #0
 6743 0026 11D1     		bne	.L480
3351:.\sd/ff.c     **** 			dir = dj.dir;
 6744              		.loc 1 3351 0
 6745 0028 0A9A     		ldr	r2, [sp, #40]
 6746              	.LVL947:
3352:.\sd/ff.c     **** 			if (!dir) {						/* Is it a root directory? */
 6747              		.loc 1 3352 0
 6748 002a 002A     		cmp	r2, #0
 6749 002c 0DD0     		beq	.L481
3353:.\sd/ff.c     **** 				res = FR_INVALID_NAME;
3354:.\sd/ff.c     **** 			} else {						/* File or sub directory */
3355:.\sd/ff.c     **** 				mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
 6750              		.loc 1 3355 0
 6751 002e 2723     		mov	r3, #39
 6752 0030 1C40     		and	r4, r3
 6753              	.LVL948:
3356:.\sd/ff.c     **** 				dir[DIR_Attr] = (value & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
 6754              		.loc 1 3356 0
 6755 0032 D37A     		ldrb	r3, [r2, #11]
 6756 0034 2540     		and	r5, r4
 6757 0036 A343     		bic	r3, r4
 6758 0038 1D43     		orr	r5, r3
 6759 003a D572     		strb	r5, [r2, #11]
3357:.\sd/ff.c     **** 				dj.fs->wflag = 1;
 6760              		.loc 1 3357 0
 6761 003c 0123     		mov	r3, #1
 6762 003e 059A     		ldr	r2, [sp, #20]
 6763              	.LVL949:
 6764 0040 1371     		strb	r3, [r2, #4]
3358:.\sd/ff.c     **** 				res = sync(dj.fs);
 6765              		.loc 1 3358 0
 6766 0042 101C     		mov	r0, r2
 6767              	.LVL950:
 6768 0044 FFF7FEFF 		bl	sync
 6769              	.LVL951:
 6770 0048 00E0     		b	.L480
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 187


 6771              	.LVL952:
 6772              	.L481:
3353:.\sd/ff.c     **** 			} else {						/* File or sub directory */
 6773              		.loc 1 3353 0
 6774 004a 0620     		mov	r0, #6
 6775              	.LVL953:
 6776              	.L480:
3359:.\sd/ff.c     **** 			}
3360:.\sd/ff.c     **** 		}
3361:.\sd/ff.c     **** 	}
3362:.\sd/ff.c     **** 
3363:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3364:.\sd/ff.c     **** }
 6777              		.loc 1 3364 0
 6778 004c 0DB0     		add	sp, sp, #52
 6779              		@ sp needed
 6780 004e 30BD     		pop	{r4, r5, pc}
 6781              		.cfi_endproc
 6782              	.LFE42:
 6783              		.size	f_chmod, .-f_chmod
 6784              		.section	.text.f_utime,"ax",%progbits
 6785              		.align	2
 6786              		.global	f_utime
 6787              		.code	16
 6788              		.thumb_func
 6789              		.type	f_utime, %function
 6790              	f_utime:
 6791              	.LFB43:
3365:.\sd/ff.c     **** 
3366:.\sd/ff.c     **** 
3367:.\sd/ff.c     **** 
3368:.\sd/ff.c     **** 
3369:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3370:.\sd/ff.c     **** /* Change Timestamp                                                      */
3371:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3372:.\sd/ff.c     **** 
3373:.\sd/ff.c     **** FRESULT f_utime (
3374:.\sd/ff.c     **** 	const TCHAR *path,	/* Pointer to the file/directory name */
3375:.\sd/ff.c     **** 	const FILINFO *fno	/* Pointer to the time stamp to be set */
3376:.\sd/ff.c     **** )
3377:.\sd/ff.c     **** {
 6792              		.loc 1 3377 0
 6793              		.cfi_startproc
 6794              	.LVL954:
 6795 0000 10B5     		push	{r4, lr}
 6796              		.cfi_def_cfa_offset 8
 6797              		.cfi_offset 4, -8
 6798              		.cfi_offset 14, -4
 6799 0002 8CB0     		sub	sp, sp, #48
 6800              		.cfi_def_cfa_offset 56
 6801 0004 0190     		str	r0, [sp, #4]
 6802 0006 0C1C     		mov	r4, r1
3378:.\sd/ff.c     **** 	FRESULT res;
3379:.\sd/ff.c     **** 	DIR dj;
3380:.\sd/ff.c     **** 	BYTE *dir;
3381:.\sd/ff.c     **** 	DEF_NAMEBUF;
3382:.\sd/ff.c     **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 188


3383:.\sd/ff.c     **** 
3384:.\sd/ff.c     **** 	res = chk_mounted(&path, &dj.fs, 1);
 6803              		.loc 1 3384 0
 6804 0008 01A8     		add	r0, sp, #4
 6805              	.LVL955:
 6806 000a 05A9     		add	r1, sp, #20
 6807              	.LVL956:
 6808 000c 0122     		mov	r2, #1
 6809 000e FFF7FEFF 		bl	chk_mounted
 6810              	.LVL957:
3385:.\sd/ff.c     **** 	if (res == FR_OK) {
 6811              		.loc 1 3385 0
 6812 0012 0028     		cmp	r0, #0
 6813 0014 1CD1     		bne	.L483
3386:.\sd/ff.c     **** 		INIT_BUF(dj);
 6814              		.loc 1 3386 0
 6815 0016 02AB     		add	r3, sp, #8
 6816 0018 0B93     		str	r3, [sp, #44]
3387:.\sd/ff.c     **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6817              		.loc 1 3387 0
 6818 001a 05A8     		add	r0, sp, #20
 6819              	.LVL958:
 6820 001c 0199     		ldr	r1, [sp, #4]
 6821 001e FFF7FEFF 		bl	follow_path
 6822              	.LVL959:
3388:.\sd/ff.c     **** 		FREE_BUF();
3389:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NS] & NS_DOT))
3390:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
3391:.\sd/ff.c     **** 		if (res == FR_OK) {
 6823              		.loc 1 3391 0
 6824 0022 0028     		cmp	r0, #0
 6825 0024 14D1     		bne	.L483
3392:.\sd/ff.c     **** 			dir = dj.dir;
 6826              		.loc 1 3392 0
 6827 0026 0A9B     		ldr	r3, [sp, #40]
 6828              	.LVL960:
3393:.\sd/ff.c     **** 			if (!dir) {					/* Root directory */
 6829              		.loc 1 3393 0
 6830 0028 002B     		cmp	r3, #0
 6831 002a 10D0     		beq	.L484
3394:.\sd/ff.c     **** 				res = FR_INVALID_NAME;
3395:.\sd/ff.c     **** 			} else {					/* File or sub-directory */
3396:.\sd/ff.c     **** 				ST_WORD(dir+DIR_WrtTime, fno->ftime);
 6832              		.loc 1 3396 0
 6833 002c A279     		ldrb	r2, [r4, #6]
 6834 002e 9A75     		strb	r2, [r3, #22]
 6835 0030 E288     		ldrh	r2, [r4, #6]
 6836 0032 120A     		lsr	r2, r2, #8
 6837 0034 DA75     		strb	r2, [r3, #23]
3397:.\sd/ff.c     **** 				ST_WORD(dir+DIR_WrtDate, fno->fdate);
 6838              		.loc 1 3397 0
 6839 0036 2279     		ldrb	r2, [r4, #4]
 6840 0038 1A76     		strb	r2, [r3, #24]
 6841 003a A288     		ldrh	r2, [r4, #4]
 6842 003c 120A     		lsr	r2, r2, #8
 6843 003e 5A76     		strb	r2, [r3, #25]
3398:.\sd/ff.c     **** 				dj.fs->wflag = 1;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 189


 6844              		.loc 1 3398 0
 6845 0040 0123     		mov	r3, #1
 6846              	.LVL961:
 6847 0042 059A     		ldr	r2, [sp, #20]
 6848 0044 1371     		strb	r3, [r2, #4]
3399:.\sd/ff.c     **** 				res = sync(dj.fs);
 6849              		.loc 1 3399 0
 6850 0046 101C     		mov	r0, r2
 6851              	.LVL962:
 6852 0048 FFF7FEFF 		bl	sync
 6853              	.LVL963:
 6854 004c 00E0     		b	.L483
 6855              	.LVL964:
 6856              	.L484:
3394:.\sd/ff.c     **** 			} else {					/* File or sub-directory */
 6857              		.loc 1 3394 0
 6858 004e 0620     		mov	r0, #6
 6859              	.LVL965:
 6860              	.L483:
3400:.\sd/ff.c     **** 			}
3401:.\sd/ff.c     **** 		}
3402:.\sd/ff.c     **** 	}
3403:.\sd/ff.c     **** 
3404:.\sd/ff.c     **** 	LEAVE_FF(dj.fs, res);
3405:.\sd/ff.c     **** }
 6861              		.loc 1 3405 0
 6862 0050 0CB0     		add	sp, sp, #48
 6863              		@ sp needed
 6864              	.LVL966:
 6865 0052 10BD     		pop	{r4, pc}
 6866              		.cfi_endproc
 6867              	.LFE43:
 6868              		.size	f_utime, .-f_utime
 6869              		.section	.text.f_rename,"ax",%progbits
 6870              		.align	2
 6871              		.global	f_rename
 6872              		.code	16
 6873              		.thumb_func
 6874              		.type	f_rename, %function
 6875              	f_rename:
 6876              	.LFB44:
3406:.\sd/ff.c     **** 
3407:.\sd/ff.c     **** 
3408:.\sd/ff.c     **** 
3409:.\sd/ff.c     **** 
3410:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3411:.\sd/ff.c     **** /* Rename File/Directory                                                 */
3412:.\sd/ff.c     **** /*-----------------------------------------------------------------------*/
3413:.\sd/ff.c     **** 
3414:.\sd/ff.c     **** FRESULT f_rename (
3415:.\sd/ff.c     **** 	const TCHAR *path_old,	/* Pointer to the old name */
3416:.\sd/ff.c     **** 	const TCHAR *path_new	/* Pointer to the new name */
3417:.\sd/ff.c     **** )
3418:.\sd/ff.c     **** {
 6877              		.loc 1 3418 0
 6878              		.cfi_startproc
 6879              	.LVL967:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 190


 6880 0000 30B5     		push	{r4, r5, lr}
 6881              		.cfi_def_cfa_offset 12
 6882              		.cfi_offset 4, -12
 6883              		.cfi_offset 5, -8
 6884              		.cfi_offset 14, -4
 6885 0002 9BB0     		sub	sp, sp, #108
 6886              		.cfi_def_cfa_offset 120
 6887 0004 0190     		str	r0, [sp, #4]
 6888 0006 0D1C     		mov	r5, r1
3419:.\sd/ff.c     **** 	FRESULT res;
3420:.\sd/ff.c     **** 	DIR djo, djn;
3421:.\sd/ff.c     **** 	BYTE buf[21], *dir;
3422:.\sd/ff.c     **** 	DWORD dw;
3423:.\sd/ff.c     **** 	DEF_NAMEBUF;
3424:.\sd/ff.c     **** 
3425:.\sd/ff.c     **** 
3426:.\sd/ff.c     **** 	res = chk_mounted(&path_old, &djo.fs, 1);
 6889              		.loc 1 3426 0
 6890 0008 01A8     		add	r0, sp, #4
 6891              	.LVL968:
 6892 000a 13A9     		add	r1, sp, #76
 6893              	.LVL969:
 6894 000c 0122     		mov	r2, #1
 6895 000e FFF7FEFF 		bl	chk_mounted
 6896              	.LVL970:
 6897 0012 041E     		sub	r4, r0, #0
 6898              	.LVL971:
3427:.\sd/ff.c     **** 	if (res == FR_OK) {
 6899              		.loc 1 3427 0
 6900 0014 00D0     		beq	.LCB7797
 6901 0016 83E0     		b	.L486	@long jump
 6902              	.LCB7797:
3428:.\sd/ff.c     **** 		djn.fs = djo.fs;
 6903              		.loc 1 3428 0
 6904 0018 139B     		ldr	r3, [sp, #76]
 6905 001a 0C93     		str	r3, [sp, #48]
3429:.\sd/ff.c     **** 		INIT_BUF(djo);
 6906              		.loc 1 3429 0
 6907 001c 03AB     		add	r3, sp, #12
 6908 001e 1993     		str	r3, [sp, #100]
3430:.\sd/ff.c     **** 		res = follow_path(&djo, path_old);		/* Check old object */
 6909              		.loc 1 3430 0
 6910 0020 13A8     		add	r0, sp, #76
 6911              	.LVL972:
 6912 0022 0199     		ldr	r1, [sp, #4]
 6913 0024 FFF7FEFF 		bl	follow_path
 6914              	.LVL973:
 6915 0028 041E     		sub	r4, r0, #0
 6916              	.LVL974:
3431:.\sd/ff.c     **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NS] & NS_DOT))
3432:.\sd/ff.c     **** 			res = FR_INVALID_NAME;
3433:.\sd/ff.c     **** #if _FS_SHARE
3434:.\sd/ff.c     **** 		if (res == FR_OK) res = chk_lock(&djo, 2);
 6917              		.loc 1 3434 0
 6918 002a 04D1     		bne	.L487
 6919              		.loc 1 3434 0 is_stmt 0 discriminator 1
 6920 002c 13A8     		add	r0, sp, #76
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 191


 6921              	.LVL975:
 6922 002e 0221     		mov	r1, #2
 6923 0030 FFF7FEFF 		bl	chk_lock
 6924              	.LVL976:
 6925 0034 041C     		mov	r4, r0
 6926              	.LVL977:
 6927              	.L487:
3435:.\sd/ff.c     **** #endif
3436:.\sd/ff.c     **** 		if (res == FR_OK) {						/* Old object is found */
 6928              		.loc 1 3436 0 is_stmt 1
 6929 0036 002C     		cmp	r4, #0
 6930 0038 72D1     		bne	.L486
3437:.\sd/ff.c     **** 			if (!djo.dir) {						/* Is root dir? */
 6931              		.loc 1 3437 0
 6932 003a 1899     		ldr	r1, [sp, #96]
 6933 003c 0029     		cmp	r1, #0
 6934 003e 6ED0     		beq	.L492
3438:.\sd/ff.c     **** 				res = FR_NO_FILE;
3439:.\sd/ff.c     **** 			} else {
3440:.\sd/ff.c     **** 				mem_cpy(buf, djo.dir+DIR_Attr, 21);		/* Save the object information except for name */
 6935              		.loc 1 3440 0
 6936 0040 0B31     		add	r1, r1, #11
 6937 0042 06A8     		add	r0, sp, #24
 6938 0044 1522     		mov	r2, #21
 6939 0046 FFF7FEFF 		bl	mem_cpy
 6940              	.LVL978:
3441:.\sd/ff.c     **** 				mem_cpy(&djn, &djo, sizeof(DIR));		/* Check new object */
 6941              		.loc 1 3441 0
 6942 004a 0CA8     		add	r0, sp, #48
 6943 004c 13A9     		add	r1, sp, #76
 6944 004e 1C22     		mov	r2, #28
 6945 0050 FFF7FEFF 		bl	mem_cpy
 6946              	.LVL979:
3442:.\sd/ff.c     **** 				res = follow_path(&djn, path_new);
 6947              		.loc 1 3442 0
 6948 0054 0CA8     		add	r0, sp, #48
 6949 0056 291C     		mov	r1, r5
 6950 0058 FFF7FEFF 		bl	follow_path
 6951              	.LVL980:
 6952 005c 041E     		sub	r4, r0, #0
 6953              	.LVL981:
3443:.\sd/ff.c     **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
 6954              		.loc 1 3443 0
 6955 005e 00D1     		bne	.L488
 6956 0060 0834     		add	r4, r4, #8
 6957              	.L488:
 6958              	.LVL982:
3444:.\sd/ff.c     **** 				if (res == FR_NO_FILE) { 				/* Is it a valid path and no name collision? */
 6959              		.loc 1 3444 0
 6960 0062 042C     		cmp	r4, #4
 6961 0064 5CD1     		bne	.L486
3445:.\sd/ff.c     **** /* Start critical section that any interruption or error can cause cross-link */
3446:.\sd/ff.c     **** 					res = dir_register(&djn);			/* Register the new entry */
 6962              		.loc 1 3446 0
 6963 0066 0CA8     		add	r0, sp, #48
 6964 0068 FFF7FEFF 		bl	dir_register
 6965              	.LVL983:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 192


 6966 006c 041E     		sub	r4, r0, #0
 6967              	.LVL984:
3447:.\sd/ff.c     **** 					if (res == FR_OK) {
 6968              		.loc 1 3447 0
 6969 006e 57D1     		bne	.L486
3448:.\sd/ff.c     **** 						dir = djn.dir;					/* Copy object information except for name */
 6970              		.loc 1 3448 0
 6971 0070 119D     		ldr	r5, [sp, #68]
 6972              	.LVL985:
3449:.\sd/ff.c     **** 						mem_cpy(dir+13, buf+2, 19);
 6973              		.loc 1 3449 0
 6974 0072 281C     		mov	r0, r5
 6975              	.LVL986:
 6976 0074 0D30     		add	r0, r0, #13
 6977 0076 1A21     		mov	r1, #26
 6978 0078 6944     		add	r1, r1, sp
 6979 007a 1322     		mov	r2, #19
 6980 007c FFF7FEFF 		bl	mem_cpy
 6981              	.LVL987:
3450:.\sd/ff.c     **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 6982              		.loc 1 3450 0
 6983 0080 06AB     		add	r3, sp, #24
 6984 0082 1A78     		ldrb	r2, [r3]
 6985 0084 2023     		mov	r3, #32
 6986 0086 1343     		orr	r3, r2
 6987 0088 EB72     		strb	r3, [r5, #11]
3451:.\sd/ff.c     **** 						djo.fs->wflag = 1;
 6988              		.loc 1 3451 0
 6989 008a 0123     		mov	r3, #1
 6990 008c 139A     		ldr	r2, [sp, #76]
 6991 008e 1371     		strb	r3, [r2, #4]
3452:.\sd/ff.c     **** 						if (djo.sclust != djn.sclust && (dir[DIR_Attr] & AM_DIR)) {		/* Update .. entry in the direct
 6992              		.loc 1 3452 0
 6993 0090 0E9B     		ldr	r3, [sp, #56]
 6994 0092 159A     		ldr	r2, [sp, #84]
 6995 0094 9A42     		cmp	r2, r3
 6996 0096 36D0     		beq	.L489
 6997              		.loc 1 3452 0 is_stmt 0 discriminator 1
 6998 0098 EB7A     		ldrb	r3, [r5, #11]
 6999 009a DB06     		lsl	r3, r3, #27
 7000 009c 33D5     		bpl	.L489
3453:.\sd/ff.c     **** 							dw = clust2sect(djn.fs, LD_CLUST(dir));
 7001              		.loc 1 3453 0 is_stmt 1
 7002 009e 0C9C     		ldr	r4, [sp, #48]
 7003              	.LVL988:
 7004 00a0 697D     		ldrb	r1, [r5, #21]
 7005 00a2 0902     		lsl	r1, r1, #8
 7006 00a4 2B7D     		ldrb	r3, [r5, #20]
 7007 00a6 1943     		orr	r1, r3
 7008 00a8 0A04     		lsl	r2, r1, #16
 7009 00aa E97E     		ldrb	r1, [r5, #27]
 7010 00ac 0902     		lsl	r1, r1, #8
 7011 00ae AB7E     		ldrb	r3, [r5, #26]
 7012 00b0 0B43     		orr	r3, r1
 7013 00b2 1A43     		orr	r2, r3
 7014 00b4 111C     		mov	r1, r2
 7015 00b6 201C     		mov	r0, r4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 193


 7016 00b8 FFF7FEFF 		bl	clust2sect
 7017              	.LVL989:
 7018 00bc 011E     		sub	r1, r0, #0
 7019              	.LVL990:
3454:.\sd/ff.c     **** 							if (!dw) {
 7020              		.loc 1 3454 0
 7021 00be 21D0     		beq	.L494
3455:.\sd/ff.c     **** 								res = FR_INT_ERR;
3456:.\sd/ff.c     **** 							} else {
3457:.\sd/ff.c     **** 								res = move_window(djn.fs, dw);
 7022              		.loc 1 3457 0
 7023 00c0 201C     		mov	r0, r4
 7024              	.LVL991:
 7025 00c2 FFF7FEFF 		bl	move_window
 7026              	.LVL992:
 7027 00c6 041E     		sub	r4, r0, #0
 7028              	.LVL993:
3458:.\sd/ff.c     **** 								dir = djn.fs->win+SZ_DIR;	/* .. entry */
 7029              		.loc 1 3458 0
 7030 00c8 0C9A     		ldr	r2, [sp, #48]
 7031              	.LVL994:
3459:.\sd/ff.c     **** 								if (res == FR_OK && dir[1] == '.') {
 7032              		.loc 1 3459 0
 7033 00ca 1CD1     		bne	.L489
 7034              		.loc 1 3459 0 is_stmt 0 discriminator 1
 7035 00cc 5123     		mov	r3, #81
 7036 00ce D35C     		ldrb	r3, [r2, r3]
 7037 00d0 2E2B     		cmp	r3, #46
 7038 00d2 18D1     		bne	.L489
3460:.\sd/ff.c     **** 									dw = (djn.fs->fs_type == FS_FAT32 && djn.sclust == djn.fs->dirbase) ? 0 : djn.sclust;
 7039              		.loc 1 3460 0 is_stmt 1
 7040 00d4 1378     		ldrb	r3, [r2]
 7041 00d6 032B     		cmp	r3, #3
 7042 00d8 03D1     		bne	.L490
 7043              		.loc 1 3460 0 is_stmt 0 discriminator 2
 7044 00da 0E9B     		ldr	r3, [sp, #56]
 7045 00dc 516A     		ldr	r1, [r2, #36]
 7046 00de 8B42     		cmp	r3, r1
 7047 00e0 01D0     		beq	.L495
 7048              	.L490:
 7049              		.loc 1 3460 0 discriminator 3
 7050 00e2 0E9B     		ldr	r3, [sp, #56]
 7051 00e4 00E0     		b	.L491
 7052              	.L495:
 7053              		.loc 1 3460 0
 7054 00e6 0023     		mov	r3, #0
 7055              	.L491:
 7056              	.LVL995:
3461:.\sd/ff.c     **** 									ST_CLUST(dir, dw);
 7057              		.loc 1 3461 0 is_stmt 1 discriminator 6
 7058 00e8 6A21     		mov	r1, #106
 7059 00ea 5354     		strb	r3, [r2, r1]
 7060 00ec 180A     		lsr	r0, r3, #8
 7061              	.LVL996:
 7062 00ee 0131     		add	r1, r1, #1
 7063 00f0 5054     		strb	r0, [r2, r1]
 7064 00f2 1B0C     		lsr	r3, r3, #16
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 194


 7065              	.LVL997:
 7066 00f4 0739     		sub	r1, r1, #7
 7067 00f6 5354     		strb	r3, [r2, r1]
 7068 00f8 1B0A     		lsr	r3, r3, #8
 7069 00fa 0131     		add	r1, r1, #1
 7070 00fc 5354     		strb	r3, [r2, r1]
3462:.\sd/ff.c     **** 									djn.fs->wflag = 1;
 7071              		.loc 1 3462 0 discriminator 6
 7072 00fe 0123     		mov	r3, #1
 7073 0100 1371     		strb	r3, [r2, #4]
 7074 0102 00E0     		b	.L489
 7075              	.LVL998:
 7076              	.L494:
3455:.\sd/ff.c     **** 							} else {
 7077              		.loc 1 3455 0
 7078 0104 0224     		mov	r4, #2
 7079              	.LVL999:
 7080              	.L489:
3463:.\sd/ff.c     **** 								}
3464:.\sd/ff.c     **** 							}
3465:.\sd/ff.c     **** 						}
3466:.\sd/ff.c     **** 						if (res == FR_OK) {
 7081              		.loc 1 3466 0
 7082 0106 002C     		cmp	r4, #0
 7083 0108 0AD1     		bne	.L486
3467:.\sd/ff.c     **** 							res = dir_remove(&djo);		/* Remove old entry */
 7084              		.loc 1 3467 0
 7085 010a 13A8     		add	r0, sp, #76
 7086 010c FFF7FEFF 		bl	dir_remove
 7087              	.LVL1000:
 7088 0110 041E     		sub	r4, r0, #0
 7089              	.LVL1001:
3468:.\sd/ff.c     **** 							if (res == FR_OK)
 7090              		.loc 1 3468 0
 7091 0112 05D1     		bne	.L486
3469:.\sd/ff.c     **** 								res = sync(djo.fs);
 7092              		.loc 1 3469 0
 7093 0114 1398     		ldr	r0, [sp, #76]
 7094              	.LVL1002:
 7095 0116 FFF7FEFF 		bl	sync
 7096              	.LVL1003:
 7097 011a 041C     		mov	r4, r0
 7098              	.LVL1004:
 7099 011c 00E0     		b	.L486
 7100              	.LVL1005:
 7101              	.L492:
3438:.\sd/ff.c     **** 			} else {
 7102              		.loc 1 3438 0
 7103 011e 0424     		mov	r4, #4
 7104              	.LVL1006:
 7105              	.L486:
3470:.\sd/ff.c     **** 						}
3471:.\sd/ff.c     **** 					}
3472:.\sd/ff.c     **** /* End critical section */
3473:.\sd/ff.c     **** 				}
3474:.\sd/ff.c     **** 			}
3475:.\sd/ff.c     **** 		}
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 195


3476:.\sd/ff.c     **** 		FREE_BUF();
3477:.\sd/ff.c     **** 	}
3478:.\sd/ff.c     **** 	LEAVE_FF(djo.fs, res);
3479:.\sd/ff.c     **** }
 7106              		.loc 1 3479 0
 7107 0120 201C     		mov	r0, r4
 7108 0122 1BB0     		add	sp, sp, #108
 7109              		@ sp needed
 7110              	.LVL1007:
 7111 0124 30BD     		pop	{r4, r5, pc}
 7112              		.cfi_endproc
 7113              	.LFE44:
 7114              		.size	f_rename, .-f_rename
 7115 0126 C046     		.section	.rodata
 7116              		.align	2
 7117              		.set	.LANCHOR1,. + 0
 7118              		.type	excvt.4520, %object
 7119              		.size	excvt.4520, 128
 7120              	excvt.4520:
 7121 0000 80       		.byte	-128
 7122 0001 81       		.byte	-127
 7123 0002 82       		.byte	-126
 7124 0003 82       		.byte	-126
 7125 0004 84       		.byte	-124
 7126 0005 85       		.byte	-123
 7127 0006 86       		.byte	-122
 7128 0007 87       		.byte	-121
 7129 0008 88       		.byte	-120
 7130 0009 89       		.byte	-119
 7131 000a 8A       		.byte	-118
 7132 000b 8B       		.byte	-117
 7133 000c 8C       		.byte	-116
 7134 000d 8D       		.byte	-115
 7135 000e 8E       		.byte	-114
 7136 000f 8F       		.byte	-113
 7137 0010 80       		.byte	-128
 7138 0011 91       		.byte	-111
 7139 0012 92       		.byte	-110
 7140 0013 93       		.byte	-109
 7141 0014 94       		.byte	-108
 7142 0015 95       		.byte	-107
 7143 0016 96       		.byte	-106
 7144 0017 97       		.byte	-105
 7145 0018 98       		.byte	-104
 7146 0019 99       		.byte	-103
 7147 001a 8A       		.byte	-118
 7148 001b 9B       		.byte	-101
 7149 001c 8C       		.byte	-116
 7150 001d 8D       		.byte	-115
 7151 001e 8E       		.byte	-114
 7152 001f 8F       		.byte	-113
 7153 0020 A0       		.byte	-96
 7154 0021 A2       		.byte	-94
 7155 0022 A2       		.byte	-94
 7156 0023 A3       		.byte	-93
 7157 0024 A4       		.byte	-92
 7158 0025 A5       		.byte	-91
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 196


 7159 0026 A6       		.byte	-90
 7160 0027 A7       		.byte	-89
 7161 0028 A8       		.byte	-88
 7162 0029 A9       		.byte	-87
 7163 002a AA       		.byte	-86
 7164 002b AB       		.byte	-85
 7165 002c AC       		.byte	-84
 7166 002d AD       		.byte	-83
 7167 002e AE       		.byte	-82
 7168 002f AF       		.byte	-81
 7169 0030 B0       		.byte	-80
 7170 0031 B1       		.byte	-79
 7171 0032 B2       		.byte	-78
 7172 0033 B2       		.byte	-78
 7173 0034 A5       		.byte	-91
 7174 0035 B5       		.byte	-75
 7175 0036 B6       		.byte	-74
 7176 0037 B7       		.byte	-73
 7177 0038 A8       		.byte	-88
 7178 0039 B9       		.byte	-71
 7179 003a AA       		.byte	-86
 7180 003b BB       		.byte	-69
 7181 003c A3       		.byte	-93
 7182 003d BD       		.byte	-67
 7183 003e BD       		.byte	-67
 7184 003f AF       		.byte	-81
 7185 0040 C0       		.byte	-64
 7186 0041 C1       		.byte	-63
 7187 0042 C2       		.byte	-62
 7188 0043 C3       		.byte	-61
 7189 0044 C4       		.byte	-60
 7190 0045 C5       		.byte	-59
 7191 0046 C6       		.byte	-58
 7192 0047 C7       		.byte	-57
 7193 0048 C8       		.byte	-56
 7194 0049 C9       		.byte	-55
 7195 004a CA       		.byte	-54
 7196 004b CB       		.byte	-53
 7197 004c CC       		.byte	-52
 7198 004d CD       		.byte	-51
 7199 004e CE       		.byte	-50
 7200 004f CF       		.byte	-49
 7201 0050 D0       		.byte	-48
 7202 0051 D1       		.byte	-47
 7203 0052 D2       		.byte	-46
 7204 0053 D3       		.byte	-45
 7205 0054 D4       		.byte	-44
 7206 0055 D5       		.byte	-43
 7207 0056 D6       		.byte	-42
 7208 0057 D7       		.byte	-41
 7209 0058 D8       		.byte	-40
 7210 0059 D9       		.byte	-39
 7211 005a DA       		.byte	-38
 7212 005b DB       		.byte	-37
 7213 005c DC       		.byte	-36
 7214 005d DD       		.byte	-35
 7215 005e DE       		.byte	-34
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 197


 7216 005f DF       		.byte	-33
 7217 0060 C0       		.byte	-64
 7218 0061 C1       		.byte	-63
 7219 0062 C2       		.byte	-62
 7220 0063 C3       		.byte	-61
 7221 0064 C4       		.byte	-60
 7222 0065 C5       		.byte	-59
 7223 0066 C6       		.byte	-58
 7224 0067 C7       		.byte	-57
 7225 0068 C8       		.byte	-56
 7226 0069 C9       		.byte	-55
 7227 006a CA       		.byte	-54
 7228 006b CB       		.byte	-53
 7229 006c CC       		.byte	-52
 7230 006d CD       		.byte	-51
 7231 006e CE       		.byte	-50
 7232 006f CF       		.byte	-49
 7233 0070 D0       		.byte	-48
 7234 0071 D1       		.byte	-47
 7235 0072 D2       		.byte	-46
 7236 0073 D3       		.byte	-45
 7237 0074 D4       		.byte	-44
 7238 0075 D5       		.byte	-43
 7239 0076 D6       		.byte	-42
 7240 0077 D7       		.byte	-41
 7241 0078 D8       		.byte	-40
 7242 0079 D9       		.byte	-39
 7243 007a DA       		.byte	-38
 7244 007b DB       		.byte	-37
 7245 007c DC       		.byte	-36
 7246 007d DD       		.byte	-35
 7247 007e DE       		.byte	-34
 7248 007f DF       		.byte	-33
 7249              		.section	.rodata.str1.4,"aMS",%progbits,1
 7250              		.align	2
 7251              	.LC6:
 7252 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 7252      3A3B3C3D 
 7252      3E3F5B5D 
 7252      7C7F00
 7253 000f 00       		.bss
 7254              		.align	2
 7255              		.set	.LANCHOR0,. + 0
 7256              		.type	Files, %object
 7257              		.size	Files, 36
 7258              	Files:
 7259 0000 00000000 		.space	36
 7259      00000000 
 7259      00000000 
 7259      00000000 
 7259      00000000 
 7260              		.type	FatFs, %object
 7261              		.size	FatFs, 4
 7262              	FatFs:
 7263 0024 00000000 		.space	4
 7264              		.type	Fsid, %object
 7265              		.size	Fsid, 2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 198


 7266              	Fsid:
 7267 0028 0000     		.space	2
 7268 002a 0000     		.text
 7269              	.Letext0:
 7270              		.file 2 "c:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 7271              		.file 3 "c:\\program files\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm
 7272              		.file 4 "./sd/integer.h"
 7273              		.file 5 "./sd/ff.h"
 7274              		.file 6 "./sd/diskio.h"
 7275              		.section	.debug_info,"",%progbits
 7276              	.Ldebug_info0:
 7277 0000 8C250000 		.4byte	0x258c
 7278 0004 0400     		.2byte	0x4
 7279 0006 00000000 		.4byte	.Ldebug_abbrev0
 7280 000a 04       		.byte	0x4
 7281 000b 01       		.uleb128 0x1
 7282 000c C2030000 		.4byte	.LASF167
 7283 0010 01       		.byte	0x1
 7284 0011 C4050000 		.4byte	.LASF168
 7285 0015 40050000 		.4byte	.LASF169
 7286 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 7287 001d 00000000 		.4byte	0
 7288 0021 00000000 		.4byte	.Ldebug_line0
 7289 0025 02       		.uleb128 0x2
 7290 0026 01       		.byte	0x1
 7291 0027 06       		.byte	0x6
 7292 0028 18010000 		.4byte	.LASF0
 7293 002c 03       		.uleb128 0x3
 7294 002d 58000000 		.4byte	.LASF3
 7295 0031 02       		.byte	0x2
 7296 0032 1D       		.byte	0x1d
 7297 0033 37000000 		.4byte	0x37
 7298 0037 02       		.uleb128 0x2
 7299 0038 01       		.byte	0x1
 7300 0039 08       		.byte	0x8
 7301 003a 9C040000 		.4byte	.LASF1
 7302 003e 02       		.uleb128 0x2
 7303 003f 02       		.byte	0x2
 7304 0040 05       		.byte	0x5
 7305 0041 C1040000 		.4byte	.LASF2
 7306 0045 03       		.uleb128 0x3
 7307 0046 91050000 		.4byte	.LASF4
 7308 004a 02       		.byte	0x2
 7309 004b 2B       		.byte	0x2b
 7310 004c 50000000 		.4byte	0x50
 7311 0050 02       		.uleb128 0x2
 7312 0051 02       		.byte	0x2
 7313 0052 07       		.byte	0x7
 7314 0053 7F020000 		.4byte	.LASF5
 7315 0057 02       		.uleb128 0x2
 7316 0058 04       		.byte	0x4
 7317 0059 05       		.byte	0x5
 7318 005a 58010000 		.4byte	.LASF6
 7319 005e 03       		.uleb128 0x3
 7320 005f F6010000 		.4byte	.LASF7
 7321 0063 02       		.byte	0x2
 7322 0064 41       		.byte	0x41
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 199


 7323 0065 69000000 		.4byte	0x69
 7324 0069 02       		.uleb128 0x2
 7325 006a 04       		.byte	0x4
 7326 006b 07       		.byte	0x7
 7327 006c 4C020000 		.4byte	.LASF8
 7328 0070 02       		.uleb128 0x2
 7329 0071 08       		.byte	0x8
 7330 0072 05       		.byte	0x5
 7331 0073 0A010000 		.4byte	.LASF9
 7332 0077 02       		.uleb128 0x2
 7333 0078 08       		.byte	0x8
 7334 0079 07       		.byte	0x7
 7335 007a 90000000 		.4byte	.LASF10
 7336 007e 04       		.uleb128 0x4
 7337 007f 04       		.byte	0x4
 7338 0080 05       		.byte	0x5
 7339 0081 696E7400 		.ascii	"int\000"
 7340 0085 02       		.uleb128 0x2
 7341 0086 04       		.byte	0x4
 7342 0087 07       		.byte	0x7
 7343 0088 34020000 		.4byte	.LASF11
 7344 008c 03       		.uleb128 0x3
 7345 008d 4D060000 		.4byte	.LASF12
 7346 0091 03       		.byte	0x3
 7347 0092 15       		.byte	0x15
 7348 0093 2C000000 		.4byte	0x2c
 7349 0097 03       		.uleb128 0x3
 7350 0098 9E010000 		.4byte	.LASF13
 7351 009c 03       		.byte	0x3
 7352 009d 21       		.byte	0x21
 7353 009e 45000000 		.4byte	0x45
 7354 00a2 03       		.uleb128 0x3
 7355 00a3 37050000 		.4byte	.LASF14
 7356 00a7 03       		.byte	0x3
 7357 00a8 2D       		.byte	0x2d
 7358 00a9 5E000000 		.4byte	0x5e
 7359 00ad 03       		.uleb128 0x3
 7360 00ae 41020000 		.4byte	.LASF15
 7361 00b2 04       		.byte	0x4
 7362 00b3 0A       		.byte	0xa
 7363 00b4 A2000000 		.4byte	0xa2
 7364 00b8 03       		.uleb128 0x3
 7365 00b9 1F020000 		.4byte	.LASF16
 7366 00bd 04       		.byte	0x4
 7367 00be 0D       		.byte	0xd
 7368 00bf 8C000000 		.4byte	0x8c
 7369 00c3 03       		.uleb128 0x3
 7370 00c4 8D030000 		.4byte	.LASF17
 7371 00c8 04       		.byte	0x4
 7372 00c9 10       		.byte	0x10
 7373 00ca 97000000 		.4byte	0x97
 7374 00ce 03       		.uleb128 0x3
 7375 00cf D8010000 		.4byte	.LASF18
 7376 00d3 04       		.byte	0x4
 7377 00d4 14       		.byte	0x14
 7378 00d5 A2000000 		.4byte	0xa2
 7379 00d9 03       		.uleb128 0x3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 200


 7380 00da BC030000 		.4byte	.LASF19
 7381 00de 05       		.byte	0x5
 7382 00df 42       		.byte	0x42
 7383 00e0 E4000000 		.4byte	0xe4
 7384 00e4 02       		.uleb128 0x2
 7385 00e5 01       		.byte	0x1
 7386 00e6 08       		.byte	0x8
 7387 00e7 7B050000 		.4byte	.LASF20
 7388 00eb 05       		.uleb128 0x5
 7389 00ec 3002     		.2byte	0x230
 7390 00ee 05       		.byte	0x5
 7391 00ef 4D       		.byte	0x4d
 7392 00f0 CC010000 		.4byte	0x1cc
 7393 00f4 06       		.uleb128 0x6
 7394 00f5 42000000 		.4byte	.LASF21
 7395 00f9 05       		.byte	0x5
 7396 00fa 4E       		.byte	0x4e
 7397 00fb B8000000 		.4byte	0xb8
 7398 00ff 00       		.byte	0
 7399 0100 07       		.uleb128 0x7
 7400 0101 64727600 		.ascii	"drv\000"
 7401 0105 05       		.byte	0x5
 7402 0106 4F       		.byte	0x4f
 7403 0107 B8000000 		.4byte	0xb8
 7404 010b 01       		.byte	0x1
 7405 010c 06       		.uleb128 0x6
 7406 010d 01020000 		.4byte	.LASF22
 7407 0111 05       		.byte	0x5
 7408 0112 50       		.byte	0x50
 7409 0113 B8000000 		.4byte	0xb8
 7410 0117 02       		.byte	0x2
 7411 0118 06       		.uleb128 0x6
 7412 0119 77010000 		.4byte	.LASF23
 7413 011d 05       		.byte	0x5
 7414 011e 51       		.byte	0x51
 7415 011f B8000000 		.4byte	0xb8
 7416 0123 03       		.byte	0x3
 7417 0124 06       		.uleb128 0x6
 7418 0125 31050000 		.4byte	.LASF24
 7419 0129 05       		.byte	0x5
 7420 012a 52       		.byte	0x52
 7421 012b B8000000 		.4byte	0xb8
 7422 012f 04       		.byte	0x4
 7423 0130 06       		.uleb128 0x6
 7424 0131 04060000 		.4byte	.LASF25
 7425 0135 05       		.byte	0x5
 7426 0136 53       		.byte	0x53
 7427 0137 B8000000 		.4byte	0xb8
 7428 013b 05       		.byte	0x5
 7429 013c 07       		.uleb128 0x7
 7430 013d 696400   		.ascii	"id\000"
 7431 0140 05       		.byte	0x5
 7432 0141 54       		.byte	0x54
 7433 0142 C3000000 		.4byte	0xc3
 7434 0146 06       		.byte	0x6
 7435 0147 06       		.uleb128 0x6
 7436 0148 74000000 		.4byte	.LASF26
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 201


 7437 014c 05       		.byte	0x5
 7438 014d 55       		.byte	0x55
 7439 014e C3000000 		.4byte	0xc3
 7440 0152 08       		.byte	0x8
 7441 0153 06       		.uleb128 0x6
 7442 0154 E5000000 		.4byte	.LASF27
 7443 0158 05       		.byte	0x5
 7444 0159 5D       		.byte	0x5d
 7445 015a CE000000 		.4byte	0xce
 7446 015e 0C       		.byte	0xc
 7447 015f 06       		.uleb128 0x6
 7448 0160 A0030000 		.4byte	.LASF28
 7449 0164 05       		.byte	0x5
 7450 0165 5E       		.byte	0x5e
 7451 0166 CE000000 		.4byte	0xce
 7452 016a 10       		.byte	0x10
 7453 016b 06       		.uleb128 0x6
 7454 016c 5F060000 		.4byte	.LASF29
 7455 0170 05       		.byte	0x5
 7456 0171 5F       		.byte	0x5f
 7457 0172 CE000000 		.4byte	0xce
 7458 0176 14       		.byte	0x14
 7459 0177 06       		.uleb128 0x6
 7460 0178 4F010000 		.4byte	.LASF30
 7461 017c 05       		.byte	0x5
 7462 017d 64       		.byte	0x64
 7463 017e CE000000 		.4byte	0xce
 7464 0182 18       		.byte	0x18
 7465 0183 06       		.uleb128 0x6
 7466 0184 49010000 		.4byte	.LASF31
 7467 0188 05       		.byte	0x5
 7468 0189 65       		.byte	0x65
 7469 018a CE000000 		.4byte	0xce
 7470 018e 1C       		.byte	0x1c
 7471 018f 06       		.uleb128 0x6
 7472 0190 D0010000 		.4byte	.LASF32
 7473 0194 05       		.byte	0x5
 7474 0195 66       		.byte	0x66
 7475 0196 CE000000 		.4byte	0xce
 7476 019a 20       		.byte	0x20
 7477 019b 06       		.uleb128 0x6
 7478 019c 02010000 		.4byte	.LASF33
 7479 01a0 05       		.byte	0x5
 7480 01a1 67       		.byte	0x67
 7481 01a2 CE000000 		.4byte	0xce
 7482 01a6 24       		.byte	0x24
 7483 01a7 06       		.uleb128 0x6
 7484 01a8 92020000 		.4byte	.LASF34
 7485 01ac 05       		.byte	0x5
 7486 01ad 68       		.byte	0x68
 7487 01ae CE000000 		.4byte	0xce
 7488 01b2 28       		.byte	0x28
 7489 01b3 06       		.uleb128 0x6
 7490 01b4 C8020000 		.4byte	.LASF35
 7491 01b8 05       		.byte	0x5
 7492 01b9 69       		.byte	0x69
 7493 01ba CE000000 		.4byte	0xce
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 202


 7494 01be 2C       		.byte	0x2c
 7495 01bf 07       		.uleb128 0x7
 7496 01c0 77696E00 		.ascii	"win\000"
 7497 01c4 05       		.byte	0x5
 7498 01c5 6A       		.byte	0x6a
 7499 01c6 CC010000 		.4byte	0x1cc
 7500 01ca 30       		.byte	0x30
 7501 01cb 00       		.byte	0
 7502 01cc 08       		.uleb128 0x8
 7503 01cd B8000000 		.4byte	0xb8
 7504 01d1 DD010000 		.4byte	0x1dd
 7505 01d5 09       		.uleb128 0x9
 7506 01d6 DD010000 		.4byte	0x1dd
 7507 01da FF01     		.2byte	0x1ff
 7508 01dc 00       		.byte	0
 7509 01dd 02       		.uleb128 0x2
 7510 01de 04       		.byte	0x4
 7511 01df 07       		.byte	0x7
 7512 01e0 5A030000 		.4byte	.LASF36
 7513 01e4 03       		.uleb128 0x3
 7514 01e5 19030000 		.4byte	.LASF37
 7515 01e9 05       		.byte	0x5
 7516 01ea 6B       		.byte	0x6b
 7517 01eb EB000000 		.4byte	0xeb
 7518 01ef 0A       		.uleb128 0xa
 7519 01f0 28       		.byte	0x28
 7520 01f1 05       		.byte	0x5
 7521 01f2 71       		.byte	0x71
 7522 01f3 86020000 		.4byte	0x286
 7523 01f7 07       		.uleb128 0x7
 7524 01f8 667300   		.ascii	"fs\000"
 7525 01fb 05       		.byte	0x5
 7526 01fc 72       		.byte	0x72
 7527 01fd 86020000 		.4byte	0x286
 7528 0201 00       		.byte	0
 7529 0202 07       		.uleb128 0x7
 7530 0203 696400   		.ascii	"id\000"
 7531 0206 05       		.byte	0x5
 7532 0207 73       		.byte	0x73
 7533 0208 C3000000 		.4byte	0xc3
 7534 020c 04       		.byte	0x4
 7535 020d 06       		.uleb128 0x6
 7536 020e CB040000 		.4byte	.LASF38
 7537 0212 05       		.byte	0x5
 7538 0213 74       		.byte	0x74
 7539 0214 B8000000 		.4byte	0xb8
 7540 0218 06       		.byte	0x6
 7541 0219 06       		.uleb128 0x6
 7542 021a 1C060000 		.4byte	.LASF39
 7543 021e 05       		.byte	0x5
 7544 021f 75       		.byte	0x75
 7545 0220 B8000000 		.4byte	0xb8
 7546 0224 07       		.byte	0x7
 7547 0225 06       		.uleb128 0x6
 7548 0226 39030000 		.4byte	.LASF40
 7549 022a 05       		.byte	0x5
 7550 022b 76       		.byte	0x76
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 203


 7551 022c CE000000 		.4byte	0xce
 7552 0230 08       		.byte	0x8
 7553 0231 06       		.uleb128 0x6
 7554 0232 49010000 		.4byte	.LASF31
 7555 0236 05       		.byte	0x5
 7556 0237 77       		.byte	0x77
 7557 0238 CE000000 		.4byte	0xce
 7558 023c 0C       		.byte	0xc
 7559 023d 06       		.uleb128 0x6
 7560 023e 92030000 		.4byte	.LASF41
 7561 0242 05       		.byte	0x5
 7562 0243 78       		.byte	0x78
 7563 0244 CE000000 		.4byte	0xce
 7564 0248 10       		.byte	0x10
 7565 0249 06       		.uleb128 0x6
 7566 024a BC060000 		.4byte	.LASF42
 7567 024e 05       		.byte	0x5
 7568 024f 79       		.byte	0x79
 7569 0250 CE000000 		.4byte	0xce
 7570 0254 14       		.byte	0x14
 7571 0255 06       		.uleb128 0x6
 7572 0256 96040000 		.4byte	.LASF43
 7573 025a 05       		.byte	0x5
 7574 025b 7A       		.byte	0x7a
 7575 025c CE000000 		.4byte	0xce
 7576 0260 18       		.byte	0x18
 7577 0261 06       		.uleb128 0x6
 7578 0262 F0000000 		.4byte	.LASF44
 7579 0266 05       		.byte	0x5
 7580 0267 7C       		.byte	0x7c
 7581 0268 CE000000 		.4byte	0xce
 7582 026c 1C       		.byte	0x1c
 7583 026d 06       		.uleb128 0x6
 7584 026e 24020000 		.4byte	.LASF45
 7585 0272 05       		.byte	0x5
 7586 0273 7D       		.byte	0x7d
 7587 0274 8C020000 		.4byte	0x28c
 7588 0278 20       		.byte	0x20
 7589 0279 06       		.uleb128 0x6
 7590 027a 7E000000 		.4byte	.LASF46
 7591 027e 05       		.byte	0x5
 7592 027f 83       		.byte	0x83
 7593 0280 AD000000 		.4byte	0xad
 7594 0284 24       		.byte	0x24
 7595 0285 00       		.byte	0
 7596 0286 0B       		.uleb128 0xb
 7597 0287 04       		.byte	0x4
 7598 0288 E4010000 		.4byte	0x1e4
 7599 028c 0B       		.uleb128 0xb
 7600 028d 04       		.byte	0x4
 7601 028e B8000000 		.4byte	0xb8
 7602 0292 0C       		.uleb128 0xc
 7603 0293 46494C00 		.ascii	"FIL\000"
 7604 0297 05       		.byte	0x5
 7605 0298 88       		.byte	0x88
 7606 0299 EF010000 		.4byte	0x1ef
 7607 029d 0A       		.uleb128 0xa
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 204


 7608 029e 1C       		.byte	0x1c
 7609 029f 05       		.byte	0x5
 7610 02a0 8E       		.byte	0x8e
 7611 02a1 03030000 		.4byte	0x303
 7612 02a5 07       		.uleb128 0x7
 7613 02a6 667300   		.ascii	"fs\000"
 7614 02a9 05       		.byte	0x5
 7615 02aa 8F       		.byte	0x8f
 7616 02ab 86020000 		.4byte	0x286
 7617 02af 00       		.byte	0
 7618 02b0 07       		.uleb128 0x7
 7619 02b1 696400   		.ascii	"id\000"
 7620 02b4 05       		.byte	0x5
 7621 02b5 90       		.byte	0x90
 7622 02b6 C3000000 		.4byte	0xc3
 7623 02ba 04       		.byte	0x4
 7624 02bb 06       		.uleb128 0x6
 7625 02bc A2050000 		.4byte	.LASF47
 7626 02c0 05       		.byte	0x5
 7627 02c1 91       		.byte	0x91
 7628 02c2 C3000000 		.4byte	0xc3
 7629 02c6 06       		.byte	0x6
 7630 02c7 06       		.uleb128 0x6
 7631 02c8 92030000 		.4byte	.LASF41
 7632 02cc 05       		.byte	0x5
 7633 02cd 92       		.byte	0x92
 7634 02ce CE000000 		.4byte	0xce
 7635 02d2 08       		.byte	0x8
 7636 02d3 06       		.uleb128 0x6
 7637 02d4 BC060000 		.4byte	.LASF42
 7638 02d8 05       		.byte	0x5
 7639 02d9 93       		.byte	0x93
 7640 02da CE000000 		.4byte	0xce
 7641 02de 0C       		.byte	0xc
 7642 02df 06       		.uleb128 0x6
 7643 02e0 C1000000 		.4byte	.LASF48
 7644 02e4 05       		.byte	0x5
 7645 02e5 94       		.byte	0x94
 7646 02e6 CE000000 		.4byte	0xce
 7647 02ea 10       		.byte	0x10
 7648 02eb 07       		.uleb128 0x7
 7649 02ec 64697200 		.ascii	"dir\000"
 7650 02f0 05       		.byte	0x5
 7651 02f1 95       		.byte	0x95
 7652 02f2 8C020000 		.4byte	0x28c
 7653 02f6 14       		.byte	0x14
 7654 02f7 07       		.uleb128 0x7
 7655 02f8 666E00   		.ascii	"fn\000"
 7656 02fb 05       		.byte	0x5
 7657 02fc 96       		.byte	0x96
 7658 02fd 8C020000 		.4byte	0x28c
 7659 0301 18       		.byte	0x18
 7660 0302 00       		.byte	0
 7661 0303 0C       		.uleb128 0xc
 7662 0304 44495200 		.ascii	"DIR\000"
 7663 0308 05       		.byte	0x5
 7664 0309 9B       		.byte	0x9b
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 205


 7665 030a 9D020000 		.4byte	0x29d
 7666 030e 0A       		.uleb128 0xa
 7667 030f 18       		.byte	0x18
 7668 0310 05       		.byte	0x5
 7669 0311 A1       		.byte	0xa1
 7670 0312 53030000 		.4byte	0x353
 7671 0316 06       		.uleb128 0x6
 7672 0317 49010000 		.4byte	.LASF31
 7673 031b 05       		.byte	0x5
 7674 031c A2       		.byte	0xa2
 7675 031d CE000000 		.4byte	0xce
 7676 0321 00       		.byte	0
 7677 0322 06       		.uleb128 0x6
 7678 0323 27030000 		.4byte	.LASF49
 7679 0327 05       		.byte	0x5
 7680 0328 A3       		.byte	0xa3
 7681 0329 C3000000 		.4byte	0xc3
 7682 032d 04       		.byte	0x4
 7683 032e 06       		.uleb128 0x6
 7684 032f 46020000 		.4byte	.LASF50
 7685 0333 05       		.byte	0x5
 7686 0334 A4       		.byte	0xa4
 7687 0335 C3000000 		.4byte	0xc3
 7688 0339 06       		.byte	0x6
 7689 033a 06       		.uleb128 0x6
 7690 033b 21060000 		.4byte	.LASF51
 7691 033f 05       		.byte	0x5
 7692 0340 A5       		.byte	0xa5
 7693 0341 B8000000 		.4byte	0xb8
 7694 0345 08       		.byte	0x8
 7695 0346 06       		.uleb128 0x6
 7696 0347 EF020000 		.4byte	.LASF52
 7697 034b 05       		.byte	0x5
 7698 034c A6       		.byte	0xa6
 7699 034d 53030000 		.4byte	0x353
 7700 0351 09       		.byte	0x9
 7701 0352 00       		.byte	0
 7702 0353 08       		.uleb128 0x8
 7703 0354 D9000000 		.4byte	0xd9
 7704 0358 63030000 		.4byte	0x363
 7705 035c 0D       		.uleb128 0xd
 7706 035d DD010000 		.4byte	0x1dd
 7707 0361 0C       		.byte	0xc
 7708 0362 00       		.byte	0
 7709 0363 03       		.uleb128 0x3
 7710 0364 45060000 		.4byte	.LASF53
 7711 0368 05       		.byte	0x5
 7712 0369 AB       		.byte	0xab
 7713 036a 0E030000 		.4byte	0x30e
 7714 036e 0E       		.uleb128 0xe
 7715 036f 01       		.byte	0x1
 7716 0370 05       		.byte	0x5
 7717 0371 B1       		.byte	0xb1
 7718 0372 EF030000 		.4byte	0x3ef
 7719 0376 0F       		.uleb128 0xf
 7720 0377 9C050000 		.4byte	.LASF54
 7721 037b 00       		.sleb128 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 206


 7722 037c 0F       		.uleb128 0xf
 7723 037d BC020000 		.4byte	.LASF55
 7724 0381 01       		.sleb128 1
 7725 0382 0F       		.uleb128 0xf
 7726 0383 A9020000 		.4byte	.LASF56
 7727 0387 02       		.sleb128 2
 7728 0388 0F       		.uleb128 0xf
 7729 0389 00000000 		.4byte	.LASF57
 7730 038d 03       		.sleb128 3
 7731 038e 0F       		.uleb128 0xf
 7732 038f AB030000 		.4byte	.LASF58
 7733 0393 04       		.sleb128 4
 7734 0394 0F       		.uleb128 0xf
 7735 0395 9A060000 		.4byte	.LASF59
 7736 0399 05       		.sleb128 5
 7737 039a 0F       		.uleb128 0xf
 7738 039b DD050000 		.4byte	.LASF60
 7739 039f 06       		.sleb128 6
 7740 03a0 0F       		.uleb128 0xf
 7741 03a1 ED040000 		.4byte	.LASF61
 7742 03a5 07       		.sleb128 7
 7743 03a6 0F       		.uleb128 0xf
 7744 03a7 C7010000 		.4byte	.LASF62
 7745 03ab 08       		.sleb128 8
 7746 03ac 0F       		.uleb128 0xf
 7747 03ad CC000000 		.4byte	.LASF63
 7748 03b1 09       		.sleb128 9
 7749 03b2 0F       		.uleb128 0xf
 7750 03b3 FB020000 		.4byte	.LASF64
 7751 03b7 0A       		.sleb128 10
 7752 03b8 0F       		.uleb128 0xf
 7753 03b9 DC040000 		.4byte	.LASF65
 7754 03bd 0B       		.sleb128 11
 7755 03be 0F       		.uleb128 0xf
 7756 03bf 50040000 		.4byte	.LASF66
 7757 03c3 0C       		.sleb128 12
 7758 03c4 0F       		.uleb128 0xf
 7759 03c5 8D010000 		.4byte	.LASF67
 7760 03c9 0D       		.sleb128 13
 7761 03ca 0F       		.uleb128 0xf
 7762 03cb 0D050000 		.4byte	.LASF68
 7763 03cf 0E       		.sleb128 14
 7764 03d0 0F       		.uleb128 0xf
 7765 03d1 82030000 		.4byte	.LASF69
 7766 03d5 0F       		.sleb128 15
 7767 03d6 0F       		.uleb128 0xf
 7768 03d7 27050000 		.4byte	.LASF70
 7769 03db 10       		.sleb128 16
 7770 03dc 0F       		.uleb128 0xf
 7771 03dd B4010000 		.4byte	.LASF71
 7772 03e1 11       		.sleb128 17
 7773 03e2 0F       		.uleb128 0xf
 7774 03e3 23000000 		.4byte	.LASF72
 7775 03e7 12       		.sleb128 18
 7776 03e8 0F       		.uleb128 0xf
 7777 03e9 34010000 		.4byte	.LASF73
 7778 03ed 13       		.sleb128 19
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 207


 7779 03ee 00       		.byte	0
 7780 03ef 03       		.uleb128 0x3
 7781 03f0 6F060000 		.4byte	.LASF74
 7782 03f4 05       		.byte	0x5
 7783 03f5 C6       		.byte	0xc6
 7784 03f6 6E030000 		.4byte	0x36e
 7785 03fa 03       		.uleb128 0x3
 7786 03fb B5050000 		.4byte	.LASF75
 7787 03ff 06       		.byte	0x6
 7788 0400 10       		.byte	0x10
 7789 0401 B8000000 		.4byte	0xb8
 7790 0405 0E       		.uleb128 0xe
 7791 0406 01       		.byte	0x1
 7792 0407 06       		.byte	0x6
 7793 0408 13       		.byte	0x13
 7794 0409 2C040000 		.4byte	0x42c
 7795 040d 0F       		.uleb128 0xf
 7796 040e 99030000 		.4byte	.LASF76
 7797 0412 00       		.sleb128 0
 7798 0413 0F       		.uleb128 0xf
 7799 0414 77060000 		.4byte	.LASF77
 7800 0418 01       		.sleb128 1
 7801 0419 0F       		.uleb128 0xf
 7802 041a 0D000000 		.4byte	.LASF78
 7803 041e 02       		.sleb128 2
 7804 041f 0F       		.uleb128 0xf
 7805 0420 69000000 		.4byte	.LASF79
 7806 0424 03       		.sleb128 3
 7807 0425 0F       		.uleb128 0xf
 7808 0426 6C010000 		.4byte	.LASF80
 7809 042a 04       		.sleb128 4
 7810 042b 00       		.byte	0
 7811 042c 03       		.uleb128 0x3
 7812 042d 6B040000 		.4byte	.LASF81
 7813 0431 06       		.byte	0x6
 7814 0432 19       		.byte	0x19
 7815 0433 05040000 		.4byte	0x405
 7816 0437 0A       		.uleb128 0xa
 7817 0438 0C       		.byte	0xc
 7818 0439 01       		.byte	0x1
 7819 043a 8D       		.byte	0x8d
 7820 043b 6F040000 		.4byte	0x46f
 7821 043f 07       		.uleb128 0x7
 7822 0440 667300   		.ascii	"fs\000"
 7823 0443 01       		.byte	0x1
 7824 0444 8E       		.byte	0x8e
 7825 0445 86020000 		.4byte	0x286
 7826 0449 00       		.byte	0
 7827 044a 07       		.uleb128 0x7
 7828 044b 636C7500 		.ascii	"clu\000"
 7829 044f 01       		.byte	0x1
 7830 0450 8F       		.byte	0x8f
 7831 0451 CE000000 		.4byte	0xce
 7832 0455 04       		.byte	0x4
 7833 0456 07       		.uleb128 0x7
 7834 0457 69647800 		.ascii	"idx\000"
 7835 045b 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 208


 7836 045c 90       		.byte	0x90
 7837 045d C3000000 		.4byte	0xc3
 7838 0461 08       		.byte	0x8
 7839 0462 07       		.uleb128 0x7
 7840 0463 63747200 		.ascii	"ctr\000"
 7841 0467 01       		.byte	0x1
 7842 0468 91       		.byte	0x91
 7843 0469 C3000000 		.4byte	0xc3
 7844 046d 0A       		.byte	0xa
 7845 046e 00       		.byte	0
 7846 046f 03       		.uleb128 0x3
 7847 0470 17020000 		.4byte	.LASF82
 7848 0474 01       		.byte	0x1
 7849 0475 92       		.byte	0x92
 7850 0476 37040000 		.4byte	0x437
 7851 047a 10       		.uleb128 0x10
 7852 047b 0D060000 		.4byte	.LASF83
 7853 047f 01       		.byte	0x1
 7854 0480 1102     		.2byte	0x211
 7855 0482 00000000 		.4byte	.LFB0
 7856 0486 14000000 		.4byte	.LFE0-.LFB0
 7857 048a 01       		.uleb128 0x1
 7858 048b 9C       		.byte	0x9c
 7859 048c DD040000 		.4byte	0x4dd
 7860 0490 11       		.uleb128 0x11
 7861 0491 64737400 		.ascii	"dst\000"
 7862 0495 01       		.byte	0x1
 7863 0496 1102     		.2byte	0x211
 7864 0498 DD040000 		.4byte	0x4dd
 7865 049c 00000000 		.4byte	.LLST0
 7866 04a0 11       		.uleb128 0x11
 7867 04a1 73726300 		.ascii	"src\000"
 7868 04a5 01       		.byte	0x1
 7869 04a6 1102     		.2byte	0x211
 7870 04a8 DF040000 		.4byte	0x4df
 7871 04ac 21000000 		.4byte	.LLST1
 7872 04b0 11       		.uleb128 0x11
 7873 04b1 636E7400 		.ascii	"cnt\000"
 7874 04b5 01       		.byte	0x1
 7875 04b6 1102     		.2byte	0x211
 7876 04b8 AD000000 		.4byte	0xad
 7877 04bc 42000000 		.4byte	.LLST2
 7878 04c0 12       		.uleb128 0x12
 7879 04c1 6400     		.ascii	"d\000"
 7880 04c3 01       		.byte	0x1
 7881 04c4 1202     		.2byte	0x212
 7882 04c6 8C020000 		.4byte	0x28c
 7883 04ca 76000000 		.4byte	.LLST3
 7884 04ce 12       		.uleb128 0x12
 7885 04cf 7300     		.ascii	"s\000"
 7886 04d1 01       		.byte	0x1
 7887 04d2 1302     		.2byte	0x213
 7888 04d4 E6040000 		.4byte	0x4e6
 7889 04d8 A1000000 		.4byte	.LLST4
 7890 04dc 00       		.byte	0
 7891 04dd 13       		.uleb128 0x13
 7892 04de 04       		.byte	0x4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 209


 7893 04df 0B       		.uleb128 0xb
 7894 04e0 04       		.byte	0x4
 7895 04e1 E5040000 		.4byte	0x4e5
 7896 04e5 14       		.uleb128 0x14
 7897 04e6 0B       		.uleb128 0xb
 7898 04e7 04       		.byte	0x4
 7899 04e8 EC040000 		.4byte	0x4ec
 7900 04ec 15       		.uleb128 0x15
 7901 04ed B8000000 		.4byte	0xb8
 7902 04f1 10       		.uleb128 0x10
 7903 04f2 52030000 		.4byte	.LASF84
 7904 04f6 01       		.byte	0x1
 7905 04f7 2202     		.2byte	0x222
 7906 04f9 00000000 		.4byte	.LFB1
 7907 04fd 10000000 		.4byte	.LFE1-.LFB1
 7908 0501 01       		.uleb128 0x1
 7909 0502 9C       		.byte	0x9c
 7910 0503 44050000 		.4byte	0x544
 7911 0507 11       		.uleb128 0x11
 7912 0508 64737400 		.ascii	"dst\000"
 7913 050c 01       		.byte	0x1
 7914 050d 2202     		.2byte	0x222
 7915 050f DD040000 		.4byte	0x4dd
 7916 0513 CC000000 		.4byte	.LLST5
 7917 0517 16       		.uleb128 0x16
 7918 0518 76616C00 		.ascii	"val\000"
 7919 051c 01       		.byte	0x1
 7920 051d 2202     		.2byte	0x222
 7921 051f 7E000000 		.4byte	0x7e
 7922 0523 01       		.uleb128 0x1
 7923 0524 51       		.byte	0x51
 7924 0525 11       		.uleb128 0x11
 7925 0526 636E7400 		.ascii	"cnt\000"
 7926 052a 01       		.byte	0x1
 7927 052b 2202     		.2byte	0x222
 7928 052d AD000000 		.4byte	0xad
 7929 0531 ED000000 		.4byte	.LLST6
 7930 0535 12       		.uleb128 0x12
 7931 0536 6400     		.ascii	"d\000"
 7932 0538 01       		.byte	0x1
 7933 0539 2302     		.2byte	0x223
 7934 053b 8C020000 		.4byte	0x28c
 7935 053f 21010000 		.4byte	.LLST7
 7936 0543 00       		.byte	0
 7937 0544 17       		.uleb128 0x17
 7938 0545 D0020000 		.4byte	.LASF85
 7939 0549 01       		.byte	0x1
 7940 054a 2B02     		.2byte	0x22b
 7941 054c 7E000000 		.4byte	0x7e
 7942 0550 00000000 		.4byte	.LFB2
 7943 0554 24000000 		.4byte	.LFE2-.LFB2
 7944 0558 01       		.uleb128 0x1
 7945 0559 9C       		.byte	0x9c
 7946 055a B9050000 		.4byte	0x5b9
 7947 055e 11       		.uleb128 0x11
 7948 055f 64737400 		.ascii	"dst\000"
 7949 0563 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 210


 7950 0564 2B02     		.2byte	0x22b
 7951 0566 DF040000 		.4byte	0x4df
 7952 056a 4C010000 		.4byte	.LLST8
 7953 056e 11       		.uleb128 0x11
 7954 056f 73726300 		.ascii	"src\000"
 7955 0573 01       		.byte	0x1
 7956 0574 2B02     		.2byte	0x22b
 7957 0576 DF040000 		.4byte	0x4df
 7958 057a 78010000 		.4byte	.LLST9
 7959 057e 11       		.uleb128 0x11
 7960 057f 636E7400 		.ascii	"cnt\000"
 7961 0583 01       		.byte	0x1
 7962 0584 2B02     		.2byte	0x22b
 7963 0586 AD000000 		.4byte	0xad
 7964 058a 99010000 		.4byte	.LLST10
 7965 058e 12       		.uleb128 0x12
 7966 058f 6400     		.ascii	"d\000"
 7967 0591 01       		.byte	0x1
 7968 0592 2C02     		.2byte	0x22c
 7969 0594 E6040000 		.4byte	0x4e6
 7970 0598 B7010000 		.4byte	.LLST11
 7971 059c 12       		.uleb128 0x12
 7972 059d 7300     		.ascii	"s\000"
 7973 059f 01       		.byte	0x1
 7974 05a0 2C02     		.2byte	0x22c
 7975 05a2 E6040000 		.4byte	0x4e6
 7976 05a6 F6010000 		.4byte	.LLST12
 7977 05aa 12       		.uleb128 0x12
 7978 05ab 7200     		.ascii	"r\000"
 7979 05ad 01       		.byte	0x1
 7980 05ae 2D02     		.2byte	0x22d
 7981 05b0 7E000000 		.4byte	0x7e
 7982 05b4 2A020000 		.4byte	.LLST13
 7983 05b8 00       		.byte	0
 7984 05b9 17       		.uleb128 0x17
 7985 05ba 50000000 		.4byte	.LASF86
 7986 05be 01       		.byte	0x1
 7987 05bf 3502     		.2byte	0x235
 7988 05c1 7E000000 		.4byte	0x7e
 7989 05c5 00000000 		.4byte	.LFB3
 7990 05c9 12000000 		.4byte	.LFE3-.LFB3
 7991 05cd 01       		.uleb128 0x1
 7992 05ce 9C       		.byte	0x9c
 7993 05cf F2050000 		.4byte	0x5f2
 7994 05d3 11       		.uleb128 0x11
 7995 05d4 73747200 		.ascii	"str\000"
 7996 05d8 01       		.byte	0x1
 7997 05d9 3502     		.2byte	0x235
 7998 05db F2050000 		.4byte	0x5f2
 7999 05df 54020000 		.4byte	.LLST14
 8000 05e3 16       		.uleb128 0x16
 8001 05e4 63687200 		.ascii	"chr\000"
 8002 05e8 01       		.byte	0x1
 8003 05e9 3502     		.2byte	0x235
 8004 05eb 7E000000 		.4byte	0x7e
 8005 05ef 01       		.uleb128 0x1
 8006 05f0 51       		.byte	0x51
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 211


 8007 05f1 00       		.byte	0
 8008 05f2 0B       		.uleb128 0xb
 8009 05f3 04       		.byte	0x4
 8010 05f4 F8050000 		.4byte	0x5f8
 8011 05f8 15       		.uleb128 0x15
 8012 05f9 E4000000 		.4byte	0xe4
 8013 05fd 17       		.uleb128 0x17
 8014 05fe B0000000 		.4byte	.LASF87
 8015 0602 01       		.byte	0x1
 8016 0603 6102     		.2byte	0x261
 8017 0605 EF030000 		.4byte	0x3ef
 8018 0609 00000000 		.4byte	.LFB4
 8019 060d 8C000000 		.4byte	.LFE4-.LFB4
 8020 0611 01       		.uleb128 0x1
 8021 0612 9C       		.byte	0x9c
 8022 0613 52060000 		.4byte	0x652
 8023 0617 11       		.uleb128 0x11
 8024 0618 646A00   		.ascii	"dj\000"
 8025 061b 01       		.byte	0x1
 8026 061c 6202     		.2byte	0x262
 8027 061e 52060000 		.4byte	0x652
 8028 0622 72020000 		.4byte	.LLST15
 8029 0626 16       		.uleb128 0x16
 8030 0627 61636300 		.ascii	"acc\000"
 8031 062b 01       		.byte	0x1
 8032 062c 6302     		.2byte	0x263
 8033 062e 7E000000 		.4byte	0x7e
 8034 0632 01       		.uleb128 0x1
 8035 0633 51       		.byte	0x51
 8036 0634 12       		.uleb128 0x12
 8037 0635 6900     		.ascii	"i\000"
 8038 0637 01       		.byte	0x1
 8039 0638 6602     		.2byte	0x266
 8040 063a AD000000 		.4byte	0xad
 8041 063e 10030000 		.4byte	.LLST16
 8042 0642 12       		.uleb128 0x12
 8043 0643 626500   		.ascii	"be\000"
 8044 0646 01       		.byte	0x1
 8045 0647 6602     		.2byte	0x266
 8046 0649 AD000000 		.4byte	0xad
 8047 064d 3A030000 		.4byte	.LLST17
 8048 0651 00       		.byte	0
 8049 0652 0B       		.uleb128 0xb
 8050 0653 04       		.byte	0x4
 8051 0654 03030000 		.4byte	0x303
 8052 0658 17       		.uleb128 0x17
 8053 0659 7E010000 		.4byte	.LASF88
 8054 065d 01       		.byte	0x1
 8055 065e 7B02     		.2byte	0x27b
 8056 0660 7E000000 		.4byte	0x7e
 8057 0664 00000000 		.4byte	.LFB5
 8058 0668 28000000 		.4byte	.LFE5-.LFB5
 8059 066c 01       		.uleb128 0x1
 8060 066d 9C       		.byte	0x9c
 8061 066e 81060000 		.4byte	0x681
 8062 0672 12       		.uleb128 0x12
 8063 0673 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 212


 8064 0675 01       		.byte	0x1
 8065 0676 7D02     		.2byte	0x27d
 8066 0678 AD000000 		.4byte	0xad
 8067 067c 59030000 		.4byte	.LLST18
 8068 0680 00       		.byte	0
 8069 0681 17       		.uleb128 0x17
 8070 0682 A7000000 		.4byte	.LASF89
 8071 0686 01       		.byte	0x1
 8072 0687 8502     		.2byte	0x285
 8073 0689 AD000000 		.4byte	0xad
 8074 068d 00000000 		.4byte	.LFB6
 8075 0691 C8000000 		.4byte	.LFE6-.LFB6
 8076 0695 01       		.uleb128 0x1
 8077 0696 9C       		.byte	0x9c
 8078 0697 C9060000 		.4byte	0x6c9
 8079 069b 11       		.uleb128 0x11
 8080 069c 646A00   		.ascii	"dj\000"
 8081 069f 01       		.byte	0x1
 8082 06a0 8602     		.2byte	0x286
 8083 06a2 52060000 		.4byte	0x652
 8084 06a6 85030000 		.4byte	.LLST19
 8085 06aa 11       		.uleb128 0x11
 8086 06ab 61636300 		.ascii	"acc\000"
 8087 06af 01       		.byte	0x1
 8088 06b0 8702     		.2byte	0x287
 8089 06b2 7E000000 		.4byte	0x7e
 8090 06b6 BF030000 		.4byte	.LLST20
 8091 06ba 12       		.uleb128 0x12
 8092 06bb 6900     		.ascii	"i\000"
 8093 06bd 01       		.byte	0x1
 8094 06be 8A02     		.2byte	0x28a
 8095 06c0 AD000000 		.4byte	0xad
 8096 06c4 12040000 		.4byte	.LLST21
 8097 06c8 00       		.byte	0
 8098 06c9 17       		.uleb128 0x17
 8099 06ca 81060000 		.4byte	.LASF90
 8100 06ce 01       		.byte	0x1
 8101 06cf A502     		.2byte	0x2a5
 8102 06d1 EF030000 		.4byte	0x3ef
 8103 06d5 00000000 		.4byte	.LFB7
 8104 06d9 4C000000 		.4byte	.LFE7-.LFB7
 8105 06dd 01       		.uleb128 0x1
 8106 06de 9C       		.byte	0x9c
 8107 06df 0E070000 		.4byte	0x70e
 8108 06e3 11       		.uleb128 0x11
 8109 06e4 6900     		.ascii	"i\000"
 8110 06e6 01       		.byte	0x1
 8111 06e7 A602     		.2byte	0x2a6
 8112 06e9 AD000000 		.4byte	0xad
 8113 06ed 31040000 		.4byte	.LLST22
 8114 06f1 12       		.uleb128 0x12
 8115 06f2 6E00     		.ascii	"n\000"
 8116 06f4 01       		.byte	0x1
 8117 06f5 A902     		.2byte	0x2a9
 8118 06f7 C3000000 		.4byte	0xc3
 8119 06fb 95040000 		.4byte	.LLST23
 8120 06ff 18       		.uleb128 0x18
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 213


 8121 0700 72657300 		.ascii	"res\000"
 8122 0704 01       		.byte	0x1
 8123 0705 AA02     		.2byte	0x2aa
 8124 0707 EF030000 		.4byte	0x3ef
 8125 070b 01       		.uleb128 0x1
 8126 070c 50       		.byte	0x50
 8127 070d 00       		.byte	0
 8128 070e 10       		.uleb128 0x10
 8129 070f 24010000 		.4byte	.LASF91
 8130 0713 01       		.byte	0x1
 8131 0714 BC02     		.2byte	0x2bc
 8132 0716 00000000 		.4byte	.LFB8
 8133 071a 2C000000 		.4byte	.LFE8-.LFB8
 8134 071e 01       		.uleb128 0x1
 8135 071f 9C       		.byte	0x9c
 8136 0720 40070000 		.4byte	0x740
 8137 0724 16       		.uleb128 0x16
 8138 0725 667300   		.ascii	"fs\000"
 8139 0728 01       		.byte	0x1
 8140 0729 BD02     		.2byte	0x2bd
 8141 072b 86020000 		.4byte	0x286
 8142 072f 01       		.uleb128 0x1
 8143 0730 50       		.byte	0x50
 8144 0731 12       		.uleb128 0x12
 8145 0732 6900     		.ascii	"i\000"
 8146 0734 01       		.byte	0x1
 8147 0735 C002     		.2byte	0x2c0
 8148 0737 AD000000 		.4byte	0xad
 8149 073b BE040000 		.4byte	.LLST24
 8150 073f 00       		.byte	0
 8151 0740 17       		.uleb128 0x17
 8152 0741 85050000 		.4byte	.LASF92
 8153 0745 01       		.byte	0x1
 8154 0746 5706     		.2byte	0x657
 8155 0748 EF030000 		.4byte	0x3ef
 8156 074c 00000000 		.4byte	.LFB22
 8157 0750 2C010000 		.4byte	.LFE22-.LFB22
 8158 0754 01       		.uleb128 0x1
 8159 0755 9C       		.byte	0x9c
 8160 0756 34080000 		.4byte	0x834
 8161 075a 11       		.uleb128 0x11
 8162 075b 646A00   		.ascii	"dj\000"
 8163 075e 01       		.byte	0x1
 8164 075f 5806     		.2byte	0x658
 8165 0761 52060000 		.4byte	0x652
 8166 0765 DD040000 		.4byte	.LLST25
 8167 0769 19       		.uleb128 0x19
 8168 076a 85000000 		.4byte	.LASF93
 8169 076e 01       		.byte	0x1
 8170 076f 5906     		.2byte	0x659
 8171 0771 34080000 		.4byte	0x834
 8172 0775 FE040000 		.4byte	.LLST26
 8173 0779 1A       		.uleb128 0x1a
 8174 077a C6000000 		.4byte	.LASF94
 8175 077e 01       		.byte	0x1
 8176 077f 5D06     		.2byte	0x65d
 8177 0781 55080000 		.4byte	0x855
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 214


 8178 0785 05       		.uleb128 0x5
 8179 0786 03       		.byte	0x3
 8180 0787 00000000 		.4byte	excvt.4520
 8181 078b 12       		.uleb128 0x12
 8182 078c 6200     		.ascii	"b\000"
 8183 078e 01       		.byte	0x1
 8184 078f DA06     		.2byte	0x6da
 8185 0791 B8000000 		.4byte	0xb8
 8186 0795 56050000 		.4byte	.LLST27
 8187 0799 12       		.uleb128 0x12
 8188 079a 6300     		.ascii	"c\000"
 8189 079c 01       		.byte	0x1
 8190 079d DA06     		.2byte	0x6da
 8191 079f B8000000 		.4byte	0xb8
 8192 07a3 75050000 		.4byte	.LLST28
 8193 07a7 1B       		.uleb128 0x1b
 8194 07a8 6400     		.ascii	"d\000"
 8195 07aa 01       		.byte	0x1
 8196 07ab DA06     		.2byte	0x6da
 8197 07ad B8000000 		.4byte	0xb8
 8198 07b1 12       		.uleb128 0x12
 8199 07b2 73666E00 		.ascii	"sfn\000"
 8200 07b6 01       		.byte	0x1
 8201 07b7 DA06     		.2byte	0x6da
 8202 07b9 8C020000 		.4byte	0x28c
 8203 07bd D8050000 		.4byte	.LLST29
 8204 07c1 12       		.uleb128 0x12
 8205 07c2 6E6900   		.ascii	"ni\000"
 8206 07c5 01       		.byte	0x1
 8207 07c6 DB06     		.2byte	0x6db
 8208 07c8 AD000000 		.4byte	0xad
 8209 07cc F6050000 		.4byte	.LLST30
 8210 07d0 12       		.uleb128 0x12
 8211 07d1 736900   		.ascii	"si\000"
 8212 07d4 01       		.byte	0x1
 8213 07d5 DB06     		.2byte	0x6db
 8214 07d7 AD000000 		.4byte	0xad
 8215 07db 2C060000 		.4byte	.LLST31
 8216 07df 12       		.uleb128 0x12
 8217 07e0 6900     		.ascii	"i\000"
 8218 07e2 01       		.byte	0x1
 8219 07e3 DB06     		.2byte	0x6db
 8220 07e5 AD000000 		.4byte	0xad
 8221 07e9 AE060000 		.4byte	.LLST32
 8222 07ed 12       		.uleb128 0x12
 8223 07ee 7000     		.ascii	"p\000"
 8224 07f0 01       		.byte	0x1
 8225 07f1 DC06     		.2byte	0x6dc
 8226 07f3 F2050000 		.4byte	0x5f2
 8227 07f7 FC060000 		.4byte	.LLST33
 8228 07fb 1C       		.uleb128 0x1c
 8229 07fc 2C000000 		.4byte	.LVL81
 8230 0800 F1040000 		.4byte	0x4f1
 8231 0804 1A080000 		.4byte	0x81a
 8232 0808 1D       		.uleb128 0x1d
 8233 0809 01       		.uleb128 0x1
 8234 080a 52       		.byte	0x52
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 215


 8235 080b 01       		.uleb128 0x1
 8236 080c 3B       		.byte	0x3b
 8237 080d 1D       		.uleb128 0x1d
 8238 080e 01       		.uleb128 0x1
 8239 080f 51       		.byte	0x51
 8240 0810 02       		.uleb128 0x2
 8241 0811 08       		.byte	0x8
 8242 0812 20       		.byte	0x20
 8243 0813 1D       		.uleb128 0x1d
 8244 0814 01       		.uleb128 0x1
 8245 0815 50       		.byte	0x50
 8246 0816 02       		.uleb128 0x2
 8247 0817 7B       		.byte	0x7b
 8248 0818 00       		.sleb128 0
 8249 0819 00       		.byte	0
 8250 081a 1E       		.uleb128 0x1e
 8251 081b 86000000 		.4byte	.LVL93
 8252 081f B9050000 		.4byte	0x5b9
 8253 0823 1D       		.uleb128 0x1d
 8254 0824 01       		.uleb128 0x1
 8255 0825 51       		.byte	0x51
 8256 0826 02       		.uleb128 0x2
 8257 0827 75       		.byte	0x75
 8258 0828 00       		.sleb128 0
 8259 0829 1D       		.uleb128 0x1d
 8260 082a 01       		.uleb128 0x1
 8261 082b 50       		.byte	0x50
 8262 082c 05       		.uleb128 0x5
 8263 082d 03       		.byte	0x3
 8264 082e 00000000 		.4byte	.LC6
 8265 0832 00       		.byte	0
 8266 0833 00       		.byte	0
 8267 0834 0B       		.uleb128 0xb
 8268 0835 04       		.byte	0x4
 8269 0836 3A080000 		.4byte	0x83a
 8270 083a 0B       		.uleb128 0xb
 8271 083b 04       		.byte	0x4
 8272 083c 40080000 		.4byte	0x840
 8273 0840 15       		.uleb128 0x15
 8274 0841 D9000000 		.4byte	0xd9
 8275 0845 08       		.uleb128 0x8
 8276 0846 B8000000 		.4byte	0xb8
 8277 084a 55080000 		.4byte	0x855
 8278 084e 0D       		.uleb128 0xd
 8279 084f DD010000 		.4byte	0x1dd
 8280 0853 7F       		.byte	0x7f
 8281 0854 00       		.byte	0
 8282 0855 15       		.uleb128 0x15
 8283 0856 45080000 		.4byte	0x845
 8284 085a 10       		.uleb128 0x10
 8285 085b 63030000 		.4byte	.LASF95
 8286 085f 01       		.byte	0x1
 8287 0860 2D07     		.2byte	0x72d
 8288 0862 00000000 		.4byte	.LFB23
 8289 0866 7C000000 		.4byte	.LFE23-.LFB23
 8290 086a 01       		.uleb128 0x1
 8291 086b 9C       		.byte	0x9c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 216


 8292 086c D7080000 		.4byte	0x8d7
 8293 0870 11       		.uleb128 0x11
 8294 0871 646A00   		.ascii	"dj\000"
 8295 0874 01       		.byte	0x1
 8296 0875 2E07     		.2byte	0x72e
 8297 0877 52060000 		.4byte	0x652
 8298 087b 1A070000 		.4byte	.LLST34
 8299 087f 16       		.uleb128 0x16
 8300 0880 666E6F00 		.ascii	"fno\000"
 8301 0884 01       		.byte	0x1
 8302 0885 2F07     		.2byte	0x72f
 8303 0887 D7080000 		.4byte	0x8d7
 8304 088b 01       		.uleb128 0x1
 8305 088c 51       		.byte	0x51
 8306 088d 12       		.uleb128 0x12
 8307 088e 6900     		.ascii	"i\000"
 8308 0890 01       		.byte	0x1
 8309 0891 3207     		.2byte	0x732
 8310 0893 AD000000 		.4byte	0xad
 8311 0897 3B070000 		.4byte	.LLST35
 8312 089b 12       		.uleb128 0x12
 8313 089c 6E7400   		.ascii	"nt\000"
 8314 089f 01       		.byte	0x1
 8315 08a0 3307     		.2byte	0x733
 8316 08a2 B8000000 		.4byte	0xb8
 8317 08a6 71070000 		.4byte	.LLST36
 8318 08aa 12       		.uleb128 0x12
 8319 08ab 64697200 		.ascii	"dir\000"
 8320 08af 01       		.byte	0x1
 8321 08b0 3307     		.2byte	0x733
 8322 08b2 8C020000 		.4byte	0x28c
 8323 08b6 85070000 		.4byte	.LLST37
 8324 08ba 12       		.uleb128 0x12
 8325 08bb 7000     		.ascii	"p\000"
 8326 08bd 01       		.byte	0x1
 8327 08be 3407     		.2byte	0x734
 8328 08c0 DD080000 		.4byte	0x8dd
 8329 08c4 98070000 		.4byte	.LLST38
 8330 08c8 12       		.uleb128 0x12
 8331 08c9 6300     		.ascii	"c\000"
 8332 08cb 01       		.byte	0x1
 8333 08cc 3407     		.2byte	0x734
 8334 08ce D9000000 		.4byte	0xd9
 8335 08d2 F3070000 		.4byte	.LLST39
 8336 08d6 00       		.byte	0
 8337 08d7 0B       		.uleb128 0xb
 8338 08d8 04       		.byte	0x4
 8339 08d9 63030000 		.4byte	0x363
 8340 08dd 0B       		.uleb128 0xb
 8341 08de 04       		.byte	0x4
 8342 08df D9000000 		.4byte	0xd9
 8343 08e3 17       		.uleb128 0x17
 8344 08e4 F8050000 		.4byte	.LASF96
 8345 08e8 01       		.byte	0x1
 8346 08e9 CF02     		.2byte	0x2cf
 8347 08eb EF030000 		.4byte	0x3ef
 8348 08ef 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 217


 8349 08f3 88000000 		.4byte	.LFE9-.LFB9
 8350 08f7 01       		.uleb128 0x1
 8351 08f8 9C       		.byte	0x9c
 8352 08f9 A1090000 		.4byte	0x9a1
 8353 08fd 11       		.uleb128 0x11
 8354 08fe 667300   		.ascii	"fs\000"
 8355 0901 01       		.byte	0x1
 8356 0902 D002     		.2byte	0x2d0
 8357 0904 86020000 		.4byte	0x286
 8358 0908 11080000 		.4byte	.LLST40
 8359 090c 19       		.uleb128 0x19
 8360 090d D8020000 		.4byte	.LASF97
 8361 0911 01       		.byte	0x1
 8362 0912 D102     		.2byte	0x2d1
 8363 0914 CE000000 		.4byte	0xce
 8364 0918 61080000 		.4byte	.LLST41
 8365 091c 1F       		.uleb128 0x1f
 8366 091d 34060000 		.4byte	.LASF98
 8367 0921 01       		.byte	0x1
 8368 0922 D402     		.2byte	0x2d4
 8369 0924 CE000000 		.4byte	0xce
 8370 0928 A3080000 		.4byte	.LLST42
 8371 092c 20       		.uleb128 0x20
 8372 092d 3E000000 		.4byte	.LBB2
 8373 0931 1E000000 		.4byte	.LBE2-.LBB2
 8374 0935 65090000 		.4byte	0x965
 8375 0939 12       		.uleb128 0x12
 8376 093a 6E6600   		.ascii	"nf\000"
 8377 093d 01       		.byte	0x1
 8378 093e DF02     		.2byte	0x2df
 8379 0940 B8000000 		.4byte	0xb8
 8380 0944 B6080000 		.4byte	.LLST43
 8381 0948 1E       		.uleb128 0x1e
 8382 0949 54000000 		.4byte	.LVL145
 8383 094d F3240000 		.4byte	0x24f3
 8384 0951 1D       		.uleb128 0x1d
 8385 0952 01       		.uleb128 0x1
 8386 0953 53       		.byte	0x53
 8387 0954 01       		.uleb128 0x1
 8388 0955 31       		.byte	0x31
 8389 0956 1D       		.uleb128 0x1d
 8390 0957 01       		.uleb128 0x1
 8391 0958 52       		.byte	0x52
 8392 0959 02       		.uleb128 0x2
 8393 095a 76       		.byte	0x76
 8394 095b 00       		.sleb128 0
 8395 095c 1D       		.uleb128 0x1d
 8396 095d 01       		.uleb128 0x1
 8397 095e 51       		.byte	0x51
 8398 095f 03       		.uleb128 0x3
 8399 0960 91       		.byte	0x91
 8400 0961 64       		.sleb128 -28
 8401 0962 06       		.byte	0x6
 8402 0963 00       		.byte	0
 8403 0964 00       		.byte	0
 8404 0965 1C       		.uleb128 0x1c
 8405 0966 2A000000 		.4byte	.LVL142
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 218


 8406 096a F3240000 		.4byte	0x24f3
 8407 096e 85090000 		.4byte	0x985
 8408 0972 1D       		.uleb128 0x1d
 8409 0973 01       		.uleb128 0x1
 8410 0974 53       		.byte	0x53
 8411 0975 01       		.uleb128 0x1
 8412 0976 31       		.byte	0x31
 8413 0977 1D       		.uleb128 0x1d
 8414 0978 01       		.uleb128 0x1
 8415 0979 52       		.byte	0x52
 8416 097a 02       		.uleb128 0x2
 8417 097b 76       		.byte	0x76
 8418 097c 00       		.sleb128 0
 8419 097d 1D       		.uleb128 0x1d
 8420 097e 01       		.uleb128 0x1
 8421 097f 51       		.byte	0x51
 8422 0980 03       		.uleb128 0x3
 8423 0981 91       		.byte	0x91
 8424 0982 64       		.sleb128 -28
 8425 0983 06       		.byte	0x6
 8426 0984 00       		.byte	0
 8427 0985 1E       		.uleb128 0x1e
 8428 0986 6E000000 		.4byte	.LVL149
 8429 098a 17250000 		.4byte	0x2517
 8430 098e 1D       		.uleb128 0x1d
 8431 098f 01       		.uleb128 0x1
 8432 0990 53       		.byte	0x53
 8433 0991 01       		.uleb128 0x1
 8434 0992 31       		.byte	0x31
 8435 0993 1D       		.uleb128 0x1d
 8436 0994 01       		.uleb128 0x1
 8437 0995 52       		.byte	0x52
 8438 0996 02       		.uleb128 0x2
 8439 0997 77       		.byte	0x77
 8440 0998 00       		.sleb128 0
 8441 0999 1D       		.uleb128 0x1d
 8442 099a 01       		.uleb128 0x1
 8443 099b 51       		.byte	0x51
 8444 099c 02       		.uleb128 0x2
 8445 099d 74       		.byte	0x74
 8446 099e 30       		.sleb128 48
 8447 099f 00       		.byte	0
 8448 09a0 00       		.byte	0
 8449 09a1 17       		.uleb128 0x17
 8450 09a2 8D040000 		.4byte	.LASF99
 8451 09a6 01       		.byte	0x1
 8452 09a7 BE07     		.2byte	0x7be
 8453 09a9 B8000000 		.4byte	0xb8
 8454 09ad 00000000 		.4byte	.LFB25
 8455 09b1 98000000 		.4byte	.LFE25-.LFB25
 8456 09b5 01       		.uleb128 0x1
 8457 09b6 9C       		.byte	0x9c
 8458 09b7 F7090000 		.4byte	0x9f7
 8459 09bb 11       		.uleb128 0x11
 8460 09bc 667300   		.ascii	"fs\000"
 8461 09bf 01       		.byte	0x1
 8462 09c0 BF07     		.2byte	0x7bf
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 219


 8463 09c2 86020000 		.4byte	0x286
 8464 09c6 D4080000 		.4byte	.LLST44
 8465 09ca 19       		.uleb128 0x19
 8466 09cb C1000000 		.4byte	.LASF48
 8467 09cf 01       		.byte	0x1
 8468 09d0 C007     		.2byte	0x7c0
 8469 09d2 CE000000 		.4byte	0xce
 8470 09d6 00090000 		.4byte	.LLST45
 8471 09da 1E       		.uleb128 0x1e
 8472 09db 12000000 		.4byte	.LVL158
 8473 09df 17250000 		.4byte	0x2517
 8474 09e3 1D       		.uleb128 0x1d
 8475 09e4 01       		.uleb128 0x1
 8476 09e5 53       		.byte	0x53
 8477 09e6 01       		.uleb128 0x1
 8478 09e7 31       		.byte	0x31
 8479 09e8 1D       		.uleb128 0x1d
 8480 09e9 01       		.uleb128 0x1
 8481 09ea 52       		.byte	0x52
 8482 09eb 03       		.uleb128 0x3
 8483 09ec F3       		.byte	0xf3
 8484 09ed 01       		.uleb128 0x1
 8485 09ee 51       		.byte	0x51
 8486 09ef 1D       		.uleb128 0x1d
 8487 09f0 01       		.uleb128 0x1
 8488 09f1 51       		.byte	0x51
 8489 09f2 02       		.uleb128 0x2
 8490 09f3 74       		.byte	0x74
 8491 09f4 30       		.sleb128 48
 8492 09f5 00       		.byte	0
 8493 09f6 00       		.byte	0
 8494 09f7 17       		.uleb128 0x17
 8495 09f8 F7040000 		.4byte	.LASF100
 8496 09fc 01       		.byte	0x1
 8497 09fd 7C08     		.2byte	0x87c
 8498 09ff EF030000 		.4byte	0x3ef
 8499 0a03 00000000 		.4byte	.LFB27
 8500 0a07 30000000 		.4byte	.LFE27-.LFB27
 8501 0a0b 01       		.uleb128 0x1
 8502 0a0c 9C       		.byte	0x9c
 8503 0a0d 390A0000 		.4byte	0xa39
 8504 0a11 11       		.uleb128 0x11
 8505 0a12 667300   		.ascii	"fs\000"
 8506 0a15 01       		.byte	0x1
 8507 0a16 7D08     		.2byte	0x87d
 8508 0a18 86020000 		.4byte	0x286
 8509 0a1c 2C090000 		.4byte	.LLST46
 8510 0a20 11       		.uleb128 0x11
 8511 0a21 696400   		.ascii	"id\000"
 8512 0a24 01       		.byte	0x1
 8513 0a25 7E08     		.2byte	0x87e
 8514 0a27 C3000000 		.4byte	0xc3
 8515 0a2b 98090000 		.4byte	.LLST47
 8516 0a2f 21       		.uleb128 0x21
 8517 0a30 18000000 		.4byte	.LVL162
 8518 0a34 3B250000 		.4byte	0x253b
 8519 0a38 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 220


 8520 0a39 22       		.uleb128 0x22
 8521 0a3a 70030000 		.4byte	.LASF101
 8522 0a3e 01       		.byte	0x1
 8523 0a3f D807     		.2byte	0x7d8
 8524 0a41 EF030000 		.4byte	0x3ef
 8525 0a45 00000000 		.4byte	.LFB26
 8526 0a49 C2030000 		.4byte	.LFE26-.LFB26
 8527 0a4d 01       		.uleb128 0x1
 8528 0a4e 9C       		.byte	0x9c
 8529 0a4f E70B0000 		.4byte	0xbe7
 8530 0a53 19       		.uleb128 0x19
 8531 0a54 85000000 		.4byte	.LASF93
 8532 0a58 01       		.byte	0x1
 8533 0a59 D907     		.2byte	0x7d9
 8534 0a5b 34080000 		.4byte	0x834
 8535 0a5f D2090000 		.4byte	.LLST48
 8536 0a63 11       		.uleb128 0x11
 8537 0a64 72667300 		.ascii	"rfs\000"
 8538 0a68 01       		.byte	0x1
 8539 0a69 DA07     		.2byte	0x7da
 8540 0a6b E70B0000 		.4byte	0xbe7
 8541 0a6f 0C0A0000 		.4byte	.LLST49
 8542 0a73 19       		.uleb128 0x19
 8543 0a74 BD050000 		.4byte	.LASF102
 8544 0a78 01       		.byte	0x1
 8545 0a79 DB07     		.2byte	0x7db
 8546 0a7b B8000000 		.4byte	0xb8
 8547 0a7f 460A0000 		.4byte	.LLST50
 8548 0a83 12       		.uleb128 0x12
 8549 0a84 666D7400 		.ascii	"fmt\000"
 8550 0a88 01       		.byte	0x1
 8551 0a89 DE07     		.2byte	0x7de
 8552 0a8b B8000000 		.4byte	0xb8
 8553 0a8f 800A0000 		.4byte	.LLST51
 8554 0a93 12       		.uleb128 0x12
 8555 0a94 6200     		.ascii	"b\000"
 8556 0a96 01       		.byte	0x1
 8557 0a97 DE07     		.2byte	0x7de
 8558 0a99 B8000000 		.4byte	0xb8
 8559 0a9d 0D0B0000 		.4byte	.LLST52
 8560 0aa1 12       		.uleb128 0x12
 8561 0aa2 706900   		.ascii	"pi\000"
 8562 0aa5 01       		.byte	0x1
 8563 0aa6 DE07     		.2byte	0x7de
 8564 0aa8 B8000000 		.4byte	0xb8
 8565 0aac 4D0B0000 		.4byte	.LLST53
 8566 0ab0 12       		.uleb128 0x12
 8567 0ab1 74626C00 		.ascii	"tbl\000"
 8568 0ab5 01       		.byte	0x1
 8569 0ab6 DE07     		.2byte	0x7de
 8570 0ab8 8C020000 		.4byte	0x28c
 8571 0abc 6D0B0000 		.4byte	.LLST54
 8572 0ac0 12       		.uleb128 0x12
 8573 0ac1 766F6C00 		.ascii	"vol\000"
 8574 0ac5 01       		.byte	0x1
 8575 0ac6 DF07     		.2byte	0x7df
 8576 0ac8 AD000000 		.4byte	0xad
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 221


 8577 0acc 910B0000 		.4byte	.LLST55
 8578 0ad0 1F       		.uleb128 0x1f
 8579 0ad1 6A060000 		.4byte	.LASF103
 8580 0ad5 01       		.byte	0x1
 8581 0ad6 E007     		.2byte	0x7e0
 8582 0ad8 FA030000 		.4byte	0x3fa
 8583 0adc E50B0000 		.4byte	.LLST56
 8584 0ae0 1F       		.uleb128 0x1f
 8585 0ae1 72020000 		.4byte	.LASF104
 8586 0ae5 01       		.byte	0x1
 8587 0ae6 E107     		.2byte	0x7e1
 8588 0ae8 CE000000 		.4byte	0xce
 8589 0aec 2F0C0000 		.4byte	.LLST57
 8590 0af0 1F       		.uleb128 0x1f
 8591 0af1 DE000000 		.4byte	.LASF105
 8592 0af5 01       		.byte	0x1
 8593 0af6 E107     		.2byte	0x7e1
 8594 0af8 CE000000 		.4byte	0xce
 8595 0afc 700C0000 		.4byte	.LLST58
 8596 0b00 1F       		.uleb128 0x1f
 8597 0b01 C2060000 		.4byte	.LASF106
 8598 0b05 01       		.byte	0x1
 8599 0b06 E107     		.2byte	0x7e1
 8600 0b08 CE000000 		.4byte	0xce
 8601 0b0c FC0C0000 		.4byte	.LLST59
 8602 0b10 1F       		.uleb128 0x1f
 8603 0b11 78020000 		.4byte	.LASF107
 8604 0b15 01       		.byte	0x1
 8605 0b16 E107     		.2byte	0x7e1
 8606 0b18 CE000000 		.4byte	0xce
 8607 0b1c 6E0D0000 		.4byte	.LLST60
 8608 0b20 1F       		.uleb128 0x1f
 8609 0b21 7C030000 		.4byte	.LASF108
 8610 0b25 01       		.byte	0x1
 8611 0b26 E107     		.2byte	0x7e1
 8612 0b28 CE000000 		.4byte	0xce
 8613 0b2c 8C0D0000 		.4byte	.LLST61
 8614 0b30 1F       		.uleb128 0x1f
 8615 0b31 DF020000 		.4byte	.LASF109
 8616 0b35 01       		.byte	0x1
 8617 0b36 E107     		.2byte	0x7e1
 8618 0b38 CE000000 		.4byte	0xce
 8619 0b3c 3B0E0000 		.4byte	.LLST62
 8620 0b40 1F       		.uleb128 0x1f
 8621 0b41 D8050000 		.4byte	.LASF110
 8622 0b45 01       		.byte	0x1
 8623 0b46 E207     		.2byte	0x7e2
 8624 0b48 C3000000 		.4byte	0xc3
 8625 0b4c 670E0000 		.4byte	.LLST63
 8626 0b50 12       		.uleb128 0x12
 8627 0b51 7000     		.ascii	"p\000"
 8628 0b53 01       		.byte	0x1
 8629 0b54 E307     		.2byte	0x7e3
 8630 0b56 3A080000 		.4byte	0x83a
 8631 0b5a 850E0000 		.4byte	.LLST64
 8632 0b5e 12       		.uleb128 0x12
 8633 0b5f 667300   		.ascii	"fs\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 222


 8634 0b62 01       		.byte	0x1
 8635 0b63 E407     		.2byte	0x7e4
 8636 0b65 86020000 		.4byte	0x286
 8637 0b69 BC0E0000 		.4byte	.LLST65
 8638 0b6d 21       		.uleb128 0x21
 8639 0b6e 4C000000 		.4byte	.LVL181
 8640 0b72 3B250000 		.4byte	0x253b
 8641 0b76 1C       		.uleb128 0x1c
 8642 0b77 6C000000 		.4byte	.LVL183
 8643 0b7b 50250000 		.4byte	0x2550
 8644 0b7f 8A0B0000 		.4byte	0xb8a
 8645 0b83 1D       		.uleb128 0x1d
 8646 0b84 01       		.uleb128 0x1
 8647 0b85 50       		.byte	0x50
 8648 0b86 02       		.uleb128 0x2
 8649 0b87 74       		.byte	0x74
 8650 0b88 00       		.sleb128 0
 8651 0b89 00       		.byte	0
 8652 0b8a 1C       		.uleb128 0x1c
 8653 0b8b 84000000 		.4byte	.LVL186
 8654 0b8f A1090000 		.4byte	0x9a1
 8655 0b93 A30B0000 		.4byte	0xba3
 8656 0b97 1D       		.uleb128 0x1d
 8657 0b98 01       		.uleb128 0x1
 8658 0b99 51       		.byte	0x51
 8659 0b9a 01       		.uleb128 0x1
 8660 0b9b 30       		.byte	0x30
 8661 0b9c 1D       		.uleb128 0x1d
 8662 0b9d 01       		.uleb128 0x1
 8663 0b9e 50       		.byte	0x50
 8664 0b9f 02       		.uleb128 0x2
 8665 0ba0 75       		.byte	0x75
 8666 0ba1 00       		.sleb128 0
 8667 0ba2 00       		.byte	0
 8668 0ba3 1C       		.uleb128 0x1c
 8669 0ba4 BC000000 		.4byte	.LVL191
 8670 0ba8 A1090000 		.4byte	0x9a1
 8671 0bac BD0B0000 		.4byte	0xbbd
 8672 0bb0 1D       		.uleb128 0x1d
 8673 0bb1 01       		.uleb128 0x1
 8674 0bb2 51       		.byte	0x51
 8675 0bb3 02       		.uleb128 0x2
 8676 0bb4 74       		.byte	0x74
 8677 0bb5 00       		.sleb128 0
 8678 0bb6 1D       		.uleb128 0x1d
 8679 0bb7 01       		.uleb128 0x1
 8680 0bb8 50       		.byte	0x50
 8681 0bb9 02       		.uleb128 0x2
 8682 0bba 75       		.byte	0x75
 8683 0bbb 00       		.sleb128 0
 8684 0bbc 00       		.byte	0
 8685 0bbd 1C       		.uleb128 0x1c
 8686 0bbe 66020000 		.4byte	.LVL227
 8687 0bc2 17250000 		.4byte	0x2517
 8688 0bc6 D60B0000 		.4byte	0xbd6
 8689 0bca 1D       		.uleb128 0x1d
 8690 0bcb 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 223


 8691 0bcc 53       		.byte	0x53
 8692 0bcd 01       		.uleb128 0x1
 8693 0bce 31       		.byte	0x31
 8694 0bcf 1D       		.uleb128 0x1d
 8695 0bd0 01       		.uleb128 0x1
 8696 0bd1 51       		.byte	0x51
 8697 0bd2 02       		.uleb128 0x2
 8698 0bd3 75       		.byte	0x75
 8699 0bd4 30       		.sleb128 48
 8700 0bd5 00       		.byte	0
 8701 0bd6 1E       		.uleb128 0x1e
 8702 0bd7 20030000 		.4byte	.LVL229
 8703 0bdb 0E070000 		.4byte	0x70e
 8704 0bdf 1D       		.uleb128 0x1d
 8705 0be0 01       		.uleb128 0x1
 8706 0be1 50       		.byte	0x50
 8707 0be2 02       		.uleb128 0x2
 8708 0be3 75       		.byte	0x75
 8709 0be4 00       		.sleb128 0
 8710 0be5 00       		.byte	0
 8711 0be6 00       		.byte	0
 8712 0be7 0B       		.uleb128 0xb
 8713 0be8 04       		.byte	0x4
 8714 0be9 86020000 		.4byte	0x286
 8715 0bed 17       		.uleb128 0x17
 8716 0bee 5A060000 		.4byte	.LASF111
 8717 0bf2 01       		.byte	0x1
 8718 0bf3 F902     		.2byte	0x2f9
 8719 0bf5 EF030000 		.4byte	0x3ef
 8720 0bf9 00000000 		.4byte	.LFB10
 8721 0bfd E4000000 		.4byte	.LFE10-.LFB10
 8722 0c01 01       		.uleb128 0x1
 8723 0c02 9C       		.byte	0x9c
 8724 0c03 8E0C0000 		.4byte	0xc8e
 8725 0c07 11       		.uleb128 0x11
 8726 0c08 667300   		.ascii	"fs\000"
 8727 0c0b 01       		.byte	0x1
 8728 0c0c FA02     		.2byte	0x2fa
 8729 0c0e 86020000 		.4byte	0x286
 8730 0c12 DA0E0000 		.4byte	.LLST66
 8731 0c16 12       		.uleb128 0x12
 8732 0c17 72657300 		.ascii	"res\000"
 8733 0c1b 01       		.byte	0x1
 8734 0c1c FD02     		.2byte	0x2fd
 8735 0c1e EF030000 		.4byte	0x3ef
 8736 0c22 060F0000 		.4byte	.LLST67
 8737 0c26 1C       		.uleb128 0x1c
 8738 0c27 0A000000 		.4byte	.LVL267
 8739 0c2b E3080000 		.4byte	0x8e3
 8740 0c2f 3F0C0000 		.4byte	0xc3f
 8741 0c33 1D       		.uleb128 0x1d
 8742 0c34 01       		.uleb128 0x1
 8743 0c35 51       		.byte	0x51
 8744 0c36 01       		.uleb128 0x1
 8745 0c37 30       		.byte	0x30
 8746 0c38 1D       		.uleb128 0x1d
 8747 0c39 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 224


 8748 0c3a 50       		.byte	0x50
 8749 0c3b 02       		.uleb128 0x2
 8750 0c3c 75       		.byte	0x75
 8751 0c3d 00       		.sleb128 0
 8752 0c3e 00       		.byte	0
 8753 0c3f 1C       		.uleb128 0x1c
 8754 0c40 2E000000 		.4byte	.LVL270
 8755 0c44 F1040000 		.4byte	0x4f1
 8756 0c48 600C0000 		.4byte	0xc60
 8757 0c4c 1D       		.uleb128 0x1d
 8758 0c4d 01       		.uleb128 0x1
 8759 0c4e 52       		.byte	0x52
 8760 0c4f 03       		.uleb128 0x3
 8761 0c50 0A       		.byte	0xa
 8762 0c51 0002     		.2byte	0x200
 8763 0c53 1D       		.uleb128 0x1d
 8764 0c54 01       		.uleb128 0x1
 8765 0c55 51       		.byte	0x51
 8766 0c56 02       		.uleb128 0x2
 8767 0c57 77       		.byte	0x77
 8768 0c58 00       		.sleb128 0
 8769 0c59 1D       		.uleb128 0x1d
 8770 0c5a 01       		.uleb128 0x1
 8771 0c5b 50       		.byte	0x50
 8772 0c5c 02       		.uleb128 0x2
 8773 0c5d 76       		.byte	0x76
 8774 0c5e 00       		.sleb128 0
 8775 0c5f 00       		.byte	0
 8776 0c60 1C       		.uleb128 0x1c
 8777 0c61 A2000000 		.4byte	.LVL271
 8778 0c65 F3240000 		.4byte	0x24f3
 8779 0c69 790C0000 		.4byte	0xc79
 8780 0c6d 1D       		.uleb128 0x1d
 8781 0c6e 01       		.uleb128 0x1
 8782 0c6f 53       		.byte	0x53
 8783 0c70 01       		.uleb128 0x1
 8784 0c71 31       		.byte	0x31
 8785 0c72 1D       		.uleb128 0x1d
 8786 0c73 01       		.uleb128 0x1
 8787 0c74 51       		.byte	0x51
 8788 0c75 02       		.uleb128 0x2
 8789 0c76 76       		.byte	0x76
 8790 0c77 00       		.sleb128 0
 8791 0c78 00       		.byte	0
 8792 0c79 1E       		.uleb128 0x1e
 8793 0c7a AE000000 		.4byte	.LVL272
 8794 0c7e 65250000 		.4byte	0x2565
 8795 0c82 1D       		.uleb128 0x1d
 8796 0c83 01       		.uleb128 0x1
 8797 0c84 52       		.byte	0x52
 8798 0c85 01       		.uleb128 0x1
 8799 0c86 30       		.byte	0x30
 8800 0c87 1D       		.uleb128 0x1d
 8801 0c88 01       		.uleb128 0x1
 8802 0c89 51       		.byte	0x51
 8803 0c8a 01       		.uleb128 0x1
 8804 0c8b 30       		.byte	0x30
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 225


 8805 0c8c 00       		.byte	0
 8806 0c8d 00       		.byte	0
 8807 0c8e 23       		.uleb128 0x23
 8808 0c8f 3E030000 		.4byte	.LASF113
 8809 0c93 01       		.byte	0x1
 8810 0c94 2103     		.2byte	0x321
 8811 0c96 CE000000 		.4byte	0xce
 8812 0c9a 00000000 		.4byte	.LFB11
 8813 0c9e 18000000 		.4byte	.LFE11-.LFB11
 8814 0ca2 01       		.uleb128 0x1
 8815 0ca3 9C       		.byte	0x9c
 8816 0ca4 C80C0000 		.4byte	0xcc8
 8817 0ca8 11       		.uleb128 0x11
 8818 0ca9 667300   		.ascii	"fs\000"
 8819 0cac 01       		.byte	0x1
 8820 0cad 2203     		.2byte	0x322
 8821 0caf 86020000 		.4byte	0x286
 8822 0cb3 240F0000 		.4byte	.LLST68
 8823 0cb7 19       		.uleb128 0x19
 8824 0cb8 A4020000 		.4byte	.LASF112
 8825 0cbc 01       		.byte	0x1
 8826 0cbd 2303     		.2byte	0x323
 8827 0cbf CE000000 		.4byte	0xce
 8828 0cc3 5E0F0000 		.4byte	.LLST69
 8829 0cc7 00       		.byte	0
 8830 0cc8 23       		.uleb128 0x23
 8831 0cc9 85040000 		.4byte	.LASF114
 8832 0ccd 01       		.byte	0x1
 8833 0cce 3303     		.2byte	0x333
 8834 0cd0 CE000000 		.4byte	0xce
 8835 0cd4 00000000 		.4byte	.LFB12
 8836 0cd8 FA000000 		.4byte	.LFE12-.LFB12
 8837 0cdc 01       		.uleb128 0x1
 8838 0cdd 9C       		.byte	0x9c
 8839 0cde 7A0D0000 		.4byte	0xd7a
 8840 0ce2 11       		.uleb128 0x11
 8841 0ce3 667300   		.ascii	"fs\000"
 8842 0ce6 01       		.byte	0x1
 8843 0ce7 3403     		.2byte	0x334
 8844 0ce9 86020000 		.4byte	0x286
 8845 0ced A70F0000 		.4byte	.LLST70
 8846 0cf1 19       		.uleb128 0x19
 8847 0cf2 A4020000 		.4byte	.LASF112
 8848 0cf6 01       		.byte	0x1
 8849 0cf7 3503     		.2byte	0x335
 8850 0cf9 CE000000 		.4byte	0xce
 8851 0cfd 55100000 		.4byte	.LLST71
 8852 0d01 12       		.uleb128 0x12
 8853 0d02 776300   		.ascii	"wc\000"
 8854 0d05 01       		.byte	0x1
 8855 0d06 3803     		.2byte	0x338
 8856 0d08 AD000000 		.4byte	0xad
 8857 0d0c D1100000 		.4byte	.LLST72
 8858 0d10 12       		.uleb128 0x12
 8859 0d11 626300   		.ascii	"bc\000"
 8860 0d14 01       		.byte	0x1
 8861 0d15 3803     		.2byte	0x338
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 226


 8862 0d17 AD000000 		.4byte	0xad
 8863 0d1b 3D110000 		.4byte	.LLST73
 8864 0d1f 12       		.uleb128 0x12
 8865 0d20 7000     		.ascii	"p\000"
 8866 0d22 01       		.byte	0x1
 8867 0d23 3903     		.2byte	0x339
 8868 0d25 8C020000 		.4byte	0x28c
 8869 0d29 7A110000 		.4byte	.LLST74
 8870 0d2d 1C       		.uleb128 0x1c
 8871 0d2e 2E000000 		.4byte	.LVL286
 8872 0d32 E3080000 		.4byte	0x8e3
 8873 0d36 410D0000 		.4byte	0xd41
 8874 0d3a 1D       		.uleb128 0x1d
 8875 0d3b 01       		.uleb128 0x1
 8876 0d3c 50       		.byte	0x50
 8877 0d3d 02       		.uleb128 0x2
 8878 0d3e 76       		.byte	0x76
 8879 0d3f 00       		.sleb128 0
 8880 0d40 00       		.byte	0
 8881 0d41 1C       		.uleb128 0x1c
 8882 0d42 4C000000 		.4byte	.LVL289
 8883 0d46 E3080000 		.4byte	0x8e3
 8884 0d4a 550D0000 		.4byte	0xd55
 8885 0d4e 1D       		.uleb128 0x1d
 8886 0d4f 01       		.uleb128 0x1
 8887 0d50 50       		.byte	0x50
 8888 0d51 02       		.uleb128 0x2
 8889 0d52 76       		.byte	0x76
 8890 0d53 00       		.sleb128 0
 8891 0d54 00       		.byte	0
 8892 0d55 1C       		.uleb128 0x1c
 8893 0d56 78000000 		.4byte	.LVL297
 8894 0d5a E3080000 		.4byte	0x8e3
 8895 0d5e 690D0000 		.4byte	0xd69
 8896 0d62 1D       		.uleb128 0x1d
 8897 0d63 01       		.uleb128 0x1
 8898 0d64 50       		.byte	0x50
 8899 0d65 02       		.uleb128 0x2
 8900 0d66 76       		.byte	0x76
 8901 0d67 00       		.sleb128 0
 8902 0d68 00       		.byte	0
 8903 0d69 1E       		.uleb128 0x1e
 8904 0d6a A4000000 		.4byte	.LVL303
 8905 0d6e E3080000 		.4byte	0x8e3
 8906 0d72 1D       		.uleb128 0x1d
 8907 0d73 01       		.uleb128 0x1
 8908 0d74 50       		.byte	0x50
 8909 0d75 02       		.uleb128 0x2
 8910 0d76 76       		.byte	0x76
 8911 0d77 00       		.sleb128 0
 8912 0d78 00       		.byte	0
 8913 0d79 00       		.byte	0
 8914 0d7a 17       		.uleb128 0x17
 8915 0d7b AF060000 		.4byte	.LASF115
 8916 0d7f 01       		.byte	0x1
 8917 0d80 2904     		.2byte	0x429
 8918 0d82 EF030000 		.4byte	0x3ef
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 227


 8919 0d86 00000000 		.4byte	.LFB16
 8920 0d8a 98000000 		.4byte	.LFE16-.LFB16
 8921 0d8e 01       		.uleb128 0x1
 8922 0d8f 9C       		.byte	0x9c
 8923 0d90 E50D0000 		.4byte	0xde5
 8924 0d94 11       		.uleb128 0x11
 8925 0d95 646A00   		.ascii	"dj\000"
 8926 0d98 01       		.byte	0x1
 8927 0d99 2A04     		.2byte	0x42a
 8928 0d9b 52060000 		.4byte	0x652
 8929 0d9f AB110000 		.4byte	.LLST75
 8930 0da3 11       		.uleb128 0x11
 8931 0da4 69647800 		.ascii	"idx\000"
 8932 0da8 01       		.byte	0x1
 8933 0da9 2B04     		.2byte	0x42b
 8934 0dab C3000000 		.4byte	0xc3
 8935 0daf 19120000 		.4byte	.LLST76
 8936 0db3 1F       		.uleb128 0x1f
 8937 0db4 A4020000 		.4byte	.LASF112
 8938 0db8 01       		.byte	0x1
 8939 0db9 2E04     		.2byte	0x42e
 8940 0dbb CE000000 		.4byte	0xce
 8941 0dbf A1120000 		.4byte	.LLST77
 8942 0dc3 12       		.uleb128 0x12
 8943 0dc4 696300   		.ascii	"ic\000"
 8944 0dc7 01       		.byte	0x1
 8945 0dc8 2F04     		.2byte	0x42f
 8946 0dca C3000000 		.4byte	0xc3
 8947 0dce 0C130000 		.4byte	.LLST78
 8948 0dd2 21       		.uleb128 0x21
 8949 0dd3 44000000 		.4byte	.LVL321
 8950 0dd7 C80C0000 		.4byte	0xcc8
 8951 0ddb 21       		.uleb128 0x21
 8952 0ddc 66000000 		.4byte	.LVL325
 8953 0de0 8E0C0000 		.4byte	0xc8e
 8954 0de4 00       		.byte	0
 8955 0de5 17       		.uleb128 0x17
 8956 0de6 61010000 		.4byte	.LASF116
 8957 0dea 01       		.byte	0x1
 8958 0deb 2A06     		.2byte	0x62a
 8959 0ded EF030000 		.4byte	0x3ef
 8960 0df1 00000000 		.4byte	.LFB21
 8961 0df5 28000000 		.4byte	.LFE21-.LFB21
 8962 0df9 01       		.uleb128 0x1
 8963 0dfa 9C       		.byte	0x9c
 8964 0dfb 3C0E0000 		.4byte	0xe3c
 8965 0dff 11       		.uleb128 0x11
 8966 0e00 646A00   		.ascii	"dj\000"
 8967 0e03 01       		.byte	0x1
 8968 0e04 2B06     		.2byte	0x62b
 8969 0e06 52060000 		.4byte	0x652
 8970 0e0a 2A130000 		.4byte	.LLST79
 8971 0e0e 12       		.uleb128 0x12
 8972 0e0f 72657300 		.ascii	"res\000"
 8973 0e13 01       		.byte	0x1
 8974 0e14 2E06     		.2byte	0x62e
 8975 0e16 EF030000 		.4byte	0x3ef
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 228


 8976 0e1a 56130000 		.4byte	.LLST80
 8977 0e1e 1C       		.uleb128 0x1c
 8978 0e1f 0A000000 		.4byte	.LVL341
 8979 0e23 7A0D0000 		.4byte	0xd7a
 8980 0e27 320E0000 		.4byte	0xe32
 8981 0e2b 1D       		.uleb128 0x1d
 8982 0e2c 01       		.uleb128 0x1
 8983 0e2d 50       		.byte	0x50
 8984 0e2e 02       		.uleb128 0x2
 8985 0e2f 74       		.byte	0x74
 8986 0e30 00       		.sleb128 0
 8987 0e31 00       		.byte	0
 8988 0e32 21       		.uleb128 0x21
 8989 0e33 16000000 		.4byte	.LVL343
 8990 0e37 E3080000 		.4byte	0x8e3
 8991 0e3b 00       		.byte	0
 8992 0e3c 23       		.uleb128 0x23
 8993 0e3d 3A000000 		.4byte	.LASF117
 8994 0e41 01       		.byte	0x1
 8995 0e42 5E03     		.2byte	0x35e
 8996 0e44 EF030000 		.4byte	0x3ef
 8997 0e48 00000000 		.4byte	.LFB13
 8998 0e4c 0E010000 		.4byte	.LFE13-.LFB13
 8999 0e50 01       		.uleb128 0x1
 9000 0e51 9C       		.byte	0x9c
 9001 0e52 FF0E0000 		.4byte	0xeff
 9002 0e56 11       		.uleb128 0x11
 9003 0e57 667300   		.ascii	"fs\000"
 9004 0e5a 01       		.byte	0x1
 9005 0e5b 5F03     		.2byte	0x35f
 9006 0e5d 86020000 		.4byte	0x286
 9007 0e61 74130000 		.4byte	.LLST81
 9008 0e65 19       		.uleb128 0x19
 9009 0e66 A4020000 		.4byte	.LASF112
 9010 0e6a 01       		.byte	0x1
 9011 0e6b 6003     		.2byte	0x360
 9012 0e6d CE000000 		.4byte	0xce
 9013 0e71 0E140000 		.4byte	.LLST82
 9014 0e75 11       		.uleb128 0x11
 9015 0e76 76616C00 		.ascii	"val\000"
 9016 0e7a 01       		.byte	0x1
 9017 0e7b 6103     		.2byte	0x361
 9018 0e7d CE000000 		.4byte	0xce
 9019 0e81 B4140000 		.4byte	.LLST83
 9020 0e85 12       		.uleb128 0x12
 9021 0e86 626300   		.ascii	"bc\000"
 9022 0e89 01       		.byte	0x1
 9023 0e8a 6403     		.2byte	0x364
 9024 0e8c AD000000 		.4byte	0xad
 9025 0e90 63150000 		.4byte	.LLST84
 9026 0e94 12       		.uleb128 0x12
 9027 0e95 7000     		.ascii	"p\000"
 9028 0e97 01       		.byte	0x1
 9029 0e98 6503     		.2byte	0x365
 9030 0e9a 8C020000 		.4byte	0x28c
 9031 0e9e 97150000 		.4byte	.LLST85
 9032 0ea2 12       		.uleb128 0x12
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 229


 9033 0ea3 72657300 		.ascii	"res\000"
 9034 0ea7 01       		.byte	0x1
 9035 0ea8 6603     		.2byte	0x366
 9036 0eaa EF030000 		.4byte	0x3ef
 9037 0eae 5E160000 		.4byte	.LLST86
 9038 0eb2 1C       		.uleb128 0x1c
 9039 0eb3 30000000 		.4byte	.LVL350
 9040 0eb7 E3080000 		.4byte	0x8e3
 9041 0ebb C60E0000 		.4byte	0xec6
 9042 0ebf 1D       		.uleb128 0x1d
 9043 0ec0 01       		.uleb128 0x1
 9044 0ec1 50       		.byte	0x50
 9045 0ec2 02       		.uleb128 0x2
 9046 0ec3 76       		.byte	0x76
 9047 0ec4 00       		.sleb128 0
 9048 0ec5 00       		.byte	0
 9049 0ec6 1C       		.uleb128 0x1c
 9050 0ec7 70000000 		.4byte	.LVL360
 9051 0ecb E3080000 		.4byte	0x8e3
 9052 0ecf DA0E0000 		.4byte	0xeda
 9053 0ed3 1D       		.uleb128 0x1d
 9054 0ed4 01       		.uleb128 0x1
 9055 0ed5 50       		.byte	0x50
 9056 0ed6 02       		.uleb128 0x2
 9057 0ed7 76       		.byte	0x76
 9058 0ed8 00       		.sleb128 0
 9059 0ed9 00       		.byte	0
 9060 0eda 1C       		.uleb128 0x1c
 9061 0edb A6000000 		.4byte	.LVL369
 9062 0edf E3080000 		.4byte	0x8e3
 9063 0ee3 EE0E0000 		.4byte	0xeee
 9064 0ee7 1D       		.uleb128 0x1d
 9065 0ee8 01       		.uleb128 0x1
 9066 0ee9 50       		.byte	0x50
 9067 0eea 02       		.uleb128 0x2
 9068 0eeb 76       		.byte	0x76
 9069 0eec 00       		.sleb128 0
 9070 0eed 00       		.byte	0
 9071 0eee 1E       		.uleb128 0x1e
 9072 0eef D0000000 		.4byte	.LVL375
 9073 0ef3 E3080000 		.4byte	0x8e3
 9074 0ef7 1D       		.uleb128 0x1d
 9075 0ef8 01       		.uleb128 0x1
 9076 0ef9 50       		.byte	0x50
 9077 0efa 02       		.uleb128 0x2
 9078 0efb 76       		.byte	0x76
 9079 0efc 00       		.sleb128 0
 9080 0efd 00       		.byte	0
 9081 0efe 00       		.byte	0
 9082 0eff 17       		.uleb128 0x17
 9083 0f00 A7010000 		.4byte	.LASF118
 9084 0f04 01       		.byte	0x1
 9085 0f05 D203     		.2byte	0x3d2
 9086 0f07 CE000000 		.4byte	0xce
 9087 0f0b 00000000 		.4byte	.LFB15
 9088 0f0f AC000000 		.4byte	.LFE15-.LFB15
 9089 0f13 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 230


 9090 0f14 9C       		.byte	0x9c
 9091 0f15 DA0F0000 		.4byte	0xfda
 9092 0f19 11       		.uleb128 0x11
 9093 0f1a 667300   		.ascii	"fs\000"
 9094 0f1d 01       		.byte	0x1
 9095 0f1e D303     		.2byte	0x3d3
 9096 0f20 86020000 		.4byte	0x286
 9097 0f24 C0160000 		.4byte	.LLST87
 9098 0f28 19       		.uleb128 0x19
 9099 0f29 A4020000 		.4byte	.LASF112
 9100 0f2d 01       		.byte	0x1
 9101 0f2e D403     		.2byte	0x3d4
 9102 0f30 CE000000 		.4byte	0xce
 9103 0f34 02170000 		.4byte	.LLST88
 9104 0f38 12       		.uleb128 0x12
 9105 0f39 637300   		.ascii	"cs\000"
 9106 0f3c 01       		.byte	0x1
 9107 0f3d D703     		.2byte	0x3d7
 9108 0f3f CE000000 		.4byte	0xce
 9109 0f43 44170000 		.4byte	.LLST89
 9110 0f47 12       		.uleb128 0x12
 9111 0f48 6E636C00 		.ascii	"ncl\000"
 9112 0f4c 01       		.byte	0x1
 9113 0f4d D703     		.2byte	0x3d7
 9114 0f4f CE000000 		.4byte	0xce
 9115 0f53 78170000 		.4byte	.LLST90
 9116 0f57 12       		.uleb128 0x12
 9117 0f58 73636C00 		.ascii	"scl\000"
 9118 0f5c 01       		.byte	0x1
 9119 0f5d D703     		.2byte	0x3d7
 9120 0f5f CE000000 		.4byte	0xce
 9121 0f63 CF170000 		.4byte	.LLST91
 9122 0f67 12       		.uleb128 0x12
 9123 0f68 72657300 		.ascii	"res\000"
 9124 0f6c 01       		.byte	0x1
 9125 0f6d D803     		.2byte	0x3d8
 9126 0f6f EF030000 		.4byte	0x3ef
 9127 0f73 0F180000 		.4byte	.LLST92
 9128 0f77 21       		.uleb128 0x21
 9129 0f78 1A000000 		.4byte	.LVL391
 9130 0f7c C80C0000 		.4byte	0xcc8
 9131 0f80 1C       		.uleb128 0x1c
 9132 0f81 46000000 		.4byte	.LVL400
 9133 0f85 C80C0000 		.4byte	0xcc8
 9134 0f89 9A0F0000 		.4byte	0xf9a
 9135 0f8d 1D       		.uleb128 0x1d
 9136 0f8e 01       		.uleb128 0x1
 9137 0f8f 51       		.byte	0x51
 9138 0f90 02       		.uleb128 0x2
 9139 0f91 74       		.byte	0x74
 9140 0f92 00       		.sleb128 0
 9141 0f93 1D       		.uleb128 0x1d
 9142 0f94 01       		.uleb128 0x1
 9143 0f95 50       		.byte	0x50
 9144 0f96 02       		.uleb128 0x2
 9145 0f97 75       		.byte	0x75
 9146 0f98 00       		.sleb128 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 231


 9147 0f99 00       		.byte	0
 9148 0f9a 1C       		.uleb128 0x1c
 9149 0f9b 62000000 		.4byte	.LVL402
 9150 0f9f 3C0E0000 		.4byte	0xe3c
 9151 0fa3 BD0F0000 		.4byte	0xfbd
 9152 0fa7 1D       		.uleb128 0x1d
 9153 0fa8 01       		.uleb128 0x1
 9154 0fa9 52       		.byte	0x52
 9155 0faa 05       		.uleb128 0x5
 9156 0fab 0C       		.byte	0xc
 9157 0fac FFFFFF0F 		.4byte	0xfffffff
 9158 0fb0 1D       		.uleb128 0x1d
 9159 0fb1 01       		.uleb128 0x1
 9160 0fb2 51       		.byte	0x51
 9161 0fb3 02       		.uleb128 0x2
 9162 0fb4 74       		.byte	0x74
 9163 0fb5 00       		.sleb128 0
 9164 0fb6 1D       		.uleb128 0x1d
 9165 0fb7 01       		.uleb128 0x1
 9166 0fb8 50       		.byte	0x50
 9167 0fb9 02       		.uleb128 0x2
 9168 0fba 75       		.byte	0x75
 9169 0fbb 00       		.sleb128 0
 9170 0fbc 00       		.byte	0
 9171 0fbd 1E       		.uleb128 0x1e
 9172 0fbe 74000000 		.4byte	.LVL404
 9173 0fc2 3C0E0000 		.4byte	0xe3c
 9174 0fc6 1D       		.uleb128 0x1d
 9175 0fc7 01       		.uleb128 0x1
 9176 0fc8 52       		.byte	0x52
 9177 0fc9 02       		.uleb128 0x2
 9178 0fca 74       		.byte	0x74
 9179 0fcb 00       		.sleb128 0
 9180 0fcc 1D       		.uleb128 0x1d
 9181 0fcd 01       		.uleb128 0x1
 9182 0fce 51       		.byte	0x51
 9183 0fcf 02       		.uleb128 0x2
 9184 0fd0 77       		.byte	0x77
 9185 0fd1 00       		.sleb128 0
 9186 0fd2 1D       		.uleb128 0x1d
 9187 0fd3 01       		.uleb128 0x1
 9188 0fd4 50       		.byte	0x50
 9189 0fd5 02       		.uleb128 0x2
 9190 0fd6 75       		.byte	0x75
 9191 0fd7 00       		.sleb128 0
 9192 0fd8 00       		.byte	0
 9193 0fd9 00       		.byte	0
 9194 0fda 17       		.uleb128 0x17
 9195 0fdb E6020000 		.4byte	.LASF119
 9196 0fdf 01       		.byte	0x1
 9197 0fe0 5904     		.2byte	0x459
 9198 0fe2 EF030000 		.4byte	0x3ef
 9199 0fe6 00000000 		.4byte	.LFB17
 9200 0fea 14010000 		.4byte	.LFE17-.LFB17
 9201 0fee 01       		.uleb128 0x1
 9202 0fef 9C       		.byte	0x9c
 9203 0ff0 C2100000 		.4byte	0x10c2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 232


 9204 0ff4 11       		.uleb128 0x11
 9205 0ff5 646A00   		.ascii	"dj\000"
 9206 0ff8 01       		.byte	0x1
 9207 0ff9 5A04     		.2byte	0x45a
 9208 0ffb 52060000 		.4byte	0x652
 9209 0fff 2D180000 		.4byte	.LLST93
 9210 1003 19       		.uleb128 0x19
 9211 1004 2C020000 		.4byte	.LASF120
 9212 1008 01       		.byte	0x1
 9213 1009 5B04     		.2byte	0x45b
 9214 100b 7E000000 		.4byte	0x7e
 9215 100f A1180000 		.4byte	.LLST94
 9216 1013 1F       		.uleb128 0x1f
 9217 1014 A4020000 		.4byte	.LASF112
 9218 1018 01       		.byte	0x1
 9219 1019 5E04     		.2byte	0x45e
 9220 101b CE000000 		.4byte	0xce
 9221 101f F1180000 		.4byte	.LLST95
 9222 1023 12       		.uleb128 0x12
 9223 1024 6900     		.ascii	"i\000"
 9224 1026 01       		.byte	0x1
 9225 1027 5F04     		.2byte	0x45f
 9226 1029 C3000000 		.4byte	0xc3
 9227 102d 93190000 		.4byte	.LLST96
 9228 1031 24       		.uleb128 0x24
 9229 1032 00000000 		.4byte	.Ldebug_ranges0+0
 9230 1036 A8100000 		.4byte	0x10a8
 9231 103a 12       		.uleb128 0x12
 9232 103b 6300     		.ascii	"c\000"
 9233 103d 01       		.byte	0x1
 9234 103e 7504     		.2byte	0x475
 9235 1040 B8000000 		.4byte	0xb8
 9236 1044 A6190000 		.4byte	.LLST97
 9237 1048 21       		.uleb128 0x21
 9238 1049 62000000 		.4byte	.LVL423
 9239 104d FF0E0000 		.4byte	0xeff
 9240 1051 1C       		.uleb128 0x1c
 9241 1052 78000000 		.4byte	.LVL426
 9242 1056 E3080000 		.4byte	0x8e3
 9243 105a 64100000 		.4byte	0x1064
 9244 105e 1D       		.uleb128 0x1d
 9245 105f 01       		.uleb128 0x1
 9246 1060 51       		.byte	0x51
 9247 1061 01       		.uleb128 0x1
 9248 1062 30       		.byte	0x30
 9249 1063 00       		.byte	0
 9250 1064 1C       		.uleb128 0x1c
 9251 1065 8A000000 		.4byte	.LVL427
 9252 1069 F1040000 		.4byte	0x4f1
 9253 106d 7E100000 		.4byte	0x107e
 9254 1071 1D       		.uleb128 0x1d
 9255 1072 01       		.uleb128 0x1
 9256 1073 52       		.byte	0x52
 9257 1074 03       		.uleb128 0x3
 9258 1075 0A       		.byte	0xa
 9259 1076 0002     		.2byte	0x200
 9260 1078 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 233


 9261 1079 01       		.uleb128 0x1
 9262 107a 51       		.byte	0x51
 9263 107b 01       		.uleb128 0x1
 9264 107c 30       		.byte	0x30
 9265 107d 00       		.byte	0
 9266 107e 1C       		.uleb128 0x1c
 9267 107f 94000000 		.4byte	.LVL429
 9268 1083 8E0C0000 		.4byte	0xc8e
 9269 1087 98100000 		.4byte	0x1098
 9270 108b 1D       		.uleb128 0x1d
 9271 108c 01       		.uleb128 0x1
 9272 108d 51       		.byte	0x51
 9273 108e 02       		.uleb128 0x2
 9274 108f 78       		.byte	0x78
 9275 1090 00       		.sleb128 0
 9276 1091 1D       		.uleb128 0x1d
 9277 1092 01       		.uleb128 0x1
 9278 1093 50       		.byte	0x50
 9279 1094 02       		.uleb128 0x2
 9280 1095 76       		.byte	0x76
 9281 1096 00       		.sleb128 0
 9282 1097 00       		.byte	0
 9283 1098 1E       		.uleb128 0x1e
 9284 1099 A6000000 		.4byte	.LVL432
 9285 109d E3080000 		.4byte	0x8e3
 9286 10a1 1D       		.uleb128 0x1d
 9287 10a2 01       		.uleb128 0x1
 9288 10a3 51       		.byte	0x51
 9289 10a4 01       		.uleb128 0x1
 9290 10a5 30       		.byte	0x30
 9291 10a6 00       		.byte	0
 9292 10a7 00       		.byte	0
 9293 10a8 21       		.uleb128 0x21
 9294 10a9 44000000 		.4byte	.LVL420
 9295 10ad C80C0000 		.4byte	0xcc8
 9296 10b1 1E       		.uleb128 0x1e
 9297 10b2 D0000000 		.4byte	.LVL436
 9298 10b6 8E0C0000 		.4byte	0xc8e
 9299 10ba 1D       		.uleb128 0x1d
 9300 10bb 01       		.uleb128 0x1
 9301 10bc 51       		.byte	0x51
 9302 10bd 02       		.uleb128 0x2
 9303 10be 78       		.byte	0x78
 9304 10bf 00       		.sleb128 0
 9305 10c0 00       		.byte	0
 9306 10c1 00       		.byte	0
 9307 10c2 17       		.uleb128 0x17
 9308 10c3 E6010000 		.4byte	.LASF121
 9309 10c7 01       		.byte	0x1
 9310 10c8 4905     		.2byte	0x549
 9311 10ca EF030000 		.4byte	0x3ef
 9312 10ce 00000000 		.4byte	.LFB18
 9313 10d2 48000000 		.4byte	.LFE18-.LFB18
 9314 10d6 01       		.uleb128 0x1
 9315 10d7 9C       		.byte	0x9c
 9316 10d8 64110000 		.4byte	0x1164
 9317 10dc 11       		.uleb128 0x11
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 234


 9318 10dd 646A00   		.ascii	"dj\000"
 9319 10e0 01       		.byte	0x1
 9320 10e1 4A05     		.2byte	0x54a
 9321 10e3 52060000 		.4byte	0x652
 9322 10e7 DB190000 		.4byte	.LLST98
 9323 10eb 12       		.uleb128 0x12
 9324 10ec 72657300 		.ascii	"res\000"
 9325 10f0 01       		.byte	0x1
 9326 10f1 4D05     		.2byte	0x54d
 9327 10f3 EF030000 		.4byte	0x3ef
 9328 10f7 071A0000 		.4byte	.LLST99
 9329 10fb 12       		.uleb128 0x12
 9330 10fc 6300     		.ascii	"c\000"
 9331 10fe 01       		.byte	0x1
 9332 10ff 4E05     		.2byte	0x54e
 9333 1101 B8000000 		.4byte	0xb8
 9334 1105 461A0000 		.4byte	.LLST100
 9335 1109 12       		.uleb128 0x12
 9336 110a 64697200 		.ascii	"dir\000"
 9337 110e 01       		.byte	0x1
 9338 110f 4E05     		.2byte	0x54e
 9339 1111 8C020000 		.4byte	0x28c
 9340 1115 701A0000 		.4byte	.LLST101
 9341 1119 1C       		.uleb128 0x1c
 9342 111a 0A000000 		.4byte	.LVL458
 9343 111e 7A0D0000 		.4byte	0xd7a
 9344 1122 32110000 		.4byte	0x1132
 9345 1126 1D       		.uleb128 0x1d
 9346 1127 01       		.uleb128 0x1
 9347 1128 51       		.byte	0x51
 9348 1129 01       		.uleb128 0x1
 9349 112a 30       		.byte	0x30
 9350 112b 1D       		.uleb128 0x1d
 9351 112c 01       		.uleb128 0x1
 9352 112d 50       		.byte	0x50
 9353 112e 02       		.uleb128 0x2
 9354 112f 75       		.byte	0x75
 9355 1130 00       		.sleb128 0
 9356 1131 00       		.byte	0
 9357 1132 21       		.uleb128 0x21
 9358 1133 16000000 		.4byte	.LVL460
 9359 1137 E3080000 		.4byte	0x8e3
 9360 113b 1C       		.uleb128 0x1c
 9361 113c 30000000 		.4byte	.LVL465
 9362 1140 44050000 		.4byte	0x544
 9363 1144 4E110000 		.4byte	0x114e
 9364 1148 1D       		.uleb128 0x1d
 9365 1149 01       		.uleb128 0x1
 9366 114a 52       		.byte	0x52
 9367 114b 01       		.uleb128 0x1
 9368 114c 3B       		.byte	0x3b
 9369 114d 00       		.byte	0
 9370 114e 1E       		.uleb128 0x1e
 9371 114f 3C000000 		.4byte	.LVL466
 9372 1153 DA0F0000 		.4byte	0xfda
 9373 1157 1D       		.uleb128 0x1d
 9374 1158 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 235


 9375 1159 51       		.byte	0x51
 9376 115a 01       		.uleb128 0x1
 9377 115b 30       		.byte	0x30
 9378 115c 1D       		.uleb128 0x1d
 9379 115d 01       		.uleb128 0x1
 9380 115e 50       		.byte	0x50
 9381 115f 02       		.uleb128 0x2
 9382 1160 75       		.byte	0x75
 9383 1161 00       		.sleb128 0
 9384 1162 00       		.byte	0
 9385 1163 00       		.byte	0
 9386 1164 17       		.uleb128 0x17
 9387 1165 D0040000 		.4byte	.LASF122
 9388 1169 01       		.byte	0x1
 9389 116a 7F07     		.2byte	0x77f
 9390 116c EF030000 		.4byte	0x3ef
 9391 1170 00000000 		.4byte	.LFB24
 9392 1174 84000000 		.4byte	.LFE24-.LFB24
 9393 1178 01       		.uleb128 0x1
 9394 1179 9C       		.byte	0x9c
 9395 117a 10120000 		.4byte	0x1210
 9396 117e 11       		.uleb128 0x11
 9397 117f 646A00   		.ascii	"dj\000"
 9398 1182 01       		.byte	0x1
 9399 1183 8007     		.2byte	0x780
 9400 1185 52060000 		.4byte	0x652
 9401 1189 8E1A0000 		.4byte	.LLST102
 9402 118d 19       		.uleb128 0x19
 9403 118e 85000000 		.4byte	.LASF93
 9404 1192 01       		.byte	0x1
 9405 1193 8107     		.2byte	0x781
 9406 1195 3A080000 		.4byte	0x83a
 9407 1199 BA1A0000 		.4byte	.LLST103
 9408 119d 12       		.uleb128 0x12
 9409 119e 72657300 		.ascii	"res\000"
 9410 11a2 01       		.byte	0x1
 9411 11a3 8407     		.2byte	0x784
 9412 11a5 EF030000 		.4byte	0x3ef
 9413 11a9 E71A0000 		.4byte	.LLST104
 9414 11ad 12       		.uleb128 0x12
 9415 11ae 64697200 		.ascii	"dir\000"
 9416 11b2 01       		.byte	0x1
 9417 11b3 8507     		.2byte	0x785
 9418 11b5 8C020000 		.4byte	0x28c
 9419 11b9 261B0000 		.4byte	.LLST105
 9420 11bd 12       		.uleb128 0x12
 9421 11be 6E7300   		.ascii	"ns\000"
 9422 11c1 01       		.byte	0x1
 9423 11c2 8507     		.2byte	0x785
 9424 11c4 B8000000 		.4byte	0xb8
 9425 11c8 501B0000 		.4byte	.LLST106
 9426 11cc 1C       		.uleb128 0x1c
 9427 11cd 2A000000 		.4byte	.LVL476
 9428 11d1 7A0D0000 		.4byte	0xd7a
 9429 11d5 E5110000 		.4byte	0x11e5
 9430 11d9 1D       		.uleb128 0x1d
 9431 11da 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 236


 9432 11db 51       		.byte	0x51
 9433 11dc 01       		.uleb128 0x1
 9434 11dd 30       		.byte	0x30
 9435 11de 1D       		.uleb128 0x1d
 9436 11df 01       		.uleb128 0x1
 9437 11e0 50       		.byte	0x50
 9438 11e1 02       		.uleb128 0x2
 9439 11e2 74       		.byte	0x74
 9440 11e3 00       		.sleb128 0
 9441 11e4 00       		.byte	0
 9442 11e5 1C       		.uleb128 0x1c
 9443 11e6 38000000 		.4byte	.LVL478
 9444 11ea 40070000 		.4byte	0x740
 9445 11ee FF110000 		.4byte	0x11ff
 9446 11f2 1D       		.uleb128 0x1d
 9447 11f3 01       		.uleb128 0x1
 9448 11f4 51       		.byte	0x51
 9449 11f5 02       		.uleb128 0x2
 9450 11f6 91       		.byte	0x91
 9451 11f7 74       		.sleb128 -12
 9452 11f8 1D       		.uleb128 0x1d
 9453 11f9 01       		.uleb128 0x1
 9454 11fa 50       		.byte	0x50
 9455 11fb 02       		.uleb128 0x2
 9456 11fc 74       		.byte	0x74
 9457 11fd 00       		.sleb128 0
 9458 11fe 00       		.byte	0
 9459 11ff 1E       		.uleb128 0x1e
 9460 1200 42000000 		.4byte	.LVL480
 9461 1204 C2100000 		.4byte	0x10c2
 9462 1208 1D       		.uleb128 0x1d
 9463 1209 01       		.uleb128 0x1
 9464 120a 50       		.byte	0x50
 9465 120b 02       		.uleb128 0x2
 9466 120c 74       		.byte	0x74
 9467 120d 00       		.sleb128 0
 9468 120e 00       		.byte	0
 9469 120f 00       		.byte	0
 9470 1210 17       		.uleb128 0x17
 9471 1211 00050000 		.4byte	.LASF123
 9472 1215 01       		.byte	0x1
 9473 1216 BF05     		.2byte	0x5bf
 9474 1218 EF030000 		.4byte	0x3ef
 9475 121c 00000000 		.4byte	.LFB20
 9476 1220 62000000 		.4byte	.LFE20-.LFB20
 9477 1224 01       		.uleb128 0x1
 9478 1225 9C       		.byte	0x9c
 9479 1226 E0120000 		.4byte	0x12e0
 9480 122a 11       		.uleb128 0x11
 9481 122b 646A00   		.ascii	"dj\000"
 9482 122e 01       		.byte	0x1
 9483 122f C005     		.2byte	0x5c0
 9484 1231 52060000 		.4byte	0x652
 9485 1235 9B1B0000 		.4byte	.LLST107
 9486 1239 12       		.uleb128 0x12
 9487 123a 72657300 		.ascii	"res\000"
 9488 123e 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 237


 9489 123f C305     		.2byte	0x5c3
 9490 1241 EF030000 		.4byte	0x3ef
 9491 1245 C71B0000 		.4byte	.LLST108
 9492 1249 12       		.uleb128 0x12
 9493 124a 6300     		.ascii	"c\000"
 9494 124c 01       		.byte	0x1
 9495 124d C405     		.2byte	0x5c4
 9496 124f B8000000 		.4byte	0xb8
 9497 1253 1C1C0000 		.4byte	.LLST109
 9498 1257 12       		.uleb128 0x12
 9499 1258 64697200 		.ascii	"dir\000"
 9500 125c 01       		.byte	0x1
 9501 125d C405     		.2byte	0x5c4
 9502 125f 8C020000 		.4byte	0x28c
 9503 1263 2F1C0000 		.4byte	.LLST110
 9504 1267 1C       		.uleb128 0x1c
 9505 1268 0A000000 		.4byte	.LVL495
 9506 126c 7A0D0000 		.4byte	0xd7a
 9507 1270 80120000 		.4byte	0x1280
 9508 1274 1D       		.uleb128 0x1d
 9509 1275 01       		.uleb128 0x1
 9510 1276 51       		.byte	0x51
 9511 1277 01       		.uleb128 0x1
 9512 1278 30       		.byte	0x30
 9513 1279 1D       		.uleb128 0x1d
 9514 127a 01       		.uleb128 0x1
 9515 127b 50       		.byte	0x50
 9516 127c 02       		.uleb128 0x2
 9517 127d 75       		.byte	0x75
 9518 127e 00       		.sleb128 0
 9519 127f 00       		.byte	0
 9520 1280 21       		.uleb128 0x21
 9521 1281 16000000 		.4byte	.LVL498
 9522 1285 E3080000 		.4byte	0x8e3
 9523 1289 1C       		.uleb128 0x1c
 9524 128a 2E000000 		.4byte	.LVL502
 9525 128e DA0F0000 		.4byte	0xfda
 9526 1292 A2120000 		.4byte	0x12a2
 9527 1296 1D       		.uleb128 0x1d
 9528 1297 01       		.uleb128 0x1
 9529 1298 51       		.byte	0x51
 9530 1299 01       		.uleb128 0x1
 9531 129a 31       		.byte	0x31
 9532 129b 1D       		.uleb128 0x1d
 9533 129c 01       		.uleb128 0x1
 9534 129d 50       		.byte	0x50
 9535 129e 02       		.uleb128 0x2
 9536 129f 75       		.byte	0x75
 9537 12a0 00       		.sleb128 0
 9538 12a1 00       		.byte	0
 9539 12a2 21       		.uleb128 0x21
 9540 12a3 3E000000 		.4byte	.LVL505
 9541 12a7 E3080000 		.4byte	0x8e3
 9542 12ab 1C       		.uleb128 0x1c
 9543 12ac 4E000000 		.4byte	.LVL509
 9544 12b0 F1040000 		.4byte	0x4f1
 9545 12b4 CA120000 		.4byte	0x12ca
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 238


 9546 12b8 1D       		.uleb128 0x1d
 9547 12b9 01       		.uleb128 0x1
 9548 12ba 52       		.byte	0x52
 9549 12bb 02       		.uleb128 0x2
 9550 12bc 08       		.byte	0x8
 9551 12bd 20       		.byte	0x20
 9552 12be 1D       		.uleb128 0x1d
 9553 12bf 01       		.uleb128 0x1
 9554 12c0 51       		.byte	0x51
 9555 12c1 01       		.uleb128 0x1
 9556 12c2 30       		.byte	0x30
 9557 12c3 1D       		.uleb128 0x1d
 9558 12c4 01       		.uleb128 0x1
 9559 12c5 50       		.byte	0x50
 9560 12c6 02       		.uleb128 0x2
 9561 12c7 76       		.byte	0x76
 9562 12c8 00       		.sleb128 0
 9563 12c9 00       		.byte	0
 9564 12ca 1E       		.uleb128 0x1e
 9565 12cb 58000000 		.4byte	.LVL510
 9566 12cf 7A040000 		.4byte	0x47a
 9567 12d3 1D       		.uleb128 0x1d
 9568 12d4 01       		.uleb128 0x1
 9569 12d5 52       		.byte	0x52
 9570 12d6 01       		.uleb128 0x1
 9571 12d7 3B       		.byte	0x3b
 9572 12d8 1D       		.uleb128 0x1d
 9573 12d9 01       		.uleb128 0x1
 9574 12da 50       		.byte	0x50
 9575 12db 02       		.uleb128 0x2
 9576 12dc 76       		.byte	0x76
 9577 12dd 00       		.sleb128 0
 9578 12de 00       		.byte	0
 9579 12df 00       		.byte	0
 9580 12e0 17       		.uleb128 0x17
 9581 12e1 8A060000 		.4byte	.LASF124
 9582 12e5 01       		.byte	0x1
 9583 12e6 8605     		.2byte	0x586
 9584 12e8 EF030000 		.4byte	0x3ef
 9585 12ec 00000000 		.4byte	.LFB19
 9586 12f0 48000000 		.4byte	.LFE19-.LFB19
 9587 12f4 01       		.uleb128 0x1
 9588 12f5 9C       		.byte	0x9c
 9589 12f6 56130000 		.4byte	0x1356
 9590 12fa 11       		.uleb128 0x11
 9591 12fb 646A00   		.ascii	"dj\000"
 9592 12fe 01       		.byte	0x1
 9593 12ff 8705     		.2byte	0x587
 9594 1301 52060000 		.4byte	0x652
 9595 1305 421C0000 		.4byte	.LLST111
 9596 1309 12       		.uleb128 0x12
 9597 130a 72657300 		.ascii	"res\000"
 9598 130e 01       		.byte	0x1
 9599 130f 8A05     		.2byte	0x58a
 9600 1311 EF030000 		.4byte	0x3ef
 9601 1315 6E1C0000 		.4byte	.LLST112
 9602 1319 12       		.uleb128 0x12
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 239


 9603 131a 6300     		.ascii	"c\000"
 9604 131c 01       		.byte	0x1
 9605 131d 8B05     		.2byte	0x58b
 9606 131f B8000000 		.4byte	0xb8
 9607 1323 A31C0000 		.4byte	.LLST113
 9608 1327 12       		.uleb128 0x12
 9609 1328 64697200 		.ascii	"dir\000"
 9610 132c 01       		.byte	0x1
 9611 132d 8B05     		.2byte	0x58b
 9612 132f 8C020000 		.4byte	0x28c
 9613 1333 CD1C0000 		.4byte	.LLST114
 9614 1337 21       		.uleb128 0x21
 9615 1338 0E000000 		.4byte	.LVL519
 9616 133c E3080000 		.4byte	0x8e3
 9617 1340 1E       		.uleb128 0x1e
 9618 1341 30000000 		.4byte	.LVL524
 9619 1345 DA0F0000 		.4byte	0xfda
 9620 1349 1D       		.uleb128 0x1d
 9621 134a 01       		.uleb128 0x1
 9622 134b 51       		.byte	0x51
 9623 134c 01       		.uleb128 0x1
 9624 134d 30       		.byte	0x30
 9625 134e 1D       		.uleb128 0x1d
 9626 134f 01       		.uleb128 0x1
 9627 1350 50       		.byte	0x50
 9628 1351 02       		.uleb128 0x2
 9629 1352 74       		.byte	0x74
 9630 1353 00       		.sleb128 0
 9631 1354 00       		.byte	0
 9632 1355 00       		.byte	0
 9633 1356 17       		.uleb128 0x17
 9634 1357 A8050000 		.4byte	.LASF125
 9635 135b 01       		.byte	0x1
 9636 135c 9D03     		.2byte	0x39d
 9637 135e EF030000 		.4byte	0x3ef
 9638 1362 00000000 		.4byte	.LFB14
 9639 1366 60000000 		.4byte	.LFE14-.LFB14
 9640 136a 01       		.uleb128 0x1
 9641 136b 9C       		.byte	0x9c
 9642 136c E5130000 		.4byte	0x13e5
 9643 1370 11       		.uleb128 0x11
 9644 1371 667300   		.ascii	"fs\000"
 9645 1374 01       		.byte	0x1
 9646 1375 9E03     		.2byte	0x39e
 9647 1377 86020000 		.4byte	0x286
 9648 137b EB1C0000 		.4byte	.LLST115
 9649 137f 19       		.uleb128 0x19
 9650 1380 A4020000 		.4byte	.LASF112
 9651 1384 01       		.byte	0x1
 9652 1385 9F03     		.2byte	0x39f
 9653 1387 CE000000 		.4byte	0xce
 9654 138b 2D1D0000 		.4byte	.LLST116
 9655 138f 12       		.uleb128 0x12
 9656 1390 72657300 		.ascii	"res\000"
 9657 1394 01       		.byte	0x1
 9658 1395 A203     		.2byte	0x3a2
 9659 1397 EF030000 		.4byte	0x3ef
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 240


 9660 139b 771D0000 		.4byte	.LLST117
 9661 139f 12       		.uleb128 0x12
 9662 13a0 6E787400 		.ascii	"nxt\000"
 9663 13a4 01       		.byte	0x1
 9664 13a5 A303     		.2byte	0x3a3
 9665 13a7 CE000000 		.4byte	0xce
 9666 13ab B61D0000 		.4byte	.LLST118
 9667 13af 1C       		.uleb128 0x1c
 9668 13b0 1C000000 		.4byte	.LVL531
 9669 13b4 C80C0000 		.4byte	0xcc8
 9670 13b8 C9130000 		.4byte	0x13c9
 9671 13bc 1D       		.uleb128 0x1d
 9672 13bd 01       		.uleb128 0x1
 9673 13be 51       		.byte	0x51
 9674 13bf 02       		.uleb128 0x2
 9675 13c0 75       		.byte	0x75
 9676 13c1 00       		.sleb128 0
 9677 13c2 1D       		.uleb128 0x1d
 9678 13c3 01       		.uleb128 0x1
 9679 13c4 50       		.byte	0x50
 9680 13c5 02       		.uleb128 0x2
 9681 13c6 74       		.byte	0x74
 9682 13c7 00       		.sleb128 0
 9683 13c8 00       		.byte	0
 9684 13c9 1E       		.uleb128 0x1e
 9685 13ca 32000000 		.4byte	.LVL534
 9686 13ce 3C0E0000 		.4byte	0xe3c
 9687 13d2 1D       		.uleb128 0x1d
 9688 13d3 01       		.uleb128 0x1
 9689 13d4 52       		.byte	0x52
 9690 13d5 01       		.uleb128 0x1
 9691 13d6 30       		.byte	0x30
 9692 13d7 1D       		.uleb128 0x1d
 9693 13d8 01       		.uleb128 0x1
 9694 13d9 51       		.byte	0x51
 9695 13da 02       		.uleb128 0x2
 9696 13db 75       		.byte	0x75
 9697 13dc 00       		.sleb128 0
 9698 13dd 1D       		.uleb128 0x1d
 9699 13de 01       		.uleb128 0x1
 9700 13df 50       		.byte	0x50
 9701 13e0 02       		.uleb128 0x2
 9702 13e1 74       		.byte	0x74
 9703 13e2 00       		.sleb128 0
 9704 13e3 00       		.byte	0
 9705 13e4 00       		.byte	0
 9706 13e5 23       		.uleb128 0x23
 9707 13e6 7D040000 		.4byte	.LASF126
 9708 13ea 01       		.byte	0x1
 9709 13eb 9B08     		.2byte	0x89b
 9710 13ed EF030000 		.4byte	0x3ef
 9711 13f1 00000000 		.4byte	.LFB28
 9712 13f5 3C000000 		.4byte	.LFE28-.LFB28
 9713 13f9 01       		.uleb128 0x1
 9714 13fa 9C       		.byte	0x9c
 9715 13fb 3F140000 		.4byte	0x143f
 9716 13ff 11       		.uleb128 0x11
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 241


 9717 1400 766F6C00 		.ascii	"vol\000"
 9718 1404 01       		.byte	0x1
 9719 1405 9C08     		.2byte	0x89c
 9720 1407 B8000000 		.4byte	0xb8
 9721 140b DF1D0000 		.4byte	.LLST119
 9722 140f 11       		.uleb128 0x11
 9723 1410 667300   		.ascii	"fs\000"
 9724 1413 01       		.byte	0x1
 9725 1414 9D08     		.2byte	0x89d
 9726 1416 86020000 		.4byte	0x286
 9727 141a 191E0000 		.4byte	.LLST120
 9728 141e 12       		.uleb128 0x12
 9729 141f 72667300 		.ascii	"rfs\000"
 9730 1423 01       		.byte	0x1
 9731 1424 A008     		.2byte	0x8a0
 9732 1426 86020000 		.4byte	0x286
 9733 142a 501E0000 		.4byte	.LLST121
 9734 142e 1E       		.uleb128 0x1e
 9735 142f 1C000000 		.4byte	.LVL549
 9736 1433 0E070000 		.4byte	0x70e
 9737 1437 1D       		.uleb128 0x1d
 9738 1438 01       		.uleb128 0x1
 9739 1439 50       		.byte	0x50
 9740 143a 02       		.uleb128 0x2
 9741 143b 76       		.byte	0x76
 9742 143c 00       		.sleb128 0
 9743 143d 00       		.byte	0
 9744 143e 00       		.byte	0
 9745 143f 23       		.uleb128 0x23
 9746 1440 93060000 		.4byte	.LASF127
 9747 1444 01       		.byte	0x1
 9748 1445 C308     		.2byte	0x8c3
 9749 1447 EF030000 		.4byte	0x3ef
 9750 144b 00000000 		.4byte	.LFB29
 9751 144f 9E010000 		.4byte	.LFE29-.LFB29
 9752 1453 01       		.uleb128 0x1
 9753 1454 9C       		.byte	0x9c
 9754 1455 AE150000 		.4byte	0x15ae
 9755 1459 11       		.uleb128 0x11
 9756 145a 667000   		.ascii	"fp\000"
 9757 145d 01       		.byte	0x1
 9758 145e C408     		.2byte	0x8c4
 9759 1460 AE150000 		.4byte	0x15ae
 9760 1464 631E0000 		.4byte	.LLST122
 9761 1468 19       		.uleb128 0x19
 9762 1469 85000000 		.4byte	.LASF93
 9763 146d 01       		.byte	0x1
 9764 146e C508     		.2byte	0x8c5
 9765 1470 3A080000 		.4byte	0x83a
 9766 1474 8F1E0000 		.4byte	.LLST123
 9767 1478 19       		.uleb128 0x19
 9768 1479 80050000 		.4byte	.LASF128
 9769 147d 01       		.byte	0x1
 9770 147e C608     		.2byte	0x8c6
 9771 1480 B8000000 		.4byte	0xb8
 9772 1484 B01E0000 		.4byte	.LLST124
 9773 1488 12       		.uleb128 0x12
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 242


 9774 1489 72657300 		.ascii	"res\000"
 9775 148d 01       		.byte	0x1
 9776 148e C908     		.2byte	0x8c9
 9777 1490 EF030000 		.4byte	0x3ef
 9778 1494 CE1E0000 		.4byte	.LLST125
 9779 1498 18       		.uleb128 0x18
 9780 1499 646A00   		.ascii	"dj\000"
 9781 149c 01       		.byte	0x1
 9782 149d CA08     		.2byte	0x8ca
 9783 149f 03030000 		.4byte	0x303
 9784 14a3 02       		.uleb128 0x2
 9785 14a4 91       		.byte	0x91
 9786 14a5 44       		.sleb128 -60
 9787 14a6 12       		.uleb128 0x12
 9788 14a7 64697200 		.ascii	"dir\000"
 9789 14ab 01       		.byte	0x1
 9790 14ac CB08     		.2byte	0x8cb
 9791 14ae 8C020000 		.4byte	0x28c
 9792 14b2 4F1F0000 		.4byte	.LLST126
 9793 14b6 18       		.uleb128 0x18
 9794 14b7 73666E00 		.ascii	"sfn\000"
 9795 14bb 01       		.byte	0x1
 9796 14bc CC08     		.2byte	0x8cc
 9797 14be B4150000 		.4byte	0x15b4
 9798 14c2 03       		.uleb128 0x3
 9799 14c3 91       		.byte	0x91
 9800 14c4 B87F     		.sleb128 -72
 9801 14c6 20       		.uleb128 0x20
 9802 14c7 62000000 		.4byte	.LBB5
 9803 14cb A8000000 		.4byte	.LBE5-.LBB5
 9804 14cf 3C150000 		.4byte	0x153c
 9805 14d3 12       		.uleb128 0x12
 9806 14d4 647700   		.ascii	"dw\000"
 9807 14d7 01       		.byte	0x1
 9808 14d8 E808     		.2byte	0x8e8
 9809 14da CE000000 		.4byte	0xce
 9810 14de 621F0000 		.4byte	.LLST127
 9811 14e2 12       		.uleb128 0x12
 9812 14e3 636C00   		.ascii	"cl\000"
 9813 14e6 01       		.byte	0x1
 9814 14e7 E808     		.2byte	0x8e8
 9815 14e9 CE000000 		.4byte	0xce
 9816 14ed 8B1F0000 		.4byte	.LLST128
 9817 14f1 21       		.uleb128 0x21
 9818 14f2 6E000000 		.4byte	.LVL566
 9819 14f6 58060000 		.4byte	0x658
 9820 14fa 1C       		.uleb128 0x1c
 9821 14fb 78000000 		.4byte	.LVL567
 9822 14ff 10120000 		.4byte	0x1210
 9823 1503 0E150000 		.4byte	0x150e
 9824 1507 1D       		.uleb128 0x1d
 9825 1508 01       		.uleb128 0x1
 9826 1509 50       		.byte	0x50
 9827 150a 02       		.uleb128 0x2
 9828 150b 91       		.byte	0x91
 9829 150c 44       		.sleb128 -60
 9830 150d 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 243


 9831 150e 21       		.uleb128 0x21
 9832 150f A8000000 		.4byte	.LVL576
 9833 1513 84250000 		.4byte	0x2584
 9834 1517 1C       		.uleb128 0x1c
 9835 1518 F4000000 		.4byte	.LVL580
 9836 151c 56130000 		.4byte	0x1356
 9837 1520 2B150000 		.4byte	0x152b
 9838 1524 1D       		.uleb128 0x1d
 9839 1525 01       		.uleb128 0x1
 9840 1526 51       		.byte	0x51
 9841 1527 02       		.uleb128 0x2
 9842 1528 78       		.byte	0x78
 9843 1529 00       		.sleb128 0
 9844 152a 00       		.byte	0
 9845 152b 1E       		.uleb128 0x1e
 9846 152c 06010000 		.4byte	.LVL583
 9847 1530 E3080000 		.4byte	0x8e3
 9848 1534 1D       		.uleb128 0x1d
 9849 1535 01       		.uleb128 0x1
 9850 1536 51       		.byte	0x51
 9851 1537 02       		.uleb128 0x2
 9852 1538 79       		.byte	0x79
 9853 1539 00       		.sleb128 0
 9854 153a 00       		.byte	0
 9855 153b 00       		.byte	0
 9856 153c 1C       		.uleb128 0x1c
 9857 153d 26000000 		.4byte	.LVL556
 9858 1541 390A0000 		.4byte	0xa39
 9859 1545 5F150000 		.4byte	0x155f
 9860 1549 1D       		.uleb128 0x1d
 9861 154a 01       		.uleb128 0x1
 9862 154b 52       		.byte	0x52
 9863 154c 04       		.uleb128 0x4
 9864 154d 78       		.byte	0x78
 9865 154e 00       		.sleb128 0
 9866 154f 4E       		.byte	0x4e
 9867 1550 1A       		.byte	0x1a
 9868 1551 1D       		.uleb128 0x1d
 9869 1552 01       		.uleb128 0x1
 9870 1553 51       		.byte	0x51
 9871 1554 02       		.uleb128 0x2
 9872 1555 91       		.byte	0x91
 9873 1556 44       		.sleb128 -60
 9874 1557 1D       		.uleb128 0x1d
 9875 1558 01       		.uleb128 0x1
 9876 1559 50       		.byte	0x50
 9877 155a 03       		.uleb128 0x3
 9878 155b 91       		.byte	0x91
 9879 155c B47F     		.sleb128 -76
 9880 155e 00       		.byte	0
 9881 155f 1C       		.uleb128 0x1c
 9882 1560 38000000 		.4byte	.LVL559
 9883 1564 64110000 		.4byte	0x1164
 9884 1568 73150000 		.4byte	0x1573
 9885 156c 1D       		.uleb128 0x1d
 9886 156d 01       		.uleb128 0x1
 9887 156e 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 244


 9888 156f 02       		.uleb128 0x2
 9889 1570 91       		.byte	0x91
 9890 1571 44       		.sleb128 -60
 9891 1572 00       		.byte	0
 9892 1573 1C       		.uleb128 0x1c
 9893 1574 54000000 		.4byte	.LVL562
 9894 1578 FD050000 		.4byte	0x5fd
 9895 157c 92150000 		.4byte	0x1592
 9896 1580 1D       		.uleb128 0x1d
 9897 1581 01       		.uleb128 0x1
 9898 1582 51       		.byte	0x51
 9899 1583 07       		.uleb128 0x7
 9900 1584 77       		.byte	0x77
 9901 1585 00       		.sleb128 0
 9902 1586 09       		.byte	0x9
 9903 1587 FE       		.byte	0xfe
 9904 1588 1A       		.byte	0x1a
 9905 1589 30       		.byte	0x30
 9906 158a 2E       		.byte	0x2e
 9907 158b 1D       		.uleb128 0x1d
 9908 158c 01       		.uleb128 0x1
 9909 158d 50       		.byte	0x50
 9910 158e 02       		.uleb128 0x2
 9911 158f 91       		.byte	0x91
 9912 1590 44       		.sleb128 -60
 9913 1591 00       		.byte	0
 9914 1592 1E       		.uleb128 0x1e
 9915 1593 4A010000 		.4byte	.LVL590
 9916 1597 81060000 		.4byte	0x681
 9917 159b 1D       		.uleb128 0x1d
 9918 159c 01       		.uleb128 0x1
 9919 159d 51       		.byte	0x51
 9920 159e 07       		.uleb128 0x7
 9921 159f 77       		.byte	0x77
 9922 15a0 00       		.sleb128 0
 9923 15a1 09       		.byte	0x9
 9924 15a2 FE       		.byte	0xfe
 9925 15a3 1A       		.byte	0x1a
 9926 15a4 30       		.byte	0x30
 9927 15a5 2E       		.byte	0x2e
 9928 15a6 1D       		.uleb128 0x1d
 9929 15a7 01       		.uleb128 0x1
 9930 15a8 50       		.byte	0x50
 9931 15a9 02       		.uleb128 0x2
 9932 15aa 91       		.byte	0x91
 9933 15ab 44       		.sleb128 -60
 9934 15ac 00       		.byte	0
 9935 15ad 00       		.byte	0
 9936 15ae 0B       		.uleb128 0xb
 9937 15af 04       		.byte	0x4
 9938 15b0 92020000 		.4byte	0x292
 9939 15b4 08       		.uleb128 0x8
 9940 15b5 B8000000 		.4byte	0xb8
 9941 15b9 C4150000 		.4byte	0x15c4
 9942 15bd 0D       		.uleb128 0xd
 9943 15be DD010000 		.4byte	0x1dd
 9944 15c2 0B       		.byte	0xb
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 245


 9945 15c3 00       		.byte	0
 9946 15c4 23       		.uleb128 0x23
 9947 15c5 62000000 		.4byte	.LASF129
 9948 15c9 01       		.byte	0x1
 9949 15ca 4509     		.2byte	0x945
 9950 15cc EF030000 		.4byte	0x3ef
 9951 15d0 00000000 		.4byte	.LFB30
 9952 15d4 80010000 		.4byte	.LFE30-.LFB30
 9953 15d8 01       		.uleb128 0x1
 9954 15d9 9C       		.byte	0x9c
 9955 15da 19170000 		.4byte	0x1719
 9956 15de 11       		.uleb128 0x11
 9957 15df 667000   		.ascii	"fp\000"
 9958 15e2 01       		.byte	0x1
 9959 15e3 4609     		.2byte	0x946
 9960 15e5 AE150000 		.4byte	0x15ae
 9961 15e9 A91F0000 		.4byte	.LLST129
 9962 15ed 19       		.uleb128 0x19
 9963 15ee 2F010000 		.4byte	.LASF130
 9964 15f2 01       		.byte	0x1
 9965 15f3 4709     		.2byte	0x947
 9966 15f5 DD040000 		.4byte	0x4dd
 9967 15f9 D51F0000 		.4byte	.LLST130
 9968 15fd 11       		.uleb128 0x11
 9969 15fe 62747200 		.ascii	"btr\000"
 9970 1602 01       		.byte	0x1
 9971 1603 4809     		.2byte	0x948
 9972 1605 AD000000 		.4byte	0xad
 9973 1609 1A200000 		.4byte	.LLST131
 9974 160d 11       		.uleb128 0x11
 9975 160e 627200   		.ascii	"br\000"
 9976 1611 01       		.byte	0x1
 9977 1612 4909     		.2byte	0x949
 9978 1614 19170000 		.4byte	0x1719
 9979 1618 4E200000 		.4byte	.LLST132
 9980 161c 12       		.uleb128 0x12
 9981 161d 72657300 		.ascii	"res\000"
 9982 1621 01       		.byte	0x1
 9983 1622 4C09     		.2byte	0x94c
 9984 1624 EF030000 		.4byte	0x3ef
 9985 1628 7A200000 		.4byte	.LLST133
 9986 162c 1F       		.uleb128 0x1f
 9987 162d A4020000 		.4byte	.LASF112
 9988 1631 01       		.byte	0x1
 9989 1632 4D09     		.2byte	0x94d
 9990 1634 CE000000 		.4byte	0xce
 9991 1638 A3200000 		.4byte	.LLST134
 9992 163c 1F       		.uleb128 0x1f
 9993 163d C1000000 		.4byte	.LASF48
 9994 1641 01       		.byte	0x1
 9995 1642 4D09     		.2byte	0x94d
 9996 1644 CE000000 		.4byte	0xce
 9997 1648 E4200000 		.4byte	.LLST135
 9998 164c 1F       		.uleb128 0x1f
 9999 164d 15060000 		.4byte	.LASF131
 10000 1651 01       		.byte	0x1
 10001 1652 4D09     		.2byte	0x94d
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 246


 10002 1654 CE000000 		.4byte	0xce
 10003 1658 30210000 		.4byte	.LLST136
 10004 165c 1F       		.uleb128 0x1f
 10005 165d 55060000 		.4byte	.LASF132
 10006 1661 01       		.byte	0x1
 10007 1662 4E09     		.2byte	0x94e
 10008 1664 AD000000 		.4byte	0xad
 10009 1668 53210000 		.4byte	.LLST137
 10010 166c 12       		.uleb128 0x12
 10011 166d 636300   		.ascii	"cc\000"
 10012 1670 01       		.byte	0x1
 10013 1671 4E09     		.2byte	0x94e
 10014 1673 AD000000 		.4byte	0xad
 10015 1677 71210000 		.4byte	.LLST138
 10016 167b 1F       		.uleb128 0x1f
 10017 167c 4A000000 		.4byte	.LASF133
 10018 1680 01       		.byte	0x1
 10019 1681 4F09     		.2byte	0x94f
 10020 1683 B8000000 		.4byte	0xb8
 10021 1687 A5210000 		.4byte	.LLST139
 10022 168b 1F       		.uleb128 0x1f
 10023 168c 8A000000 		.4byte	.LASF134
 10024 1690 01       		.byte	0x1
 10025 1691 4F09     		.2byte	0x94f
 10026 1693 8C020000 		.4byte	0x28c
 10027 1697 C3210000 		.4byte	.LLST140
 10028 169b 21       		.uleb128 0x21
 10029 169c 20000000 		.4byte	.LVL601
 10030 16a0 F7090000 		.4byte	0x9f7
 10031 16a4 21       		.uleb128 0x21
 10032 16a5 68000000 		.4byte	.LVL608
 10033 16a9 C80C0000 		.4byte	0xcc8
 10034 16ad 1C       		.uleb128 0x1c
 10035 16ae 9A000000 		.4byte	.LVL614
 10036 16b2 8E0C0000 		.4byte	0xc8e
 10037 16b6 C1160000 		.4byte	0x16c1
 10038 16ba 1D       		.uleb128 0x1d
 10039 16bb 01       		.uleb128 0x1
 10040 16bc 50       		.byte	0x50
 10041 16bd 02       		.uleb128 0x2
 10042 16be 7A       		.byte	0x7a
 10043 16bf 00       		.sleb128 0
 10044 16c0 00       		.byte	0
 10045 16c1 1C       		.uleb128 0x1c
 10046 16c2 D6000000 		.4byte	.LVL621
 10047 16c6 17250000 		.4byte	0x2517
 10048 16ca E4160000 		.4byte	0x16e4
 10049 16ce 1D       		.uleb128 0x1d
 10050 16cf 01       		.uleb128 0x1
 10051 16d0 53       		.byte	0x53
 10052 16d1 05       		.uleb128 0x5
 10053 16d2 7B       		.byte	0x7b
 10054 16d3 00       		.sleb128 0
 10055 16d4 08       		.byte	0x8
 10056 16d5 FF       		.byte	0xff
 10057 16d6 1A       		.byte	0x1a
 10058 16d7 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 247


 10059 16d8 01       		.uleb128 0x1
 10060 16d9 52       		.byte	0x52
 10061 16da 02       		.uleb128 0x2
 10062 16db 79       		.byte	0x79
 10063 16dc 00       		.sleb128 0
 10064 16dd 1D       		.uleb128 0x1d
 10065 16de 01       		.uleb128 0x1
 10066 16df 51       		.byte	0x51
 10067 16e0 02       		.uleb128 0x2
 10068 16e1 78       		.byte	0x78
 10069 16e2 00       		.sleb128 0
 10070 16e3 00       		.byte	0
 10071 16e4 1C       		.uleb128 0x1c
 10072 16e5 08010000 		.4byte	.LVL624
 10073 16e9 7A040000 		.4byte	0x47a
 10074 16ed F9160000 		.4byte	0x16f9
 10075 16f1 1D       		.uleb128 0x1d
 10076 16f2 01       		.uleb128 0x1
 10077 16f3 52       		.byte	0x52
 10078 16f4 03       		.uleb128 0x3
 10079 16f5 0A       		.byte	0xa
 10080 16f6 0002     		.2byte	0x200
 10081 16f8 00       		.byte	0
 10082 16f9 21       		.uleb128 0x21
 10083 16fa 2C010000 		.4byte	.LVL631
 10084 16fe E3080000 		.4byte	0x8e3
 10085 1702 1E       		.uleb128 0x1e
 10086 1703 54010000 		.4byte	.LVL632
 10087 1707 7A040000 		.4byte	0x47a
 10088 170b 1D       		.uleb128 0x1d
 10089 170c 01       		.uleb128 0x1
 10090 170d 52       		.byte	0x52
 10091 170e 02       		.uleb128 0x2
 10092 170f 75       		.byte	0x75
 10093 1710 00       		.sleb128 0
 10094 1711 1D       		.uleb128 0x1d
 10095 1712 01       		.uleb128 0x1
 10096 1713 50       		.byte	0x50
 10097 1714 02       		.uleb128 0x2
 10098 1715 78       		.byte	0x78
 10099 1716 00       		.sleb128 0
 10100 1717 00       		.byte	0
 10101 1718 00       		.byte	0
 10102 1719 0B       		.uleb128 0xb
 10103 171a 04       		.byte	0x4
 10104 171b AD000000 		.4byte	0xad
 10105 171f 23       		.uleb128 0x23
 10106 1720 DE010000 		.4byte	.LASF135
 10107 1724 01       		.byte	0x1
 10108 1725 AA09     		.2byte	0x9aa
 10109 1727 EF030000 		.4byte	0x3ef
 10110 172b 00000000 		.4byte	.LFB31
 10111 172f F8010000 		.4byte	.LFE31-.LFB31
 10112 1733 01       		.uleb128 0x1
 10113 1734 9C       		.byte	0x9c
 10114 1735 A3180000 		.4byte	0x18a3
 10115 1739 11       		.uleb128 0x11
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 248


 10116 173a 667000   		.ascii	"fp\000"
 10117 173d 01       		.byte	0x1
 10118 173e AB09     		.2byte	0x9ab
 10119 1740 AE150000 		.4byte	0x15ae
 10120 1744 E1210000 		.4byte	.LLST141
 10121 1748 19       		.uleb128 0x19
 10122 1749 2F010000 		.4byte	.LASF130
 10123 174d 01       		.byte	0x1
 10124 174e AC09     		.2byte	0x9ac
 10125 1750 DF040000 		.4byte	0x4df
 10126 1754 0D220000 		.4byte	.LLST142
 10127 1758 11       		.uleb128 0x11
 10128 1759 62747700 		.ascii	"btw\000"
 10129 175d 01       		.byte	0x1
 10130 175e AD09     		.2byte	0x9ad
 10131 1760 AD000000 		.4byte	0xad
 10132 1764 52220000 		.4byte	.LLST143
 10133 1768 11       		.uleb128 0x11
 10134 1769 627700   		.ascii	"bw\000"
 10135 176c 01       		.byte	0x1
 10136 176d AE09     		.2byte	0x9ae
 10137 176f 19170000 		.4byte	0x1719
 10138 1773 89220000 		.4byte	.LLST144
 10139 1777 12       		.uleb128 0x12
 10140 1778 72657300 		.ascii	"res\000"
 10141 177c 01       		.byte	0x1
 10142 177d B109     		.2byte	0x9b1
 10143 177f EF030000 		.4byte	0x3ef
 10144 1783 B5220000 		.4byte	.LLST145
 10145 1787 1F       		.uleb128 0x1f
 10146 1788 A4020000 		.4byte	.LASF112
 10147 178c 01       		.byte	0x1
 10148 178d B209     		.2byte	0x9b2
 10149 178f CE000000 		.4byte	0xce
 10150 1793 DE220000 		.4byte	.LLST146
 10151 1797 1F       		.uleb128 0x1f
 10152 1798 C1000000 		.4byte	.LASF48
 10153 179c 01       		.byte	0x1
 10154 179d B209     		.2byte	0x9b2
 10155 179f CE000000 		.4byte	0xce
 10156 17a3 1D230000 		.4byte	.LLST147
 10157 17a7 1F       		.uleb128 0x1f
 10158 17a8 34030000 		.4byte	.LASF136
 10159 17ac 01       		.byte	0x1
 10160 17ad B309     		.2byte	0x9b3
 10161 17af AD000000 		.4byte	0xad
 10162 17b3 69230000 		.4byte	.LLST148
 10163 17b7 12       		.uleb128 0x12
 10164 17b8 636300   		.ascii	"cc\000"
 10165 17bb 01       		.byte	0x1
 10166 17bc B309     		.2byte	0x9b3
 10167 17be AD000000 		.4byte	0xad
 10168 17c2 87230000 		.4byte	.LLST149
 10169 17c6 1F       		.uleb128 0x1f
 10170 17c7 BB040000 		.4byte	.LASF137
 10171 17cb 01       		.byte	0x1
 10172 17cc B409     		.2byte	0x9b4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 249


 10173 17ce E6040000 		.4byte	0x4e6
 10174 17d2 BB230000 		.4byte	.LLST150
 10175 17d6 1F       		.uleb128 0x1f
 10176 17d7 4A000000 		.4byte	.LASF133
 10177 17db 01       		.byte	0x1
 10178 17dc B509     		.2byte	0x9b5
 10179 17de B8000000 		.4byte	0xb8
 10180 17e2 D9230000 		.4byte	.LLST151
 10181 17e6 21       		.uleb128 0x21
 10182 17e7 20000000 		.4byte	.LVL647
 10183 17eb F7090000 		.4byte	0x9f7
 10184 17ef 1C       		.uleb128 0x1c
 10185 17f0 6A000000 		.4byte	.LVL652
 10186 17f4 FF0E0000 		.4byte	0xeff
 10187 17f8 02180000 		.4byte	0x1802
 10188 17fc 1D       		.uleb128 0x1d
 10189 17fd 01       		.uleb128 0x1
 10190 17fe 51       		.byte	0x51
 10191 17ff 01       		.uleb128 0x1
 10192 1800 30       		.byte	0x30
 10193 1801 00       		.byte	0
 10194 1802 21       		.uleb128 0x21
 10195 1803 76000000 		.4byte	.LVL655
 10196 1807 FF0E0000 		.4byte	0xeff
 10197 180b 1C       		.uleb128 0x1c
 10198 180c B4000000 		.4byte	.LVL662
 10199 1810 E3080000 		.4byte	0x8e3
 10200 1814 1E180000 		.4byte	0x181e
 10201 1818 1D       		.uleb128 0x1d
 10202 1819 01       		.uleb128 0x1
 10203 181a 51       		.byte	0x51
 10204 181b 01       		.uleb128 0x1
 10205 181c 30       		.byte	0x30
 10206 181d 00       		.byte	0
 10207 181e 1C       		.uleb128 0x1c
 10208 181f D2000000 		.4byte	.LVL663
 10209 1823 8E0C0000 		.4byte	0xc8e
 10210 1827 32180000 		.4byte	0x1832
 10211 182b 1D       		.uleb128 0x1d
 10212 182c 01       		.uleb128 0x1
 10213 182d 50       		.byte	0x50
 10214 182e 02       		.uleb128 0x2
 10215 182f 7A       		.byte	0x7a
 10216 1830 00       		.sleb128 0
 10217 1831 00       		.byte	0
 10218 1832 1C       		.uleb128 0x1c
 10219 1833 0E010000 		.4byte	.LVL670
 10220 1837 F3240000 		.4byte	0x24f3
 10221 183b 55180000 		.4byte	0x1855
 10222 183f 1D       		.uleb128 0x1d
 10223 1840 01       		.uleb128 0x1
 10224 1841 53       		.byte	0x53
 10225 1842 05       		.uleb128 0x5
 10226 1843 7B       		.byte	0x7b
 10227 1844 00       		.sleb128 0
 10228 1845 08       		.byte	0x8
 10229 1846 FF       		.byte	0xff
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 250


 10230 1847 1A       		.byte	0x1a
 10231 1848 1D       		.uleb128 0x1d
 10232 1849 01       		.uleb128 0x1
 10233 184a 52       		.byte	0x52
 10234 184b 02       		.uleb128 0x2
 10235 184c 79       		.byte	0x79
 10236 184d 00       		.sleb128 0
 10237 184e 1D       		.uleb128 0x1d
 10238 184f 01       		.uleb128 0x1
 10239 1850 51       		.byte	0x51
 10240 1851 02       		.uleb128 0x2
 10241 1852 78       		.byte	0x78
 10242 1853 00       		.sleb128 0
 10243 1854 00       		.byte	0
 10244 1855 1C       		.uleb128 0x1c
 10245 1856 3A010000 		.4byte	.LVL673
 10246 185a 7A040000 		.4byte	0x47a
 10247 185e 6A180000 		.4byte	0x186a
 10248 1862 1D       		.uleb128 0x1d
 10249 1863 01       		.uleb128 0x1
 10250 1864 52       		.byte	0x52
 10251 1865 03       		.uleb128 0x3
 10252 1866 0A       		.byte	0xa
 10253 1867 0002     		.2byte	0x200
 10254 1869 00       		.byte	0
 10255 186a 1C       		.uleb128 0x1c
 10256 186b 56010000 		.4byte	.LVL677
 10257 186f E3080000 		.4byte	0x8e3
 10258 1873 83180000 		.4byte	0x1883
 10259 1877 1D       		.uleb128 0x1d
 10260 1878 01       		.uleb128 0x1
 10261 1879 51       		.byte	0x51
 10262 187a 01       		.uleb128 0x1
 10263 187b 30       		.byte	0x30
 10264 187c 1D       		.uleb128 0x1d
 10265 187d 01       		.uleb128 0x1
 10266 187e 50       		.byte	0x50
 10267 187f 02       		.uleb128 0x2
 10268 1880 7A       		.byte	0x7a
 10269 1881 00       		.sleb128 0
 10270 1882 00       		.byte	0
 10271 1883 21       		.uleb128 0x21
 10272 1884 8C010000 		.4byte	.LVL681
 10273 1888 E3080000 		.4byte	0x8e3
 10274 188c 1E       		.uleb128 0x1e
 10275 188d B4010000 		.4byte	.LVL682
 10276 1891 7A040000 		.4byte	0x47a
 10277 1895 1D       		.uleb128 0x1d
 10278 1896 01       		.uleb128 0x1
 10279 1897 52       		.byte	0x52
 10280 1898 02       		.uleb128 0x2
 10281 1899 75       		.byte	0x75
 10282 189a 00       		.sleb128 0
 10283 189b 1D       		.uleb128 0x1d
 10284 189c 01       		.uleb128 0x1
 10285 189d 51       		.byte	0x51
 10286 189e 02       		.uleb128 0x2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 251


 10287 189f 78       		.byte	0x78
 10288 18a0 00       		.sleb128 0
 10289 18a1 00       		.byte	0
 10290 18a2 00       		.byte	0
 10291 18a3 23       		.uleb128 0x23
 10292 18a4 2D030000 		.4byte	.LASF138
 10293 18a8 01       		.byte	0x1
 10294 18a9 210A     		.2byte	0xa21
 10295 18ab EF030000 		.4byte	0x3ef
 10296 18af 00000000 		.4byte	.LFB32
 10297 18b3 7A000000 		.4byte	.LFE32-.LFB32
 10298 18b7 01       		.uleb128 0x1
 10299 18b8 9C       		.byte	0x9c
 10300 18b9 21190000 		.4byte	0x1921
 10301 18bd 11       		.uleb128 0x11
 10302 18be 667000   		.ascii	"fp\000"
 10303 18c1 01       		.byte	0x1
 10304 18c2 220A     		.2byte	0xa22
 10305 18c4 AE150000 		.4byte	0x15ae
 10306 18c8 F7230000 		.4byte	.LLST152
 10307 18cc 12       		.uleb128 0x12
 10308 18cd 72657300 		.ascii	"res\000"
 10309 18d1 01       		.byte	0x1
 10310 18d2 250A     		.2byte	0xa25
 10311 18d4 EF030000 		.4byte	0x3ef
 10312 18d8 23240000 		.4byte	.LLST153
 10313 18dc 12       		.uleb128 0x12
 10314 18dd 74696D00 		.ascii	"tim\000"
 10315 18e1 01       		.byte	0x1
 10316 18e2 260A     		.2byte	0xa26
 10317 18e4 CE000000 		.4byte	0xce
 10318 18e8 4C240000 		.4byte	.LLST154
 10319 18ec 12       		.uleb128 0x12
 10320 18ed 64697200 		.ascii	"dir\000"
 10321 18f1 01       		.byte	0x1
 10322 18f2 270A     		.2byte	0xa27
 10323 18f4 8C020000 		.4byte	0x28c
 10324 18f8 5F240000 		.4byte	.LLST155
 10325 18fc 21       		.uleb128 0x21
 10326 18fd 0C000000 		.4byte	.LVL695
 10327 1901 F7090000 		.4byte	0x9f7
 10328 1905 21       		.uleb128 0x21
 10329 1906 1E000000 		.4byte	.LVL697
 10330 190a E3080000 		.4byte	0x8e3
 10331 190e 21       		.uleb128 0x21
 10332 190f 56000000 		.4byte	.LVL699
 10333 1913 84250000 		.4byte	0x2584
 10334 1917 21       		.uleb128 0x21
 10335 1918 78000000 		.4byte	.LVL701
 10336 191c ED0B0000 		.4byte	0xbed
 10337 1920 00       		.byte	0
 10338 1921 23       		.uleb128 0x23
 10339 1922 6A020000 		.4byte	.LASF139
 10340 1926 01       		.byte	0x1
 10341 1927 500A     		.2byte	0xa50
 10342 1929 EF030000 		.4byte	0x3ef
 10343 192d 00000000 		.4byte	.LFB33
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 252


 10344 1931 1C000000 		.4byte	.LFE33-.LFB33
 10345 1935 01       		.uleb128 0x1
 10346 1936 9C       		.byte	0x9c
 10347 1937 78190000 		.4byte	0x1978
 10348 193b 11       		.uleb128 0x11
 10349 193c 667000   		.ascii	"fp\000"
 10350 193f 01       		.byte	0x1
 10351 1940 510A     		.2byte	0xa51
 10352 1942 AE150000 		.4byte	0x15ae
 10353 1946 72240000 		.4byte	.LLST156
 10354 194a 12       		.uleb128 0x12
 10355 194b 72657300 		.ascii	"res\000"
 10356 194f 01       		.byte	0x1
 10357 1950 540A     		.2byte	0xa54
 10358 1952 EF030000 		.4byte	0x3ef
 10359 1956 9E240000 		.4byte	.LLST157
 10360 195a 1C       		.uleb128 0x1c
 10361 195b 08000000 		.4byte	.LVL704
 10362 195f A3180000 		.4byte	0x18a3
 10363 1963 6E190000 		.4byte	0x196e
 10364 1967 1D       		.uleb128 0x1d
 10365 1968 01       		.uleb128 0x1
 10366 1969 50       		.byte	0x50
 10367 196a 02       		.uleb128 0x2
 10368 196b 74       		.byte	0x74
 10369 196c 00       		.sleb128 0
 10370 196d 00       		.byte	0
 10371 196e 21       		.uleb128 0x21
 10372 196f 12000000 		.4byte	.LVL706
 10373 1973 C9060000 		.4byte	0x6c9
 10374 1977 00       		.byte	0
 10375 1978 25       		.uleb128 0x25
 10376 1979 B4020000 		.4byte	.LASF140
 10377 197d 01       		.byte	0x1
 10378 197e F40A     		.2byte	0xaf4
 10379 1980 EF030000 		.4byte	0x3ef
 10380 1984 00000000 		.4byte	.LFB34
 10381 1988 6C010000 		.4byte	.LFE34-.LFB34
 10382 198c 01       		.uleb128 0x1
 10383 198d 9C       		.byte	0x9c
 10384 198e 481A0000 		.4byte	0x1a48
 10385 1992 11       		.uleb128 0x11
 10386 1993 667000   		.ascii	"fp\000"
 10387 1996 01       		.byte	0x1
 10388 1997 F50A     		.2byte	0xaf5
 10389 1999 AE150000 		.4byte	0x15ae
 10390 199d BC240000 		.4byte	.LLST158
 10391 19a1 11       		.uleb128 0x11
 10392 19a2 6F667300 		.ascii	"ofs\000"
 10393 19a6 01       		.byte	0x1
 10394 19a7 F60A     		.2byte	0xaf6
 10395 19a9 CE000000 		.4byte	0xce
 10396 19ad E8240000 		.4byte	.LLST159
 10397 19b1 12       		.uleb128 0x12
 10398 19b2 72657300 		.ascii	"res\000"
 10399 19b6 01       		.byte	0x1
 10400 19b7 F90A     		.2byte	0xaf9
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 253


 10401 19b9 EF030000 		.4byte	0x3ef
 10402 19bd 32250000 		.4byte	.LLST160
 10403 19c1 20       		.uleb128 0x20
 10404 19c2 26000000 		.4byte	.LBB6
 10405 19c6 34010000 		.4byte	.LBE6-.LBB6
 10406 19ca 3E1A0000 		.4byte	0x1a3e
 10407 19ce 1F       		.uleb128 0x1f
 10408 19cf A4020000 		.4byte	.LASF112
 10409 19d3 01       		.byte	0x1
 10410 19d4 3C0B     		.2byte	0xb3c
 10411 19d6 CE000000 		.4byte	0xce
 10412 19da 5B250000 		.4byte	.LLST161
 10413 19de 12       		.uleb128 0x12
 10414 19df 62637300 		.ascii	"bcs\000"
 10415 19e3 01       		.byte	0x1
 10416 19e4 3C0B     		.2byte	0xb3c
 10417 19e6 CE000000 		.4byte	0xce
 10418 19ea 34260000 		.4byte	.LLST162
 10419 19ee 1F       		.uleb128 0x1f
 10420 19ef 75050000 		.4byte	.LASF141
 10421 19f3 01       		.byte	0x1
 10422 19f4 3C0B     		.2byte	0xb3c
 10423 19f6 CE000000 		.4byte	0xce
 10424 19fa 52260000 		.4byte	.LLST163
 10425 19fe 1F       		.uleb128 0x1f
 10426 19ff F5020000 		.4byte	.LASF142
 10427 1a03 01       		.byte	0x1
 10428 1a04 3C0B     		.2byte	0xb3c
 10429 1a06 CE000000 		.4byte	0xce
 10430 1a0a AB260000 		.4byte	.LLST164
 10431 1a0e 1C       		.uleb128 0x1c
 10432 1a0f 84000000 		.4byte	.LVL725
 10433 1a13 FF0E0000 		.4byte	0xeff
 10434 1a17 221A0000 		.4byte	0x1a22
 10435 1a1b 1D       		.uleb128 0x1d
 10436 1a1c 01       		.uleb128 0x1
 10437 1a1d 50       		.byte	0x50
 10438 1a1e 02       		.uleb128 0x2
 10439 1a1f 79       		.byte	0x79
 10440 1a20 00       		.sleb128 0
 10441 1a21 00       		.byte	0
 10442 1a22 21       		.uleb128 0x21
 10443 1a23 C2000000 		.4byte	.LVL734
 10444 1a27 FF0E0000 		.4byte	0xeff
 10445 1a2b 21       		.uleb128 0x21
 10446 1a2c CE000000 		.4byte	.LVL737
 10447 1a30 C80C0000 		.4byte	0xcc8
 10448 1a34 21       		.uleb128 0x21
 10449 1a35 1E010000 		.4byte	.LVL746
 10450 1a39 8E0C0000 		.4byte	0xc8e
 10451 1a3d 00       		.byte	0
 10452 1a3e 21       		.uleb128 0x21
 10453 1a3f 16000000 		.4byte	.LVL711
 10454 1a43 F7090000 		.4byte	0x9f7
 10455 1a47 00       		.byte	0
 10456 1a48 23       		.uleb128 0x23
 10457 1a49 CE050000 		.4byte	.LASF143
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 254


 10458 1a4d 01       		.byte	0x1
 10459 1a4e 920B     		.2byte	0xb92
 10460 1a50 EF030000 		.4byte	0x3ef
 10461 1a54 00000000 		.4byte	.LFB35
 10462 1a58 6A000000 		.4byte	.LFE35-.LFB35
 10463 1a5c 01       		.uleb128 0x1
 10464 1a5d 9C       		.byte	0x9c
 10465 1a5e E91A0000 		.4byte	0x1ae9
 10466 1a62 11       		.uleb128 0x11
 10467 1a63 646A00   		.ascii	"dj\000"
 10468 1a66 01       		.byte	0x1
 10469 1a67 930B     		.2byte	0xb93
 10470 1a69 52060000 		.4byte	0x652
 10471 1a6d E1260000 		.4byte	.LLST165
 10472 1a71 19       		.uleb128 0x19
 10473 1a72 85000000 		.4byte	.LASF93
 10474 1a76 01       		.byte	0x1
 10475 1a77 940B     		.2byte	0xb94
 10476 1a79 3A080000 		.4byte	0x83a
 10477 1a7d 0D270000 		.4byte	.LLST166
 10478 1a81 12       		.uleb128 0x12
 10479 1a82 72657300 		.ascii	"res\000"
 10480 1a86 01       		.byte	0x1
 10481 1a87 970B     		.2byte	0xb97
 10482 1a89 EF030000 		.4byte	0x3ef
 10483 1a8d 38270000 		.4byte	.LLST167
 10484 1a91 18       		.uleb128 0x18
 10485 1a92 73666E00 		.ascii	"sfn\000"
 10486 1a96 01       		.byte	0x1
 10487 1a97 980B     		.2byte	0xb98
 10488 1a99 B4150000 		.4byte	0x15b4
 10489 1a9d 02       		.uleb128 0x2
 10490 1a9e 91       		.byte	0x91
 10491 1a9f 64       		.sleb128 -28
 10492 1aa0 1C       		.uleb128 0x1c
 10493 1aa1 12000000 		.4byte	.LVL761
 10494 1aa5 390A0000 		.4byte	0xa39
 10495 1aa9 BF1A0000 		.4byte	0x1abf
 10496 1aad 1D       		.uleb128 0x1d
 10497 1aae 01       		.uleb128 0x1
 10498 1aaf 52       		.byte	0x52
 10499 1ab0 01       		.uleb128 0x1
 10500 1ab1 30       		.byte	0x30
 10501 1ab2 1D       		.uleb128 0x1d
 10502 1ab3 01       		.uleb128 0x1
 10503 1ab4 51       		.byte	0x51
 10504 1ab5 02       		.uleb128 0x2
 10505 1ab6 74       		.byte	0x74
 10506 1ab7 00       		.sleb128 0
 10507 1ab8 1D       		.uleb128 0x1d
 10508 1ab9 01       		.uleb128 0x1
 10509 1aba 50       		.byte	0x50
 10510 1abb 02       		.uleb128 0x2
 10511 1abc 91       		.byte	0x91
 10512 1abd 5C       		.sleb128 -36
 10513 1abe 00       		.byte	0
 10514 1abf 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 255


 10515 1ac0 22000000 		.4byte	.LVL763
 10516 1ac4 64110000 		.4byte	0x1164
 10517 1ac8 D31A0000 		.4byte	0x1ad3
 10518 1acc 1D       		.uleb128 0x1d
 10519 1acd 01       		.uleb128 0x1
 10520 1ace 50       		.byte	0x50
 10521 1acf 02       		.uleb128 0x2
 10522 1ad0 74       		.byte	0x74
 10523 1ad1 00       		.sleb128 0
 10524 1ad2 00       		.byte	0
 10525 1ad3 1E       		.uleb128 0x1e
 10526 1ad4 60000000 		.4byte	.LVL766
 10527 1ad8 7A0D0000 		.4byte	0xd7a
 10528 1adc 1D       		.uleb128 0x1d
 10529 1add 01       		.uleb128 0x1
 10530 1ade 51       		.byte	0x51
 10531 1adf 01       		.uleb128 0x1
 10532 1ae0 30       		.byte	0x30
 10533 1ae1 1D       		.uleb128 0x1d
 10534 1ae2 01       		.uleb128 0x1
 10535 1ae3 50       		.byte	0x50
 10536 1ae4 02       		.uleb128 0x2
 10537 1ae5 74       		.byte	0x74
 10538 1ae6 00       		.sleb128 0
 10539 1ae7 00       		.byte	0
 10540 1ae8 00       		.byte	0
 10541 1ae9 23       		.uleb128 0x23
 10542 1aea 1D050000 		.4byte	.LASF144
 10543 1aee 01       		.byte	0x1
 10544 1aef BA0B     		.2byte	0xbba
 10545 1af1 EF030000 		.4byte	0x3ef
 10546 1af5 00000000 		.4byte	.LFB36
 10547 1af9 5E000000 		.4byte	.LFE36-.LFB36
 10548 1afd 01       		.uleb128 0x1
 10549 1afe 9C       		.byte	0x9c
 10550 1aff A71B0000 		.4byte	0x1ba7
 10551 1b03 11       		.uleb128 0x11
 10552 1b04 646A00   		.ascii	"dj\000"
 10553 1b07 01       		.byte	0x1
 10554 1b08 BB0B     		.2byte	0xbbb
 10555 1b0a 52060000 		.4byte	0x652
 10556 1b0e 61270000 		.4byte	.LLST168
 10557 1b12 11       		.uleb128 0x11
 10558 1b13 666E6F00 		.ascii	"fno\000"
 10559 1b17 01       		.byte	0x1
 10560 1b18 BC0B     		.2byte	0xbbc
 10561 1b1a D7080000 		.4byte	0x8d7
 10562 1b1e 8D270000 		.4byte	.LLST169
 10563 1b22 12       		.uleb128 0x12
 10564 1b23 72657300 		.ascii	"res\000"
 10565 1b27 01       		.byte	0x1
 10566 1b28 BF0B     		.2byte	0xbbf
 10567 1b2a EF030000 		.4byte	0x3ef
 10568 1b2e B9270000 		.4byte	.LLST170
 10569 1b32 18       		.uleb128 0x18
 10570 1b33 73666E00 		.ascii	"sfn\000"
 10571 1b37 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 256


 10572 1b38 C00B     		.2byte	0xbc0
 10573 1b3a B4150000 		.4byte	0x15b4
 10574 1b3e 02       		.uleb128 0x2
 10575 1b3f 91       		.byte	0x91
 10576 1b40 5C       		.sleb128 -36
 10577 1b41 21       		.uleb128 0x21
 10578 1b42 10000000 		.4byte	.LVL772
 10579 1b46 F7090000 		.4byte	0x9f7
 10580 1b4a 1C       		.uleb128 0x1c
 10581 1b4b 20000000 		.4byte	.LVL774
 10582 1b4f 7A0D0000 		.4byte	0xd7a
 10583 1b53 631B0000 		.4byte	0x1b63
 10584 1b57 1D       		.uleb128 0x1d
 10585 1b58 01       		.uleb128 0x1
 10586 1b59 51       		.byte	0x51
 10587 1b5a 01       		.uleb128 0x1
 10588 1b5b 30       		.byte	0x30
 10589 1b5c 1D       		.uleb128 0x1d
 10590 1b5d 01       		.uleb128 0x1
 10591 1b5e 50       		.byte	0x50
 10592 1b5f 02       		.uleb128 0x2
 10593 1b60 74       		.byte	0x74
 10594 1b61 00       		.sleb128 0
 10595 1b62 00       		.byte	0
 10596 1b63 1C       		.uleb128 0x1c
 10597 1b64 2C000000 		.4byte	.LVL776
 10598 1b68 E0120000 		.4byte	0x12e0
 10599 1b6c 771B0000 		.4byte	0x1b77
 10600 1b70 1D       		.uleb128 0x1d
 10601 1b71 01       		.uleb128 0x1
 10602 1b72 50       		.byte	0x50
 10603 1b73 02       		.uleb128 0x2
 10604 1b74 74       		.byte	0x74
 10605 1b75 00       		.sleb128 0
 10606 1b76 00       		.byte	0
 10607 1b77 1C       		.uleb128 0x1c
 10608 1b78 44000000 		.4byte	.LVL780
 10609 1b7c 5A080000 		.4byte	0x85a
 10610 1b80 911B0000 		.4byte	0x1b91
 10611 1b84 1D       		.uleb128 0x1d
 10612 1b85 01       		.uleb128 0x1
 10613 1b86 51       		.byte	0x51
 10614 1b87 02       		.uleb128 0x2
 10615 1b88 76       		.byte	0x76
 10616 1b89 00       		.sleb128 0
 10617 1b8a 1D       		.uleb128 0x1d
 10618 1b8b 01       		.uleb128 0x1
 10619 1b8c 50       		.byte	0x50
 10620 1b8d 02       		.uleb128 0x2
 10621 1b8e 74       		.byte	0x74
 10622 1b8f 00       		.sleb128 0
 10623 1b90 00       		.byte	0
 10624 1b91 1E       		.uleb128 0x1e
 10625 1b92 4C000000 		.4byte	.LVL781
 10626 1b96 DA0F0000 		.4byte	0xfda
 10627 1b9a 1D       		.uleb128 0x1d
 10628 1b9b 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 257


 10629 1b9c 51       		.byte	0x51
 10630 1b9d 01       		.uleb128 0x1
 10631 1b9e 30       		.byte	0x30
 10632 1b9f 1D       		.uleb128 0x1d
 10633 1ba0 01       		.uleb128 0x1
 10634 1ba1 50       		.byte	0x50
 10635 1ba2 02       		.uleb128 0x2
 10636 1ba3 74       		.byte	0x74
 10637 1ba4 00       		.sleb128 0
 10638 1ba5 00       		.byte	0
 10639 1ba6 00       		.byte	0
 10640 1ba7 23       		.uleb128 0x23
 10641 1ba8 EF010000 		.4byte	.LASF145
 10642 1bac 01       		.byte	0x1
 10643 1bad E40B     		.2byte	0xbe4
 10644 1baf EF030000 		.4byte	0x3ef
 10645 1bb3 00000000 		.4byte	.LFB37
 10646 1bb7 3E000000 		.4byte	.LFE37-.LFB37
 10647 1bbb 01       		.uleb128 0x1
 10648 1bbc 9C       		.byte	0x9c
 10649 1bbd 581C0000 		.4byte	0x1c58
 10650 1bc1 19       		.uleb128 0x19
 10651 1bc2 85000000 		.4byte	.LASF93
 10652 1bc6 01       		.byte	0x1
 10653 1bc7 E50B     		.2byte	0xbe5
 10654 1bc9 3A080000 		.4byte	0x83a
 10655 1bcd 31280000 		.4byte	.LLST171
 10656 1bd1 11       		.uleb128 0x11
 10657 1bd2 666E6F00 		.ascii	"fno\000"
 10658 1bd6 01       		.byte	0x1
 10659 1bd7 E60B     		.2byte	0xbe6
 10660 1bd9 D7080000 		.4byte	0x8d7
 10661 1bdd 5C280000 		.4byte	.LLST172
 10662 1be1 12       		.uleb128 0x12
 10663 1be2 72657300 		.ascii	"res\000"
 10664 1be6 01       		.byte	0x1
 10665 1be7 E90B     		.2byte	0xbe9
 10666 1be9 EF030000 		.4byte	0x3ef
 10667 1bed 88280000 		.4byte	.LLST173
 10668 1bf1 18       		.uleb128 0x18
 10669 1bf2 646A00   		.ascii	"dj\000"
 10670 1bf5 01       		.byte	0x1
 10671 1bf6 EA0B     		.2byte	0xbea
 10672 1bf8 03030000 		.4byte	0x303
 10673 1bfc 02       		.uleb128 0x2
 10674 1bfd 91       		.byte	0x91
 10675 1bfe 54       		.sleb128 -44
 10676 1bff 18       		.uleb128 0x18
 10677 1c00 73666E00 		.ascii	"sfn\000"
 10678 1c04 01       		.byte	0x1
 10679 1c05 EB0B     		.2byte	0xbeb
 10680 1c07 B4150000 		.4byte	0x15b4
 10681 1c0b 02       		.uleb128 0x2
 10682 1c0c 91       		.byte	0x91
 10683 1c0d 48       		.sleb128 -56
 10684 1c0e 1C       		.uleb128 0x1c
 10685 1c0f 12000000 		.4byte	.LVL790
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 258


 10686 1c13 390A0000 		.4byte	0xa39
 10687 1c17 2D1C0000 		.4byte	0x1c2d
 10688 1c1b 1D       		.uleb128 0x1d
 10689 1c1c 01       		.uleb128 0x1
 10690 1c1d 52       		.byte	0x52
 10691 1c1e 01       		.uleb128 0x1
 10692 1c1f 30       		.byte	0x30
 10693 1c20 1D       		.uleb128 0x1d
 10694 1c21 01       		.uleb128 0x1
 10695 1c22 51       		.byte	0x51
 10696 1c23 02       		.uleb128 0x2
 10697 1c24 91       		.byte	0x91
 10698 1c25 54       		.sleb128 -44
 10699 1c26 1D       		.uleb128 0x1d
 10700 1c27 01       		.uleb128 0x1
 10701 1c28 50       		.byte	0x50
 10702 1c29 02       		.uleb128 0x2
 10703 1c2a 91       		.byte	0x91
 10704 1c2b 44       		.sleb128 -60
 10705 1c2c 00       		.byte	0
 10706 1c2d 1C       		.uleb128 0x1c
 10707 1c2e 22000000 		.4byte	.LVL793
 10708 1c32 64110000 		.4byte	0x1164
 10709 1c36 411C0000 		.4byte	0x1c41
 10710 1c3a 1D       		.uleb128 0x1d
 10711 1c3b 01       		.uleb128 0x1
 10712 1c3c 50       		.byte	0x50
 10713 1c3d 02       		.uleb128 0x2
 10714 1c3e 91       		.byte	0x91
 10715 1c3f 54       		.sleb128 -44
 10716 1c40 00       		.byte	0
 10717 1c41 1E       		.uleb128 0x1e
 10718 1c42 34000000 		.4byte	.LVL796
 10719 1c46 5A080000 		.4byte	0x85a
 10720 1c4a 1D       		.uleb128 0x1d
 10721 1c4b 01       		.uleb128 0x1
 10722 1c4c 51       		.byte	0x51
 10723 1c4d 02       		.uleb128 0x2
 10724 1c4e 75       		.byte	0x75
 10725 1c4f 00       		.sleb128 0
 10726 1c50 1D       		.uleb128 0x1d
 10727 1c51 01       		.uleb128 0x1
 10728 1c52 50       		.byte	0x50
 10729 1c53 02       		.uleb128 0x2
 10730 1c54 91       		.byte	0x91
 10731 1c55 54       		.sleb128 -44
 10732 1c56 00       		.byte	0
 10733 1c57 00       		.byte	0
 10734 1c58 23       		.uleb128 0x23
 10735 1c59 73040000 		.4byte	.LASF146
 10736 1c5d 01       		.byte	0x1
 10737 1c5e 050C     		.2byte	0xc05
 10738 1c60 EF030000 		.4byte	0x3ef
 10739 1c64 00000000 		.4byte	.LFB38
 10740 1c68 F4000000 		.4byte	.LFE38-.LFB38
 10741 1c6c 01       		.uleb128 0x1
 10742 1c6d 9C       		.byte	0x9c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 259


 10743 1c6e 611D0000 		.4byte	0x1d61
 10744 1c72 19       		.uleb128 0x19
 10745 1c73 85000000 		.4byte	.LASF93
 10746 1c77 01       		.byte	0x1
 10747 1c78 060C     		.2byte	0xc06
 10748 1c7a 3A080000 		.4byte	0x83a
 10749 1c7e D2280000 		.4byte	.LLST174
 10750 1c82 19       		.uleb128 0x19
 10751 1c83 7C030000 		.4byte	.LASF108
 10752 1c87 01       		.byte	0x1
 10753 1c88 070C     		.2byte	0xc07
 10754 1c8a 611D0000 		.4byte	0x1d61
 10755 1c8e FD280000 		.4byte	.LLST175
 10756 1c92 19       		.uleb128 0x19
 10757 1c93 B6030000 		.4byte	.LASF147
 10758 1c97 01       		.byte	0x1
 10759 1c98 080C     		.2byte	0xc08
 10760 1c9a E70B0000 		.4byte	0xbe7
 10761 1c9e 29290000 		.4byte	.LLST176
 10762 1ca2 12       		.uleb128 0x12
 10763 1ca3 72657300 		.ascii	"res\000"
 10764 1ca7 01       		.byte	0x1
 10765 1ca8 0B0C     		.2byte	0xc0b
 10766 1caa EF030000 		.4byte	0x3ef
 10767 1cae 60290000 		.4byte	.LLST177
 10768 1cb2 12       		.uleb128 0x12
 10769 1cb3 6E00     		.ascii	"n\000"
 10770 1cb5 01       		.byte	0x1
 10771 1cb6 0C0C     		.2byte	0xc0c
 10772 1cb8 CE000000 		.4byte	0xce
 10773 1cbc B9290000 		.4byte	.LLST178
 10774 1cc0 1F       		.uleb128 0x1f
 10775 1cc1 A4020000 		.4byte	.LASF112
 10776 1cc5 01       		.byte	0x1
 10777 1cc6 0C0C     		.2byte	0xc0c
 10778 1cc8 CE000000 		.4byte	0xce
 10779 1ccc EF290000 		.4byte	.LLST179
 10780 1cd0 1F       		.uleb128 0x1f
 10781 1cd1 C1000000 		.4byte	.LASF48
 10782 1cd5 01       		.byte	0x1
 10783 1cd6 0C0C     		.2byte	0xc0c
 10784 1cd8 CE000000 		.4byte	0xce
 10785 1cdc 022A0000 		.4byte	.LLST180
 10786 1ce0 1F       		.uleb128 0x1f
 10787 1ce1 6A060000 		.4byte	.LASF103
 10788 1ce5 01       		.byte	0x1
 10789 1ce6 0C0C     		.2byte	0xc0c
 10790 1ce8 CE000000 		.4byte	0xce
 10791 1cec 522A0000 		.4byte	.LLST181
 10792 1cf0 12       		.uleb128 0x12
 10793 1cf1 6900     		.ascii	"i\000"
 10794 1cf3 01       		.byte	0x1
 10795 1cf4 0D0C     		.2byte	0xc0d
 10796 1cf6 AD000000 		.4byte	0xad
 10797 1cfa 702A0000 		.4byte	.LLST182
 10798 1cfe 12       		.uleb128 0x12
 10799 1cff 66617400 		.ascii	"fat\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 260


 10800 1d03 01       		.byte	0x1
 10801 1d04 0E0C     		.2byte	0xc0e
 10802 1d06 B8000000 		.4byte	0xb8
 10803 1d0a A82A0000 		.4byte	.LLST183
 10804 1d0e 12       		.uleb128 0x12
 10805 1d0f 7000     		.ascii	"p\000"
 10806 1d11 01       		.byte	0x1
 10807 1d12 0E0C     		.2byte	0xc0e
 10808 1d14 8C020000 		.4byte	0x28c
 10809 1d18 BB2A0000 		.4byte	.LLST184
 10810 1d1c 1C       		.uleb128 0x1c
 10811 1d1d 1A000000 		.4byte	.LVL805
 10812 1d21 390A0000 		.4byte	0xa39
 10813 1d25 3B1D0000 		.4byte	0x1d3b
 10814 1d29 1D       		.uleb128 0x1d
 10815 1d2a 01       		.uleb128 0x1
 10816 1d2b 52       		.byte	0x52
 10817 1d2c 01       		.uleb128 0x1
 10818 1d2d 30       		.byte	0x30
 10819 1d2e 1D       		.uleb128 0x1d
 10820 1d2f 01       		.uleb128 0x1
 10821 1d30 51       		.byte	0x51
 10822 1d31 02       		.uleb128 0x2
 10823 1d32 76       		.byte	0x76
 10824 1d33 00       		.sleb128 0
 10825 1d34 1D       		.uleb128 0x1d
 10826 1d35 01       		.uleb128 0x1
 10827 1d36 50       		.byte	0x50
 10828 1d37 02       		.uleb128 0x2
 10829 1d38 91       		.byte	0x91
 10830 1d39 5C       		.sleb128 -36
 10831 1d3a 00       		.byte	0
 10832 1d3b 1C       		.uleb128 0x1c
 10833 1d3c 44000000 		.4byte	.LVL809
 10834 1d40 C80C0000 		.4byte	0xcc8
 10835 1d44 4F1D0000 		.4byte	0x1d4f
 10836 1d48 1D       		.uleb128 0x1d
 10837 1d49 01       		.uleb128 0x1
 10838 1d4a 51       		.byte	0x51
 10839 1d4b 02       		.uleb128 0x2
 10840 1d4c 74       		.byte	0x74
 10841 1d4d 00       		.sleb128 0
 10842 1d4e 00       		.byte	0
 10843 1d4f 1E       		.uleb128 0x1e
 10844 1d50 7A000000 		.4byte	.LVL819
 10845 1d54 E3080000 		.4byte	0x8e3
 10846 1d58 1D       		.uleb128 0x1d
 10847 1d59 01       		.uleb128 0x1
 10848 1d5a 51       		.byte	0x51
 10849 1d5b 03       		.uleb128 0x3
 10850 1d5c 91       		.byte	0x91
 10851 1d5d 58       		.sleb128 -40
 10852 1d5e 06       		.byte	0x6
 10853 1d5f 00       		.byte	0
 10854 1d60 00       		.byte	0
 10855 1d61 0B       		.uleb128 0xb
 10856 1d62 04       		.byte	0x4
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 261


 10857 1d63 CE000000 		.4byte	0xce
 10858 1d67 23       		.uleb128 0x23
 10859 1d68 3A060000 		.4byte	.LASF148
 10860 1d6c 01       		.byte	0x1
 10861 1d6d 460C     		.2byte	0xc46
 10862 1d6f EF030000 		.4byte	0x3ef
 10863 1d73 00000000 		.4byte	.LFB39
 10864 1d77 9C000000 		.4byte	.LFE39-.LFB39
 10865 1d7b 01       		.uleb128 0x1
 10866 1d7c 9C       		.byte	0x9c
 10867 1d7d F31D0000 		.4byte	0x1df3
 10868 1d81 11       		.uleb128 0x11
 10869 1d82 667000   		.ascii	"fp\000"
 10870 1d85 01       		.byte	0x1
 10871 1d86 470C     		.2byte	0xc47
 10872 1d88 AE150000 		.4byte	0x15ae
 10873 1d8c E52A0000 		.4byte	.LLST185
 10874 1d90 12       		.uleb128 0x12
 10875 1d91 72657300 		.ascii	"res\000"
 10876 1d95 01       		.byte	0x1
 10877 1d96 4A0C     		.2byte	0xc4a
 10878 1d98 EF030000 		.4byte	0x3ef
 10879 1d9c 112B0000 		.4byte	.LLST186
 10880 1da0 12       		.uleb128 0x12
 10881 1da1 6E636C00 		.ascii	"ncl\000"
 10882 1da5 01       		.byte	0x1
 10883 1da6 4B0C     		.2byte	0xc4b
 10884 1da8 CE000000 		.4byte	0xce
 10885 1dac 722B0000 		.4byte	.LLST187
 10886 1db0 21       		.uleb128 0x21
 10887 1db1 0C000000 		.4byte	.LVL839
 10888 1db5 F7090000 		.4byte	0x9f7
 10889 1db9 21       		.uleb128 0x21
 10890 1dba 46000000 		.4byte	.LVL842
 10891 1dbe 56130000 		.4byte	0x1356
 10892 1dc2 21       		.uleb128 0x21
 10893 1dc3 56000000 		.4byte	.LVL845
 10894 1dc7 C80C0000 		.4byte	0xcc8
 10895 1dcb 1C       		.uleb128 0x1c
 10896 1dcc 78000000 		.4byte	.LVL850
 10897 1dd0 3C0E0000 		.4byte	0xe3c
 10898 1dd4 E21D0000 		.4byte	0x1de2
 10899 1dd8 1D       		.uleb128 0x1d
 10900 1dd9 01       		.uleb128 0x1
 10901 1dda 52       		.byte	0x52
 10902 1ddb 05       		.uleb128 0x5
 10903 1ddc 0C       		.byte	0xc
 10904 1ddd FFFFFF0F 		.4byte	0xfffffff
 10905 1de1 00       		.byte	0
 10906 1de2 1E       		.uleb128 0x1e
 10907 1de3 84000000 		.4byte	.LVL853
 10908 1de7 56130000 		.4byte	0x1356
 10909 1deb 1D       		.uleb128 0x1d
 10910 1dec 01       		.uleb128 0x1
 10911 1ded 51       		.byte	0x51
 10912 1dee 02       		.uleb128 0x2
 10913 1def 76       		.byte	0x76
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 262


 10914 1df0 00       		.sleb128 0
 10915 1df1 00       		.byte	0
 10916 1df2 00       		.byte	0
 10917 1df3 23       		.uleb128 0x23
 10918 1df4 AA040000 		.4byte	.LASF149
 10919 1df8 01       		.byte	0x1
 10920 1df9 760C     		.2byte	0xc76
 10921 1dfb EF030000 		.4byte	0x3ef
 10922 1dff 00000000 		.4byte	.LFB40
 10923 1e03 C6000000 		.4byte	.LFE40-.LFB40
 10924 1e07 01       		.uleb128 0x1
 10925 1e08 9C       		.byte	0x9c
 10926 1e09 491F0000 		.4byte	0x1f49
 10927 1e0d 19       		.uleb128 0x19
 10928 1e0e 85000000 		.4byte	.LASF93
 10929 1e12 01       		.byte	0x1
 10930 1e13 770C     		.2byte	0xc77
 10931 1e15 3A080000 		.4byte	0x83a
 10932 1e19 902B0000 		.4byte	.LLST188
 10933 1e1d 12       		.uleb128 0x12
 10934 1e1e 72657300 		.ascii	"res\000"
 10935 1e22 01       		.byte	0x1
 10936 1e23 7A0C     		.2byte	0xc7a
 10937 1e25 EF030000 		.4byte	0x3ef
 10938 1e29 BC2B0000 		.4byte	.LLST189
 10939 1e2d 18       		.uleb128 0x18
 10940 1e2e 646A00   		.ascii	"dj\000"
 10941 1e31 01       		.byte	0x1
 10942 1e32 7B0C     		.2byte	0xc7b
 10943 1e34 03030000 		.4byte	0x303
 10944 1e38 02       		.uleb128 0x2
 10945 1e39 91       		.byte	0x91
 10946 1e3a 54       		.sleb128 -44
 10947 1e3b 18       		.uleb128 0x18
 10948 1e3c 73646A00 		.ascii	"sdj\000"
 10949 1e40 01       		.byte	0x1
 10950 1e41 7B0C     		.2byte	0xc7b
 10951 1e43 03030000 		.4byte	0x303
 10952 1e47 03       		.uleb128 0x3
 10953 1e48 91       		.byte	0x91
 10954 1e49 B87F     		.sleb128 -72
 10955 1e4b 12       		.uleb128 0x12
 10956 1e4c 64697200 		.ascii	"dir\000"
 10957 1e50 01       		.byte	0x1
 10958 1e51 7C0C     		.2byte	0xc7c
 10959 1e53 8C020000 		.4byte	0x28c
 10960 1e57 3D2C0000 		.4byte	.LLST190
 10961 1e5b 1F       		.uleb128 0x1f
 10962 1e5c 17000000 		.4byte	.LASF150
 10963 1e60 01       		.byte	0x1
 10964 1e61 7D0C     		.2byte	0xc7d
 10965 1e63 CE000000 		.4byte	0xce
 10966 1e67 682C0000 		.4byte	.LLST191
 10967 1e6b 18       		.uleb128 0x18
 10968 1e6c 73666E00 		.ascii	"sfn\000"
 10969 1e70 01       		.byte	0x1
 10970 1e71 7E0C     		.2byte	0xc7e
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 263


 10971 1e73 B4150000 		.4byte	0x15b4
 10972 1e77 03       		.uleb128 0x3
 10973 1e78 91       		.byte	0x91
 10974 1e79 AC7F     		.sleb128 -84
 10975 1e7b 1C       		.uleb128 0x1c
 10976 1e7c 10000000 		.4byte	.LVL859
 10977 1e80 390A0000 		.4byte	0xa39
 10978 1e84 9B1E0000 		.4byte	0x1e9b
 10979 1e88 1D       		.uleb128 0x1d
 10980 1e89 01       		.uleb128 0x1
 10981 1e8a 52       		.byte	0x52
 10982 1e8b 01       		.uleb128 0x1
 10983 1e8c 31       		.byte	0x31
 10984 1e8d 1D       		.uleb128 0x1d
 10985 1e8e 01       		.uleb128 0x1
 10986 1e8f 51       		.byte	0x51
 10987 1e90 02       		.uleb128 0x2
 10988 1e91 91       		.byte	0x91
 10989 1e92 54       		.sleb128 -44
 10990 1e93 1D       		.uleb128 0x1d
 10991 1e94 01       		.uleb128 0x1
 10992 1e95 50       		.byte	0x50
 10993 1e96 03       		.uleb128 0x3
 10994 1e97 91       		.byte	0x91
 10995 1e98 A47F     		.sleb128 -92
 10996 1e9a 00       		.byte	0
 10997 1e9b 1C       		.uleb128 0x1c
 10998 1e9c 20000000 		.4byte	.LVL862
 10999 1ea0 64110000 		.4byte	0x1164
 11000 1ea4 AF1E0000 		.4byte	0x1eaf
 11001 1ea8 1D       		.uleb128 0x1d
 11002 1ea9 01       		.uleb128 0x1
 11003 1eaa 50       		.byte	0x50
 11004 1eab 02       		.uleb128 0x2
 11005 1eac 91       		.byte	0x91
 11006 1ead 54       		.sleb128 -44
 11007 1eae 00       		.byte	0
 11008 1eaf 1C       		.uleb128 0x1c
 11009 1eb0 2C000000 		.4byte	.LVL865
 11010 1eb4 FD050000 		.4byte	0x5fd
 11011 1eb8 C81E0000 		.4byte	0x1ec8
 11012 1ebc 1D       		.uleb128 0x1d
 11013 1ebd 01       		.uleb128 0x1
 11014 1ebe 51       		.byte	0x51
 11015 1ebf 01       		.uleb128 0x1
 11016 1ec0 32       		.byte	0x32
 11017 1ec1 1D       		.uleb128 0x1d
 11018 1ec2 01       		.uleb128 0x1
 11019 1ec3 50       		.byte	0x50
 11020 1ec4 02       		.uleb128 0x2
 11021 1ec5 91       		.byte	0x91
 11022 1ec6 54       		.sleb128 -44
 11023 1ec7 00       		.byte	0
 11024 1ec8 1C       		.uleb128 0x1c
 11025 1ec9 74000000 		.4byte	.LVL874
 11026 1ecd 7A040000 		.4byte	0x47a
 11027 1ed1 E81E0000 		.4byte	0x1ee8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 264


 11028 1ed5 1D       		.uleb128 0x1d
 11029 1ed6 01       		.uleb128 0x1
 11030 1ed7 52       		.byte	0x52
 11031 1ed8 01       		.uleb128 0x1
 11032 1ed9 4C       		.byte	0x4c
 11033 1eda 1D       		.uleb128 0x1d
 11034 1edb 01       		.uleb128 0x1
 11035 1edc 51       		.byte	0x51
 11036 1edd 02       		.uleb128 0x2
 11037 1ede 91       		.byte	0x91
 11038 1edf 54       		.sleb128 -44
 11039 1ee0 1D       		.uleb128 0x1d
 11040 1ee1 01       		.uleb128 0x1
 11041 1ee2 50       		.byte	0x50
 11042 1ee3 03       		.uleb128 0x3
 11043 1ee4 91       		.byte	0x91
 11044 1ee5 B87F     		.sleb128 -72
 11045 1ee7 00       		.byte	0
 11046 1ee8 1C       		.uleb128 0x1c
 11047 1ee9 7E000000 		.4byte	.LVL875
 11048 1eed 7A0D0000 		.4byte	0xd7a
 11049 1ef1 021F0000 		.4byte	0x1f02
 11050 1ef5 1D       		.uleb128 0x1d
 11051 1ef6 01       		.uleb128 0x1
 11052 1ef7 51       		.byte	0x51
 11053 1ef8 01       		.uleb128 0x1
 11054 1ef9 32       		.byte	0x32
 11055 1efa 1D       		.uleb128 0x1d
 11056 1efb 01       		.uleb128 0x1
 11057 1efc 50       		.byte	0x50
 11058 1efd 03       		.uleb128 0x3
 11059 1efe 91       		.byte	0x91
 11060 1eff B87F     		.sleb128 -72
 11061 1f01 00       		.byte	0
 11062 1f02 1C       		.uleb128 0x1c
 11063 1f03 88000000 		.4byte	.LVL878
 11064 1f07 E0120000 		.4byte	0x12e0
 11065 1f0b 171F0000 		.4byte	0x1f17
 11066 1f0f 1D       		.uleb128 0x1d
 11067 1f10 01       		.uleb128 0x1
 11068 1f11 50       		.byte	0x50
 11069 1f12 03       		.uleb128 0x3
 11070 1f13 91       		.byte	0x91
 11071 1f14 B87F     		.sleb128 -72
 11072 1f16 00       		.byte	0
 11073 1f17 1C       		.uleb128 0x1c
 11074 1f18 A2000000 		.4byte	.LVL882
 11075 1f1c E50D0000 		.4byte	0xde5
 11076 1f20 2B1F0000 		.4byte	0x1f2b
 11077 1f24 1D       		.uleb128 0x1d
 11078 1f25 01       		.uleb128 0x1
 11079 1f26 50       		.byte	0x50
 11080 1f27 02       		.uleb128 0x2
 11081 1f28 91       		.byte	0x91
 11082 1f29 54       		.sleb128 -44
 11083 1f2a 00       		.byte	0
 11084 1f2b 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 265


 11085 1f2c B2000000 		.4byte	.LVL885
 11086 1f30 56130000 		.4byte	0x1356
 11087 1f34 3F1F0000 		.4byte	0x1f3f
 11088 1f38 1D       		.uleb128 0x1d
 11089 1f39 01       		.uleb128 0x1
 11090 1f3a 51       		.byte	0x51
 11091 1f3b 02       		.uleb128 0x2
 11092 1f3c 75       		.byte	0x75
 11093 1f3d 00       		.sleb128 0
 11094 1f3e 00       		.byte	0
 11095 1f3f 21       		.uleb128 0x21
 11096 1f40 BE000000 		.4byte	.LVL887
 11097 1f44 ED0B0000 		.4byte	0xbed
 11098 1f48 00       		.byte	0
 11099 1f49 23       		.uleb128 0x23
 11100 1f4a 1F030000 		.4byte	.LASF151
 11101 1f4e 01       		.byte	0x1
 11102 1f4f BA0C     		.2byte	0xcba
 11103 1f51 EF030000 		.4byte	0x3ef
 11104 1f55 00000000 		.4byte	.LFB41
 11105 1f59 94010000 		.4byte	.LFE41-.LFB41
 11106 1f5d 01       		.uleb128 0x1
 11107 1f5e 9C       		.byte	0x9c
 11108 1f5f 45210000 		.4byte	0x2145
 11109 1f63 19       		.uleb128 0x19
 11110 1f64 85000000 		.4byte	.LASF93
 11111 1f68 01       		.byte	0x1
 11112 1f69 BB0C     		.2byte	0xcbb
 11113 1f6b 3A080000 		.4byte	0x83a
 11114 1f6f 9C2C0000 		.4byte	.LLST192
 11115 1f73 12       		.uleb128 0x12
 11116 1f74 72657300 		.ascii	"res\000"
 11117 1f78 01       		.byte	0x1
 11118 1f79 BE0C     		.2byte	0xcbe
 11119 1f7b EF030000 		.4byte	0x3ef
 11120 1f7f D52C0000 		.4byte	.LLST193
 11121 1f83 18       		.uleb128 0x18
 11122 1f84 646A00   		.ascii	"dj\000"
 11123 1f87 01       		.byte	0x1
 11124 1f88 BF0C     		.2byte	0xcbf
 11125 1f8a 03030000 		.4byte	0x303
 11126 1f8e 02       		.uleb128 0x2
 11127 1f8f 91       		.byte	0x91
 11128 1f90 44       		.sleb128 -60
 11129 1f91 12       		.uleb128 0x12
 11130 1f92 64697200 		.ascii	"dir\000"
 11131 1f96 01       		.byte	0x1
 11132 1f97 C00C     		.2byte	0xcc0
 11133 1f99 8C020000 		.4byte	0x28c
 11134 1f9d 412D0000 		.4byte	.LLST194
 11135 1fa1 12       		.uleb128 0x12
 11136 1fa2 6E00     		.ascii	"n\000"
 11137 1fa4 01       		.byte	0x1
 11138 1fa5 C00C     		.2byte	0xcc0
 11139 1fa7 B8000000 		.4byte	0xb8
 11140 1fab 6B2D0000 		.4byte	.LLST195
 11141 1faf 12       		.uleb128 0x12
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 266


 11142 1fb0 64736300 		.ascii	"dsc\000"
 11143 1fb4 01       		.byte	0x1
 11144 1fb5 C10C     		.2byte	0xcc1
 11145 1fb7 CE000000 		.4byte	0xce
 11146 1fbb 892D0000 		.4byte	.LLST196
 11147 1fbf 12       		.uleb128 0x12
 11148 1fc0 64636C00 		.ascii	"dcl\000"
 11149 1fc4 01       		.byte	0x1
 11150 1fc5 C10C     		.2byte	0xcc1
 11151 1fc7 CE000000 		.4byte	0xce
 11152 1fcb C82D0000 		.4byte	.LLST197
 11153 1fcf 12       		.uleb128 0x12
 11154 1fd0 70636C00 		.ascii	"pcl\000"
 11155 1fd4 01       		.byte	0x1
 11156 1fd5 C10C     		.2byte	0xcc1
 11157 1fd7 CE000000 		.4byte	0xce
 11158 1fdb E62D0000 		.4byte	.LLST198
 11159 1fdf 12       		.uleb128 0x12
 11160 1fe0 74696D00 		.ascii	"tim\000"
 11161 1fe4 01       		.byte	0x1
 11162 1fe5 C10C     		.2byte	0xcc1
 11163 1fe7 CE000000 		.4byte	0xce
 11164 1feb F92D0000 		.4byte	.LLST199
 11165 1fef 18       		.uleb128 0x18
 11166 1ff0 73666E00 		.ascii	"sfn\000"
 11167 1ff4 01       		.byte	0x1
 11168 1ff5 C20C     		.2byte	0xcc2
 11169 1ff7 B4150000 		.4byte	0x15b4
 11170 1ffb 03       		.uleb128 0x3
 11171 1ffc 91       		.byte	0x91
 11172 1ffd B87F     		.sleb128 -72
 11173 1fff 21       		.uleb128 0x21
 11174 2000 10000000 		.4byte	.LVL891
 11175 2004 84250000 		.4byte	0x2584
 11176 2008 1C       		.uleb128 0x1c
 11177 2009 1C000000 		.4byte	.LVL894
 11178 200d 390A0000 		.4byte	0xa39
 11179 2011 28200000 		.4byte	0x2028
 11180 2015 1D       		.uleb128 0x1d
 11181 2016 01       		.uleb128 0x1
 11182 2017 52       		.byte	0x52
 11183 2018 01       		.uleb128 0x1
 11184 2019 31       		.byte	0x31
 11185 201a 1D       		.uleb128 0x1d
 11186 201b 01       		.uleb128 0x1
 11187 201c 51       		.byte	0x51
 11188 201d 02       		.uleb128 0x2
 11189 201e 91       		.byte	0x91
 11190 201f 44       		.sleb128 -60
 11191 2020 1D       		.uleb128 0x1d
 11192 2021 01       		.uleb128 0x1
 11193 2022 50       		.byte	0x50
 11194 2023 03       		.uleb128 0x3
 11195 2024 91       		.byte	0x91
 11196 2025 B47F     		.sleb128 -76
 11197 2027 00       		.byte	0
 11198 2028 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 267


 11199 2029 2E000000 		.4byte	.LVL897
 11200 202d 64110000 		.4byte	0x1164
 11201 2031 3C200000 		.4byte	0x203c
 11202 2035 1D       		.uleb128 0x1d
 11203 2036 01       		.uleb128 0x1
 11204 2037 50       		.byte	0x50
 11205 2038 02       		.uleb128 0x2
 11206 2039 91       		.byte	0x91
 11207 203a 44       		.sleb128 -60
 11208 203b 00       		.byte	0
 11209 203c 1C       		.uleb128 0x1c
 11210 203d 42000000 		.4byte	.LVL900
 11211 2041 FF0E0000 		.4byte	0xeff
 11212 2045 4F200000 		.4byte	0x204f
 11213 2049 1D       		.uleb128 0x1d
 11214 204a 01       		.uleb128 0x1
 11215 204b 51       		.byte	0x51
 11216 204c 01       		.uleb128 0x1
 11217 204d 30       		.byte	0x30
 11218 204e 00       		.byte	0
 11219 204f 1C       		.uleb128 0x1c
 11220 2050 60000000 		.4byte	.LVL906
 11221 2054 E3080000 		.4byte	0x8e3
 11222 2058 62200000 		.4byte	0x2062
 11223 205c 1D       		.uleb128 0x1d
 11224 205d 01       		.uleb128 0x1
 11225 205e 51       		.byte	0x51
 11226 205f 01       		.uleb128 0x1
 11227 2060 30       		.byte	0x30
 11228 2061 00       		.byte	0
 11229 2062 1C       		.uleb128 0x1c
 11230 2063 70000000 		.4byte	.LVL908
 11231 2067 8E0C0000 		.4byte	0xc8e
 11232 206b 7C200000 		.4byte	0x207c
 11233 206f 1D       		.uleb128 0x1d
 11234 2070 01       		.uleb128 0x1
 11235 2071 51       		.byte	0x51
 11236 2072 02       		.uleb128 0x2
 11237 2073 77       		.byte	0x77
 11238 2074 00       		.sleb128 0
 11239 2075 1D       		.uleb128 0x1d
 11240 2076 01       		.uleb128 0x1
 11241 2077 50       		.byte	0x50
 11242 2078 02       		.uleb128 0x2
 11243 2079 76       		.byte	0x76
 11244 207a 00       		.sleb128 0
 11245 207b 00       		.byte	0
 11246 207c 1C       		.uleb128 0x1c
 11247 207d 88000000 		.4byte	.LVL912
 11248 2081 F1040000 		.4byte	0x4f1
 11249 2085 9D200000 		.4byte	0x209d
 11250 2089 1D       		.uleb128 0x1d
 11251 208a 01       		.uleb128 0x1
 11252 208b 52       		.byte	0x52
 11253 208c 03       		.uleb128 0x3
 11254 208d 0A       		.byte	0xa
 11255 208e 0002     		.2byte	0x200
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 268


 11256 2090 1D       		.uleb128 0x1d
 11257 2091 01       		.uleb128 0x1
 11258 2092 51       		.byte	0x51
 11259 2093 01       		.uleb128 0x1
 11260 2094 30       		.byte	0x30
 11261 2095 1D       		.uleb128 0x1d
 11262 2096 01       		.uleb128 0x1
 11263 2097 50       		.byte	0x50
 11264 2098 03       		.uleb128 0x3
 11265 2099 7D       		.byte	0x7d
 11266 209a 00       		.sleb128 0
 11267 209b 06       		.byte	0x6
 11268 209c 00       		.byte	0
 11269 209d 1C       		.uleb128 0x1c
 11270 209e 92000000 		.4byte	.LVL913
 11271 20a2 F1040000 		.4byte	0x4f1
 11272 20a6 BD200000 		.4byte	0x20bd
 11273 20aa 1D       		.uleb128 0x1d
 11274 20ab 01       		.uleb128 0x1
 11275 20ac 52       		.byte	0x52
 11276 20ad 01       		.uleb128 0x1
 11277 20ae 3B       		.byte	0x3b
 11278 20af 1D       		.uleb128 0x1d
 11279 20b0 01       		.uleb128 0x1
 11280 20b1 51       		.byte	0x51
 11281 20b2 02       		.uleb128 0x2
 11282 20b3 08       		.byte	0x8
 11283 20b4 20       		.byte	0x20
 11284 20b5 1D       		.uleb128 0x1d
 11285 20b6 01       		.uleb128 0x1
 11286 20b7 50       		.byte	0x50
 11287 20b8 03       		.uleb128 0x3
 11288 20b9 7D       		.byte	0x7d
 11289 20ba 00       		.sleb128 0
 11290 20bb 06       		.byte	0x6
 11291 20bc 00       		.byte	0
 11292 20bd 1C       		.uleb128 0x1c
 11293 20be D8000000 		.4byte	.LVL914
 11294 20c2 7A040000 		.4byte	0x47a
 11295 20c6 DF200000 		.4byte	0x20df
 11296 20ca 1D       		.uleb128 0x1d
 11297 20cb 01       		.uleb128 0x1
 11298 20cc 52       		.byte	0x52
 11299 20cd 02       		.uleb128 0x2
 11300 20ce 08       		.byte	0x8
 11301 20cf 20       		.byte	0x20
 11302 20d0 1D       		.uleb128 0x1d
 11303 20d1 01       		.uleb128 0x1
 11304 20d2 51       		.byte	0x51
 11305 20d3 03       		.uleb128 0x3
 11306 20d4 7D       		.byte	0x7d
 11307 20d5 00       		.sleb128 0
 11308 20d6 06       		.byte	0x6
 11309 20d7 1D       		.uleb128 0x1d
 11310 20d8 01       		.uleb128 0x1
 11311 20d9 50       		.byte	0x50
 11312 20da 03       		.uleb128 0x3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 269


 11313 20db 76       		.byte	0x76
 11314 20dc D000     		.sleb128 80
 11315 20de 00       		.byte	0
 11316 20df 1C       		.uleb128 0x1c
 11317 20e0 20010000 		.4byte	.LVL921
 11318 20e4 E3080000 		.4byte	0x8e3
 11319 20e8 F2200000 		.4byte	0x20f2
 11320 20ec 1D       		.uleb128 0x1d
 11321 20ed 01       		.uleb128 0x1
 11322 20ee 51       		.byte	0x51
 11323 20ef 01       		.uleb128 0x1
 11324 20f0 30       		.byte	0x30
 11325 20f1 00       		.byte	0
 11326 20f2 1C       		.uleb128 0x1c
 11327 20f3 30010000 		.4byte	.LVL924
 11328 20f7 F1040000 		.4byte	0x4f1
 11329 20fb 13210000 		.4byte	0x2113
 11330 20ff 1D       		.uleb128 0x1d
 11331 2100 01       		.uleb128 0x1
 11332 2101 52       		.byte	0x52
 11333 2102 03       		.uleb128 0x3
 11334 2103 0A       		.byte	0xa
 11335 2104 0002     		.2byte	0x200
 11336 2106 1D       		.uleb128 0x1d
 11337 2107 01       		.uleb128 0x1
 11338 2108 51       		.byte	0x51
 11339 2109 01       		.uleb128 0x1
 11340 210a 30       		.byte	0x30
 11341 210b 1D       		.uleb128 0x1d
 11342 210c 01       		.uleb128 0x1
 11343 210d 50       		.byte	0x50
 11344 210e 03       		.uleb128 0x3
 11345 210f 7D       		.byte	0x7d
 11346 2110 00       		.sleb128 0
 11347 2111 06       		.byte	0x6
 11348 2112 00       		.byte	0
 11349 2113 1C       		.uleb128 0x1c
 11350 2114 44010000 		.4byte	.LVL929
 11351 2118 10120000 		.4byte	0x1210
 11352 211c 27210000 		.4byte	0x2127
 11353 2120 1D       		.uleb128 0x1d
 11354 2121 01       		.uleb128 0x1
 11355 2122 50       		.byte	0x50
 11356 2123 02       		.uleb128 0x2
 11357 2124 91       		.byte	0x91
 11358 2125 44       		.sleb128 -60
 11359 2126 00       		.byte	0
 11360 2127 1C       		.uleb128 0x1c
 11361 2128 52010000 		.4byte	.LVL931
 11362 212c 56130000 		.4byte	0x1356
 11363 2130 3B210000 		.4byte	0x213b
 11364 2134 1D       		.uleb128 0x1d
 11365 2135 01       		.uleb128 0x1
 11366 2136 51       		.byte	0x51
 11367 2137 02       		.uleb128 0x2
 11368 2138 77       		.byte	0x77
 11369 2139 00       		.sleb128 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 270


 11370 213a 00       		.byte	0
 11371 213b 21       		.uleb128 0x21
 11372 213c 82010000 		.4byte	.LVL935
 11373 2140 ED0B0000 		.4byte	0xbed
 11374 2144 00       		.byte	0
 11375 2145 23       		.uleb128 0x23
 11376 2146 B3040000 		.4byte	.LASF152
 11377 214a 01       		.byte	0x1
 11378 214b 030D     		.2byte	0xd03
 11379 214d EF030000 		.4byte	0x3ef
 11380 2151 00000000 		.4byte	.LFB42
 11381 2155 50000000 		.4byte	.LFE42-.LFB42
 11382 2159 01       		.uleb128 0x1
 11383 215a 9C       		.byte	0x9c
 11384 215b 09220000 		.4byte	0x2209
 11385 215f 19       		.uleb128 0x19
 11386 2160 85000000 		.4byte	.LASF93
 11387 2164 01       		.byte	0x1
 11388 2165 040D     		.2byte	0xd04
 11389 2167 3A080000 		.4byte	0x83a
 11390 216b 222E0000 		.4byte	.LLST200
 11391 216f 19       		.uleb128 0x19
 11392 2170 1D000000 		.4byte	.LASF153
 11393 2174 01       		.byte	0x1
 11394 2175 050D     		.2byte	0xd05
 11395 2177 B8000000 		.4byte	0xb8
 11396 217b 4D2E0000 		.4byte	.LLST201
 11397 217f 19       		.uleb128 0x19
 11398 2180 2F060000 		.4byte	.LASF154
 11399 2184 01       		.byte	0x1
 11400 2185 060D     		.2byte	0xd06
 11401 2187 B8000000 		.4byte	0xb8
 11402 218b 6E2E0000 		.4byte	.LLST202
 11403 218f 12       		.uleb128 0x12
 11404 2190 72657300 		.ascii	"res\000"
 11405 2194 01       		.byte	0x1
 11406 2195 090D     		.2byte	0xd09
 11407 2197 EF030000 		.4byte	0x3ef
 11408 219b A82E0000 		.4byte	.LLST203
 11409 219f 18       		.uleb128 0x18
 11410 21a0 646A00   		.ascii	"dj\000"
 11411 21a3 01       		.byte	0x1
 11412 21a4 0A0D     		.2byte	0xd0a
 11413 21a6 03030000 		.4byte	0x303
 11414 21aa 02       		.uleb128 0x2
 11415 21ab 91       		.byte	0x91
 11416 21ac 54       		.sleb128 -44
 11417 21ad 12       		.uleb128 0x12
 11418 21ae 64697200 		.ascii	"dir\000"
 11419 21b2 01       		.byte	0x1
 11420 21b3 0B0D     		.2byte	0xd0b
 11421 21b5 8C020000 		.4byte	0x28c
 11422 21b9 D12E0000 		.4byte	.LLST204
 11423 21bd 18       		.uleb128 0x18
 11424 21be 73666E00 		.ascii	"sfn\000"
 11425 21c2 01       		.byte	0x1
 11426 21c3 0C0D     		.2byte	0xd0c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 271


 11427 21c5 B4150000 		.4byte	0x15b4
 11428 21c9 02       		.uleb128 0x2
 11429 21ca 91       		.byte	0x91
 11430 21cb 48       		.sleb128 -56
 11431 21cc 1C       		.uleb128 0x1c
 11432 21cd 14000000 		.4byte	.LVL944
 11433 21d1 390A0000 		.4byte	0xa39
 11434 21d5 EB210000 		.4byte	0x21eb
 11435 21d9 1D       		.uleb128 0x1d
 11436 21da 01       		.uleb128 0x1
 11437 21db 52       		.byte	0x52
 11438 21dc 01       		.uleb128 0x1
 11439 21dd 31       		.byte	0x31
 11440 21de 1D       		.uleb128 0x1d
 11441 21df 01       		.uleb128 0x1
 11442 21e0 51       		.byte	0x51
 11443 21e1 02       		.uleb128 0x2
 11444 21e2 91       		.byte	0x91
 11445 21e3 54       		.sleb128 -44
 11446 21e4 1D       		.uleb128 0x1d
 11447 21e5 01       		.uleb128 0x1
 11448 21e6 50       		.byte	0x50
 11449 21e7 02       		.uleb128 0x2
 11450 21e8 91       		.byte	0x91
 11451 21e9 44       		.sleb128 -60
 11452 21ea 00       		.byte	0
 11453 21eb 1C       		.uleb128 0x1c
 11454 21ec 24000000 		.4byte	.LVL946
 11455 21f0 64110000 		.4byte	0x1164
 11456 21f4 FF210000 		.4byte	0x21ff
 11457 21f8 1D       		.uleb128 0x1d
 11458 21f9 01       		.uleb128 0x1
 11459 21fa 50       		.byte	0x50
 11460 21fb 02       		.uleb128 0x2
 11461 21fc 91       		.byte	0x91
 11462 21fd 54       		.sleb128 -44
 11463 21fe 00       		.byte	0
 11464 21ff 21       		.uleb128 0x21
 11465 2200 48000000 		.4byte	.LVL951
 11466 2204 ED0B0000 		.4byte	0xbed
 11467 2208 00       		.byte	0
 11468 2209 23       		.uleb128 0x23
 11469 220a B9000000 		.4byte	.LASF155
 11470 220e 01       		.byte	0x1
 11471 220f 2D0D     		.2byte	0xd2d
 11472 2211 EF030000 		.4byte	0x3ef
 11473 2215 00000000 		.4byte	.LFB43
 11474 2219 54000000 		.4byte	.LFE43-.LFB43
 11475 221d 01       		.uleb128 0x1
 11476 221e 9C       		.byte	0x9c
 11477 221f BD220000 		.4byte	0x22bd
 11478 2223 19       		.uleb128 0x19
 11479 2224 85000000 		.4byte	.LASF93
 11480 2228 01       		.byte	0x1
 11481 2229 2E0D     		.2byte	0xd2e
 11482 222b 3A080000 		.4byte	0x83a
 11483 222f EF2E0000 		.4byte	.LLST205
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 272


 11484 2233 11       		.uleb128 0x11
 11485 2234 666E6F00 		.ascii	"fno\000"
 11486 2238 01       		.byte	0x1
 11487 2239 2F0D     		.2byte	0xd2f
 11488 223b BD220000 		.4byte	0x22bd
 11489 223f 1A2F0000 		.4byte	.LLST206
 11490 2243 12       		.uleb128 0x12
 11491 2244 72657300 		.ascii	"res\000"
 11492 2248 01       		.byte	0x1
 11493 2249 320D     		.2byte	0xd32
 11494 224b EF030000 		.4byte	0x3ef
 11495 224f 462F0000 		.4byte	.LLST207
 11496 2253 18       		.uleb128 0x18
 11497 2254 646A00   		.ascii	"dj\000"
 11498 2257 01       		.byte	0x1
 11499 2258 330D     		.2byte	0xd33
 11500 225a 03030000 		.4byte	0x303
 11501 225e 02       		.uleb128 0x2
 11502 225f 91       		.byte	0x91
 11503 2260 5C       		.sleb128 -36
 11504 2261 12       		.uleb128 0x12
 11505 2262 64697200 		.ascii	"dir\000"
 11506 2266 01       		.byte	0x1
 11507 2267 340D     		.2byte	0xd34
 11508 2269 8C020000 		.4byte	0x28c
 11509 226d 6F2F0000 		.4byte	.LLST208
 11510 2271 18       		.uleb128 0x18
 11511 2272 73666E00 		.ascii	"sfn\000"
 11512 2276 01       		.byte	0x1
 11513 2277 350D     		.2byte	0xd35
 11514 2279 B4150000 		.4byte	0x15b4
 11515 227d 02       		.uleb128 0x2
 11516 227e 91       		.byte	0x91
 11517 227f 50       		.sleb128 -48
 11518 2280 1C       		.uleb128 0x1c
 11519 2281 12000000 		.4byte	.LVL957
 11520 2285 390A0000 		.4byte	0xa39
 11521 2289 9F220000 		.4byte	0x229f
 11522 228d 1D       		.uleb128 0x1d
 11523 228e 01       		.uleb128 0x1
 11524 228f 52       		.byte	0x52
 11525 2290 01       		.uleb128 0x1
 11526 2291 31       		.byte	0x31
 11527 2292 1D       		.uleb128 0x1d
 11528 2293 01       		.uleb128 0x1
 11529 2294 51       		.byte	0x51
 11530 2295 02       		.uleb128 0x2
 11531 2296 91       		.byte	0x91
 11532 2297 5C       		.sleb128 -36
 11533 2298 1D       		.uleb128 0x1d
 11534 2299 01       		.uleb128 0x1
 11535 229a 50       		.byte	0x50
 11536 229b 02       		.uleb128 0x2
 11537 229c 91       		.byte	0x91
 11538 229d 4C       		.sleb128 -52
 11539 229e 00       		.byte	0
 11540 229f 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 273


 11541 22a0 22000000 		.4byte	.LVL959
 11542 22a4 64110000 		.4byte	0x1164
 11543 22a8 B3220000 		.4byte	0x22b3
 11544 22ac 1D       		.uleb128 0x1d
 11545 22ad 01       		.uleb128 0x1
 11546 22ae 50       		.byte	0x50
 11547 22af 02       		.uleb128 0x2
 11548 22b0 91       		.byte	0x91
 11549 22b1 5C       		.sleb128 -36
 11550 22b2 00       		.byte	0
 11551 22b3 21       		.uleb128 0x21
 11552 22b4 4C000000 		.4byte	.LVL963
 11553 22b8 ED0B0000 		.4byte	0xbed
 11554 22bc 00       		.byte	0
 11555 22bd 0B       		.uleb128 0xb
 11556 22be 04       		.byte	0x4
 11557 22bf C3220000 		.4byte	0x22c3
 11558 22c3 15       		.uleb128 0x15
 11559 22c4 63030000 		.4byte	0x363
 11560 22c8 23       		.uleb128 0x23
 11561 22c9 9B020000 		.4byte	.LASF156
 11562 22cd 01       		.byte	0x1
 11563 22ce 560D     		.2byte	0xd56
 11564 22d0 EF030000 		.4byte	0x3ef
 11565 22d4 00000000 		.4byte	.LFB44
 11566 22d8 26010000 		.4byte	.LFE44-.LFB44
 11567 22dc 01       		.uleb128 0x1
 11568 22dd 9C       		.byte	0x9c
 11569 22de 8D240000 		.4byte	0x248d
 11570 22e2 19       		.uleb128 0x19
 11571 22e3 F9000000 		.4byte	.LASF157
 11572 22e7 01       		.byte	0x1
 11573 22e8 570D     		.2byte	0xd57
 11574 22ea 3A080000 		.4byte	0x83a
 11575 22ee 8D2F0000 		.4byte	.LLST209
 11576 22f2 19       		.uleb128 0x19
 11577 22f3 49030000 		.4byte	.LASF158
 11578 22f7 01       		.byte	0x1
 11579 22f8 580D     		.2byte	0xd58
 11580 22fa 3A080000 		.4byte	0x83a
 11581 22fe B92F0000 		.4byte	.LLST210
 11582 2302 12       		.uleb128 0x12
 11583 2303 72657300 		.ascii	"res\000"
 11584 2307 01       		.byte	0x1
 11585 2308 5B0D     		.2byte	0xd5b
 11586 230a EF030000 		.4byte	0x3ef
 11587 230e FE2F0000 		.4byte	.LLST211
 11588 2312 18       		.uleb128 0x18
 11589 2313 646A6F00 		.ascii	"djo\000"
 11590 2317 01       		.byte	0x1
 11591 2318 5C0D     		.2byte	0xd5c
 11592 231a 03030000 		.4byte	0x303
 11593 231e 02       		.uleb128 0x2
 11594 231f 91       		.byte	0x91
 11595 2320 54       		.sleb128 -44
 11596 2321 18       		.uleb128 0x18
 11597 2322 646A6E00 		.ascii	"djn\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 274


 11598 2326 01       		.byte	0x1
 11599 2327 5C0D     		.2byte	0xd5c
 11600 2329 03030000 		.4byte	0x303
 11601 232d 03       		.uleb128 0x3
 11602 232e 91       		.byte	0x91
 11603 232f B87F     		.sleb128 -72
 11604 2331 18       		.uleb128 0x18
 11605 2332 62756600 		.ascii	"buf\000"
 11606 2336 01       		.byte	0x1
 11607 2337 5D0D     		.2byte	0xd5d
 11608 2339 8D240000 		.4byte	0x248d
 11609 233d 03       		.uleb128 0x3
 11610 233e 91       		.byte	0x91
 11611 233f A07F     		.sleb128 -96
 11612 2341 12       		.uleb128 0x12
 11613 2342 64697200 		.ascii	"dir\000"
 11614 2346 01       		.byte	0x1
 11615 2347 5D0D     		.2byte	0xd5d
 11616 2349 8C020000 		.4byte	0x28c
 11617 234d AB300000 		.4byte	.LLST212
 11618 2351 12       		.uleb128 0x12
 11619 2352 647700   		.ascii	"dw\000"
 11620 2355 01       		.byte	0x1
 11621 2356 5E0D     		.2byte	0xd5e
 11622 2358 CE000000 		.4byte	0xce
 11623 235c D7300000 		.4byte	.LLST213
 11624 2360 18       		.uleb128 0x18
 11625 2361 73666E00 		.ascii	"sfn\000"
 11626 2365 01       		.byte	0x1
 11627 2366 5F0D     		.2byte	0xd5f
 11628 2368 B4150000 		.4byte	0x15b4
 11629 236c 03       		.uleb128 0x3
 11630 236d 91       		.byte	0x91
 11631 236e 947F     		.sleb128 -108
 11632 2370 1C       		.uleb128 0x1c
 11633 2371 12000000 		.4byte	.LVL970
 11634 2375 390A0000 		.4byte	0xa39
 11635 2379 90230000 		.4byte	0x2390
 11636 237d 1D       		.uleb128 0x1d
 11637 237e 01       		.uleb128 0x1
 11638 237f 52       		.byte	0x52
 11639 2380 01       		.uleb128 0x1
 11640 2381 31       		.byte	0x31
 11641 2382 1D       		.uleb128 0x1d
 11642 2383 01       		.uleb128 0x1
 11643 2384 51       		.byte	0x51
 11644 2385 02       		.uleb128 0x2
 11645 2386 91       		.byte	0x91
 11646 2387 54       		.sleb128 -44
 11647 2388 1D       		.uleb128 0x1d
 11648 2389 01       		.uleb128 0x1
 11649 238a 50       		.byte	0x50
 11650 238b 03       		.uleb128 0x3
 11651 238c 91       		.byte	0x91
 11652 238d 8C7F     		.sleb128 -116
 11653 238f 00       		.byte	0
 11654 2390 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 275


 11655 2391 28000000 		.4byte	.LVL973
 11656 2395 64110000 		.4byte	0x1164
 11657 2399 A4230000 		.4byte	0x23a4
 11658 239d 1D       		.uleb128 0x1d
 11659 239e 01       		.uleb128 0x1
 11660 239f 50       		.byte	0x50
 11661 23a0 02       		.uleb128 0x2
 11662 23a1 91       		.byte	0x91
 11663 23a2 54       		.sleb128 -44
 11664 23a3 00       		.byte	0
 11665 23a4 1C       		.uleb128 0x1c
 11666 23a5 34000000 		.4byte	.LVL976
 11667 23a9 FD050000 		.4byte	0x5fd
 11668 23ad BD230000 		.4byte	0x23bd
 11669 23b1 1D       		.uleb128 0x1d
 11670 23b2 01       		.uleb128 0x1
 11671 23b3 51       		.byte	0x51
 11672 23b4 01       		.uleb128 0x1
 11673 23b5 32       		.byte	0x32
 11674 23b6 1D       		.uleb128 0x1d
 11675 23b7 01       		.uleb128 0x1
 11676 23b8 50       		.byte	0x50
 11677 23b9 02       		.uleb128 0x2
 11678 23ba 91       		.byte	0x91
 11679 23bb 54       		.sleb128 -44
 11680 23bc 00       		.byte	0
 11681 23bd 1C       		.uleb128 0x1c
 11682 23be 4A000000 		.4byte	.LVL978
 11683 23c2 7A040000 		.4byte	0x47a
 11684 23c6 D7230000 		.4byte	0x23d7
 11685 23ca 1D       		.uleb128 0x1d
 11686 23cb 01       		.uleb128 0x1
 11687 23cc 52       		.byte	0x52
 11688 23cd 01       		.uleb128 0x1
 11689 23ce 45       		.byte	0x45
 11690 23cf 1D       		.uleb128 0x1d
 11691 23d0 01       		.uleb128 0x1
 11692 23d1 50       		.byte	0x50
 11693 23d2 03       		.uleb128 0x3
 11694 23d3 91       		.byte	0x91
 11695 23d4 A07F     		.sleb128 -96
 11696 23d6 00       		.byte	0
 11697 23d7 1C       		.uleb128 0x1c
 11698 23d8 54000000 		.4byte	.LVL979
 11699 23dc 7A040000 		.4byte	0x47a
 11700 23e0 F7230000 		.4byte	0x23f7
 11701 23e4 1D       		.uleb128 0x1d
 11702 23e5 01       		.uleb128 0x1
 11703 23e6 52       		.byte	0x52
 11704 23e7 01       		.uleb128 0x1
 11705 23e8 4C       		.byte	0x4c
 11706 23e9 1D       		.uleb128 0x1d
 11707 23ea 01       		.uleb128 0x1
 11708 23eb 51       		.byte	0x51
 11709 23ec 02       		.uleb128 0x2
 11710 23ed 91       		.byte	0x91
 11711 23ee 54       		.sleb128 -44
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 276


 11712 23ef 1D       		.uleb128 0x1d
 11713 23f0 01       		.uleb128 0x1
 11714 23f1 50       		.byte	0x50
 11715 23f2 03       		.uleb128 0x3
 11716 23f3 91       		.byte	0x91
 11717 23f4 B87F     		.sleb128 -72
 11718 23f6 00       		.byte	0
 11719 23f7 1C       		.uleb128 0x1c
 11720 23f8 5C000000 		.4byte	.LVL980
 11721 23fc 64110000 		.4byte	0x1164
 11722 2400 12240000 		.4byte	0x2412
 11723 2404 1D       		.uleb128 0x1d
 11724 2405 01       		.uleb128 0x1
 11725 2406 51       		.byte	0x51
 11726 2407 02       		.uleb128 0x2
 11727 2408 75       		.byte	0x75
 11728 2409 00       		.sleb128 0
 11729 240a 1D       		.uleb128 0x1d
 11730 240b 01       		.uleb128 0x1
 11731 240c 50       		.byte	0x50
 11732 240d 03       		.uleb128 0x3
 11733 240e 91       		.byte	0x91
 11734 240f B87F     		.sleb128 -72
 11735 2411 00       		.byte	0
 11736 2412 1C       		.uleb128 0x1c
 11737 2413 6C000000 		.4byte	.LVL983
 11738 2417 10120000 		.4byte	0x1210
 11739 241b 27240000 		.4byte	0x2427
 11740 241f 1D       		.uleb128 0x1d
 11741 2420 01       		.uleb128 0x1
 11742 2421 50       		.byte	0x50
 11743 2422 03       		.uleb128 0x3
 11744 2423 91       		.byte	0x91
 11745 2424 B87F     		.sleb128 -72
 11746 2426 00       		.byte	0
 11747 2427 1C       		.uleb128 0x1c
 11748 2428 80000000 		.4byte	.LVL987
 11749 242c 7A040000 		.4byte	0x47a
 11750 2430 47240000 		.4byte	0x2447
 11751 2434 1D       		.uleb128 0x1d
 11752 2435 01       		.uleb128 0x1
 11753 2436 52       		.byte	0x52
 11754 2437 01       		.uleb128 0x1
 11755 2438 43       		.byte	0x43
 11756 2439 1D       		.uleb128 0x1d
 11757 243a 01       		.uleb128 0x1
 11758 243b 51       		.byte	0x51
 11759 243c 03       		.uleb128 0x3
 11760 243d 91       		.byte	0x91
 11761 243e A27F     		.sleb128 -94
 11762 2440 1D       		.uleb128 0x1d
 11763 2441 01       		.uleb128 0x1
 11764 2442 50       		.byte	0x50
 11765 2443 02       		.uleb128 0x2
 11766 2444 75       		.byte	0x75
 11767 2445 0D       		.sleb128 13
 11768 2446 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 277


 11769 2447 1C       		.uleb128 0x1c
 11770 2448 BC000000 		.4byte	.LVL989
 11771 244c 8E0C0000 		.4byte	0xc8e
 11772 2450 5B240000 		.4byte	0x245b
 11773 2454 1D       		.uleb128 0x1d
 11774 2455 01       		.uleb128 0x1
 11775 2456 50       		.byte	0x50
 11776 2457 02       		.uleb128 0x2
 11777 2458 74       		.byte	0x74
 11778 2459 00       		.sleb128 0
 11779 245a 00       		.byte	0
 11780 245b 1C       		.uleb128 0x1c
 11781 245c C6000000 		.4byte	.LVL992
 11782 2460 E3080000 		.4byte	0x8e3
 11783 2464 6F240000 		.4byte	0x246f
 11784 2468 1D       		.uleb128 0x1d
 11785 2469 01       		.uleb128 0x1
 11786 246a 50       		.byte	0x50
 11787 246b 02       		.uleb128 0x2
 11788 246c 74       		.byte	0x74
 11789 246d 00       		.sleb128 0
 11790 246e 00       		.byte	0
 11791 246f 1C       		.uleb128 0x1c
 11792 2470 10010000 		.4byte	.LVL1000
 11793 2474 E50D0000 		.4byte	0xde5
 11794 2478 83240000 		.4byte	0x2483
 11795 247c 1D       		.uleb128 0x1d
 11796 247d 01       		.uleb128 0x1
 11797 247e 50       		.byte	0x50
 11798 247f 02       		.uleb128 0x2
 11799 2480 91       		.byte	0x91
 11800 2481 54       		.sleb128 -44
 11801 2482 00       		.byte	0
 11802 2483 21       		.uleb128 0x21
 11803 2484 1A010000 		.4byte	.LVL1003
 11804 2488 ED0B0000 		.4byte	0xbed
 11805 248c 00       		.byte	0
 11806 248d 08       		.uleb128 0x8
 11807 248e B8000000 		.4byte	0xb8
 11808 2492 9D240000 		.4byte	0x249d
 11809 2496 0D       		.uleb128 0xd
 11810 2497 DD010000 		.4byte	0x1dd
 11811 249b 14       		.byte	0x14
 11812 249c 00       		.byte	0
 11813 249d 08       		.uleb128 0x8
 11814 249e 86020000 		.4byte	0x286
 11815 24a2 AD240000 		.4byte	0x24ad
 11816 24a6 0D       		.uleb128 0xd
 11817 24a7 DD010000 		.4byte	0x1dd
 11818 24ab 00       		.byte	0
 11819 24ac 00       		.byte	0
 11820 24ad 1A       		.uleb128 0x1a
 11821 24ae 87010000 		.4byte	.LASF159
 11822 24b2 01       		.byte	0x1
 11823 24b3 D401     		.2byte	0x1d4
 11824 24b5 9D240000 		.4byte	0x249d
 11825 24b9 05       		.uleb128 0x5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 278


 11826 24ba 03       		.byte	0x3
 11827 24bb 24000000 		.4byte	FatFs
 11828 24bf 1A       		.uleb128 0x1a
 11829 24c0 B7060000 		.4byte	.LASF160
 11830 24c4 01       		.byte	0x1
 11831 24c5 DA01     		.2byte	0x1da
 11832 24c7 C3000000 		.4byte	0xc3
 11833 24cb 05       		.uleb128 0x5
 11834 24cc 03       		.byte	0x3
 11835 24cd 28000000 		.4byte	Fsid
 11836 24d1 08       		.uleb128 0x8
 11837 24d2 6F040000 		.4byte	0x46f
 11838 24d6 E1240000 		.4byte	0x24e1
 11839 24da 0D       		.uleb128 0xd
 11840 24db DD010000 		.4byte	0x1dd
 11841 24df 02       		.byte	0x2
 11842 24e0 00       		.byte	0
 11843 24e1 1A       		.uleb128 0x1a
 11844 24e2 29060000 		.4byte	.LASF161
 11845 24e6 01       		.byte	0x1
 11846 24e7 E301     		.2byte	0x1e3
 11847 24e9 D1240000 		.4byte	0x24d1
 11848 24ed 05       		.uleb128 0x5
 11849 24ee 03       		.byte	0x3
 11850 24ef 00000000 		.4byte	Files
 11851 24f3 26       		.uleb128 0x26
 11852 24f4 ED050000 		.4byte	.LASF162
 11853 24f8 06       		.byte	0x6
 11854 24f9 23       		.byte	0x23
 11855 24fa 2C040000 		.4byte	0x42c
 11856 24fe 17250000 		.4byte	0x2517
 11857 2502 27       		.uleb128 0x27
 11858 2503 B8000000 		.4byte	0xb8
 11859 2507 27       		.uleb128 0x27
 11860 2508 E6040000 		.4byte	0x4e6
 11861 250c 27       		.uleb128 0x27
 11862 250d CE000000 		.4byte	0xce
 11863 2511 27       		.uleb128 0x27
 11864 2512 AD000000 		.4byte	0xad
 11865 2516 00       		.byte	0
 11866 2517 26       		.uleb128 0x26
 11867 2518 A5060000 		.4byte	.LASF163
 11868 251c 06       		.byte	0x6
 11869 251d 22       		.byte	0x22
 11870 251e 2C040000 		.4byte	0x42c
 11871 2522 3B250000 		.4byte	0x253b
 11872 2526 27       		.uleb128 0x27
 11873 2527 B8000000 		.4byte	0xb8
 11874 252b 27       		.uleb128 0x27
 11875 252c 8C020000 		.4byte	0x28c
 11876 2530 27       		.uleb128 0x27
 11877 2531 CE000000 		.4byte	0xce
 11878 2535 27       		.uleb128 0x27
 11879 2536 AD000000 		.4byte	0xad
 11880 253a 00       		.byte	0
 11881 253b 26       		.uleb128 0x26
 11882 253c 5E020000 		.4byte	.LASF164
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 279


 11883 2540 06       		.byte	0x6
 11884 2541 21       		.byte	0x21
 11885 2542 FA030000 		.4byte	0x3fa
 11886 2546 50250000 		.4byte	0x2550
 11887 254a 27       		.uleb128 0x27
 11888 254b B8000000 		.4byte	0xb8
 11889 254f 00       		.byte	0
 11890 2550 26       		.uleb128 0x26
 11891 2551 07020000 		.4byte	.LASF165
 11892 2555 06       		.byte	0x6
 11893 2556 20       		.byte	0x20
 11894 2557 FA030000 		.4byte	0x3fa
 11895 255b 65250000 		.4byte	0x2565
 11896 255f 27       		.uleb128 0x27
 11897 2560 B8000000 		.4byte	0xb8
 11898 2564 00       		.byte	0
 11899 2565 26       		.uleb128 0x26
 11900 2566 0E030000 		.4byte	.LASF166
 11901 256a 06       		.byte	0x6
 11902 256b 24       		.byte	0x24
 11903 256c 2C040000 		.4byte	0x42c
 11904 2570 84250000 		.4byte	0x2584
 11905 2574 27       		.uleb128 0x27
 11906 2575 B8000000 		.4byte	0xb8
 11907 2579 27       		.uleb128 0x27
 11908 257a B8000000 		.4byte	0xb8
 11909 257e 27       		.uleb128 0x27
 11910 257f DD040000 		.4byte	0x4dd
 11911 2583 00       		.byte	0
 11912 2584 28       		.uleb128 0x28
 11913 2585 5F040000 		.4byte	.LASF170
 11914 2589 05       		.byte	0x5
 11915 258a FA       		.byte	0xfa
 11916 258b CE000000 		.4byte	0xce
 11917 258f 00       		.byte	0
 11918              		.section	.debug_abbrev,"",%progbits
 11919              	.Ldebug_abbrev0:
 11920 0000 01       		.uleb128 0x1
 11921 0001 11       		.uleb128 0x11
 11922 0002 01       		.byte	0x1
 11923 0003 25       		.uleb128 0x25
 11924 0004 0E       		.uleb128 0xe
 11925 0005 13       		.uleb128 0x13
 11926 0006 0B       		.uleb128 0xb
 11927 0007 03       		.uleb128 0x3
 11928 0008 0E       		.uleb128 0xe
 11929 0009 1B       		.uleb128 0x1b
 11930 000a 0E       		.uleb128 0xe
 11931 000b 55       		.uleb128 0x55
 11932 000c 17       		.uleb128 0x17
 11933 000d 11       		.uleb128 0x11
 11934 000e 01       		.uleb128 0x1
 11935 000f 10       		.uleb128 0x10
 11936 0010 17       		.uleb128 0x17
 11937 0011 00       		.byte	0
 11938 0012 00       		.byte	0
 11939 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 280


 11940 0014 24       		.uleb128 0x24
 11941 0015 00       		.byte	0
 11942 0016 0B       		.uleb128 0xb
 11943 0017 0B       		.uleb128 0xb
 11944 0018 3E       		.uleb128 0x3e
 11945 0019 0B       		.uleb128 0xb
 11946 001a 03       		.uleb128 0x3
 11947 001b 0E       		.uleb128 0xe
 11948 001c 00       		.byte	0
 11949 001d 00       		.byte	0
 11950 001e 03       		.uleb128 0x3
 11951 001f 16       		.uleb128 0x16
 11952 0020 00       		.byte	0
 11953 0021 03       		.uleb128 0x3
 11954 0022 0E       		.uleb128 0xe
 11955 0023 3A       		.uleb128 0x3a
 11956 0024 0B       		.uleb128 0xb
 11957 0025 3B       		.uleb128 0x3b
 11958 0026 0B       		.uleb128 0xb
 11959 0027 49       		.uleb128 0x49
 11960 0028 13       		.uleb128 0x13
 11961 0029 00       		.byte	0
 11962 002a 00       		.byte	0
 11963 002b 04       		.uleb128 0x4
 11964 002c 24       		.uleb128 0x24
 11965 002d 00       		.byte	0
 11966 002e 0B       		.uleb128 0xb
 11967 002f 0B       		.uleb128 0xb
 11968 0030 3E       		.uleb128 0x3e
 11969 0031 0B       		.uleb128 0xb
 11970 0032 03       		.uleb128 0x3
 11971 0033 08       		.uleb128 0x8
 11972 0034 00       		.byte	0
 11973 0035 00       		.byte	0
 11974 0036 05       		.uleb128 0x5
 11975 0037 13       		.uleb128 0x13
 11976 0038 01       		.byte	0x1
 11977 0039 0B       		.uleb128 0xb
 11978 003a 05       		.uleb128 0x5
 11979 003b 3A       		.uleb128 0x3a
 11980 003c 0B       		.uleb128 0xb
 11981 003d 3B       		.uleb128 0x3b
 11982 003e 0B       		.uleb128 0xb
 11983 003f 01       		.uleb128 0x1
 11984 0040 13       		.uleb128 0x13
 11985 0041 00       		.byte	0
 11986 0042 00       		.byte	0
 11987 0043 06       		.uleb128 0x6
 11988 0044 0D       		.uleb128 0xd
 11989 0045 00       		.byte	0
 11990 0046 03       		.uleb128 0x3
 11991 0047 0E       		.uleb128 0xe
 11992 0048 3A       		.uleb128 0x3a
 11993 0049 0B       		.uleb128 0xb
 11994 004a 3B       		.uleb128 0x3b
 11995 004b 0B       		.uleb128 0xb
 11996 004c 49       		.uleb128 0x49
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 281


 11997 004d 13       		.uleb128 0x13
 11998 004e 38       		.uleb128 0x38
 11999 004f 0B       		.uleb128 0xb
 12000 0050 00       		.byte	0
 12001 0051 00       		.byte	0
 12002 0052 07       		.uleb128 0x7
 12003 0053 0D       		.uleb128 0xd
 12004 0054 00       		.byte	0
 12005 0055 03       		.uleb128 0x3
 12006 0056 08       		.uleb128 0x8
 12007 0057 3A       		.uleb128 0x3a
 12008 0058 0B       		.uleb128 0xb
 12009 0059 3B       		.uleb128 0x3b
 12010 005a 0B       		.uleb128 0xb
 12011 005b 49       		.uleb128 0x49
 12012 005c 13       		.uleb128 0x13
 12013 005d 38       		.uleb128 0x38
 12014 005e 0B       		.uleb128 0xb
 12015 005f 00       		.byte	0
 12016 0060 00       		.byte	0
 12017 0061 08       		.uleb128 0x8
 12018 0062 01       		.uleb128 0x1
 12019 0063 01       		.byte	0x1
 12020 0064 49       		.uleb128 0x49
 12021 0065 13       		.uleb128 0x13
 12022 0066 01       		.uleb128 0x1
 12023 0067 13       		.uleb128 0x13
 12024 0068 00       		.byte	0
 12025 0069 00       		.byte	0
 12026 006a 09       		.uleb128 0x9
 12027 006b 21       		.uleb128 0x21
 12028 006c 00       		.byte	0
 12029 006d 49       		.uleb128 0x49
 12030 006e 13       		.uleb128 0x13
 12031 006f 2F       		.uleb128 0x2f
 12032 0070 05       		.uleb128 0x5
 12033 0071 00       		.byte	0
 12034 0072 00       		.byte	0
 12035 0073 0A       		.uleb128 0xa
 12036 0074 13       		.uleb128 0x13
 12037 0075 01       		.byte	0x1
 12038 0076 0B       		.uleb128 0xb
 12039 0077 0B       		.uleb128 0xb
 12040 0078 3A       		.uleb128 0x3a
 12041 0079 0B       		.uleb128 0xb
 12042 007a 3B       		.uleb128 0x3b
 12043 007b 0B       		.uleb128 0xb
 12044 007c 01       		.uleb128 0x1
 12045 007d 13       		.uleb128 0x13
 12046 007e 00       		.byte	0
 12047 007f 00       		.byte	0
 12048 0080 0B       		.uleb128 0xb
 12049 0081 0F       		.uleb128 0xf
 12050 0082 00       		.byte	0
 12051 0083 0B       		.uleb128 0xb
 12052 0084 0B       		.uleb128 0xb
 12053 0085 49       		.uleb128 0x49
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 282


 12054 0086 13       		.uleb128 0x13
 12055 0087 00       		.byte	0
 12056 0088 00       		.byte	0
 12057 0089 0C       		.uleb128 0xc
 12058 008a 16       		.uleb128 0x16
 12059 008b 00       		.byte	0
 12060 008c 03       		.uleb128 0x3
 12061 008d 08       		.uleb128 0x8
 12062 008e 3A       		.uleb128 0x3a
 12063 008f 0B       		.uleb128 0xb
 12064 0090 3B       		.uleb128 0x3b
 12065 0091 0B       		.uleb128 0xb
 12066 0092 49       		.uleb128 0x49
 12067 0093 13       		.uleb128 0x13
 12068 0094 00       		.byte	0
 12069 0095 00       		.byte	0
 12070 0096 0D       		.uleb128 0xd
 12071 0097 21       		.uleb128 0x21
 12072 0098 00       		.byte	0
 12073 0099 49       		.uleb128 0x49
 12074 009a 13       		.uleb128 0x13
 12075 009b 2F       		.uleb128 0x2f
 12076 009c 0B       		.uleb128 0xb
 12077 009d 00       		.byte	0
 12078 009e 00       		.byte	0
 12079 009f 0E       		.uleb128 0xe
 12080 00a0 04       		.uleb128 0x4
 12081 00a1 01       		.byte	0x1
 12082 00a2 0B       		.uleb128 0xb
 12083 00a3 0B       		.uleb128 0xb
 12084 00a4 3A       		.uleb128 0x3a
 12085 00a5 0B       		.uleb128 0xb
 12086 00a6 3B       		.uleb128 0x3b
 12087 00a7 0B       		.uleb128 0xb
 12088 00a8 01       		.uleb128 0x1
 12089 00a9 13       		.uleb128 0x13
 12090 00aa 00       		.byte	0
 12091 00ab 00       		.byte	0
 12092 00ac 0F       		.uleb128 0xf
 12093 00ad 28       		.uleb128 0x28
 12094 00ae 00       		.byte	0
 12095 00af 03       		.uleb128 0x3
 12096 00b0 0E       		.uleb128 0xe
 12097 00b1 1C       		.uleb128 0x1c
 12098 00b2 0D       		.uleb128 0xd
 12099 00b3 00       		.byte	0
 12100 00b4 00       		.byte	0
 12101 00b5 10       		.uleb128 0x10
 12102 00b6 2E       		.uleb128 0x2e
 12103 00b7 01       		.byte	0x1
 12104 00b8 03       		.uleb128 0x3
 12105 00b9 0E       		.uleb128 0xe
 12106 00ba 3A       		.uleb128 0x3a
 12107 00bb 0B       		.uleb128 0xb
 12108 00bc 3B       		.uleb128 0x3b
 12109 00bd 05       		.uleb128 0x5
 12110 00be 27       		.uleb128 0x27
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 283


 12111 00bf 19       		.uleb128 0x19
 12112 00c0 11       		.uleb128 0x11
 12113 00c1 01       		.uleb128 0x1
 12114 00c2 12       		.uleb128 0x12
 12115 00c3 06       		.uleb128 0x6
 12116 00c4 40       		.uleb128 0x40
 12117 00c5 18       		.uleb128 0x18
 12118 00c6 9742     		.uleb128 0x2117
 12119 00c8 19       		.uleb128 0x19
 12120 00c9 01       		.uleb128 0x1
 12121 00ca 13       		.uleb128 0x13
 12122 00cb 00       		.byte	0
 12123 00cc 00       		.byte	0
 12124 00cd 11       		.uleb128 0x11
 12125 00ce 05       		.uleb128 0x5
 12126 00cf 00       		.byte	0
 12127 00d0 03       		.uleb128 0x3
 12128 00d1 08       		.uleb128 0x8
 12129 00d2 3A       		.uleb128 0x3a
 12130 00d3 0B       		.uleb128 0xb
 12131 00d4 3B       		.uleb128 0x3b
 12132 00d5 05       		.uleb128 0x5
 12133 00d6 49       		.uleb128 0x49
 12134 00d7 13       		.uleb128 0x13
 12135 00d8 02       		.uleb128 0x2
 12136 00d9 17       		.uleb128 0x17
 12137 00da 00       		.byte	0
 12138 00db 00       		.byte	0
 12139 00dc 12       		.uleb128 0x12
 12140 00dd 34       		.uleb128 0x34
 12141 00de 00       		.byte	0
 12142 00df 03       		.uleb128 0x3
 12143 00e0 08       		.uleb128 0x8
 12144 00e1 3A       		.uleb128 0x3a
 12145 00e2 0B       		.uleb128 0xb
 12146 00e3 3B       		.uleb128 0x3b
 12147 00e4 05       		.uleb128 0x5
 12148 00e5 49       		.uleb128 0x49
 12149 00e6 13       		.uleb128 0x13
 12150 00e7 02       		.uleb128 0x2
 12151 00e8 17       		.uleb128 0x17
 12152 00e9 00       		.byte	0
 12153 00ea 00       		.byte	0
 12154 00eb 13       		.uleb128 0x13
 12155 00ec 0F       		.uleb128 0xf
 12156 00ed 00       		.byte	0
 12157 00ee 0B       		.uleb128 0xb
 12158 00ef 0B       		.uleb128 0xb
 12159 00f0 00       		.byte	0
 12160 00f1 00       		.byte	0
 12161 00f2 14       		.uleb128 0x14
 12162 00f3 26       		.uleb128 0x26
 12163 00f4 00       		.byte	0
 12164 00f5 00       		.byte	0
 12165 00f6 00       		.byte	0
 12166 00f7 15       		.uleb128 0x15
 12167 00f8 26       		.uleb128 0x26
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 284


 12168 00f9 00       		.byte	0
 12169 00fa 49       		.uleb128 0x49
 12170 00fb 13       		.uleb128 0x13
 12171 00fc 00       		.byte	0
 12172 00fd 00       		.byte	0
 12173 00fe 16       		.uleb128 0x16
 12174 00ff 05       		.uleb128 0x5
 12175 0100 00       		.byte	0
 12176 0101 03       		.uleb128 0x3
 12177 0102 08       		.uleb128 0x8
 12178 0103 3A       		.uleb128 0x3a
 12179 0104 0B       		.uleb128 0xb
 12180 0105 3B       		.uleb128 0x3b
 12181 0106 05       		.uleb128 0x5
 12182 0107 49       		.uleb128 0x49
 12183 0108 13       		.uleb128 0x13
 12184 0109 02       		.uleb128 0x2
 12185 010a 18       		.uleb128 0x18
 12186 010b 00       		.byte	0
 12187 010c 00       		.byte	0
 12188 010d 17       		.uleb128 0x17
 12189 010e 2E       		.uleb128 0x2e
 12190 010f 01       		.byte	0x1
 12191 0110 03       		.uleb128 0x3
 12192 0111 0E       		.uleb128 0xe
 12193 0112 3A       		.uleb128 0x3a
 12194 0113 0B       		.uleb128 0xb
 12195 0114 3B       		.uleb128 0x3b
 12196 0115 05       		.uleb128 0x5
 12197 0116 27       		.uleb128 0x27
 12198 0117 19       		.uleb128 0x19
 12199 0118 49       		.uleb128 0x49
 12200 0119 13       		.uleb128 0x13
 12201 011a 11       		.uleb128 0x11
 12202 011b 01       		.uleb128 0x1
 12203 011c 12       		.uleb128 0x12
 12204 011d 06       		.uleb128 0x6
 12205 011e 40       		.uleb128 0x40
 12206 011f 18       		.uleb128 0x18
 12207 0120 9742     		.uleb128 0x2117
 12208 0122 19       		.uleb128 0x19
 12209 0123 01       		.uleb128 0x1
 12210 0124 13       		.uleb128 0x13
 12211 0125 00       		.byte	0
 12212 0126 00       		.byte	0
 12213 0127 18       		.uleb128 0x18
 12214 0128 34       		.uleb128 0x34
 12215 0129 00       		.byte	0
 12216 012a 03       		.uleb128 0x3
 12217 012b 08       		.uleb128 0x8
 12218 012c 3A       		.uleb128 0x3a
 12219 012d 0B       		.uleb128 0xb
 12220 012e 3B       		.uleb128 0x3b
 12221 012f 05       		.uleb128 0x5
 12222 0130 49       		.uleb128 0x49
 12223 0131 13       		.uleb128 0x13
 12224 0132 02       		.uleb128 0x2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 285


 12225 0133 18       		.uleb128 0x18
 12226 0134 00       		.byte	0
 12227 0135 00       		.byte	0
 12228 0136 19       		.uleb128 0x19
 12229 0137 05       		.uleb128 0x5
 12230 0138 00       		.byte	0
 12231 0139 03       		.uleb128 0x3
 12232 013a 0E       		.uleb128 0xe
 12233 013b 3A       		.uleb128 0x3a
 12234 013c 0B       		.uleb128 0xb
 12235 013d 3B       		.uleb128 0x3b
 12236 013e 05       		.uleb128 0x5
 12237 013f 49       		.uleb128 0x49
 12238 0140 13       		.uleb128 0x13
 12239 0141 02       		.uleb128 0x2
 12240 0142 17       		.uleb128 0x17
 12241 0143 00       		.byte	0
 12242 0144 00       		.byte	0
 12243 0145 1A       		.uleb128 0x1a
 12244 0146 34       		.uleb128 0x34
 12245 0147 00       		.byte	0
 12246 0148 03       		.uleb128 0x3
 12247 0149 0E       		.uleb128 0xe
 12248 014a 3A       		.uleb128 0x3a
 12249 014b 0B       		.uleb128 0xb
 12250 014c 3B       		.uleb128 0x3b
 12251 014d 05       		.uleb128 0x5
 12252 014e 49       		.uleb128 0x49
 12253 014f 13       		.uleb128 0x13
 12254 0150 02       		.uleb128 0x2
 12255 0151 18       		.uleb128 0x18
 12256 0152 00       		.byte	0
 12257 0153 00       		.byte	0
 12258 0154 1B       		.uleb128 0x1b
 12259 0155 34       		.uleb128 0x34
 12260 0156 00       		.byte	0
 12261 0157 03       		.uleb128 0x3
 12262 0158 08       		.uleb128 0x8
 12263 0159 3A       		.uleb128 0x3a
 12264 015a 0B       		.uleb128 0xb
 12265 015b 3B       		.uleb128 0x3b
 12266 015c 05       		.uleb128 0x5
 12267 015d 49       		.uleb128 0x49
 12268 015e 13       		.uleb128 0x13
 12269 015f 00       		.byte	0
 12270 0160 00       		.byte	0
 12271 0161 1C       		.uleb128 0x1c
 12272 0162 898201   		.uleb128 0x4109
 12273 0165 01       		.byte	0x1
 12274 0166 11       		.uleb128 0x11
 12275 0167 01       		.uleb128 0x1
 12276 0168 31       		.uleb128 0x31
 12277 0169 13       		.uleb128 0x13
 12278 016a 01       		.uleb128 0x1
 12279 016b 13       		.uleb128 0x13
 12280 016c 00       		.byte	0
 12281 016d 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 286


 12282 016e 1D       		.uleb128 0x1d
 12283 016f 8A8201   		.uleb128 0x410a
 12284 0172 00       		.byte	0
 12285 0173 02       		.uleb128 0x2
 12286 0174 18       		.uleb128 0x18
 12287 0175 9142     		.uleb128 0x2111
 12288 0177 18       		.uleb128 0x18
 12289 0178 00       		.byte	0
 12290 0179 00       		.byte	0
 12291 017a 1E       		.uleb128 0x1e
 12292 017b 898201   		.uleb128 0x4109
 12293 017e 01       		.byte	0x1
 12294 017f 11       		.uleb128 0x11
 12295 0180 01       		.uleb128 0x1
 12296 0181 31       		.uleb128 0x31
 12297 0182 13       		.uleb128 0x13
 12298 0183 00       		.byte	0
 12299 0184 00       		.byte	0
 12300 0185 1F       		.uleb128 0x1f
 12301 0186 34       		.uleb128 0x34
 12302 0187 00       		.byte	0
 12303 0188 03       		.uleb128 0x3
 12304 0189 0E       		.uleb128 0xe
 12305 018a 3A       		.uleb128 0x3a
 12306 018b 0B       		.uleb128 0xb
 12307 018c 3B       		.uleb128 0x3b
 12308 018d 05       		.uleb128 0x5
 12309 018e 49       		.uleb128 0x49
 12310 018f 13       		.uleb128 0x13
 12311 0190 02       		.uleb128 0x2
 12312 0191 17       		.uleb128 0x17
 12313 0192 00       		.byte	0
 12314 0193 00       		.byte	0
 12315 0194 20       		.uleb128 0x20
 12316 0195 0B       		.uleb128 0xb
 12317 0196 01       		.byte	0x1
 12318 0197 11       		.uleb128 0x11
 12319 0198 01       		.uleb128 0x1
 12320 0199 12       		.uleb128 0x12
 12321 019a 06       		.uleb128 0x6
 12322 019b 01       		.uleb128 0x1
 12323 019c 13       		.uleb128 0x13
 12324 019d 00       		.byte	0
 12325 019e 00       		.byte	0
 12326 019f 21       		.uleb128 0x21
 12327 01a0 898201   		.uleb128 0x4109
 12328 01a3 00       		.byte	0
 12329 01a4 11       		.uleb128 0x11
 12330 01a5 01       		.uleb128 0x1
 12331 01a6 31       		.uleb128 0x31
 12332 01a7 13       		.uleb128 0x13
 12333 01a8 00       		.byte	0
 12334 01a9 00       		.byte	0
 12335 01aa 22       		.uleb128 0x22
 12336 01ab 2E       		.uleb128 0x2e
 12337 01ac 01       		.byte	0x1
 12338 01ad 03       		.uleb128 0x3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 287


 12339 01ae 0E       		.uleb128 0xe
 12340 01af 3A       		.uleb128 0x3a
 12341 01b0 0B       		.uleb128 0xb
 12342 01b1 3B       		.uleb128 0x3b
 12343 01b2 05       		.uleb128 0x5
 12344 01b3 27       		.uleb128 0x27
 12345 01b4 19       		.uleb128 0x19
 12346 01b5 49       		.uleb128 0x49
 12347 01b6 13       		.uleb128 0x13
 12348 01b7 11       		.uleb128 0x11
 12349 01b8 01       		.uleb128 0x1
 12350 01b9 12       		.uleb128 0x12
 12351 01ba 06       		.uleb128 0x6
 12352 01bb 40       		.uleb128 0x40
 12353 01bc 18       		.uleb128 0x18
 12354 01bd 9642     		.uleb128 0x2116
 12355 01bf 19       		.uleb128 0x19
 12356 01c0 01       		.uleb128 0x1
 12357 01c1 13       		.uleb128 0x13
 12358 01c2 00       		.byte	0
 12359 01c3 00       		.byte	0
 12360 01c4 23       		.uleb128 0x23
 12361 01c5 2E       		.uleb128 0x2e
 12362 01c6 01       		.byte	0x1
 12363 01c7 3F       		.uleb128 0x3f
 12364 01c8 19       		.uleb128 0x19
 12365 01c9 03       		.uleb128 0x3
 12366 01ca 0E       		.uleb128 0xe
 12367 01cb 3A       		.uleb128 0x3a
 12368 01cc 0B       		.uleb128 0xb
 12369 01cd 3B       		.uleb128 0x3b
 12370 01ce 05       		.uleb128 0x5
 12371 01cf 27       		.uleb128 0x27
 12372 01d0 19       		.uleb128 0x19
 12373 01d1 49       		.uleb128 0x49
 12374 01d2 13       		.uleb128 0x13
 12375 01d3 11       		.uleb128 0x11
 12376 01d4 01       		.uleb128 0x1
 12377 01d5 12       		.uleb128 0x12
 12378 01d6 06       		.uleb128 0x6
 12379 01d7 40       		.uleb128 0x40
 12380 01d8 18       		.uleb128 0x18
 12381 01d9 9742     		.uleb128 0x2117
 12382 01db 19       		.uleb128 0x19
 12383 01dc 01       		.uleb128 0x1
 12384 01dd 13       		.uleb128 0x13
 12385 01de 00       		.byte	0
 12386 01df 00       		.byte	0
 12387 01e0 24       		.uleb128 0x24
 12388 01e1 0B       		.uleb128 0xb
 12389 01e2 01       		.byte	0x1
 12390 01e3 55       		.uleb128 0x55
 12391 01e4 17       		.uleb128 0x17
 12392 01e5 01       		.uleb128 0x1
 12393 01e6 13       		.uleb128 0x13
 12394 01e7 00       		.byte	0
 12395 01e8 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 288


 12396 01e9 25       		.uleb128 0x25
 12397 01ea 2E       		.uleb128 0x2e
 12398 01eb 01       		.byte	0x1
 12399 01ec 3F       		.uleb128 0x3f
 12400 01ed 19       		.uleb128 0x19
 12401 01ee 03       		.uleb128 0x3
 12402 01ef 0E       		.uleb128 0xe
 12403 01f0 3A       		.uleb128 0x3a
 12404 01f1 0B       		.uleb128 0xb
 12405 01f2 3B       		.uleb128 0x3b
 12406 01f3 05       		.uleb128 0x5
 12407 01f4 27       		.uleb128 0x27
 12408 01f5 19       		.uleb128 0x19
 12409 01f6 49       		.uleb128 0x49
 12410 01f7 13       		.uleb128 0x13
 12411 01f8 11       		.uleb128 0x11
 12412 01f9 01       		.uleb128 0x1
 12413 01fa 12       		.uleb128 0x12
 12414 01fb 06       		.uleb128 0x6
 12415 01fc 40       		.uleb128 0x40
 12416 01fd 18       		.uleb128 0x18
 12417 01fe 9642     		.uleb128 0x2116
 12418 0200 19       		.uleb128 0x19
 12419 0201 01       		.uleb128 0x1
 12420 0202 13       		.uleb128 0x13
 12421 0203 00       		.byte	0
 12422 0204 00       		.byte	0
 12423 0205 26       		.uleb128 0x26
 12424 0206 2E       		.uleb128 0x2e
 12425 0207 01       		.byte	0x1
 12426 0208 3F       		.uleb128 0x3f
 12427 0209 19       		.uleb128 0x19
 12428 020a 03       		.uleb128 0x3
 12429 020b 0E       		.uleb128 0xe
 12430 020c 3A       		.uleb128 0x3a
 12431 020d 0B       		.uleb128 0xb
 12432 020e 3B       		.uleb128 0x3b
 12433 020f 0B       		.uleb128 0xb
 12434 0210 27       		.uleb128 0x27
 12435 0211 19       		.uleb128 0x19
 12436 0212 49       		.uleb128 0x49
 12437 0213 13       		.uleb128 0x13
 12438 0214 3C       		.uleb128 0x3c
 12439 0215 19       		.uleb128 0x19
 12440 0216 01       		.uleb128 0x1
 12441 0217 13       		.uleb128 0x13
 12442 0218 00       		.byte	0
 12443 0219 00       		.byte	0
 12444 021a 27       		.uleb128 0x27
 12445 021b 05       		.uleb128 0x5
 12446 021c 00       		.byte	0
 12447 021d 49       		.uleb128 0x49
 12448 021e 13       		.uleb128 0x13
 12449 021f 00       		.byte	0
 12450 0220 00       		.byte	0
 12451 0221 28       		.uleb128 0x28
 12452 0222 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 289


 12453 0223 00       		.byte	0
 12454 0224 3F       		.uleb128 0x3f
 12455 0225 19       		.uleb128 0x19
 12456 0226 03       		.uleb128 0x3
 12457 0227 0E       		.uleb128 0xe
 12458 0228 3A       		.uleb128 0x3a
 12459 0229 0B       		.uleb128 0xb
 12460 022a 3B       		.uleb128 0x3b
 12461 022b 0B       		.uleb128 0xb
 12462 022c 27       		.uleb128 0x27
 12463 022d 19       		.uleb128 0x19
 12464 022e 49       		.uleb128 0x49
 12465 022f 13       		.uleb128 0x13
 12466 0230 3C       		.uleb128 0x3c
 12467 0231 19       		.uleb128 0x19
 12468 0232 00       		.byte	0
 12469 0233 00       		.byte	0
 12470 0234 00       		.byte	0
 12471              		.section	.debug_loc,"",%progbits
 12472              	.Ldebug_loc0:
 12473              	.LLST0:
 12474 0000 00000000 		.4byte	.LVL0
 12475 0004 02000000 		.4byte	.LVL1
 12476 0008 0100     		.2byte	0x1
 12477 000a 50       		.byte	0x50
 12478 000b 02000000 		.4byte	.LVL1
 12479 000f 14000000 		.4byte	.LFE0
 12480 0013 0400     		.2byte	0x4
 12481 0015 F3       		.byte	0xf3
 12482 0016 01       		.uleb128 0x1
 12483 0017 50       		.byte	0x50
 12484 0018 9F       		.byte	0x9f
 12485 0019 00000000 		.4byte	0
 12486 001d 00000000 		.4byte	0
 12487              	.LLST1:
 12488 0021 00000000 		.4byte	.LVL0
 12489 0025 02000000 		.4byte	.LVL1
 12490 0029 0100     		.2byte	0x1
 12491 002b 51       		.byte	0x51
 12492 002c 02000000 		.4byte	.LVL1
 12493 0030 14000000 		.4byte	.LFE0
 12494 0034 0400     		.2byte	0x4
 12495 0036 F3       		.byte	0xf3
 12496 0037 01       		.uleb128 0x1
 12497 0038 51       		.byte	0x51
 12498 0039 9F       		.byte	0x9f
 12499 003a 00000000 		.4byte	0
 12500 003e 00000000 		.4byte	0
 12501              	.LLST2:
 12502 0042 00000000 		.4byte	.LVL0
 12503 0046 02000000 		.4byte	.LVL1
 12504 004a 0100     		.2byte	0x1
 12505 004c 52       		.byte	0x52
 12506 004d 02000000 		.4byte	.LVL1
 12507 0051 0C000000 		.4byte	.LVL3
 12508 0055 0100     		.2byte	0x1
 12509 0057 53       		.byte	0x53
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 290


 12510 0058 0C000000 		.4byte	.LVL3
 12511 005c 0E000000 		.4byte	.LVL4
 12512 0060 0100     		.2byte	0x1
 12513 0062 52       		.byte	0x52
 12514 0063 0E000000 		.4byte	.LVL4
 12515 0067 14000000 		.4byte	.LFE0
 12516 006b 0100     		.2byte	0x1
 12517 006d 53       		.byte	0x53
 12518 006e 00000000 		.4byte	0
 12519 0072 00000000 		.4byte	0
 12520              	.LLST3:
 12521 0076 00000000 		.4byte	.LVL0
 12522 007a 02000000 		.4byte	.LVL1
 12523 007e 0100     		.2byte	0x1
 12524 0080 50       		.byte	0x50
 12525 0081 02000000 		.4byte	.LVL1
 12526 0085 0C000000 		.4byte	.LVL3
 12527 0089 0300     		.2byte	0x3
 12528 008b 70       		.byte	0x70
 12529 008c 01       		.sleb128 1
 12530 008d 9F       		.byte	0x9f
 12531 008e 0C000000 		.4byte	.LVL3
 12532 0092 14000000 		.4byte	.LFE0
 12533 0096 0100     		.2byte	0x1
 12534 0098 50       		.byte	0x50
 12535 0099 00000000 		.4byte	0
 12536 009d 00000000 		.4byte	0
 12537              	.LLST4:
 12538 00a1 00000000 		.4byte	.LVL0
 12539 00a5 02000000 		.4byte	.LVL1
 12540 00a9 0100     		.2byte	0x1
 12541 00ab 51       		.byte	0x51
 12542 00ac 02000000 		.4byte	.LVL1
 12543 00b0 0A000000 		.4byte	.LVL2
 12544 00b4 0300     		.2byte	0x3
 12545 00b6 71       		.byte	0x71
 12546 00b7 01       		.sleb128 1
 12547 00b8 9F       		.byte	0x9f
 12548 00b9 0A000000 		.4byte	.LVL2
 12549 00bd 14000000 		.4byte	.LFE0
 12550 00c1 0100     		.2byte	0x1
 12551 00c3 51       		.byte	0x51
 12552 00c4 00000000 		.4byte	0
 12553 00c8 00000000 		.4byte	0
 12554              	.LLST5:
 12555 00cc 00000000 		.4byte	.LVL5
 12556 00d0 02000000 		.4byte	.LVL6
 12557 00d4 0100     		.2byte	0x1
 12558 00d6 50       		.byte	0x50
 12559 00d7 02000000 		.4byte	.LVL6
 12560 00db 10000000 		.4byte	.LFE1
 12561 00df 0400     		.2byte	0x4
 12562 00e1 F3       		.byte	0xf3
 12563 00e2 01       		.uleb128 0x1
 12564 00e3 50       		.byte	0x50
 12565 00e4 9F       		.byte	0x9f
 12566 00e5 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 291


 12567 00e9 00000000 		.4byte	0
 12568              	.LLST6:
 12569 00ed 00000000 		.4byte	.LVL5
 12570 00f1 02000000 		.4byte	.LVL6
 12571 00f5 0100     		.2byte	0x1
 12572 00f7 52       		.byte	0x52
 12573 00f8 02000000 		.4byte	.LVL6
 12574 00fc 08000000 		.4byte	.LVL7
 12575 0100 0100     		.2byte	0x1
 12576 0102 53       		.byte	0x53
 12577 0103 08000000 		.4byte	.LVL7
 12578 0107 0A000000 		.4byte	.LVL8
 12579 010b 0100     		.2byte	0x1
 12580 010d 52       		.byte	0x52
 12581 010e 0A000000 		.4byte	.LVL8
 12582 0112 10000000 		.4byte	.LFE1
 12583 0116 0100     		.2byte	0x1
 12584 0118 53       		.byte	0x53
 12585 0119 00000000 		.4byte	0
 12586 011d 00000000 		.4byte	0
 12587              	.LLST7:
 12588 0121 00000000 		.4byte	.LVL5
 12589 0125 02000000 		.4byte	.LVL6
 12590 0129 0100     		.2byte	0x1
 12591 012b 50       		.byte	0x50
 12592 012c 02000000 		.4byte	.LVL6
 12593 0130 08000000 		.4byte	.LVL7
 12594 0134 0300     		.2byte	0x3
 12595 0136 70       		.byte	0x70
 12596 0137 01       		.sleb128 1
 12597 0138 9F       		.byte	0x9f
 12598 0139 08000000 		.4byte	.LVL7
 12599 013d 10000000 		.4byte	.LFE1
 12600 0141 0100     		.2byte	0x1
 12601 0143 50       		.byte	0x50
 12602 0144 00000000 		.4byte	0
 12603 0148 00000000 		.4byte	0
 12604              	.LLST8:
 12605 014c 00000000 		.4byte	.LVL9
 12606 0150 06000000 		.4byte	.LVL11
 12607 0154 0100     		.2byte	0x1
 12608 0156 50       		.byte	0x50
 12609 0157 06000000 		.4byte	.LVL11
 12610 015b 08000000 		.4byte	.LVL12
 12611 015f 0100     		.2byte	0x1
 12612 0161 53       		.byte	0x53
 12613 0162 08000000 		.4byte	.LVL12
 12614 0166 24000000 		.4byte	.LFE2
 12615 016a 0400     		.2byte	0x4
 12616 016c F3       		.byte	0xf3
 12617 016d 01       		.uleb128 0x1
 12618 016e 50       		.byte	0x50
 12619 016f 9F       		.byte	0x9f
 12620 0170 00000000 		.4byte	0
 12621 0174 00000000 		.4byte	0
 12622              	.LLST9:
 12623 0178 00000000 		.4byte	.LVL9
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 292


 12624 017c 08000000 		.4byte	.LVL12
 12625 0180 0100     		.2byte	0x1
 12626 0182 51       		.byte	0x51
 12627 0183 08000000 		.4byte	.LVL12
 12628 0187 24000000 		.4byte	.LFE2
 12629 018b 0400     		.2byte	0x4
 12630 018d F3       		.byte	0xf3
 12631 018e 01       		.uleb128 0x1
 12632 018f 51       		.byte	0x51
 12633 0190 9F       		.byte	0x9f
 12634 0191 00000000 		.4byte	0
 12635 0195 00000000 		.4byte	0
 12636              	.LLST10:
 12637 0199 00000000 		.4byte	.LVL9
 12638 019d 0E000000 		.4byte	.LVL14
 12639 01a1 0100     		.2byte	0x1
 12640 01a3 52       		.byte	0x52
 12641 01a4 0E000000 		.4byte	.LVL14
 12642 01a8 22000000 		.4byte	.LVL20
 12643 01ac 0100     		.2byte	0x1
 12644 01ae 54       		.byte	0x54
 12645 01af 00000000 		.4byte	0
 12646 01b3 00000000 		.4byte	0
 12647              	.LLST11:
 12648 01b7 04000000 		.4byte	.LVL10
 12649 01bb 06000000 		.4byte	.LVL11
 12650 01bf 0100     		.2byte	0x1
 12651 01c1 50       		.byte	0x50
 12652 01c2 06000000 		.4byte	.LVL11
 12653 01c6 08000000 		.4byte	.LVL12
 12654 01ca 0100     		.2byte	0x1
 12655 01cc 53       		.byte	0x53
 12656 01cd 08000000 		.4byte	.LVL12
 12657 01d1 0C000000 		.4byte	.LVL13
 12658 01d5 0100     		.2byte	0x1
 12659 01d7 56       		.byte	0x56
 12660 01d8 0C000000 		.4byte	.LVL13
 12661 01dc 14000000 		.4byte	.LVL15
 12662 01e0 0100     		.2byte	0x1
 12663 01e2 53       		.byte	0x53
 12664 01e3 14000000 		.4byte	.LVL15
 12665 01e7 22000000 		.4byte	.LVL19
 12666 01eb 0100     		.2byte	0x1
 12667 01ed 56       		.byte	0x56
 12668 01ee 00000000 		.4byte	0
 12669 01f2 00000000 		.4byte	0
 12670              	.LLST12:
 12671 01f6 04000000 		.4byte	.LVL10
 12672 01fa 08000000 		.4byte	.LVL12
 12673 01fe 0100     		.2byte	0x1
 12674 0200 51       		.byte	0x51
 12675 0201 08000000 		.4byte	.LVL12
 12676 0205 0C000000 		.4byte	.LVL13
 12677 0209 0100     		.2byte	0x1
 12678 020b 55       		.byte	0x55
 12679 020c 0C000000 		.4byte	.LVL13
 12680 0210 18000000 		.4byte	.LVL16
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 293


 12681 0214 0100     		.2byte	0x1
 12682 0216 51       		.byte	0x51
 12683 0217 18000000 		.4byte	.LVL16
 12684 021b 22000000 		.4byte	.LVL19
 12685 021f 0100     		.2byte	0x1
 12686 0221 55       		.byte	0x55
 12687 0222 00000000 		.4byte	0
 12688 0226 00000000 		.4byte	0
 12689              	.LLST13:
 12690 022a 04000000 		.4byte	.LVL10
 12691 022e 08000000 		.4byte	.LVL12
 12692 0232 0200     		.2byte	0x2
 12693 0234 30       		.byte	0x30
 12694 0235 9F       		.byte	0x9f
 12695 0236 08000000 		.4byte	.LVL12
 12696 023a 1A000000 		.4byte	.LVL17
 12697 023e 0100     		.2byte	0x1
 12698 0240 50       		.byte	0x50
 12699 0241 1C000000 		.4byte	.LVL18
 12700 0245 24000000 		.4byte	.LFE2
 12701 0249 0100     		.2byte	0x1
 12702 024b 50       		.byte	0x50
 12703 024c 00000000 		.4byte	0
 12704 0250 00000000 		.4byte	0
 12705              	.LLST14:
 12706 0254 00000000 		.4byte	.LVL21
 12707 0258 04000000 		.4byte	.LVL22
 12708 025c 0100     		.2byte	0x1
 12709 025e 50       		.byte	0x50
 12710 025f 04000000 		.4byte	.LVL22
 12711 0263 10000000 		.4byte	.LVL23
 12712 0267 0100     		.2byte	0x1
 12713 0269 50       		.byte	0x50
 12714 026a 00000000 		.4byte	0
 12715 026e 00000000 		.4byte	0
 12716              	.LLST15:
 12717 0272 00000000 		.4byte	.LVL24
 12718 0276 58000000 		.4byte	.LVL29
 12719 027a 0100     		.2byte	0x1
 12720 027c 50       		.byte	0x50
 12721 027d 58000000 		.4byte	.LVL29
 12722 0281 5A000000 		.4byte	.LVL30
 12723 0285 0400     		.2byte	0x4
 12724 0287 F3       		.byte	0xf3
 12725 0288 01       		.uleb128 0x1
 12726 0289 50       		.byte	0x50
 12727 028a 9F       		.byte	0x9f
 12728 028b 5A000000 		.4byte	.LVL30
 12729 028f 5C000000 		.4byte	.LVL31
 12730 0293 0100     		.2byte	0x1
 12731 0295 50       		.byte	0x50
 12732 0296 5C000000 		.4byte	.LVL31
 12733 029a 5E000000 		.4byte	.LVL32
 12734 029e 0400     		.2byte	0x4
 12735 02a0 F3       		.byte	0xf3
 12736 02a1 01       		.uleb128 0x1
 12737 02a2 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 294


 12738 02a3 9F       		.byte	0x9f
 12739 02a4 5E000000 		.4byte	.LVL32
 12740 02a8 60000000 		.4byte	.LVL33
 12741 02ac 0100     		.2byte	0x1
 12742 02ae 50       		.byte	0x50
 12743 02af 60000000 		.4byte	.LVL33
 12744 02b3 62000000 		.4byte	.LVL34
 12745 02b7 0400     		.2byte	0x4
 12746 02b9 F3       		.byte	0xf3
 12747 02ba 01       		.uleb128 0x1
 12748 02bb 50       		.byte	0x50
 12749 02bc 9F       		.byte	0x9f
 12750 02bd 62000000 		.4byte	.LVL34
 12751 02c1 7C000000 		.4byte	.LVL36
 12752 02c5 0100     		.2byte	0x1
 12753 02c7 50       		.byte	0x50
 12754 02c8 7C000000 		.4byte	.LVL36
 12755 02cc 7E000000 		.4byte	.LVL37
 12756 02d0 0400     		.2byte	0x4
 12757 02d2 F3       		.byte	0xf3
 12758 02d3 01       		.uleb128 0x1
 12759 02d4 50       		.byte	0x50
 12760 02d5 9F       		.byte	0x9f
 12761 02d6 7E000000 		.4byte	.LVL37
 12762 02da 80000000 		.4byte	.LVL38
 12763 02de 0100     		.2byte	0x1
 12764 02e0 50       		.byte	0x50
 12765 02e1 80000000 		.4byte	.LVL38
 12766 02e5 82000000 		.4byte	.LVL39
 12767 02e9 0400     		.2byte	0x4
 12768 02eb F3       		.byte	0xf3
 12769 02ec 01       		.uleb128 0x1
 12770 02ed 50       		.byte	0x50
 12771 02ee 9F       		.byte	0x9f
 12772 02ef 82000000 		.4byte	.LVL39
 12773 02f3 84000000 		.4byte	.LVL40
 12774 02f7 0100     		.2byte	0x1
 12775 02f9 50       		.byte	0x50
 12776 02fa 84000000 		.4byte	.LVL40
 12777 02fe 8C000000 		.4byte	.LFE4
 12778 0302 0400     		.2byte	0x4
 12779 0304 F3       		.byte	0xf3
 12780 0305 01       		.uleb128 0x1
 12781 0306 50       		.byte	0x50
 12782 0307 9F       		.byte	0x9f
 12783 0308 00000000 		.4byte	0
 12784 030c 00000000 		.4byte	0
 12785              	.LLST16:
 12786 0310 02000000 		.4byte	.LVL25
 12787 0314 08000000 		.4byte	.LVL26
 12788 0318 0200     		.2byte	0x2
 12789 031a 30       		.byte	0x30
 12790 031b 9F       		.byte	0x9f
 12791 031c 08000000 		.4byte	.LVL26
 12792 0320 6A000000 		.4byte	.LVL35
 12793 0324 0100     		.2byte	0x1
 12794 0326 53       		.byte	0x53
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 295


 12795 0327 7E000000 		.4byte	.LVL37
 12796 032b 82000000 		.4byte	.LVL39
 12797 032f 0100     		.2byte	0x1
 12798 0331 53       		.byte	0x53
 12799 0332 00000000 		.4byte	0
 12800 0336 00000000 		.4byte	0
 12801              	.LLST17:
 12802 033a 02000000 		.4byte	.LVL25
 12803 033e 08000000 		.4byte	.LVL26
 12804 0342 0200     		.2byte	0x2
 12805 0344 30       		.byte	0x30
 12806 0345 9F       		.byte	0x9f
 12807 0346 08000000 		.4byte	.LVL26
 12808 034a 84000000 		.4byte	.LVL41
 12809 034e 0100     		.2byte	0x1
 12810 0350 55       		.byte	0x55
 12811 0351 00000000 		.4byte	0
 12812 0355 00000000 		.4byte	0
 12813              	.LLST18:
 12814 0359 00000000 		.4byte	.LVL42
 12815 035d 04000000 		.4byte	.LVL43
 12816 0361 0200     		.2byte	0x2
 12817 0363 30       		.byte	0x30
 12818 0364 9F       		.byte	0x9f
 12819 0365 04000000 		.4byte	.LVL43
 12820 0369 1A000000 		.4byte	.LVL45
 12821 036d 0100     		.2byte	0x1
 12822 036f 50       		.byte	0x50
 12823 0370 1A000000 		.4byte	.LVL45
 12824 0374 1E000000 		.4byte	.LVL46
 12825 0378 0300     		.2byte	0x3
 12826 037a 70       		.byte	0x70
 12827 037b 03       		.sleb128 3
 12828 037c 9F       		.byte	0x9f
 12829 037d 00000000 		.4byte	0
 12830 0381 00000000 		.4byte	0
 12831              	.LLST19:
 12832 0385 00000000 		.4byte	.LVL47
 12833 0389 78000000 		.4byte	.LVL53
 12834 038d 0100     		.2byte	0x1
 12835 038f 50       		.byte	0x50
 12836 0390 78000000 		.4byte	.LVL53
 12837 0394 BC000000 		.4byte	.LVL57
 12838 0398 0400     		.2byte	0x4
 12839 039a F3       		.byte	0xf3
 12840 039b 01       		.uleb128 0x1
 12841 039c 50       		.byte	0x50
 12842 039d 9F       		.byte	0x9f
 12843 039e BC000000 		.4byte	.LVL57
 12844 03a2 BE000000 		.4byte	.LVL58
 12845 03a6 0100     		.2byte	0x1
 12846 03a8 50       		.byte	0x50
 12847 03a9 BE000000 		.4byte	.LVL58
 12848 03ad C8000000 		.4byte	.LFE6
 12849 03b1 0400     		.2byte	0x4
 12850 03b3 F3       		.byte	0xf3
 12851 03b4 01       		.uleb128 0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 296


 12852 03b5 50       		.byte	0x50
 12853 03b6 9F       		.byte	0x9f
 12854 03b7 00000000 		.4byte	0
 12855 03bb 00000000 		.4byte	0
 12856              	.LLST20:
 12857 03bf 00000000 		.4byte	.LVL47
 12858 03c3 9E000000 		.4byte	.LVL54
 12859 03c7 0100     		.2byte	0x1
 12860 03c9 51       		.byte	0x51
 12861 03ca 9E000000 		.4byte	.LVL54
 12862 03ce A8000000 		.4byte	.LVL55
 12863 03d2 0400     		.2byte	0x4
 12864 03d4 F3       		.byte	0xf3
 12865 03d5 01       		.uleb128 0x1
 12866 03d6 51       		.byte	0x51
 12867 03d7 9F       		.byte	0x9f
 12868 03d8 A8000000 		.4byte	.LVL55
 12869 03dc AA000000 		.4byte	.LVL56
 12870 03e0 0100     		.2byte	0x1
 12871 03e2 51       		.byte	0x51
 12872 03e3 AA000000 		.4byte	.LVL56
 12873 03e7 BC000000 		.4byte	.LVL57
 12874 03eb 0400     		.2byte	0x4
 12875 03ed F3       		.byte	0xf3
 12876 03ee 01       		.uleb128 0x1
 12877 03ef 51       		.byte	0x51
 12878 03f0 9F       		.byte	0x9f
 12879 03f1 BC000000 		.4byte	.LVL57
 12880 03f5 C2000000 		.4byte	.LVL59
 12881 03f9 0100     		.2byte	0x1
 12882 03fb 51       		.byte	0x51
 12883 03fc C2000000 		.4byte	.LVL59
 12884 0400 C8000000 		.4byte	.LFE6
 12885 0404 0400     		.2byte	0x4
 12886 0406 F3       		.byte	0xf3
 12887 0407 01       		.uleb128 0x1
 12888 0408 51       		.byte	0x51
 12889 0409 9F       		.byte	0x9f
 12890 040a 00000000 		.4byte	0
 12891 040e 00000000 		.4byte	0
 12892              	.LLST21:
 12893 0412 02000000 		.4byte	.LVL48
 12894 0416 06000000 		.4byte	.LVL49
 12895 041a 0200     		.2byte	0x2
 12896 041c 30       		.byte	0x30
 12897 041d 9F       		.byte	0x9f
 12898 041e 06000000 		.4byte	.LVL49
 12899 0422 C8000000 		.4byte	.LFE6
 12900 0426 0100     		.2byte	0x1
 12901 0428 53       		.byte	0x53
 12902 0429 00000000 		.4byte	0
 12903 042d 00000000 		.4byte	0
 12904              	.LLST22:
 12905 0431 00000000 		.4byte	.LVL60
 12906 0435 02000000 		.4byte	.LVL61
 12907 0439 0100     		.2byte	0x1
 12908 043b 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 297


 12909 043c 02000000 		.4byte	.LVL61
 12910 0440 38000000 		.4byte	.LVL66
 12911 0444 0100     		.2byte	0x1
 12912 0446 50       		.byte	0x50
 12913 0447 38000000 		.4byte	.LVL66
 12914 044b 40000000 		.4byte	.LVL67
 12915 044f 0600     		.2byte	0x6
 12916 0451 F3       		.byte	0xf3
 12917 0452 01       		.uleb128 0x1
 12918 0453 50       		.byte	0x50
 12919 0454 31       		.byte	0x31
 12920 0455 1C       		.byte	0x1c
 12921 0456 9F       		.byte	0x9f
 12922 0457 40000000 		.4byte	.LVL67
 12923 045b 42000000 		.4byte	.LVL68
 12924 045f 0100     		.2byte	0x1
 12925 0461 50       		.byte	0x50
 12926 0462 42000000 		.4byte	.LVL68
 12927 0466 44000000 		.4byte	.LVL69
 12928 046a 0600     		.2byte	0x6
 12929 046c F3       		.byte	0xf3
 12930 046d 01       		.uleb128 0x1
 12931 046e 50       		.byte	0x50
 12932 046f 31       		.byte	0x31
 12933 0470 1C       		.byte	0x1c
 12934 0471 9F       		.byte	0x9f
 12935 0472 44000000 		.4byte	.LVL69
 12936 0476 46000000 		.4byte	.LVL70
 12937 047a 0100     		.2byte	0x1
 12938 047c 50       		.byte	0x50
 12939 047d 46000000 		.4byte	.LVL70
 12940 0481 4C000000 		.4byte	.LFE7
 12941 0485 0600     		.2byte	0x6
 12942 0487 F3       		.byte	0xf3
 12943 0488 01       		.uleb128 0x1
 12944 0489 50       		.byte	0x50
 12945 048a 31       		.byte	0x31
 12946 048b 1C       		.byte	0x1c
 12947 048c 9F       		.byte	0x9f
 12948 048d 00000000 		.4byte	0
 12949 0491 00000000 		.4byte	0
 12950              	.LLST23:
 12951 0495 12000000 		.4byte	.LVL62
 12952 0499 22000000 		.4byte	.LVL64
 12953 049d 0100     		.2byte	0x1
 12954 049f 52       		.byte	0x52
 12955 04a0 24000000 		.4byte	.LVL65
 12956 04a4 40000000 		.4byte	.LVL67
 12957 04a8 0100     		.2byte	0x1
 12958 04aa 52       		.byte	0x52
 12959 04ab 44000000 		.4byte	.LVL69
 12960 04af 46000000 		.4byte	.LVL70
 12961 04b3 0100     		.2byte	0x1
 12962 04b5 52       		.byte	0x52
 12963 04b6 00000000 		.4byte	0
 12964 04ba 00000000 		.4byte	0
 12965              	.LLST24:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 298


 12966 04be 02000000 		.4byte	.LVL72
 12967 04c2 06000000 		.4byte	.LVL73
 12968 04c6 0200     		.2byte	0x2
 12969 04c8 30       		.byte	0x30
 12970 04c9 9F       		.byte	0x9f
 12971 04ca 06000000 		.4byte	.LVL73
 12972 04ce 2C000000 		.4byte	.LFE8
 12973 04d2 0100     		.2byte	0x1
 12974 04d4 52       		.byte	0x52
 12975 04d5 00000000 		.4byte	0
 12976 04d9 00000000 		.4byte	0
 12977              	.LLST25:
 12978 04dd 00000000 		.4byte	.LVL75
 12979 04e1 24000000 		.4byte	.LVL79
 12980 04e5 0100     		.2byte	0x1
 12981 04e7 50       		.byte	0x50
 12982 04e8 24000000 		.4byte	.LVL79
 12983 04ec 2C010000 		.4byte	.LFE22
 12984 04f0 0400     		.2byte	0x4
 12985 04f2 F3       		.byte	0xf3
 12986 04f3 01       		.uleb128 0x1
 12987 04f4 50       		.byte	0x50
 12988 04f5 9F       		.byte	0x9f
 12989 04f6 00000000 		.4byte	0
 12990 04fa 00000000 		.4byte	0
 12991              	.LLST26:
 12992 04fe 00000000 		.4byte	.LVL75
 12993 0502 26000000 		.4byte	.LVL80
 12994 0506 0100     		.2byte	0x1
 12995 0508 51       		.byte	0x51
 12996 0509 26000000 		.4byte	.LVL80
 12997 050d C2000000 		.4byte	.LVL101
 12998 0511 0100     		.2byte	0x1
 12999 0513 5A       		.byte	0x5a
 13000 0514 C2000000 		.4byte	.LVL101
 13001 0518 CE000000 		.4byte	.LVL105
 13002 051c 0100     		.2byte	0x1
 13003 051e 53       		.byte	0x53
 13004 051f CE000000 		.4byte	.LVL105
 13005 0523 16010000 		.4byte	.LVL111
 13006 0527 0100     		.2byte	0x1
 13007 0529 5A       		.byte	0x5a
 13008 052a 16010000 		.4byte	.LVL111
 13009 052e 18010000 		.4byte	.LVL112
 13010 0532 0100     		.2byte	0x1
 13011 0534 53       		.byte	0x53
 13012 0535 18010000 		.4byte	.LVL112
 13013 0539 18010000 		.4byte	.LVL117
 13014 053d 0100     		.2byte	0x1
 13015 053f 5A       		.byte	0x5a
 13016 0540 18010000 		.4byte	.LVL117
 13017 0544 2C010000 		.4byte	.LFE22
 13018 0548 0400     		.2byte	0x4
 13019 054a F3       		.byte	0xf3
 13020 054b 01       		.uleb128 0x1
 13021 054c 51       		.byte	0x51
 13022 054d 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 299


 13023 054e 00000000 		.4byte	0
 13024 0552 00000000 		.4byte	0
 13025              	.LLST27:
 13026 0556 2C000000 		.4byte	.LVL81
 13027 055a 38000000 		.4byte	.LVL82
 13028 055e 0200     		.2byte	0x2
 13029 0560 30       		.byte	0x30
 13030 0561 9F       		.byte	0x9f
 13031 0562 38000000 		.4byte	.LVL82
 13032 0566 18010000 		.4byte	.LVL115
 13033 056a 0100     		.2byte	0x1
 13034 056c 58       		.byte	0x58
 13035 056d 00000000 		.4byte	0
 13036 0571 00000000 		.4byte	0
 13037              	.LLST28:
 13038 0575 38000000 		.4byte	.LVL82
 13039 0579 3A000000 		.4byte	.LVL83
 13040 057d 0100     		.2byte	0x1
 13041 057f 55       		.byte	0x55
 13042 0580 40000000 		.4byte	.LVL85
 13043 0584 7A000000 		.4byte	.LVL91
 13044 0588 0100     		.2byte	0x1
 13045 058a 55       		.byte	0x55
 13046 058b 7A000000 		.4byte	.LVL91
 13047 058f 7E000000 		.4byte	.LVL92
 13048 0593 0400     		.2byte	0x4
 13049 0595 75       		.byte	0x75
 13050 0596 8001     		.sleb128 128
 13051 0598 9F       		.byte	0x9f
 13052 0599 7E000000 		.4byte	.LVL92
 13053 059d AE000000 		.4byte	.LVL96
 13054 05a1 0100     		.2byte	0x1
 13055 05a3 55       		.byte	0x55
 13056 05a4 B0000000 		.4byte	.LVL97
 13057 05a8 C8000000 		.4byte	.LVL104
 13058 05ac 0100     		.2byte	0x1
 13059 05ae 55       		.byte	0x55
 13060 05af C8000000 		.4byte	.LVL104
 13061 05b3 0A010000 		.4byte	.LVL109
 13062 05b7 0100     		.2byte	0x1
 13063 05b9 52       		.byte	0x52
 13064 05ba 0A010000 		.4byte	.LVL109
 13065 05be 16010000 		.4byte	.LVL111
 13066 05c2 0100     		.2byte	0x1
 13067 05c4 55       		.byte	0x55
 13068 05c5 16010000 		.4byte	.LVL111
 13069 05c9 18010000 		.4byte	.LVL112
 13070 05cd 0100     		.2byte	0x1
 13071 05cf 52       		.byte	0x52
 13072 05d0 00000000 		.4byte	0
 13073 05d4 00000000 		.4byte	0
 13074              	.LLST29:
 13075 05d8 22000000 		.4byte	.LVL78
 13076 05dc 2B000000 		.4byte	.LVL81-1
 13077 05e0 0100     		.2byte	0x1
 13078 05e2 53       		.byte	0x53
 13079 05e3 2B000000 		.4byte	.LVL81-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 300


 13080 05e7 18010000 		.4byte	.LVL118
 13081 05eb 0100     		.2byte	0x1
 13082 05ed 5B       		.byte	0x5b
 13083 05ee 00000000 		.4byte	0
 13084 05f2 00000000 		.4byte	0
 13085              	.LLST30:
 13086 05f6 2C000000 		.4byte	.LVL81
 13087 05fa 38000000 		.4byte	.LVL82
 13088 05fe 0200     		.2byte	0x2
 13089 0600 38       		.byte	0x38
 13090 0601 9F       		.byte	0x9f
 13091 0602 3A000000 		.4byte	.LVL83
 13092 0606 5C000000 		.4byte	.LVL86
 13093 060a 0100     		.2byte	0x1
 13094 060c 57       		.byte	0x57
 13095 060d 5C000000 		.4byte	.LVL86
 13096 0611 6A000000 		.4byte	.LVL88
 13097 0615 0200     		.2byte	0x2
 13098 0617 3B       		.byte	0x3b
 13099 0618 9F       		.byte	0x9f
 13100 0619 6A000000 		.4byte	.LVL88
 13101 061d 18010000 		.4byte	.LVL114
 13102 0621 0100     		.2byte	0x1
 13103 0623 57       		.byte	0x57
 13104 0624 00000000 		.4byte	0
 13105 0628 00000000 		.4byte	0
 13106              	.LLST31:
 13107 062c 2C000000 		.4byte	.LVL81
 13108 0630 38000000 		.4byte	.LVL82
 13109 0634 0200     		.2byte	0x2
 13110 0636 30       		.byte	0x30
 13111 0637 9F       		.byte	0x9f
 13112 0638 38000000 		.4byte	.LVL82
 13113 063c 3A000000 		.4byte	.LVL83
 13114 0640 0100     		.2byte	0x1
 13115 0642 59       		.byte	0x59
 13116 0643 3A000000 		.4byte	.LVL83
 13117 0647 3E000000 		.4byte	.LVL84
 13118 064b 0100     		.2byte	0x1
 13119 064d 53       		.byte	0x53
 13120 064e 3E000000 		.4byte	.LVL84
 13121 0652 74000000 		.4byte	.LVL89
 13122 0656 0100     		.2byte	0x1
 13123 0658 52       		.byte	0x52
 13124 0659 74000000 		.4byte	.LVL89
 13125 065d B8000000 		.4byte	.LVL99
 13126 0661 0100     		.2byte	0x1
 13127 0663 59       		.byte	0x59
 13128 0664 B8000000 		.4byte	.LVL99
 13129 0668 C4000000 		.4byte	.LVL102
 13130 066c 0100     		.2byte	0x1
 13131 066e 52       		.byte	0x52
 13132 066f C4000000 		.4byte	.LVL102
 13133 0673 C6000000 		.4byte	.LVL103
 13134 0677 0100     		.2byte	0x1
 13135 0679 59       		.byte	0x59
 13136 067a C6000000 		.4byte	.LVL103
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 301


 13137 067e C8000000 		.4byte	.LVL104
 13138 0682 0100     		.2byte	0x1
 13139 0684 52       		.byte	0x52
 13140 0685 C8000000 		.4byte	.LVL104
 13141 0689 0A010000 		.4byte	.LVL109
 13142 068d 0100     		.2byte	0x1
 13143 068f 59       		.byte	0x59
 13144 0690 0A010000 		.4byte	.LVL109
 13145 0694 12010000 		.4byte	.LVL110
 13146 0698 0100     		.2byte	0x1
 13147 069a 52       		.byte	0x52
 13148 069b 12010000 		.4byte	.LVL110
 13149 069f 18010000 		.4byte	.LVL116
 13150 06a3 0100     		.2byte	0x1
 13151 06a5 59       		.byte	0x59
 13152 06a6 00000000 		.4byte	0
 13153 06aa 00000000 		.4byte	0
 13154              	.LLST32:
 13155 06ae 2C000000 		.4byte	.LVL81
 13156 06b2 38000000 		.4byte	.LVL82
 13157 06b6 0200     		.2byte	0x2
 13158 06b8 30       		.byte	0x30
 13159 06b9 9F       		.byte	0x9f
 13160 06ba 3A000000 		.4byte	.LVL83
 13161 06be 5C000000 		.4byte	.LVL86
 13162 06c2 0100     		.2byte	0x1
 13163 06c4 56       		.byte	0x56
 13164 06c5 5C000000 		.4byte	.LVL86
 13165 06c9 6A000000 		.4byte	.LVL88
 13166 06cd 0200     		.2byte	0x2
 13167 06cf 38       		.byte	0x38
 13168 06d0 9F       		.byte	0x9f
 13169 06d1 6A000000 		.4byte	.LVL88
 13170 06d5 B0000000 		.4byte	.LVL97
 13171 06d9 0100     		.2byte	0x1
 13172 06db 56       		.byte	0x56
 13173 06dc B0000000 		.4byte	.LVL97
 13174 06e0 B6000000 		.4byte	.LVL98
 13175 06e4 0300     		.2byte	0x3
 13176 06e6 76       		.byte	0x76
 13177 06e7 01       		.sleb128 1
 13178 06e8 9F       		.byte	0x9f
 13179 06e9 B6000000 		.4byte	.LVL98
 13180 06ed 18010000 		.4byte	.LVL113
 13181 06f1 0100     		.2byte	0x1
 13182 06f3 56       		.byte	0x56
 13183 06f4 00000000 		.4byte	0
 13184 06f8 00000000 		.4byte	0
 13185              	.LLST33:
 13186 06fc 10000000 		.4byte	.LVL76
 13187 0700 BA000000 		.4byte	.LVL100
 13188 0704 0100     		.2byte	0x1
 13189 0706 54       		.byte	0x54
 13190 0707 0A010000 		.4byte	.LVL109
 13191 070b 16010000 		.4byte	.LVL111
 13192 070f 0100     		.2byte	0x1
 13193 0711 54       		.byte	0x54
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 302


 13194 0712 00000000 		.4byte	0
 13195 0716 00000000 		.4byte	0
 13196              	.LLST34:
 13197 071a 00000000 		.4byte	.LVL119
 13198 071e 12000000 		.4byte	.LVL122
 13199 0722 0100     		.2byte	0x1
 13200 0724 50       		.byte	0x50
 13201 0725 12000000 		.4byte	.LVL122
 13202 0729 7C000000 		.4byte	.LFE23
 13203 072d 0400     		.2byte	0x4
 13204 072f F3       		.byte	0xf3
 13205 0730 01       		.uleb128 0x1
 13206 0731 50       		.byte	0x50
 13207 0732 9F       		.byte	0x9f
 13208 0733 00000000 		.4byte	0
 13209 0737 00000000 		.4byte	0
 13210              	.LLST35:
 13211 073b 0E000000 		.4byte	.LVL121
 13212 073f 12000000 		.4byte	.LVL122
 13213 0743 0200     		.2byte	0x2
 13214 0745 30       		.byte	0x30
 13215 0746 9F       		.byte	0x9f
 13216 0747 12000000 		.4byte	.LVL122
 13217 074b 2A000000 		.4byte	.LVL127
 13218 074f 0100     		.2byte	0x1
 13219 0751 52       		.byte	0x52
 13220 0752 32000000 		.4byte	.LVL129
 13221 0756 38000000 		.4byte	.LVL131
 13222 075a 0200     		.2byte	0x2
 13223 075c 38       		.byte	0x38
 13224 075d 9F       		.byte	0x9f
 13225 075e 38000000 		.4byte	.LVL131
 13226 0762 48000000 		.4byte	.LVL136
 13227 0766 0100     		.2byte	0x1
 13228 0768 52       		.byte	0x52
 13229 0769 00000000 		.4byte	0
 13230 076d 00000000 		.4byte	0
 13231              	.LLST36:
 13232 0771 0E000000 		.4byte	.LVL121
 13233 0775 12000000 		.4byte	.LVL122
 13234 0779 0200     		.2byte	0x2
 13235 077b 74       		.byte	0x74
 13236 077c 0C       		.sleb128 12
 13237 077d 00000000 		.4byte	0
 13238 0781 00000000 		.4byte	0
 13239              	.LLST37:
 13240 0785 0E000000 		.4byte	.LVL121
 13241 0789 76000000 		.4byte	.LVL137
 13242 078d 0100     		.2byte	0x1
 13243 078f 54       		.byte	0x54
 13244 0790 00000000 		.4byte	0
 13245 0794 00000000 		.4byte	0
 13246              	.LLST38:
 13247 0798 06000000 		.4byte	.LVL120
 13248 079c 1E000000 		.4byte	.LVL124
 13249 07a0 0100     		.2byte	0x1
 13250 07a2 53       		.byte	0x53
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 303


 13251 07a3 1E000000 		.4byte	.LVL124
 13252 07a7 24000000 		.4byte	.LVL126
 13253 07ab 0300     		.2byte	0x3
 13254 07ad 73       		.byte	0x73
 13255 07ae 01       		.sleb128 1
 13256 07af 9F       		.byte	0x9f
 13257 07b0 24000000 		.4byte	.LVL126
 13258 07b4 2E000000 		.4byte	.LVL128
 13259 07b8 0100     		.2byte	0x1
 13260 07ba 53       		.byte	0x53
 13261 07bb 2E000000 		.4byte	.LVL128
 13262 07bf 34000000 		.4byte	.LVL130
 13263 07c3 0300     		.2byte	0x3
 13264 07c5 73       		.byte	0x73
 13265 07c6 01       		.sleb128 1
 13266 07c7 9F       		.byte	0x9f
 13267 07c8 34000000 		.4byte	.LVL130
 13268 07cc 3E000000 		.4byte	.LVL133
 13269 07d0 0100     		.2byte	0x1
 13270 07d2 53       		.byte	0x53
 13271 07d3 3E000000 		.4byte	.LVL133
 13272 07d7 44000000 		.4byte	.LVL135
 13273 07db 0300     		.2byte	0x3
 13274 07dd 73       		.byte	0x73
 13275 07de 01       		.sleb128 1
 13276 07df 9F       		.byte	0x9f
 13277 07e0 44000000 		.4byte	.LVL135
 13278 07e4 7C000000 		.4byte	.LFE23
 13279 07e8 0100     		.2byte	0x1
 13280 07ea 53       		.byte	0x53
 13281 07eb 00000000 		.4byte	0
 13282 07ef 00000000 		.4byte	0
 13283              	.LLST39:
 13284 07f3 14000000 		.4byte	.LVL123
 13285 07f7 24000000 		.4byte	.LVL126
 13286 07fb 0100     		.2byte	0x1
 13287 07fd 50       		.byte	0x50
 13288 07fe 3A000000 		.4byte	.LVL132
 13289 0802 44000000 		.4byte	.LVL135
 13290 0806 0100     		.2byte	0x1
 13291 0808 50       		.byte	0x50
 13292 0809 00000000 		.4byte	0
 13293 080d 00000000 		.4byte	0
 13294              	.LLST40:
 13295 0811 00000000 		.4byte	.LVL138
 13296 0815 20000000 		.4byte	.LVL140
 13297 0819 0100     		.2byte	0x1
 13298 081b 50       		.byte	0x50
 13299 081c 20000000 		.4byte	.LVL140
 13300 0820 76000000 		.4byte	.LVL150
 13301 0824 0100     		.2byte	0x1
 13302 0826 54       		.byte	0x54
 13303 0827 76000000 		.4byte	.LVL150
 13304 082b 78000000 		.4byte	.LVL151
 13305 082f 0100     		.2byte	0x1
 13306 0831 50       		.byte	0x50
 13307 0832 78000000 		.4byte	.LVL151
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 304


 13308 0836 7A000000 		.4byte	.LVL152
 13309 083a 0400     		.2byte	0x4
 13310 083c F3       		.byte	0xf3
 13311 083d 01       		.uleb128 0x1
 13312 083e 50       		.byte	0x50
 13313 083f 9F       		.byte	0x9f
 13314 0840 7A000000 		.4byte	.LVL152
 13315 0844 84000000 		.4byte	.LVL153
 13316 0848 0100     		.2byte	0x1
 13317 084a 54       		.byte	0x54
 13318 084b 84000000 		.4byte	.LVL153
 13319 084f 88000000 		.4byte	.LFE9
 13320 0853 0400     		.2byte	0x4
 13321 0855 F3       		.byte	0xf3
 13322 0856 01       		.uleb128 0x1
 13323 0857 50       		.byte	0x50
 13324 0858 9F       		.byte	0x9f
 13325 0859 00000000 		.4byte	0
 13326 085d 00000000 		.4byte	0
 13327              	.LLST41:
 13328 0861 00000000 		.4byte	.LVL138
 13329 0865 22000000 		.4byte	.LVL141
 13330 0869 0100     		.2byte	0x1
 13331 086b 51       		.byte	0x51
 13332 086c 22000000 		.4byte	.LVL141
 13333 0870 76000000 		.4byte	.LVL150
 13334 0874 0100     		.2byte	0x1
 13335 0876 57       		.byte	0x57
 13336 0877 76000000 		.4byte	.LVL150
 13337 087b 7A000000 		.4byte	.LVL152
 13338 087f 0100     		.2byte	0x1
 13339 0881 51       		.byte	0x51
 13340 0882 7A000000 		.4byte	.LVL152
 13341 0886 84000000 		.4byte	.LVL153
 13342 088a 0100     		.2byte	0x1
 13343 088c 57       		.byte	0x57
 13344 088d 84000000 		.4byte	.LVL153
 13345 0891 88000000 		.4byte	.LFE9
 13346 0895 0400     		.2byte	0x4
 13347 0897 F3       		.byte	0xf3
 13348 0898 01       		.uleb128 0x1
 13349 0899 51       		.byte	0x51
 13350 089a 9F       		.byte	0x9f
 13351 089b 00000000 		.4byte	0
 13352 089f 00000000 		.4byte	0
 13353              	.LLST42:
 13354 08a3 06000000 		.4byte	.LVL139
 13355 08a7 86000000 		.4byte	.LVL154
 13356 08ab 0100     		.2byte	0x1
 13357 08ad 56       		.byte	0x56
 13358 08ae 00000000 		.4byte	0
 13359 08b2 00000000 		.4byte	0
 13360              	.LLST43:
 13361 08b6 40000000 		.4byte	.LVL143
 13362 08ba 56000000 		.4byte	.LVL146
 13363 08be 0100     		.2byte	0x1
 13364 08c0 55       		.byte	0x55
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 305


 13365 08c1 58000000 		.4byte	.LVL147
 13366 08c5 5C000000 		.4byte	.LVL148
 13367 08c9 0100     		.2byte	0x1
 13368 08cb 55       		.byte	0x55
 13369 08cc 00000000 		.4byte	0
 13370 08d0 00000000 		.4byte	0
 13371              	.LLST44:
 13372 08d4 00000000 		.4byte	.LVL155
 13373 08d8 0C000000 		.4byte	.LVL157
 13374 08dc 0100     		.2byte	0x1
 13375 08de 50       		.byte	0x50
 13376 08df 0C000000 		.4byte	.LVL157
 13377 08e3 86000000 		.4byte	.LVL159
 13378 08e7 0100     		.2byte	0x1
 13379 08e9 54       		.byte	0x54
 13380 08ea 86000000 		.4byte	.LVL159
 13381 08ee 98000000 		.4byte	.LFE25
 13382 08f2 0400     		.2byte	0x4
 13383 08f4 F3       		.byte	0xf3
 13384 08f5 01       		.uleb128 0x1
 13385 08f6 50       		.byte	0x50
 13386 08f7 9F       		.byte	0x9f
 13387 08f8 00000000 		.4byte	0
 13388 08fc 00000000 		.4byte	0
 13389              	.LLST45:
 13390 0900 00000000 		.4byte	.LVL155
 13391 0904 08000000 		.4byte	.LVL156
 13392 0908 0100     		.2byte	0x1
 13393 090a 51       		.byte	0x51
 13394 090b 08000000 		.4byte	.LVL156
 13395 090f 11000000 		.4byte	.LVL158-1
 13396 0913 0100     		.2byte	0x1
 13397 0915 52       		.byte	0x52
 13398 0916 11000000 		.4byte	.LVL158-1
 13399 091a 98000000 		.4byte	.LFE25
 13400 091e 0400     		.2byte	0x4
 13401 0920 F3       		.byte	0xf3
 13402 0921 01       		.uleb128 0x1
 13403 0922 51       		.byte	0x51
 13404 0923 9F       		.byte	0x9f
 13405 0924 00000000 		.4byte	0
 13406 0928 00000000 		.4byte	0
 13407              	.LLST46:
 13408 092c 00000000 		.4byte	.LVL160
 13409 0930 14000000 		.4byte	.LVL161
 13410 0934 0100     		.2byte	0x1
 13411 0936 50       		.byte	0x50
 13412 0937 14000000 		.4byte	.LVL161
 13413 093b 20000000 		.4byte	.LVL163
 13414 093f 0400     		.2byte	0x4
 13415 0941 F3       		.byte	0xf3
 13416 0942 01       		.uleb128 0x1
 13417 0943 50       		.byte	0x50
 13418 0944 9F       		.byte	0x9f
 13419 0945 20000000 		.4byte	.LVL163
 13420 0949 22000000 		.4byte	.LVL164
 13421 094d 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 306


 13422 094f 50       		.byte	0x50
 13423 0950 22000000 		.4byte	.LVL164
 13424 0954 24000000 		.4byte	.LVL165
 13425 0958 0400     		.2byte	0x4
 13426 095a F3       		.byte	0xf3
 13427 095b 01       		.uleb128 0x1
 13428 095c 50       		.byte	0x50
 13429 095d 9F       		.byte	0x9f
 13430 095e 24000000 		.4byte	.LVL165
 13431 0962 26000000 		.4byte	.LVL166
 13432 0966 0100     		.2byte	0x1
 13433 0968 50       		.byte	0x50
 13434 0969 26000000 		.4byte	.LVL166
 13435 096d 28000000 		.4byte	.LVL167
 13436 0971 0400     		.2byte	0x4
 13437 0973 F3       		.byte	0xf3
 13438 0974 01       		.uleb128 0x1
 13439 0975 50       		.byte	0x50
 13440 0976 9F       		.byte	0x9f
 13441 0977 28000000 		.4byte	.LVL167
 13442 097b 2A000000 		.4byte	.LVL168
 13443 097f 0100     		.2byte	0x1
 13444 0981 50       		.byte	0x50
 13445 0982 2A000000 		.4byte	.LVL168
 13446 0986 30000000 		.4byte	.LFE27
 13447 098a 0400     		.2byte	0x4
 13448 098c F3       		.byte	0xf3
 13449 098d 01       		.uleb128 0x1
 13450 098e 50       		.byte	0x50
 13451 098f 9F       		.byte	0x9f
 13452 0990 00000000 		.4byte	0
 13453 0994 00000000 		.4byte	0
 13454              	.LLST47:
 13455 0998 00000000 		.4byte	.LVL160
 13456 099c 17000000 		.4byte	.LVL162-1
 13457 09a0 0100     		.2byte	0x1
 13458 09a2 51       		.byte	0x51
 13459 09a3 17000000 		.4byte	.LVL162-1
 13460 09a7 20000000 		.4byte	.LVL163
 13461 09ab 0400     		.2byte	0x4
 13462 09ad F3       		.byte	0xf3
 13463 09ae 01       		.uleb128 0x1
 13464 09af 51       		.byte	0x51
 13465 09b0 9F       		.byte	0x9f
 13466 09b1 20000000 		.4byte	.LVL163
 13467 09b5 2C000000 		.4byte	.LVL169
 13468 09b9 0100     		.2byte	0x1
 13469 09bb 51       		.byte	0x51
 13470 09bc 2C000000 		.4byte	.LVL169
 13471 09c0 30000000 		.4byte	.LFE27
 13472 09c4 0400     		.2byte	0x4
 13473 09c6 F3       		.byte	0xf3
 13474 09c7 01       		.uleb128 0x1
 13475 09c8 51       		.byte	0x51
 13476 09c9 9F       		.byte	0x9f
 13477 09ca 00000000 		.4byte	0
 13478 09ce 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 307


 13479              	.LLST48:
 13480 09d2 00000000 		.4byte	.LVL170
 13481 09d6 32000000 		.4byte	.LVL178
 13482 09da 0100     		.2byte	0x1
 13483 09dc 50       		.byte	0x50
 13484 09dd 32000000 		.4byte	.LVL178
 13485 09e1 24030000 		.4byte	.LVL230
 13486 09e5 0400     		.2byte	0x4
 13487 09e7 F3       		.byte	0xf3
 13488 09e8 01       		.uleb128 0x1
 13489 09e9 50       		.byte	0x50
 13490 09ea 9F       		.byte	0x9f
 13491 09eb 24030000 		.4byte	.LVL230
 13492 09ef 26030000 		.4byte	.LVL231
 13493 09f3 0100     		.2byte	0x1
 13494 09f5 50       		.byte	0x50
 13495 09f6 26030000 		.4byte	.LVL231
 13496 09fa C2030000 		.4byte	.LFE26
 13497 09fe 0400     		.2byte	0x4
 13498 0a00 F3       		.byte	0xf3
 13499 0a01 01       		.uleb128 0x1
 13500 0a02 50       		.byte	0x50
 13501 0a03 9F       		.byte	0x9f
 13502 0a04 00000000 		.4byte	0
 13503 0a08 00000000 		.4byte	0
 13504              	.LLST49:
 13505 0a0c 00000000 		.4byte	.LVL170
 13506 0a10 4B000000 		.4byte	.LVL181-1
 13507 0a14 0100     		.2byte	0x1
 13508 0a16 51       		.byte	0x51
 13509 0a17 4B000000 		.4byte	.LVL181-1
 13510 0a1b 24030000 		.4byte	.LVL230
 13511 0a1f 0400     		.2byte	0x4
 13512 0a21 F3       		.byte	0xf3
 13513 0a22 01       		.uleb128 0x1
 13514 0a23 51       		.byte	0x51
 13515 0a24 9F       		.byte	0x9f
 13516 0a25 24030000 		.4byte	.LVL230
 13517 0a29 2C030000 		.4byte	.LVL233
 13518 0a2d 0100     		.2byte	0x1
 13519 0a2f 51       		.byte	0x51
 13520 0a30 2C030000 		.4byte	.LVL233
 13521 0a34 C2030000 		.4byte	.LFE26
 13522 0a38 0400     		.2byte	0x4
 13523 0a3a F3       		.byte	0xf3
 13524 0a3b 01       		.uleb128 0x1
 13525 0a3c 51       		.byte	0x51
 13526 0a3d 9F       		.byte	0x9f
 13527 0a3e 00000000 		.4byte	0
 13528 0a42 00000000 		.4byte	0
 13529              	.LLST50:
 13530 0a46 00000000 		.4byte	.LVL170
 13531 0a4a 4B000000 		.4byte	.LVL181-1
 13532 0a4e 0100     		.2byte	0x1
 13533 0a50 52       		.byte	0x52
 13534 0a51 4B000000 		.4byte	.LVL181-1
 13535 0a55 24030000 		.4byte	.LVL230
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 308


 13536 0a59 0400     		.2byte	0x4
 13537 0a5b F3       		.byte	0xf3
 13538 0a5c 01       		.uleb128 0x1
 13539 0a5d 52       		.byte	0x52
 13540 0a5e 9F       		.byte	0x9f
 13541 0a5f 24030000 		.4byte	.LVL230
 13542 0a63 2C030000 		.4byte	.LVL233
 13543 0a67 0100     		.2byte	0x1
 13544 0a69 52       		.byte	0x52
 13545 0a6a 2C030000 		.4byte	.LVL233
 13546 0a6e C2030000 		.4byte	.LFE26
 13547 0a72 0400     		.2byte	0x4
 13548 0a74 F3       		.byte	0xf3
 13549 0a75 01       		.uleb128 0x1
 13550 0a76 52       		.byte	0x52
 13551 0a77 9F       		.byte	0x9f
 13552 0a78 00000000 		.4byte	0
 13553 0a7c 00000000 		.4byte	0
 13554              	.LLST51:
 13555 0a80 84000000 		.4byte	.LVL186
 13556 0a84 B6000000 		.4byte	.LVL190
 13557 0a88 0100     		.2byte	0x1
 13558 0a8a 50       		.byte	0x50
 13559 0a8b BC000000 		.4byte	.LVL191
 13560 0a8f 58010000 		.4byte	.LVL205
 13561 0a93 0100     		.2byte	0x1
 13562 0a95 50       		.byte	0x50
 13563 0a96 AE010000 		.4byte	.LVL214
 13564 0a9a BE010000 		.4byte	.LVL215
 13565 0a9e 0200     		.2byte	0x2
 13566 0aa0 31       		.byte	0x31
 13567 0aa1 9F       		.byte	0x9f
 13568 0aa2 BE010000 		.4byte	.LVL215
 13569 0aa6 24030000 		.4byte	.LVL230
 13570 0aaa 0100     		.2byte	0x1
 13571 0aac 5A       		.byte	0x5a
 13572 0aad 3C030000 		.4byte	.LVL241
 13573 0ab1 3E030000 		.4byte	.LVL242
 13574 0ab5 0100     		.2byte	0x1
 13575 0ab7 50       		.byte	0x50
 13576 0ab8 40030000 		.4byte	.LVL243
 13577 0abc 42030000 		.4byte	.LVL244
 13578 0ac0 0100     		.2byte	0x1
 13579 0ac2 50       		.byte	0x50
 13580 0ac3 44030000 		.4byte	.LVL245
 13581 0ac7 46030000 		.4byte	.LVL246
 13582 0acb 0100     		.2byte	0x1
 13583 0acd 50       		.byte	0x50
 13584 0ace 48030000 		.4byte	.LVL247
 13585 0ad2 4A030000 		.4byte	.LVL248
 13586 0ad6 0100     		.2byte	0x1
 13587 0ad8 50       		.byte	0x50
 13588 0ad9 4C030000 		.4byte	.LVL249
 13589 0add 4E030000 		.4byte	.LVL250
 13590 0ae1 0100     		.2byte	0x1
 13591 0ae3 50       		.byte	0x50
 13592 0ae4 50030000 		.4byte	.LVL251
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 309


 13593 0ae8 52030000 		.4byte	.LVL252
 13594 0aec 0100     		.2byte	0x1
 13595 0aee 50       		.byte	0x50
 13596 0aef 54030000 		.4byte	.LVL253
 13597 0af3 56030000 		.4byte	.LVL254
 13598 0af7 0100     		.2byte	0x1
 13599 0af9 50       		.byte	0x50
 13600 0afa 64030000 		.4byte	.LVL261
 13601 0afe B6030000 		.4byte	.LVL265
 13602 0b02 0100     		.2byte	0x1
 13603 0b04 5A       		.byte	0x5a
 13604 0b05 00000000 		.4byte	0
 13605 0b09 00000000 		.4byte	0
 13606              	.LLST52:
 13607 0b0d 1A010000 		.4byte	.LVL200
 13608 0b11 26010000 		.4byte	.LVL201
 13609 0b15 0100     		.2byte	0x1
 13610 0b17 53       		.byte	0x53
 13611 0b18 26010000 		.4byte	.LVL201
 13612 0b1c 2C010000 		.4byte	.LVL204
 13613 0b20 0200     		.2byte	0x2
 13614 0b22 75       		.byte	0x75
 13615 0b23 03       		.sleb128 3
 13616 0b24 2C010000 		.4byte	.LVL204
 13617 0b28 A7010000 		.4byte	.LVL213-1
 13618 0b2c 0100     		.2byte	0x1
 13619 0b2e 51       		.byte	0x51
 13620 0b2f 48030000 		.4byte	.LVL247
 13621 0b33 4C030000 		.4byte	.LVL249
 13622 0b37 0100     		.2byte	0x1
 13623 0b39 53       		.byte	0x53
 13624 0b3a 4C030000 		.4byte	.LVL249
 13625 0b3e 60030000 		.4byte	.LVL259
 13626 0b42 0100     		.2byte	0x1
 13627 0b44 51       		.byte	0x51
 13628 0b45 00000000 		.4byte	0
 13629 0b49 00000000 		.4byte	0
 13630              	.LLST53:
 13631 0b4d 88000000 		.4byte	.LVL187
 13632 0b51 BE000000 		.4byte	.LVL192
 13633 0b55 0200     		.2byte	0x2
 13634 0b57 30       		.byte	0x30
 13635 0b58 9F       		.byte	0x9f
 13636 0b59 C2000000 		.4byte	.LVL194
 13637 0b5d C4000000 		.4byte	.LVL195
 13638 0b61 0200     		.2byte	0x2
 13639 0b63 30       		.byte	0x30
 13640 0b64 9F       		.byte	0x9f
 13641 0b65 00000000 		.4byte	0
 13642 0b69 00000000 		.4byte	0
 13643              	.LLST54:
 13644 0b6d 88000000 		.4byte	.LVL187
 13645 0b71 BE000000 		.4byte	.LVL192
 13646 0b75 0400     		.2byte	0x4
 13647 0b77 75       		.byte	0x75
 13648 0b78 EE03     		.sleb128 494
 13649 0b7a 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 310


 13650 0b7b C2000000 		.4byte	.LVL194
 13651 0b7f C4000000 		.4byte	.LVL195
 13652 0b83 0400     		.2byte	0x4
 13653 0b85 75       		.byte	0x75
 13654 0b86 EE03     		.sleb128 494
 13655 0b88 9F       		.byte	0x9f
 13656 0b89 00000000 		.4byte	0
 13657 0b8d 00000000 		.4byte	0
 13658              	.LLST55:
 13659 0b91 12000000 		.4byte	.LVL172
 13660 0b95 24000000 		.4byte	.LVL174
 13661 0b99 0100     		.2byte	0x1
 13662 0b9b 54       		.byte	0x54
 13663 0b9c 24000000 		.4byte	.LVL174
 13664 0ba0 26000000 		.4byte	.LVL175
 13665 0ba4 0B00     		.2byte	0xb
 13666 0ba6 73       		.byte	0x73
 13667 0ba7 00       		.sleb128 0
 13668 0ba8 94       		.byte	0x94
 13669 0ba9 01       		.byte	0x1
 13670 0baa 08       		.byte	0x8
 13671 0bab FF       		.byte	0xff
 13672 0bac 1A       		.byte	0x1a
 13673 0bad 08       		.byte	0x8
 13674 0bae 30       		.byte	0x30
 13675 0baf 1C       		.byte	0x1c
 13676 0bb0 9F       		.byte	0x9f
 13677 0bb1 26000000 		.4byte	.LVL175
 13678 0bb5 98000000 		.4byte	.LVL188
 13679 0bb9 0100     		.2byte	0x1
 13680 0bbb 54       		.byte	0x54
 13681 0bbc BE000000 		.4byte	.LVL192
 13682 0bc0 C0000000 		.4byte	.LVL193
 13683 0bc4 0100     		.2byte	0x1
 13684 0bc6 54       		.byte	0x54
 13685 0bc7 C2000000 		.4byte	.LVL194
 13686 0bcb C4000000 		.4byte	.LVL195
 13687 0bcf 0100     		.2byte	0x1
 13688 0bd1 54       		.byte	0x54
 13689 0bd2 24030000 		.4byte	.LVL230
 13690 0bd6 3C030000 		.4byte	.LVL241
 13691 0bda 0100     		.2byte	0x1
 13692 0bdc 54       		.byte	0x54
 13693 0bdd 00000000 		.4byte	0
 13694 0be1 00000000 		.4byte	0
 13695              	.LLST56:
 13696 0be5 4C000000 		.4byte	.LVL181
 13697 0be9 5E000000 		.4byte	.LVL182
 13698 0bed 0100     		.2byte	0x1
 13699 0bef 50       		.byte	0x50
 13700 0bf0 6C000000 		.4byte	.LVL183
 13701 0bf4 7E000000 		.4byte	.LVL185
 13702 0bf8 0100     		.2byte	0x1
 13703 0bfa 50       		.byte	0x50
 13704 0bfb 2C030000 		.4byte	.LVL233
 13705 0bff 2E030000 		.4byte	.LVL234
 13706 0c03 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 311


 13707 0c05 50       		.byte	0x50
 13708 0c06 30030000 		.4byte	.LVL235
 13709 0c0a 32030000 		.4byte	.LVL236
 13710 0c0e 0100     		.2byte	0x1
 13711 0c10 50       		.byte	0x50
 13712 0c11 34030000 		.4byte	.LVL237
 13713 0c15 36030000 		.4byte	.LVL238
 13714 0c19 0100     		.2byte	0x1
 13715 0c1b 50       		.byte	0x50
 13716 0c1c 38030000 		.4byte	.LVL239
 13717 0c20 3A030000 		.4byte	.LVL240
 13718 0c24 0100     		.2byte	0x1
 13719 0c26 50       		.byte	0x50
 13720 0c27 00000000 		.4byte	0
 13721 0c2b 00000000 		.4byte	0
 13722              	.LLST57:
 13723 0c2f 7C000000 		.4byte	.LVL184
 13724 0c33 B4000000 		.4byte	.LVL189
 13725 0c37 0200     		.2byte	0x2
 13726 0c39 30       		.byte	0x30
 13727 0c3a 9F       		.byte	0x9f
 13728 0c3b B4000000 		.4byte	.LVL189
 13729 0c3f BE000000 		.4byte	.LVL192
 13730 0c43 0100     		.2byte	0x1
 13731 0c45 54       		.byte	0x54
 13732 0c46 BE000000 		.4byte	.LVL192
 13733 0c4a C4000000 		.4byte	.LVL195
 13734 0c4e 0200     		.2byte	0x2
 13735 0c50 30       		.byte	0x30
 13736 0c51 9F       		.byte	0x9f
 13737 0c52 C4000000 		.4byte	.LVL195
 13738 0c56 16030000 		.4byte	.LVL228
 13739 0c5a 0100     		.2byte	0x1
 13740 0c5c 54       		.byte	0x54
 13741 0c5d 3C030000 		.4byte	.LVL241
 13742 0c61 B6030000 		.4byte	.LVL265
 13743 0c65 0100     		.2byte	0x1
 13744 0c67 54       		.byte	0x54
 13745 0c68 00000000 		.4byte	0
 13746 0c6c 00000000 		.4byte	0
 13747              	.LLST58:
 13748 0c70 F6000000 		.4byte	.LVL196
 13749 0c74 FC000000 		.4byte	.LVL197
 13750 0c78 0100     		.2byte	0x1
 13751 0c7a 57       		.byte	0x57
 13752 0c7b FC000000 		.4byte	.LVL197
 13753 0c7f 10010000 		.4byte	.LVL198
 13754 0c83 1600     		.2byte	0x16
 13755 0c85 75       		.byte	0x75
 13756 0c86 C700     		.sleb128 71
 13757 0c88 94       		.byte	0x94
 13758 0c89 01       		.byte	0x1
 13759 0c8a 08       		.byte	0x8
 13760 0c8b FF       		.byte	0xff
 13761 0c8c 1A       		.byte	0x1a
 13762 0c8d 38       		.byte	0x38
 13763 0c8e 24       		.byte	0x24
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 312


 13764 0c8f 75       		.byte	0x75
 13765 0c90 00       		.sleb128 0
 13766 0c91 72       		.byte	0x72
 13767 0c92 00       		.sleb128 0
 13768 0c93 22       		.byte	0x22
 13769 0c94 94       		.byte	0x94
 13770 0c95 01       		.byte	0x1
 13771 0c96 08       		.byte	0x8
 13772 0c97 FF       		.byte	0xff
 13773 0c98 1A       		.byte	0x1a
 13774 0c99 21       		.byte	0x21
 13775 0c9a 9F       		.byte	0x9f
 13776 0c9b 10010000 		.4byte	.LVL198
 13777 0c9f 14010000 		.4byte	.LVL199
 13778 0ca3 1800     		.2byte	0x18
 13779 0ca5 75       		.byte	0x75
 13780 0ca6 C700     		.sleb128 71
 13781 0ca8 94       		.byte	0x94
 13782 0ca9 01       		.byte	0x1
 13783 0caa 08       		.byte	0x8
 13784 0cab FF       		.byte	0xff
 13785 0cac 1A       		.byte	0x1a
 13786 0cad 38       		.byte	0x38
 13787 0cae 24       		.byte	0x24
 13788 0caf 75       		.byte	0x75
 13789 0cb0 00       		.sleb128 0
 13790 0cb1 72       		.byte	0x72
 13791 0cb2 00       		.sleb128 0
 13792 0cb3 22       		.byte	0x22
 13793 0cb4 3E       		.byte	0x3e
 13794 0cb5 1C       		.byte	0x1c
 13795 0cb6 94       		.byte	0x94
 13796 0cb7 01       		.byte	0x1
 13797 0cb8 08       		.byte	0x8
 13798 0cb9 FF       		.byte	0xff
 13799 0cba 1A       		.byte	0x1a
 13800 0cbb 21       		.byte	0x21
 13801 0cbc 9F       		.byte	0x9f
 13802 0cbd 14010000 		.4byte	.LVL199
 13803 0cc1 28010000 		.4byte	.LVL202
 13804 0cc5 0100     		.2byte	0x1
 13805 0cc7 57       		.byte	0x57
 13806 0cc8 28010000 		.4byte	.LVL202
 13807 0ccc 2A010000 		.4byte	.LVL203
 13808 0cd0 0100     		.2byte	0x1
 13809 0cd2 53       		.byte	0x53
 13810 0cd3 2A010000 		.4byte	.LVL203
 13811 0cd7 24030000 		.4byte	.LVL230
 13812 0cdb 0100     		.2byte	0x1
 13813 0cdd 5B       		.byte	0x5b
 13814 0cde 48030000 		.4byte	.LVL247
 13815 0ce2 4C030000 		.4byte	.LVL249
 13816 0ce6 0100     		.2byte	0x1
 13817 0ce8 57       		.byte	0x57
 13818 0ce9 4C030000 		.4byte	.LVL249
 13819 0ced B6030000 		.4byte	.LVL265
 13820 0cf1 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 313


 13821 0cf3 5B       		.byte	0x5b
 13822 0cf4 00000000 		.4byte	0
 13823 0cf8 00000000 		.4byte	0
 13824              	.LLST59:
 13825 0cfc 60010000 		.4byte	.LVL206
 13826 0d00 66010000 		.4byte	.LVL207
 13827 0d04 0100     		.2byte	0x1
 13828 0d06 50       		.byte	0x50
 13829 0d07 66010000 		.4byte	.LVL207
 13830 0d0b 7A010000 		.4byte	.LVL208
 13831 0d0f 1600     		.2byte	0x16
 13832 0d11 75       		.byte	0x75
 13833 0d12 C400     		.sleb128 68
 13834 0d14 94       		.byte	0x94
 13835 0d15 01       		.byte	0x1
 13836 0d16 08       		.byte	0x8
 13837 0d17 FF       		.byte	0xff
 13838 0d18 1A       		.byte	0x1a
 13839 0d19 38       		.byte	0x38
 13840 0d1a 24       		.byte	0x24
 13841 0d1b 75       		.byte	0x75
 13842 0d1c 00       		.sleb128 0
 13843 0d1d 72       		.byte	0x72
 13844 0d1e 00       		.sleb128 0
 13845 0d1f 22       		.byte	0x22
 13846 0d20 94       		.byte	0x94
 13847 0d21 01       		.byte	0x1
 13848 0d22 08       		.byte	0x8
 13849 0d23 FF       		.byte	0xff
 13850 0d24 1A       		.byte	0x1a
 13851 0d25 21       		.byte	0x21
 13852 0d26 9F       		.byte	0x9f
 13853 0d27 7A010000 		.4byte	.LVL208
 13854 0d2b 7E010000 		.4byte	.LVL209
 13855 0d2f 1400     		.2byte	0x14
 13856 0d31 75       		.byte	0x75
 13857 0d32 C400     		.sleb128 68
 13858 0d34 94       		.byte	0x94
 13859 0d35 01       		.byte	0x1
 13860 0d36 08       		.byte	0x8
 13861 0d37 FF       		.byte	0xff
 13862 0d38 1A       		.byte	0x1a
 13863 0d39 38       		.byte	0x38
 13864 0d3a 24       		.byte	0x24
 13865 0d3b 75       		.byte	0x75
 13866 0d3c C300     		.sleb128 67
 13867 0d3e 94       		.byte	0x94
 13868 0d3f 01       		.byte	0x1
 13869 0d40 08       		.byte	0x8
 13870 0d41 FF       		.byte	0xff
 13871 0d42 1A       		.byte	0x1a
 13872 0d43 21       		.byte	0x21
 13873 0d44 9F       		.byte	0x9f
 13874 0d45 7E010000 		.4byte	.LVL209
 13875 0d49 A4010000 		.4byte	.LVL212
 13876 0d4d 0100     		.2byte	0x1
 13877 0d4f 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 314


 13878 0d50 58030000 		.4byte	.LVL255
 13879 0d54 5A030000 		.4byte	.LVL256
 13880 0d58 0100     		.2byte	0x1
 13881 0d5a 50       		.byte	0x50
 13882 0d5b 5C030000 		.4byte	.LVL257
 13883 0d5f 5E030000 		.4byte	.LVL258
 13884 0d63 0100     		.2byte	0x1
 13885 0d65 50       		.byte	0x50
 13886 0d66 00000000 		.4byte	0
 13887 0d6a 00000000 		.4byte	0
 13888              	.LLST60:
 13889 0d6e 9A010000 		.4byte	.LVL211
 13890 0d72 24030000 		.4byte	.LVL230
 13891 0d76 0100     		.2byte	0x1
 13892 0d78 59       		.byte	0x59
 13893 0d79 5C030000 		.4byte	.LVL257
 13894 0d7d B6030000 		.4byte	.LVL265
 13895 0d81 0100     		.2byte	0x1
 13896 0d83 59       		.byte	0x59
 13897 0d84 00000000 		.4byte	0
 13898 0d88 00000000 		.4byte	0
 13899              	.LLST61:
 13900 0d8c A8010000 		.4byte	.LVL213
 13901 0d90 CA010000 		.4byte	.LVL217
 13902 0d94 0100     		.2byte	0x1
 13903 0d96 50       		.byte	0x50
 13904 0d97 CA010000 		.4byte	.LVL217
 13905 0d9b 04020000 		.4byte	.LVL219
 13906 0d9f 0300     		.2byte	0x3
 13907 0da1 70       		.byte	0x70
 13908 0da2 7E       		.sleb128 -2
 13909 0da3 9F       		.byte	0x9f
 13910 0da4 04020000 		.4byte	.LVL219
 13911 0da8 06020000 		.4byte	.LVL220
 13912 0dac 0600     		.2byte	0x6
 13913 0dae 75       		.byte	0x75
 13914 0daf 18       		.sleb128 24
 13915 0db0 06       		.byte	0x6
 13916 0db1 32       		.byte	0x32
 13917 0db2 1C       		.byte	0x1c
 13918 0db3 9F       		.byte	0x9f
 13919 0db4 06020000 		.4byte	.LVL220
 13920 0db8 1A020000 		.4byte	.LVL221
 13921 0dbc 0300     		.2byte	0x3
 13922 0dbe 70       		.byte	0x70
 13923 0dbf 7E       		.sleb128 -2
 13924 0dc0 9F       		.byte	0x9f
 13925 0dc1 1A020000 		.4byte	.LVL221
 13926 0dc5 1C020000 		.4byte	.LVL222
 13927 0dc9 0600     		.2byte	0x6
 13928 0dcb 75       		.byte	0x75
 13929 0dcc 18       		.sleb128 24
 13930 0dcd 06       		.byte	0x6
 13931 0dce 32       		.byte	0x32
 13932 0dcf 1C       		.byte	0x1c
 13933 0dd0 9F       		.byte	0x9f
 13934 0dd1 1C020000 		.4byte	.LVL222
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 315


 13935 0dd5 26020000 		.4byte	.LVL223
 13936 0dd9 0300     		.2byte	0x3
 13937 0ddb 70       		.byte	0x70
 13938 0ddc 7E       		.sleb128 -2
 13939 0ddd 9F       		.byte	0x9f
 13940 0dde 26020000 		.4byte	.LVL223
 13941 0de2 65020000 		.4byte	.LVL227-1
 13942 0de6 0600     		.2byte	0x6
 13943 0de8 75       		.byte	0x75
 13944 0de9 18       		.sleb128 24
 13945 0dea 06       		.byte	0x6
 13946 0deb 32       		.byte	0x32
 13947 0dec 1C       		.byte	0x1c
 13948 0ded 9F       		.byte	0x9f
 13949 0dee 60030000 		.4byte	.LVL259
 13950 0df2 62030000 		.4byte	.LVL260
 13951 0df6 0100     		.2byte	0x1
 13952 0df8 50       		.byte	0x50
 13953 0df9 64030000 		.4byte	.LVL261
 13954 0dfd 66030000 		.4byte	.LVL262
 13955 0e01 0300     		.2byte	0x3
 13956 0e03 70       		.byte	0x70
 13957 0e04 7E       		.sleb128 -2
 13958 0e05 9F       		.byte	0x9f
 13959 0e06 66030000 		.4byte	.LVL262
 13960 0e0a 68030000 		.4byte	.LVL263
 13961 0e0e 0600     		.2byte	0x6
 13962 0e10 75       		.byte	0x75
 13963 0e11 18       		.sleb128 24
 13964 0e12 06       		.byte	0x6
 13965 0e13 32       		.byte	0x32
 13966 0e14 1C       		.byte	0x1c
 13967 0e15 9F       		.byte	0x9f
 13968 0e16 68030000 		.4byte	.LVL263
 13969 0e1a 6A030000 		.4byte	.LVL264
 13970 0e1e 0300     		.2byte	0x3
 13971 0e20 70       		.byte	0x70
 13972 0e21 7E       		.sleb128 -2
 13973 0e22 9F       		.byte	0x9f
 13974 0e23 6A030000 		.4byte	.LVL264
 13975 0e27 B6030000 		.4byte	.LVL265
 13976 0e2b 0600     		.2byte	0x6
 13977 0e2d 75       		.byte	0x75
 13978 0e2e 18       		.sleb128 24
 13979 0e2f 06       		.byte	0x6
 13980 0e30 32       		.byte	0x32
 13981 0e31 1C       		.byte	0x1c
 13982 0e32 9F       		.byte	0x9f
 13983 0e33 00000000 		.4byte	0
 13984 0e37 00000000 		.4byte	0
 13985              	.LLST62:
 13986 0e3b 04020000 		.4byte	.LVL219
 13987 0e3f 06020000 		.4byte	.LVL220
 13988 0e43 0100     		.2byte	0x1
 13989 0e45 50       		.byte	0x50
 13990 0e46 28020000 		.4byte	.LVL224
 13991 0e4a 2E020000 		.4byte	.LVL225
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 316


 13992 0e4e 0100     		.2byte	0x1
 13993 0e50 50       		.byte	0x50
 13994 0e51 2E020000 		.4byte	.LVL225
 13995 0e55 30020000 		.4byte	.LVL226
 13996 0e59 0400     		.2byte	0x4
 13997 0e5b 70       		.byte	0x70
 13998 0e5c 817C     		.sleb128 -511
 13999 0e5e 9F       		.byte	0x9f
 14000 0e5f 00000000 		.4byte	0
 14001 0e63 00000000 		.4byte	0
 14002              	.LLST63:
 14003 0e67 8A010000 		.4byte	.LVL210
 14004 0e6b D4010000 		.4byte	.LVL218
 14005 0e6f 0100     		.2byte	0x1
 14006 0e71 56       		.byte	0x56
 14007 0e72 58030000 		.4byte	.LVL255
 14008 0e76 64030000 		.4byte	.LVL261
 14009 0e7a 0100     		.2byte	0x1
 14010 0e7c 56       		.byte	0x56
 14011 0e7d 00000000 		.4byte	0
 14012 0e81 00000000 		.4byte	0
 14013              	.LLST64:
 14014 0e85 0E000000 		.4byte	.LVL171
 14015 0e89 30000000 		.4byte	.LVL177
 14016 0e8d 0100     		.2byte	0x1
 14017 0e8f 53       		.byte	0x53
 14018 0e90 30000000 		.4byte	.LVL177
 14019 0e94 32000000 		.4byte	.LVL178
 14020 0e98 0200     		.2byte	0x2
 14021 0e9a 70       		.byte	0x70
 14022 0e9b 00       		.sleb128 0
 14023 0e9c 32000000 		.4byte	.LVL178
 14024 0ea0 38000000 		.4byte	.LVL180
 14025 0ea4 0300     		.2byte	0x3
 14026 0ea6 F3       		.byte	0xf3
 14027 0ea7 01       		.uleb128 0x1
 14028 0ea8 50       		.byte	0x50
 14029 0ea9 24030000 		.4byte	.LVL230
 14030 0ead 28030000 		.4byte	.LVL232
 14031 0eb1 0100     		.2byte	0x1
 14032 0eb3 53       		.byte	0x53
 14033 0eb4 00000000 		.4byte	0
 14034 0eb8 00000000 		.4byte	0
 14035              	.LLST65:
 14036 0ebc 36000000 		.4byte	.LVL179
 14037 0ec0 24030000 		.4byte	.LVL230
 14038 0ec4 0100     		.2byte	0x1
 14039 0ec6 55       		.byte	0x55
 14040 0ec7 28030000 		.4byte	.LVL232
 14041 0ecb B6030000 		.4byte	.LVL265
 14042 0ecf 0100     		.2byte	0x1
 14043 0ed1 55       		.byte	0x55
 14044 0ed2 00000000 		.4byte	0
 14045 0ed6 00000000 		.4byte	0
 14046              	.LLST66:
 14047 0eda 00000000 		.4byte	.LVL266
 14048 0ede 09000000 		.4byte	.LVL267-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 317


 14049 0ee2 0100     		.2byte	0x1
 14050 0ee4 50       		.byte	0x50
 14051 0ee5 09000000 		.4byte	.LVL267-1
 14052 0ee9 B6000000 		.4byte	.LVL275
 14053 0eed 0100     		.2byte	0x1
 14054 0eef 55       		.byte	0x55
 14055 0ef0 B6000000 		.4byte	.LVL275
 14056 0ef4 E4000000 		.4byte	.LFE10
 14057 0ef8 0400     		.2byte	0x4
 14058 0efa F3       		.byte	0xf3
 14059 0efb 01       		.uleb128 0x1
 14060 0efc 50       		.byte	0x50
 14061 0efd 9F       		.byte	0x9f
 14062 0efe 00000000 		.4byte	0
 14063 0f02 00000000 		.4byte	0
 14064              	.LLST67:
 14065 0f06 0C000000 		.4byte	.LVL268
 14066 0f0a 24000000 		.4byte	.LVL269
 14067 0f0e 0100     		.2byte	0x1
 14068 0f10 50       		.byte	0x50
 14069 0f11 24000000 		.4byte	.LVL269
 14070 0f15 B6000000 		.4byte	.LVL274
 14071 0f19 0100     		.2byte	0x1
 14072 0f1b 54       		.byte	0x54
 14073 0f1c 00000000 		.4byte	0
 14074 0f20 00000000 		.4byte	0
 14075              	.LLST68:
 14076 0f24 00000000 		.4byte	.LVL276
 14077 0f28 10000000 		.4byte	.LVL279
 14078 0f2c 0100     		.2byte	0x1
 14079 0f2e 50       		.byte	0x50
 14080 0f2f 10000000 		.4byte	.LVL279
 14081 0f33 14000000 		.4byte	.LVL280
 14082 0f37 0400     		.2byte	0x4
 14083 0f39 F3       		.byte	0xf3
 14084 0f3a 01       		.uleb128 0x1
 14085 0f3b 50       		.byte	0x50
 14086 0f3c 9F       		.byte	0x9f
 14087 0f3d 14000000 		.4byte	.LVL280
 14088 0f41 16000000 		.4byte	.LVL281
 14089 0f45 0100     		.2byte	0x1
 14090 0f47 50       		.byte	0x50
 14091 0f48 16000000 		.4byte	.LVL281
 14092 0f4c 18000000 		.4byte	.LFE11
 14093 0f50 0400     		.2byte	0x4
 14094 0f52 F3       		.byte	0xf3
 14095 0f53 01       		.uleb128 0x1
 14096 0f54 50       		.byte	0x50
 14097 0f55 9F       		.byte	0x9f
 14098 0f56 00000000 		.4byte	0
 14099 0f5a 00000000 		.4byte	0
 14100              	.LLST69:
 14101 0f5e 00000000 		.4byte	.LVL276
 14102 0f62 02000000 		.4byte	.LVL277
 14103 0f66 0100     		.2byte	0x1
 14104 0f68 51       		.byte	0x51
 14105 0f69 02000000 		.4byte	.LVL277
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 318


 14106 0f6d 0E000000 		.4byte	.LVL278
 14107 0f71 0100     		.2byte	0x1
 14108 0f73 51       		.byte	0x51
 14109 0f74 0E000000 		.4byte	.LVL278
 14110 0f78 14000000 		.4byte	.LVL280
 14111 0f7c 0600     		.2byte	0x6
 14112 0f7e F3       		.byte	0xf3
 14113 0f7f 01       		.uleb128 0x1
 14114 0f80 51       		.byte	0x51
 14115 0f81 32       		.byte	0x32
 14116 0f82 1C       		.byte	0x1c
 14117 0f83 9F       		.byte	0x9f
 14118 0f84 14000000 		.4byte	.LVL280
 14119 0f88 16000000 		.4byte	.LVL281
 14120 0f8c 0100     		.2byte	0x1
 14121 0f8e 51       		.byte	0x51
 14122 0f8f 16000000 		.4byte	.LVL281
 14123 0f93 18000000 		.4byte	.LFE11
 14124 0f97 0600     		.2byte	0x6
 14125 0f99 F3       		.byte	0xf3
 14126 0f9a 01       		.uleb128 0x1
 14127 0f9b 51       		.byte	0x51
 14128 0f9c 32       		.byte	0x32
 14129 0f9d 1C       		.byte	0x1c
 14130 0f9e 9F       		.byte	0x9f
 14131 0f9f 00000000 		.4byte	0
 14132 0fa3 00000000 		.4byte	0
 14133              	.LLST70:
 14134 0fa7 00000000 		.4byte	.LVL282
 14135 0fab 2D000000 		.4byte	.LVL286-1
 14136 0faf 0100     		.2byte	0x1
 14137 0fb1 50       		.byte	0x50
 14138 0fb2 2D000000 		.4byte	.LVL286-1
 14139 0fb6 6C000000 		.4byte	.LVL295
 14140 0fba 0100     		.2byte	0x1
 14141 0fbc 56       		.byte	0x56
 14142 0fbd 6C000000 		.4byte	.LVL295
 14143 0fc1 77000000 		.4byte	.LVL297-1
 14144 0fc5 0100     		.2byte	0x1
 14145 0fc7 50       		.byte	0x50
 14146 0fc8 77000000 		.4byte	.LVL297-1
 14147 0fcc 90000000 		.4byte	.LVL299
 14148 0fd0 0100     		.2byte	0x1
 14149 0fd2 56       		.byte	0x56
 14150 0fd3 90000000 		.4byte	.LVL299
 14151 0fd7 98000000 		.4byte	.LVL301
 14152 0fdb 0400     		.2byte	0x4
 14153 0fdd F3       		.byte	0xf3
 14154 0fde 01       		.uleb128 0x1
 14155 0fdf 50       		.byte	0x50
 14156 0fe0 9F       		.byte	0x9f
 14157 0fe1 98000000 		.4byte	.LVL301
 14158 0fe5 A3000000 		.4byte	.LVL303-1
 14159 0fe9 0100     		.2byte	0x1
 14160 0feb 50       		.byte	0x50
 14161 0fec A3000000 		.4byte	.LVL303-1
 14162 0ff0 D4000000 		.4byte	.LVL306
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 319


 14163 0ff4 0100     		.2byte	0x1
 14164 0ff6 56       		.byte	0x56
 14165 0ff7 D4000000 		.4byte	.LVL306
 14166 0ffb D6000000 		.4byte	.LVL307
 14167 0fff 0100     		.2byte	0x1
 14168 1001 50       		.byte	0x50
 14169 1002 D6000000 		.4byte	.LVL307
 14170 1006 D8000000 		.4byte	.LVL308
 14171 100a 0400     		.2byte	0x4
 14172 100c F3       		.byte	0xf3
 14173 100d 01       		.uleb128 0x1
 14174 100e 50       		.byte	0x50
 14175 100f 9F       		.byte	0x9f
 14176 1010 D8000000 		.4byte	.LVL308
 14177 1014 DA000000 		.4byte	.LVL309
 14178 1018 0100     		.2byte	0x1
 14179 101a 50       		.byte	0x50
 14180 101b DA000000 		.4byte	.LVL309
 14181 101f DC000000 		.4byte	.LVL310
 14182 1023 0400     		.2byte	0x4
 14183 1025 F3       		.byte	0xf3
 14184 1026 01       		.uleb128 0x1
 14185 1027 50       		.byte	0x50
 14186 1028 9F       		.byte	0x9f
 14187 1029 DC000000 		.4byte	.LVL310
 14188 102d DE000000 		.4byte	.LVL311
 14189 1031 0100     		.2byte	0x1
 14190 1033 50       		.byte	0x50
 14191 1034 DE000000 		.4byte	.LVL311
 14192 1038 F8000000 		.4byte	.LVL315
 14193 103c 0100     		.2byte	0x1
 14194 103e 56       		.byte	0x56
 14195 103f F8000000 		.4byte	.LVL315
 14196 1043 FA000000 		.4byte	.LFE12
 14197 1047 0400     		.2byte	0x4
 14198 1049 F3       		.byte	0xf3
 14199 104a 01       		.uleb128 0x1
 14200 104b 50       		.byte	0x50
 14201 104c 9F       		.byte	0x9f
 14202 104d 00000000 		.4byte	0
 14203 1051 00000000 		.4byte	0
 14204              	.LLST71:
 14205 1055 00000000 		.4byte	.LVL282
 14206 1059 24000000 		.4byte	.LVL285
 14207 105d 0100     		.2byte	0x1
 14208 105f 51       		.byte	0x51
 14209 1060 24000000 		.4byte	.LVL285
 14210 1064 6C000000 		.4byte	.LVL295
 14211 1068 0100     		.2byte	0x1
 14212 106a 54       		.byte	0x54
 14213 106b 6C000000 		.4byte	.LVL295
 14214 106f 6E000000 		.4byte	.LVL296
 14215 1073 0100     		.2byte	0x1
 14216 1075 51       		.byte	0x51
 14217 1076 6E000000 		.4byte	.LVL296
 14218 107a 98000000 		.4byte	.LVL301
 14219 107e 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 320


 14220 1080 54       		.byte	0x54
 14221 1081 98000000 		.4byte	.LVL301
 14222 1085 9A000000 		.4byte	.LVL302
 14223 1089 0100     		.2byte	0x1
 14224 108b 51       		.byte	0x51
 14225 108c 9A000000 		.4byte	.LVL302
 14226 1090 AC000000 		.4byte	.LVL304
 14227 1094 0100     		.2byte	0x1
 14228 1096 54       		.byte	0x54
 14229 1097 AC000000 		.4byte	.LVL304
 14230 109b D4000000 		.4byte	.LVL306
 14231 109f 0400     		.2byte	0x4
 14232 10a1 F3       		.byte	0xf3
 14233 10a2 01       		.uleb128 0x1
 14234 10a3 51       		.byte	0x51
 14235 10a4 9F       		.byte	0x9f
 14236 10a5 D4000000 		.4byte	.LVL306
 14237 10a9 E2000000 		.4byte	.LVL312
 14238 10ad 0100     		.2byte	0x1
 14239 10af 51       		.byte	0x51
 14240 10b0 E2000000 		.4byte	.LVL312
 14241 10b4 F8000000 		.4byte	.LVL315
 14242 10b8 0100     		.2byte	0x1
 14243 10ba 54       		.byte	0x54
 14244 10bb F8000000 		.4byte	.LVL315
 14245 10bf FA000000 		.4byte	.LFE12
 14246 10c3 0400     		.2byte	0x4
 14247 10c5 F3       		.byte	0xf3
 14248 10c6 01       		.uleb128 0x1
 14249 10c7 51       		.byte	0x51
 14250 10c8 9F       		.byte	0x9f
 14251 10c9 00000000 		.4byte	0
 14252 10cd 00000000 		.4byte	0
 14253              	.LLST72:
 14254 10d1 3C000000 		.4byte	.LVL287
 14255 10d5 5E000000 		.4byte	.LVL291
 14256 10d9 0100     		.2byte	0x1
 14257 10db 55       		.byte	0x55
 14258 10dc 5E000000 		.4byte	.LVL291
 14259 10e0 64000000 		.4byte	.LVL292
 14260 10e4 0100     		.2byte	0x1
 14261 10e6 50       		.byte	0x50
 14262 10e7 64000000 		.4byte	.LVL292
 14263 10eb 66000000 		.4byte	.LVL293
 14264 10ef 1200     		.2byte	0x12
 14265 10f1 76       		.byte	0x76
 14266 10f2 00       		.sleb128 0
 14267 10f3 77       		.byte	0x77
 14268 10f4 00       		.sleb128 0
 14269 10f5 22       		.byte	0x22
 14270 10f6 23       		.byte	0x23
 14271 10f7 30       		.uleb128 0x30
 14272 10f8 94       		.byte	0x94
 14273 10f9 01       		.byte	0x1
 14274 10fa 08       		.byte	0x8
 14275 10fb FF       		.byte	0xff
 14276 10fc 1A       		.byte	0x1a
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 321


 14277 10fd 38       		.byte	0x38
 14278 10fe 24       		.byte	0x24
 14279 10ff 75       		.byte	0x75
 14280 1100 00       		.sleb128 0
 14281 1101 21       		.byte	0x21
 14282 1102 9F       		.byte	0x9f
 14283 1103 66000000 		.4byte	.LVL293
 14284 1107 68000000 		.4byte	.LVL294
 14285 110b 0100     		.2byte	0x1
 14286 110d 50       		.byte	0x50
 14287 110e 68000000 		.4byte	.LVL294
 14288 1112 6C000000 		.4byte	.LVL295
 14289 1116 1200     		.2byte	0x12
 14290 1118 76       		.byte	0x76
 14291 1119 00       		.sleb128 0
 14292 111a 77       		.byte	0x77
 14293 111b 00       		.sleb128 0
 14294 111c 22       		.byte	0x22
 14295 111d 23       		.byte	0x23
 14296 111e 30       		.uleb128 0x30
 14297 111f 94       		.byte	0x94
 14298 1120 01       		.byte	0x1
 14299 1121 08       		.byte	0x8
 14300 1122 FF       		.byte	0xff
 14301 1123 1A       		.byte	0x1a
 14302 1124 38       		.byte	0x38
 14303 1125 24       		.byte	0x24
 14304 1126 75       		.byte	0x75
 14305 1127 00       		.sleb128 0
 14306 1128 21       		.byte	0x21
 14307 1129 9F       		.byte	0x9f
 14308 112a E8000000 		.4byte	.LVL313
 14309 112e EE000000 		.4byte	.LVL314
 14310 1132 0100     		.2byte	0x1
 14311 1134 55       		.byte	0x55
 14312 1135 00000000 		.4byte	0
 14313 1139 00000000 		.4byte	0
 14314              	.LLST73:
 14315 113d 1E000000 		.4byte	.LVL283
 14316 1141 22000000 		.4byte	.LVL284
 14317 1145 0100     		.2byte	0x1
 14318 1147 51       		.byte	0x51
 14319 1148 22000000 		.4byte	.LVL284
 14320 114c 52000000 		.4byte	.LVL290
 14321 1150 0100     		.2byte	0x1
 14322 1152 57       		.byte	0x57
 14323 1153 52000000 		.4byte	.LVL290
 14324 1157 6C000000 		.4byte	.LVL295
 14325 115b 0A00     		.2byte	0xa
 14326 115d 74       		.byte	0x74
 14327 115e 00       		.sleb128 0
 14328 115f 31       		.byte	0x31
 14329 1160 25       		.byte	0x25
 14330 1161 74       		.byte	0x74
 14331 1162 00       		.sleb128 0
 14332 1163 22       		.byte	0x22
 14333 1164 23       		.byte	0x23
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 322


 14334 1165 01       		.uleb128 0x1
 14335 1166 9F       		.byte	0x9f
 14336 1167 E2000000 		.4byte	.LVL312
 14337 116b EE000000 		.4byte	.LVL314
 14338 116f 0100     		.2byte	0x1
 14339 1171 57       		.byte	0x57
 14340 1172 00000000 		.4byte	0
 14341 1176 00000000 		.4byte	0
 14342              	.LLST74:
 14343 117a 8A000000 		.4byte	.LVL298
 14344 117e 94000000 		.4byte	.LVL300
 14345 1182 0100     		.2byte	0x1
 14346 1184 53       		.byte	0x53
 14347 1185 94000000 		.4byte	.LVL300
 14348 1189 98000000 		.4byte	.LVL301
 14349 118d 0900     		.2byte	0x9
 14350 118f 71       		.byte	0x71
 14351 1190 00       		.sleb128 0
 14352 1191 F3       		.byte	0xf3
 14353 1192 01       		.uleb128 0x1
 14354 1193 50       		.byte	0x50
 14355 1194 22       		.byte	0x22
 14356 1195 23       		.byte	0x23
 14357 1196 30       		.uleb128 0x30
 14358 1197 9F       		.byte	0x9f
 14359 1198 B6000000 		.4byte	.LVL305
 14360 119c D4000000 		.4byte	.LVL306
 14361 11a0 0100     		.2byte	0x1
 14362 11a2 52       		.byte	0x52
 14363 11a3 00000000 		.4byte	0
 14364 11a7 00000000 		.4byte	0
 14365              	.LLST75:
 14366 11ab 00000000 		.4byte	.LVL316
 14367 11af 3E000000 		.4byte	.LVL320
 14368 11b3 0100     		.2byte	0x1
 14369 11b5 50       		.byte	0x50
 14370 11b6 3E000000 		.4byte	.LVL320
 14371 11ba 80000000 		.4byte	.LVL327
 14372 11be 0100     		.2byte	0x1
 14373 11c0 55       		.byte	0x55
 14374 11c1 80000000 		.4byte	.LVL327
 14375 11c5 82000000 		.4byte	.LVL328
 14376 11c9 0100     		.2byte	0x1
 14377 11cb 50       		.byte	0x50
 14378 11cc 82000000 		.4byte	.LVL328
 14379 11d0 84000000 		.4byte	.LVL329
 14380 11d4 0100     		.2byte	0x1
 14381 11d6 55       		.byte	0x55
 14382 11d7 84000000 		.4byte	.LVL329
 14383 11db 86000000 		.4byte	.LVL330
 14384 11df 0100     		.2byte	0x1
 14385 11e1 50       		.byte	0x50
 14386 11e2 86000000 		.4byte	.LVL330
 14387 11e6 88000000 		.4byte	.LVL331
 14388 11ea 0100     		.2byte	0x1
 14389 11ec 55       		.byte	0x55
 14390 11ed 88000000 		.4byte	.LVL331
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 323


 14391 11f1 8A000000 		.4byte	.LVL332
 14392 11f5 0100     		.2byte	0x1
 14393 11f7 50       		.byte	0x50
 14394 11f8 8A000000 		.4byte	.LVL332
 14395 11fc 96000000 		.4byte	.LVL339
 14396 1200 0100     		.2byte	0x1
 14397 1202 55       		.byte	0x55
 14398 1203 96000000 		.4byte	.LVL339
 14399 1207 98000000 		.4byte	.LFE16
 14400 120b 0400     		.2byte	0x4
 14401 120d F3       		.byte	0xf3
 14402 120e 01       		.uleb128 0x1
 14403 120f 50       		.byte	0x50
 14404 1210 9F       		.byte	0x9f
 14405 1211 00000000 		.4byte	0
 14406 1215 00000000 		.4byte	0
 14407              	.LLST76:
 14408 1219 00000000 		.4byte	.LVL316
 14409 121d 0A000000 		.4byte	.LVL317
 14410 1221 0100     		.2byte	0x1
 14411 1223 51       		.byte	0x51
 14412 1224 0A000000 		.4byte	.LVL317
 14413 1228 3E000000 		.4byte	.LVL320
 14414 122c 0200     		.2byte	0x2
 14415 122e 70       		.byte	0x70
 14416 122f 06       		.sleb128 6
 14417 1230 3E000000 		.4byte	.LVL320
 14418 1234 58000000 		.4byte	.LVL323
 14419 1238 0100     		.2byte	0x1
 14420 123a 54       		.byte	0x54
 14421 123b 5A000000 		.4byte	.LVL324
 14422 123f 80000000 		.4byte	.LVL327
 14423 1243 0100     		.2byte	0x1
 14424 1245 54       		.byte	0x54
 14425 1246 80000000 		.4byte	.LVL327
 14426 124a 82000000 		.4byte	.LVL328
 14427 124e 0200     		.2byte	0x2
 14428 1250 70       		.byte	0x70
 14429 1251 06       		.sleb128 6
 14430 1252 82000000 		.4byte	.LVL328
 14431 1256 84000000 		.4byte	.LVL329
 14432 125a 0200     		.2byte	0x2
 14433 125c 75       		.byte	0x75
 14434 125d 06       		.sleb128 6
 14435 125e 84000000 		.4byte	.LVL329
 14436 1262 86000000 		.4byte	.LVL330
 14437 1266 0200     		.2byte	0x2
 14438 1268 70       		.byte	0x70
 14439 1269 06       		.sleb128 6
 14440 126a 86000000 		.4byte	.LVL330
 14441 126e 88000000 		.4byte	.LVL331
 14442 1272 0200     		.2byte	0x2
 14443 1274 75       		.byte	0x75
 14444 1275 06       		.sleb128 6
 14445 1276 88000000 		.4byte	.LVL331
 14446 127a 8A000000 		.4byte	.LVL332
 14447 127e 0200     		.2byte	0x2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 324


 14448 1280 70       		.byte	0x70
 14449 1281 06       		.sleb128 6
 14450 1282 8A000000 		.4byte	.LVL332
 14451 1286 8C000000 		.4byte	.LVL333
 14452 128a 0200     		.2byte	0x2
 14453 128c 75       		.byte	0x75
 14454 128d 06       		.sleb128 6
 14455 128e 8C000000 		.4byte	.LVL333
 14456 1292 96000000 		.4byte	.LVL338
 14457 1296 0100     		.2byte	0x1
 14458 1298 54       		.byte	0x54
 14459 1299 00000000 		.4byte	0
 14460 129d 00000000 		.4byte	0
 14461              	.LLST77:
 14462 12a1 0A000000 		.4byte	.LVL317
 14463 12a5 43000000 		.4byte	.LVL321-1
 14464 12a9 0100     		.2byte	0x1
 14465 12ab 51       		.byte	0x51
 14466 12ac 46000000 		.4byte	.LVL322
 14467 12b0 5A000000 		.4byte	.LVL324
 14468 12b4 0100     		.2byte	0x1
 14469 12b6 50       		.byte	0x50
 14470 12b7 5A000000 		.4byte	.LVL324
 14471 12bb 65000000 		.4byte	.LVL325-1
 14472 12bf 0100     		.2byte	0x1
 14473 12c1 51       		.byte	0x51
 14474 12c2 80000000 		.4byte	.LVL327
 14475 12c6 8C000000 		.4byte	.LVL333
 14476 12ca 0100     		.2byte	0x1
 14477 12cc 51       		.byte	0x51
 14478 12cd 8C000000 		.4byte	.LVL333
 14479 12d1 8E000000 		.4byte	.LVL334
 14480 12d5 0100     		.2byte	0x1
 14481 12d7 50       		.byte	0x50
 14482 12d8 8E000000 		.4byte	.LVL334
 14483 12dc 90000000 		.4byte	.LVL335
 14484 12e0 0100     		.2byte	0x1
 14485 12e2 51       		.byte	0x51
 14486 12e3 90000000 		.4byte	.LVL335
 14487 12e7 92000000 		.4byte	.LVL336
 14488 12eb 0100     		.2byte	0x1
 14489 12ed 50       		.byte	0x50
 14490 12ee 92000000 		.4byte	.LVL336
 14491 12f2 94000000 		.4byte	.LVL337
 14492 12f6 0100     		.2byte	0x1
 14493 12f8 51       		.byte	0x51
 14494 12f9 94000000 		.4byte	.LVL337
 14495 12fd 96000000 		.4byte	.LVL338
 14496 1301 0100     		.2byte	0x1
 14497 1303 50       		.byte	0x50
 14498 1304 00000000 		.4byte	0
 14499 1308 00000000 		.4byte	0
 14500              	.LLST78:
 14501 130c 3C000000 		.4byte	.LVL319
 14502 1310 6C000000 		.4byte	.LVL326
 14503 1314 0100     		.2byte	0x1
 14504 1316 56       		.byte	0x56
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 325


 14505 1317 8C000000 		.4byte	.LVL333
 14506 131b 96000000 		.4byte	.LVL338
 14507 131f 0100     		.2byte	0x1
 14508 1321 56       		.byte	0x56
 14509 1322 00000000 		.4byte	0
 14510 1326 00000000 		.4byte	0
 14511              	.LLST79:
 14512 132a 00000000 		.4byte	.LVL340
 14513 132e 09000000 		.4byte	.LVL341-1
 14514 1332 0100     		.2byte	0x1
 14515 1334 50       		.byte	0x50
 14516 1335 09000000 		.4byte	.LVL341-1
 14517 1339 26000000 		.4byte	.LVL345
 14518 133d 0100     		.2byte	0x1
 14519 133f 54       		.byte	0x54
 14520 1340 26000000 		.4byte	.LVL345
 14521 1344 28000000 		.4byte	.LFE21
 14522 1348 0400     		.2byte	0x4
 14523 134a F3       		.byte	0xf3
 14524 134b 01       		.uleb128 0x1
 14525 134c 50       		.byte	0x50
 14526 134d 9F       		.byte	0x9f
 14527 134e 00000000 		.4byte	0
 14528 1352 00000000 		.4byte	0
 14529              	.LLST80:
 14530 1356 0A000000 		.4byte	.LVL341
 14531 135a 10000000 		.4byte	.LVL342
 14532 135e 0100     		.2byte	0x1
 14533 1360 50       		.byte	0x50
 14534 1361 16000000 		.4byte	.LVL343
 14535 1365 28000000 		.4byte	.LFE21
 14536 1369 0100     		.2byte	0x1
 14537 136b 50       		.byte	0x50
 14538 136c 00000000 		.4byte	0
 14539 1370 00000000 		.4byte	0
 14540              	.LLST81:
 14541 1374 00000000 		.4byte	.LVL346
 14542 1378 2F000000 		.4byte	.LVL350-1
 14543 137c 0100     		.2byte	0x1
 14544 137e 50       		.byte	0x50
 14545 137f 2F000000 		.4byte	.LVL350-1
 14546 1383 9A000000 		.4byte	.LVL367
 14547 1387 0100     		.2byte	0x1
 14548 1389 56       		.byte	0x56
 14549 138a 9A000000 		.4byte	.LVL367
 14550 138e A5000000 		.4byte	.LVL369-1
 14551 1392 0100     		.2byte	0x1
 14552 1394 50       		.byte	0x50
 14553 1395 A5000000 		.4byte	.LVL369-1
 14554 1399 C4000000 		.4byte	.LVL373
 14555 139d 0100     		.2byte	0x1
 14556 139f 56       		.byte	0x56
 14557 13a0 C4000000 		.4byte	.LVL373
 14558 13a4 CF000000 		.4byte	.LVL375-1
 14559 13a8 0100     		.2byte	0x1
 14560 13aa 50       		.byte	0x50
 14561 13ab CF000000 		.4byte	.LVL375-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 326


 14562 13af FE000000 		.4byte	.LVL381
 14563 13b3 0100     		.2byte	0x1
 14564 13b5 56       		.byte	0x56
 14565 13b6 FE000000 		.4byte	.LVL381
 14566 13ba 00010000 		.4byte	.LVL382
 14567 13be 0100     		.2byte	0x1
 14568 13c0 50       		.byte	0x50
 14569 13c1 00010000 		.4byte	.LVL382
 14570 13c5 06010000 		.4byte	.LVL383
 14571 13c9 0100     		.2byte	0x1
 14572 13cb 56       		.byte	0x56
 14573 13cc 06010000 		.4byte	.LVL383
 14574 13d0 08010000 		.4byte	.LVL384
 14575 13d4 0100     		.2byte	0x1
 14576 13d6 50       		.byte	0x50
 14577 13d7 08010000 		.4byte	.LVL384
 14578 13db 0A010000 		.4byte	.LVL385
 14579 13df 0100     		.2byte	0x1
 14580 13e1 56       		.byte	0x56
 14581 13e2 0A010000 		.4byte	.LVL385
 14582 13e6 0C010000 		.4byte	.LVL386
 14583 13ea 0100     		.2byte	0x1
 14584 13ec 50       		.byte	0x50
 14585 13ed 0C010000 		.4byte	.LVL386
 14586 13f1 0C010000 		.4byte	.LVL387
 14587 13f5 0100     		.2byte	0x1
 14588 13f7 56       		.byte	0x56
 14589 13f8 0C010000 		.4byte	.LVL387
 14590 13fc 0E010000 		.4byte	.LFE13
 14591 1400 0400     		.2byte	0x4
 14592 1402 F3       		.byte	0xf3
 14593 1403 01       		.uleb128 0x1
 14594 1404 50       		.byte	0x50
 14595 1405 9F       		.byte	0x9f
 14596 1406 00000000 		.4byte	0
 14597 140a 00000000 		.4byte	0
 14598              	.LLST82:
 14599 140e 00000000 		.4byte	.LVL346
 14600 1412 26000000 		.4byte	.LVL349
 14601 1416 0100     		.2byte	0x1
 14602 1418 51       		.byte	0x51
 14603 1419 26000000 		.4byte	.LVL349
 14604 141d 3C000000 		.4byte	.LVL352
 14605 1421 0100     		.2byte	0x1
 14606 1423 54       		.byte	0x54
 14607 1424 3C000000 		.4byte	.LVL352
 14608 1428 9A000000 		.4byte	.LVL367
 14609 142c 0400     		.2byte	0x4
 14610 142e F3       		.byte	0xf3
 14611 142f 01       		.uleb128 0x1
 14612 1430 51       		.byte	0x51
 14613 1431 9F       		.byte	0x9f
 14614 1432 9A000000 		.4byte	.LVL367
 14615 1436 9C000000 		.4byte	.LVL368
 14616 143a 0100     		.2byte	0x1
 14617 143c 51       		.byte	0x51
 14618 143d 9C000000 		.4byte	.LVL368
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 327


 14619 1441 AC000000 		.4byte	.LVL370
 14620 1445 0100     		.2byte	0x1
 14621 1447 54       		.byte	0x54
 14622 1448 AC000000 		.4byte	.LVL370
 14623 144c C4000000 		.4byte	.LVL373
 14624 1450 0400     		.2byte	0x4
 14625 1452 F3       		.byte	0xf3
 14626 1453 01       		.uleb128 0x1
 14627 1454 51       		.byte	0x51
 14628 1455 9F       		.byte	0x9f
 14629 1456 C4000000 		.4byte	.LVL373
 14630 145a C6000000 		.4byte	.LVL374
 14631 145e 0100     		.2byte	0x1
 14632 1460 51       		.byte	0x51
 14633 1461 C6000000 		.4byte	.LVL374
 14634 1465 D6000000 		.4byte	.LVL376
 14635 1469 0100     		.2byte	0x1
 14636 146b 54       		.byte	0x54
 14637 146c D6000000 		.4byte	.LVL376
 14638 1470 FE000000 		.4byte	.LVL381
 14639 1474 0400     		.2byte	0x4
 14640 1476 F3       		.byte	0xf3
 14641 1477 01       		.uleb128 0x1
 14642 1478 51       		.byte	0x51
 14643 1479 9F       		.byte	0x9f
 14644 147a FE000000 		.4byte	.LVL381
 14645 147e 00010000 		.4byte	.LVL382
 14646 1482 0100     		.2byte	0x1
 14647 1484 51       		.byte	0x51
 14648 1485 00010000 		.4byte	.LVL382
 14649 1489 06010000 		.4byte	.LVL383
 14650 148d 0400     		.2byte	0x4
 14651 148f F3       		.byte	0xf3
 14652 1490 01       		.uleb128 0x1
 14653 1491 51       		.byte	0x51
 14654 1492 9F       		.byte	0x9f
 14655 1493 06010000 		.4byte	.LVL383
 14656 1497 0C010000 		.4byte	.LVL386
 14657 149b 0100     		.2byte	0x1
 14658 149d 51       		.byte	0x51
 14659 149e 0C010000 		.4byte	.LVL386
 14660 14a2 0E010000 		.4byte	.LFE13
 14661 14a6 0400     		.2byte	0x4
 14662 14a8 F3       		.byte	0xf3
 14663 14a9 01       		.uleb128 0x1
 14664 14aa 51       		.byte	0x51
 14665 14ab 9F       		.byte	0x9f
 14666 14ac 00000000 		.4byte	0
 14667 14b0 00000000 		.4byte	0
 14668              	.LLST83:
 14669 14b4 00000000 		.4byte	.LVL346
 14670 14b8 2F000000 		.4byte	.LVL350-1
 14671 14bc 0100     		.2byte	0x1
 14672 14be 52       		.byte	0x52
 14673 14bf 2F000000 		.4byte	.LVL350-1
 14674 14c3 7E000000 		.4byte	.LVL363
 14675 14c7 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 328


 14676 14c9 55       		.byte	0x55
 14677 14ca 7E000000 		.4byte	.LVL363
 14678 14ce 82000000 		.4byte	.LVL364
 14679 14d2 0400     		.2byte	0x4
 14680 14d4 F3       		.byte	0xf3
 14681 14d5 01       		.uleb128 0x1
 14682 14d6 52       		.byte	0x52
 14683 14d7 9F       		.byte	0x9f
 14684 14d8 82000000 		.4byte	.LVL364
 14685 14dc 8E000000 		.4byte	.LVL365
 14686 14e0 0100     		.2byte	0x1
 14687 14e2 55       		.byte	0x55
 14688 14e3 8E000000 		.4byte	.LVL365
 14689 14e7 9A000000 		.4byte	.LVL367
 14690 14eb 0400     		.2byte	0x4
 14691 14ed F3       		.byte	0xf3
 14692 14ee 01       		.uleb128 0x1
 14693 14ef 52       		.byte	0x52
 14694 14f0 9F       		.byte	0x9f
 14695 14f1 9A000000 		.4byte	.LVL367
 14696 14f5 A5000000 		.4byte	.LVL369-1
 14697 14f9 0100     		.2byte	0x1
 14698 14fb 52       		.byte	0x52
 14699 14fc A5000000 		.4byte	.LVL369-1
 14700 1500 C0000000 		.4byte	.LVL372
 14701 1504 0100     		.2byte	0x1
 14702 1506 55       		.byte	0x55
 14703 1507 C0000000 		.4byte	.LVL372
 14704 150b C4000000 		.4byte	.LVL373
 14705 150f 0400     		.2byte	0x4
 14706 1511 F3       		.byte	0xf3
 14707 1512 01       		.uleb128 0x1
 14708 1513 52       		.byte	0x52
 14709 1514 9F       		.byte	0x9f
 14710 1515 C4000000 		.4byte	.LVL373
 14711 1519 CF000000 		.4byte	.LVL375-1
 14712 151d 0100     		.2byte	0x1
 14713 151f 52       		.byte	0x52
 14714 1520 CF000000 		.4byte	.LVL375-1
 14715 1524 FA000000 		.4byte	.LVL379
 14716 1528 0100     		.2byte	0x1
 14717 152a 55       		.byte	0x55
 14718 152b FA000000 		.4byte	.LVL379
 14719 152f FC000000 		.4byte	.LVL380
 14720 1533 1000     		.2byte	0x10
 14721 1535 73       		.byte	0x73
 14722 1536 03       		.sleb128 3
 14723 1537 94       		.byte	0x94
 14724 1538 01       		.byte	0x1
 14725 1539 08       		.byte	0x8
 14726 153a FF       		.byte	0xff
 14727 153b 1A       		.byte	0x1a
 14728 153c 34       		.byte	0x34
 14729 153d 25       		.byte	0x25
 14730 153e 4C       		.byte	0x4c
 14731 153f 24       		.byte	0x24
 14732 1540 F3       		.byte	0xf3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 329


 14733 1541 01       		.uleb128 0x1
 14734 1542 52       		.byte	0x52
 14735 1543 21       		.byte	0x21
 14736 1544 9F       		.byte	0x9f
 14737 1545 FE000000 		.4byte	.LVL381
 14738 1549 00010000 		.4byte	.LVL382
 14739 154d 0100     		.2byte	0x1
 14740 154f 52       		.byte	0x52
 14741 1550 06010000 		.4byte	.LVL383
 14742 1554 0C010000 		.4byte	.LVL386
 14743 1558 0100     		.2byte	0x1
 14744 155a 52       		.byte	0x52
 14745 155b 00000000 		.4byte	0
 14746 155f 00000000 		.4byte	0
 14747              	.LLST84:
 14748 1563 20000000 		.4byte	.LVL347
 14749 1567 24000000 		.4byte	.LVL348
 14750 156b 0100     		.2byte	0x1
 14751 156d 51       		.byte	0x51
 14752 156e 24000000 		.4byte	.LVL348
 14753 1572 76000000 		.4byte	.LVL361
 14754 1576 0100     		.2byte	0x1
 14755 1578 57       		.byte	0x57
 14756 1579 76000000 		.4byte	.LVL361
 14757 157d 9A000000 		.4byte	.LVL367
 14758 1581 0C00     		.2byte	0xc
 14759 1583 F3       		.byte	0xf3
 14760 1584 01       		.uleb128 0x1
 14761 1585 51       		.byte	0x51
 14762 1586 31       		.byte	0x31
 14763 1587 25       		.byte	0x25
 14764 1588 F3       		.byte	0xf3
 14765 1589 01       		.uleb128 0x1
 14766 158a 51       		.byte	0x51
 14767 158b 22       		.byte	0x22
 14768 158c 23       		.byte	0x23
 14769 158d 01       		.uleb128 0x1
 14770 158e 9F       		.byte	0x9f
 14771 158f 00000000 		.4byte	0
 14772 1593 00000000 		.4byte	0
 14773              	.LLST85:
 14774 1597 38000000 		.4byte	.LVL351
 14775 159b 42000000 		.4byte	.LVL353
 14776 159f 0800     		.2byte	0x8
 14777 15a1 76       		.byte	0x76
 14778 15a2 00       		.sleb128 0
 14779 15a3 73       		.byte	0x73
 14780 15a4 00       		.sleb128 0
 14781 15a5 22       		.byte	0x22
 14782 15a6 23       		.byte	0x23
 14783 15a7 30       		.uleb128 0x30
 14784 15a8 9F       		.byte	0x9f
 14785 15a9 42000000 		.4byte	.LVL353
 14786 15ad 44000000 		.4byte	.LVL354
 14787 15b1 0100     		.2byte	0x1
 14788 15b3 52       		.byte	0x52
 14789 15b4 44000000 		.4byte	.LVL354
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 330


 14790 15b8 58000000 		.4byte	.LVL358
 14791 15bc 0800     		.2byte	0x8
 14792 15be 76       		.byte	0x76
 14793 15bf 00       		.sleb128 0
 14794 15c0 73       		.byte	0x73
 14795 15c1 00       		.sleb128 0
 14796 15c2 22       		.byte	0x22
 14797 15c3 23       		.byte	0x23
 14798 15c4 30       		.uleb128 0x30
 14799 15c5 9F       		.byte	0x9f
 14800 15c6 58000000 		.4byte	.LVL358
 14801 15ca 5E000000 		.4byte	.LVL359
 14802 15ce 0C00     		.2byte	0xc
 14803 15d0 77       		.byte	0x77
 14804 15d1 00       		.sleb128 0
 14805 15d2 47       		.byte	0x47
 14806 15d3 24       		.byte	0x24
 14807 15d4 47       		.byte	0x47
 14808 15d5 25       		.byte	0x25
 14809 15d6 76       		.byte	0x76
 14810 15d7 00       		.sleb128 0
 14811 15d8 22       		.byte	0x22
 14812 15d9 23       		.byte	0x23
 14813 15da 30       		.uleb128 0x30
 14814 15db 9F       		.byte	0x9f
 14815 15dc 5E000000 		.4byte	.LVL359
 14816 15e0 76000000 		.4byte	.LVL361
 14817 15e4 0C00     		.2byte	0xc
 14818 15e6 77       		.byte	0x77
 14819 15e7 7F       		.sleb128 -1
 14820 15e8 47       		.byte	0x47
 14821 15e9 24       		.byte	0x24
 14822 15ea 47       		.byte	0x47
 14823 15eb 25       		.byte	0x25
 14824 15ec 76       		.byte	0x76
 14825 15ed 00       		.sleb128 0
 14826 15ee 22       		.byte	0x22
 14827 15ef 23       		.byte	0x23
 14828 15f0 30       		.uleb128 0x30
 14829 15f1 9F       		.byte	0x9f
 14830 15f2 76000000 		.4byte	.LVL361
 14831 15f6 78000000 		.4byte	.LVL362
 14832 15fa 1300     		.2byte	0x13
 14833 15fc F3       		.byte	0xf3
 14834 15fd 01       		.uleb128 0x1
 14835 15fe 51       		.byte	0x51
 14836 15ff 31       		.byte	0x31
 14837 1600 25       		.byte	0x25
 14838 1601 F3       		.byte	0xf3
 14839 1602 01       		.uleb128 0x1
 14840 1603 51       		.byte	0x51
 14841 1604 22       		.byte	0x22
 14842 1605 47       		.byte	0x47
 14843 1606 24       		.byte	0x24
 14844 1607 47       		.byte	0x47
 14845 1608 25       		.byte	0x25
 14846 1609 76       		.byte	0x76
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 331


 14847 160a 00       		.sleb128 0
 14848 160b 22       		.byte	0x22
 14849 160c 23       		.byte	0x23
 14850 160d 30       		.uleb128 0x30
 14851 160e 9F       		.byte	0x9f
 14852 160f 78000000 		.4byte	.LVL362
 14853 1613 94000000 		.4byte	.LVL366
 14854 1617 0800     		.2byte	0x8
 14855 1619 76       		.byte	0x76
 14856 161a 00       		.sleb128 0
 14857 161b 77       		.byte	0x77
 14858 161c 00       		.sleb128 0
 14859 161d 22       		.byte	0x22
 14860 161e 23       		.byte	0x23
 14861 161f 30       		.uleb128 0x30
 14862 1620 9F       		.byte	0x9f
 14863 1621 94000000 		.4byte	.LVL366
 14864 1625 9A000000 		.4byte	.LVL367
 14865 1629 1500     		.2byte	0x15
 14866 162b F3       		.byte	0xf3
 14867 162c 01       		.uleb128 0x1
 14868 162d 51       		.byte	0x51
 14869 162e 31       		.byte	0x31
 14870 162f 25       		.byte	0x25
 14871 1630 F3       		.byte	0xf3
 14872 1631 01       		.uleb128 0x1
 14873 1632 51       		.byte	0x51
 14874 1633 22       		.byte	0x22
 14875 1634 23       		.byte	0x23
 14876 1635 01       		.uleb128 0x1
 14877 1636 47       		.byte	0x47
 14878 1637 24       		.byte	0x24
 14879 1638 47       		.byte	0x47
 14880 1639 25       		.byte	0x25
 14881 163a 76       		.byte	0x76
 14882 163b 00       		.sleb128 0
 14883 163c 22       		.byte	0x22
 14884 163d 23       		.byte	0x23
 14885 163e 30       		.uleb128 0x30
 14886 163f 9F       		.byte	0x9f
 14887 1640 B8000000 		.4byte	.LVL371
 14888 1644 C4000000 		.4byte	.LVL373
 14889 1648 0100     		.2byte	0x1
 14890 164a 53       		.byte	0x53
 14891 164b E2000000 		.4byte	.LVL377
 14892 164f FE000000 		.4byte	.LVL381
 14893 1653 0100     		.2byte	0x1
 14894 1655 53       		.byte	0x53
 14895 1656 00000000 		.4byte	0
 14896 165a 00000000 		.4byte	0
 14897              	.LLST86:
 14898 165e 30000000 		.4byte	.LVL350
 14899 1662 4C000000 		.4byte	.LVL355
 14900 1666 0100     		.2byte	0x1
 14901 1668 50       		.byte	0x50
 14902 1669 4C000000 		.4byte	.LVL355
 14903 166d 54000000 		.4byte	.LVL356
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 332


 14904 1671 0300     		.2byte	0x3
 14905 1673 70       		.byte	0x70
 14906 1674 71       		.sleb128 -15
 14907 1675 9F       		.byte	0x9f
 14908 1676 54000000 		.4byte	.LVL356
 14909 167a 56000000 		.4byte	.LVL357
 14910 167e 0100     		.2byte	0x1
 14911 1680 50       		.byte	0x50
 14912 1681 70000000 		.4byte	.LVL360
 14913 1685 9A000000 		.4byte	.LVL367
 14914 1689 0100     		.2byte	0x1
 14915 168b 50       		.byte	0x50
 14916 168c A6000000 		.4byte	.LVL369
 14917 1690 C4000000 		.4byte	.LVL373
 14918 1694 0100     		.2byte	0x1
 14919 1696 50       		.byte	0x50
 14920 1697 D0000000 		.4byte	.LVL375
 14921 169b FE000000 		.4byte	.LVL381
 14922 169f 0100     		.2byte	0x1
 14923 16a1 50       		.byte	0x50
 14924 16a2 00010000 		.4byte	.LVL382
 14925 16a6 06010000 		.4byte	.LVL383
 14926 16aa 0100     		.2byte	0x1
 14927 16ac 50       		.byte	0x50
 14928 16ad 0C010000 		.4byte	.LVL386
 14929 16b1 0E010000 		.4byte	.LFE13
 14930 16b5 0100     		.2byte	0x1
 14931 16b7 50       		.byte	0x50
 14932 16b8 00000000 		.4byte	0
 14933 16bc 00000000 		.4byte	0
 14934              	.LLST87:
 14935 16c0 00000000 		.4byte	.LVL388
 14936 16c4 19000000 		.4byte	.LVL391-1
 14937 16c8 0100     		.2byte	0x1
 14938 16ca 50       		.byte	0x50
 14939 16cb 19000000 		.4byte	.LVL391-1
 14940 16cf 28000000 		.4byte	.LVL392
 14941 16d3 0100     		.2byte	0x1
 14942 16d5 55       		.byte	0x55
 14943 16d6 28000000 		.4byte	.LVL392
 14944 16da 2E000000 		.4byte	.LVL395
 14945 16de 0100     		.2byte	0x1
 14946 16e0 50       		.byte	0x50
 14947 16e1 2E000000 		.4byte	.LVL395
 14948 16e5 A4000000 		.4byte	.LVL414
 14949 16e9 0100     		.2byte	0x1
 14950 16eb 55       		.byte	0x55
 14951 16ec A4000000 		.4byte	.LVL414
 14952 16f0 AC000000 		.4byte	.LFE15
 14953 16f4 0400     		.2byte	0x4
 14954 16f6 F3       		.byte	0xf3
 14955 16f7 01       		.uleb128 0x1
 14956 16f8 50       		.byte	0x50
 14957 16f9 9F       		.byte	0x9f
 14958 16fa 00000000 		.4byte	0
 14959 16fe 00000000 		.4byte	0
 14960              	.LLST88:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 333


 14961 1702 00000000 		.4byte	.LVL388
 14962 1706 19000000 		.4byte	.LVL391-1
 14963 170a 0100     		.2byte	0x1
 14964 170c 51       		.byte	0x51
 14965 170d 19000000 		.4byte	.LVL391-1
 14966 1711 28000000 		.4byte	.LVL392
 14967 1715 0100     		.2byte	0x1
 14968 1717 57       		.byte	0x57
 14969 1718 28000000 		.4byte	.LVL392
 14970 171c 2E000000 		.4byte	.LVL395
 14971 1720 0100     		.2byte	0x1
 14972 1722 51       		.byte	0x51
 14973 1723 2E000000 		.4byte	.LVL395
 14974 1727 A4000000 		.4byte	.LVL415
 14975 172b 0100     		.2byte	0x1
 14976 172d 57       		.byte	0x57
 14977 172e A4000000 		.4byte	.LVL415
 14978 1732 AC000000 		.4byte	.LFE15
 14979 1736 0400     		.2byte	0x4
 14980 1738 F3       		.byte	0xf3
 14981 1739 01       		.uleb128 0x1
 14982 173a 51       		.byte	0x51
 14983 173b 9F       		.byte	0x9f
 14984 173c 00000000 		.4byte	0
 14985 1740 00000000 		.4byte	0
 14986              	.LLST89:
 14987 1744 1A000000 		.4byte	.LVL391
 14988 1748 28000000 		.4byte	.LVL392
 14989 174c 0100     		.2byte	0x1
 14990 174e 50       		.byte	0x50
 14991 174f 46000000 		.4byte	.LVL400
 14992 1753 5A000000 		.4byte	.LVL401
 14993 1757 0100     		.2byte	0x1
 14994 1759 50       		.byte	0x50
 14995 175a 9A000000 		.4byte	.LVL409
 14996 175e 9C000000 		.4byte	.LVL410
 14997 1762 0100     		.2byte	0x1
 14998 1764 50       		.byte	0x50
 14999 1765 A2000000 		.4byte	.LVL412
 15000 1769 A4000000 		.4byte	.LVL413
 15001 176d 0100     		.2byte	0x1
 15002 176f 50       		.byte	0x50
 15003 1770 00000000 		.4byte	0
 15004 1774 00000000 		.4byte	0
 15005              	.LLST90:
 15006 1778 2E000000 		.4byte	.LVL395
 15007 177c 30000000 		.4byte	.LVL396
 15008 1780 0100     		.2byte	0x1
 15009 1782 56       		.byte	0x56
 15010 1783 30000000 		.4byte	.LVL396
 15011 1787 38000000 		.4byte	.LVL398
 15012 178b 0100     		.2byte	0x1
 15013 178d 54       		.byte	0x54
 15014 178e 38000000 		.4byte	.LVL398
 15015 1792 3E000000 		.4byte	.LVL399
 15016 1796 0200     		.2byte	0x2
 15017 1798 32       		.byte	0x32
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 334


 15018 1799 9F       		.byte	0x9f
 15019 179a 3E000000 		.4byte	.LVL399
 15020 179e 90000000 		.4byte	.LVL405
 15021 17a2 0100     		.2byte	0x1
 15022 17a4 54       		.byte	0x54
 15023 17a5 94000000 		.4byte	.LVL406
 15024 17a9 9A000000 		.4byte	.LVL409
 15025 17ad 0100     		.2byte	0x1
 15026 17af 54       		.byte	0x54
 15027 17b0 9E000000 		.4byte	.LVL411
 15028 17b4 A2000000 		.4byte	.LVL412
 15029 17b8 0200     		.2byte	0x2
 15030 17ba 32       		.byte	0x32
 15031 17bb 9F       		.byte	0x9f
 15032 17bc A2000000 		.4byte	.LVL412
 15033 17c0 A4000000 		.4byte	.LVL413
 15034 17c4 0100     		.2byte	0x1
 15035 17c6 54       		.byte	0x54
 15036 17c7 00000000 		.4byte	0
 15037 17cb 00000000 		.4byte	0
 15038              	.LLST91:
 15039 17cf 0A000000 		.4byte	.LVL389
 15040 17d3 16000000 		.4byte	.LVL390
 15041 17d7 0100     		.2byte	0x1
 15042 17d9 56       		.byte	0x56
 15043 17da 28000000 		.4byte	.LVL392
 15044 17de 2A000000 		.4byte	.LVL393
 15045 17e2 0100     		.2byte	0x1
 15046 17e4 56       		.byte	0x56
 15047 17e5 2A000000 		.4byte	.LVL393
 15048 17e9 2C000000 		.4byte	.LVL394
 15049 17ed 0200     		.2byte	0x2
 15050 17ef 70       		.byte	0x70
 15051 17f0 0C       		.sleb128 12
 15052 17f1 2C000000 		.4byte	.LVL394
 15053 17f5 9A000000 		.4byte	.LVL409
 15054 17f9 0100     		.2byte	0x1
 15055 17fb 56       		.byte	0x56
 15056 17fc 9E000000 		.4byte	.LVL411
 15057 1800 A4000000 		.4byte	.LVL413
 15058 1804 0100     		.2byte	0x1
 15059 1806 56       		.byte	0x56
 15060 1807 00000000 		.4byte	0
 15061 180b 00000000 		.4byte	0
 15062              	.LLST92:
 15063 180f 62000000 		.4byte	.LVL402
 15064 1813 6C000000 		.4byte	.LVL403
 15065 1817 0100     		.2byte	0x1
 15066 1819 50       		.byte	0x50
 15067 181a 74000000 		.4byte	.LVL404
 15068 181e 98000000 		.4byte	.LVL408
 15069 1822 0100     		.2byte	0x1
 15070 1824 50       		.byte	0x50
 15071 1825 00000000 		.4byte	0
 15072 1829 00000000 		.4byte	0
 15073              	.LLST93:
 15074 182d 00000000 		.4byte	.LVL416
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 335


 15075 1831 38000000 		.4byte	.LVL419
 15076 1835 0100     		.2byte	0x1
 15077 1837 50       		.byte	0x50
 15078 1838 38000000 		.4byte	.LVL419
 15079 183c E4000000 		.4byte	.LVL438
 15080 1840 0100     		.2byte	0x1
 15081 1842 55       		.byte	0x55
 15082 1843 E4000000 		.4byte	.LVL438
 15083 1847 E6000000 		.4byte	.LVL439
 15084 184b 0100     		.2byte	0x1
 15085 184d 50       		.byte	0x50
 15086 184e E6000000 		.4byte	.LVL439
 15087 1852 E8000000 		.4byte	.LVL440
 15088 1856 0400     		.2byte	0x4
 15089 1858 F3       		.byte	0xf3
 15090 1859 01       		.uleb128 0x1
 15091 185a 50       		.byte	0x50
 15092 185b 9F       		.byte	0x9f
 15093 185c E8000000 		.4byte	.LVL440
 15094 1860 EA000000 		.4byte	.LVL441
 15095 1864 0100     		.2byte	0x1
 15096 1866 50       		.byte	0x50
 15097 1867 EA000000 		.4byte	.LVL441
 15098 186b EC000000 		.4byte	.LVL442
 15099 186f 0400     		.2byte	0x4
 15100 1871 F3       		.byte	0xf3
 15101 1872 01       		.uleb128 0x1
 15102 1873 50       		.byte	0x50
 15103 1874 9F       		.byte	0x9f
 15104 1875 EC000000 		.4byte	.LVL442
 15105 1879 EE000000 		.4byte	.LVL443
 15106 187d 0100     		.2byte	0x1
 15107 187f 50       		.byte	0x50
 15108 1880 EE000000 		.4byte	.LVL443
 15109 1884 0E010000 		.4byte	.LVL455
 15110 1888 0100     		.2byte	0x1
 15111 188a 55       		.byte	0x55
 15112 188b 0E010000 		.4byte	.LVL455
 15113 188f 14010000 		.4byte	.LFE17
 15114 1893 0400     		.2byte	0x4
 15115 1895 F3       		.byte	0xf3
 15116 1896 01       		.uleb128 0x1
 15117 1897 50       		.byte	0x50
 15118 1898 9F       		.byte	0x9f
 15119 1899 00000000 		.4byte	0
 15120 189d 00000000 		.4byte	0
 15121              	.LLST94:
 15122 18a1 00000000 		.4byte	.LVL416
 15123 18a5 26000000 		.4byte	.LVL418
 15124 18a9 0100     		.2byte	0x1
 15125 18ab 51       		.byte	0x51
 15126 18ac 26000000 		.4byte	.LVL418
 15127 18b0 8C000000 		.4byte	.LVL428
 15128 18b4 0100     		.2byte	0x1
 15129 18b6 56       		.byte	0x56
 15130 18b7 8C000000 		.4byte	.LVL428
 15131 18bb E4000000 		.4byte	.LVL438
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 336


 15132 18bf 0400     		.2byte	0x4
 15133 18c1 F3       		.byte	0xf3
 15134 18c2 01       		.uleb128 0x1
 15135 18c3 51       		.byte	0x51
 15136 18c4 9F       		.byte	0x9f
 15137 18c5 E4000000 		.4byte	.LVL438
 15138 18c9 EC000000 		.4byte	.LVL442
 15139 18cd 0100     		.2byte	0x1
 15140 18cf 51       		.byte	0x51
 15141 18d0 EC000000 		.4byte	.LVL442
 15142 18d4 0C010000 		.4byte	.LVL454
 15143 18d8 0100     		.2byte	0x1
 15144 18da 56       		.byte	0x56
 15145 18db 0C010000 		.4byte	.LVL454
 15146 18df 14010000 		.4byte	.LFE17
 15147 18e3 0400     		.2byte	0x4
 15148 18e5 F3       		.byte	0xf3
 15149 18e6 01       		.uleb128 0x1
 15150 18e7 51       		.byte	0x51
 15151 18e8 9F       		.byte	0x9f
 15152 18e9 00000000 		.4byte	0
 15153 18ed 00000000 		.4byte	0
 15154              	.LLST95:
 15155 18f1 46000000 		.4byte	.LVL421
 15156 18f5 52000000 		.4byte	.LVL422
 15157 18f9 0100     		.2byte	0x1
 15158 18fb 50       		.byte	0x50
 15159 18fc 52000000 		.4byte	.LVL422
 15160 1900 64000000 		.4byte	.LVL424
 15161 1904 0100     		.2byte	0x1
 15162 1906 58       		.byte	0x58
 15163 1907 64000000 		.4byte	.LVL424
 15164 190b 72000000 		.4byte	.LVL425
 15165 190f 0100     		.2byte	0x1
 15166 1911 50       		.byte	0x50
 15167 1912 72000000 		.4byte	.LVL425
 15168 1916 D2000000 		.4byte	.LVL437
 15169 191a 0100     		.2byte	0x1
 15170 191c 58       		.byte	0x58
 15171 191d F0000000 		.4byte	.LVL444
 15172 1921 F2000000 		.4byte	.LVL445
 15173 1925 0100     		.2byte	0x1
 15174 1927 50       		.byte	0x50
 15175 1928 F2000000 		.4byte	.LVL445
 15176 192c F4000000 		.4byte	.LVL446
 15177 1930 0100     		.2byte	0x1
 15178 1932 53       		.byte	0x53
 15179 1933 F4000000 		.4byte	.LVL446
 15180 1937 F6000000 		.4byte	.LVL447
 15181 193b 0100     		.2byte	0x1
 15182 193d 50       		.byte	0x50
 15183 193e F6000000 		.4byte	.LVL447
 15184 1942 FC000000 		.4byte	.LVL448
 15185 1946 0100     		.2byte	0x1
 15186 1948 58       		.byte	0x58
 15187 1949 FC000000 		.4byte	.LVL448
 15188 194d FE000000 		.4byte	.LVL449
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 337


 15189 1951 0100     		.2byte	0x1
 15190 1953 50       		.byte	0x50
 15191 1954 FE000000 		.4byte	.LVL449
 15192 1958 00010000 		.4byte	.LVL450
 15193 195c 0100     		.2byte	0x1
 15194 195e 53       		.byte	0x53
 15195 195f 00010000 		.4byte	.LVL450
 15196 1963 02010000 		.4byte	.LVL451
 15197 1967 0100     		.2byte	0x1
 15198 1969 50       		.byte	0x50
 15199 196a 02010000 		.4byte	.LVL451
 15200 196e 04010000 		.4byte	.LVL452
 15201 1972 0100     		.2byte	0x1
 15202 1974 53       		.byte	0x53
 15203 1975 04010000 		.4byte	.LVL452
 15204 1979 06010000 		.4byte	.LVL453
 15205 197d 0100     		.2byte	0x1
 15206 197f 50       		.byte	0x50
 15207 1980 06010000 		.4byte	.LVL453
 15208 1984 0E010000 		.4byte	.LVL455
 15209 1988 0100     		.2byte	0x1
 15210 198a 58       		.byte	0x58
 15211 198b 00000000 		.4byte	0
 15212 198f 00000000 		.4byte	0
 15213              	.LLST96:
 15214 1993 0C000000 		.4byte	.LVL417
 15215 1997 0E010000 		.4byte	.LVL456
 15216 199b 0100     		.2byte	0x1
 15217 199d 54       		.byte	0x54
 15218 199e 00000000 		.4byte	0
 15219 19a2 00000000 		.4byte	0
 15220              	.LLST97:
 15221 19a6 96000000 		.4byte	.LVL430
 15222 19aa 9A000000 		.4byte	.LVL431
 15223 19ae 0200     		.2byte	0x2
 15224 19b0 30       		.byte	0x30
 15225 19b1 9F       		.byte	0x9f
 15226 19b2 9A000000 		.4byte	.LVL431
 15227 19b6 B4000000 		.4byte	.LVL433
 15228 19ba 0100     		.2byte	0x1
 15229 19bc 56       		.byte	0x56
 15230 19bd B6000000 		.4byte	.LVL434
 15231 19c1 C2000000 		.4byte	.LVL435
 15232 19c5 0100     		.2byte	0x1
 15233 19c7 56       		.byte	0x56
 15234 19c8 0C010000 		.4byte	.LVL454
 15235 19cc 0E010000 		.4byte	.LVL455
 15236 19d0 0100     		.2byte	0x1
 15237 19d2 56       		.byte	0x56
 15238 19d3 00000000 		.4byte	0
 15239 19d7 00000000 		.4byte	0
 15240              	.LLST98:
 15241 19db 00000000 		.4byte	.LVL457
 15242 19df 09000000 		.4byte	.LVL458-1
 15243 19e3 0100     		.2byte	0x1
 15244 19e5 50       		.byte	0x50
 15245 19e6 09000000 		.4byte	.LVL458-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 338


 15246 19ea 46000000 		.4byte	.LVL471
 15247 19ee 0100     		.2byte	0x1
 15248 19f0 55       		.byte	0x55
 15249 19f1 46000000 		.4byte	.LVL471
 15250 19f5 48000000 		.4byte	.LFE18
 15251 19f9 0400     		.2byte	0x4
 15252 19fb F3       		.byte	0xf3
 15253 19fc 01       		.uleb128 0x1
 15254 19fd 50       		.byte	0x50
 15255 19fe 9F       		.byte	0x9f
 15256 19ff 00000000 		.4byte	0
 15257 1a03 00000000 		.4byte	0
 15258              	.LLST99:
 15259 1a07 0A000000 		.4byte	.LVL458
 15260 1a0b 0E000000 		.4byte	.LVL459
 15261 1a0f 0100     		.2byte	0x1
 15262 1a11 50       		.byte	0x50
 15263 1a12 18000000 		.4byte	.LVL461
 15264 1a16 1C000000 		.4byte	.LVL462
 15265 1a1a 0100     		.2byte	0x1
 15266 1a1c 50       		.byte	0x50
 15267 1a1d 1C000000 		.4byte	.LVL462
 15268 1a21 3E000000 		.4byte	.LVL467
 15269 1a25 0100     		.2byte	0x1
 15270 1a27 54       		.byte	0x54
 15271 1a28 3E000000 		.4byte	.LVL467
 15272 1a2c 42000000 		.4byte	.LVL468
 15273 1a30 0100     		.2byte	0x1
 15274 1a32 50       		.byte	0x50
 15275 1a33 42000000 		.4byte	.LVL468
 15276 1a37 46000000 		.4byte	.LVL470
 15277 1a3b 0100     		.2byte	0x1
 15278 1a3d 54       		.byte	0x54
 15279 1a3e 00000000 		.4byte	0
 15280 1a42 00000000 		.4byte	0
 15281              	.LLST100:
 15282 1a46 1E000000 		.4byte	.LVL463
 15283 1a4a 24000000 		.4byte	.LVL464
 15284 1a4e 0100     		.2byte	0x1
 15285 1a50 53       		.byte	0x53
 15286 1a51 24000000 		.4byte	.LVL464
 15287 1a55 2F000000 		.4byte	.LVL465-1
 15288 1a59 0200     		.2byte	0x2
 15289 1a5b 70       		.byte	0x70
 15290 1a5c 00       		.sleb128 0
 15291 1a5d 42000000 		.4byte	.LVL468
 15292 1a61 44000000 		.4byte	.LVL469
 15293 1a65 0100     		.2byte	0x1
 15294 1a67 53       		.byte	0x53
 15295 1a68 00000000 		.4byte	0
 15296 1a6c 00000000 		.4byte	0
 15297              	.LLST101:
 15298 1a70 1C000000 		.4byte	.LVL462
 15299 1a74 2F000000 		.4byte	.LVL465-1
 15300 1a78 0100     		.2byte	0x1
 15301 1a7a 50       		.byte	0x50
 15302 1a7b 42000000 		.4byte	.LVL468
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 339


 15303 1a7f 44000000 		.4byte	.LVL469
 15304 1a83 0100     		.2byte	0x1
 15305 1a85 50       		.byte	0x50
 15306 1a86 00000000 		.4byte	0
 15307 1a8a 00000000 		.4byte	0
 15308              	.LLST102:
 15309 1a8e 00000000 		.4byte	.LVL472
 15310 1a92 24000000 		.4byte	.LVL475
 15311 1a96 0100     		.2byte	0x1
 15312 1a98 50       		.byte	0x50
 15313 1a99 24000000 		.4byte	.LVL475
 15314 1a9d 82000000 		.4byte	.LVL493
 15315 1aa1 0100     		.2byte	0x1
 15316 1aa3 54       		.byte	0x54
 15317 1aa4 82000000 		.4byte	.LVL493
 15318 1aa8 84000000 		.4byte	.LFE24
 15319 1aac 0400     		.2byte	0x4
 15320 1aae F3       		.byte	0xf3
 15321 1aaf 01       		.uleb128 0x1
 15322 1ab0 50       		.byte	0x50
 15323 1ab1 9F       		.byte	0x9f
 15324 1ab2 00000000 		.4byte	0
 15325 1ab6 00000000 		.4byte	0
 15326              	.LLST103:
 15327 1aba 00000000 		.4byte	.LVL472
 15328 1abe 14000000 		.4byte	.LVL473
 15329 1ac2 0100     		.2byte	0x1
 15330 1ac4 51       		.byte	0x51
 15331 1ac5 14000000 		.4byte	.LVL473
 15332 1ac9 16000000 		.4byte	.LVL474
 15333 1acd 0200     		.2byte	0x2
 15334 1acf 91       		.byte	0x91
 15335 1ad0 74       		.sleb128 -12
 15336 1ad1 16000000 		.4byte	.LVL474
 15337 1ad5 84000000 		.4byte	.LFE24
 15338 1ad9 0400     		.2byte	0x4
 15339 1adb F3       		.byte	0xf3
 15340 1adc 01       		.uleb128 0x1
 15341 1add 51       		.byte	0x51
 15342 1ade 9F       		.byte	0x9f
 15343 1adf 00000000 		.4byte	0
 15344 1ae3 00000000 		.4byte	0
 15345              	.LLST104:
 15346 1ae7 2A000000 		.4byte	.LVL476
 15347 1aeb 30000000 		.4byte	.LVL477
 15348 1aef 0100     		.2byte	0x1
 15349 1af1 50       		.byte	0x50
 15350 1af2 38000000 		.4byte	.LVL478
 15351 1af6 3E000000 		.4byte	.LVL479
 15352 1afa 0100     		.2byte	0x1
 15353 1afc 50       		.byte	0x50
 15354 1afd 42000000 		.4byte	.LVL480
 15355 1b01 6C000000 		.4byte	.LVL486
 15356 1b05 0100     		.2byte	0x1
 15357 1b07 50       		.byte	0x50
 15358 1b08 7A000000 		.4byte	.LVL489
 15359 1b0c 7C000000 		.4byte	.LVL490
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 340


 15360 1b10 0100     		.2byte	0x1
 15361 1b12 50       		.byte	0x50
 15362 1b13 7E000000 		.4byte	.LVL491
 15363 1b17 84000000 		.4byte	.LFE24
 15364 1b1b 0100     		.2byte	0x1
 15365 1b1d 50       		.byte	0x50
 15366 1b1e 00000000 		.4byte	0
 15367 1b22 00000000 		.4byte	0
 15368              	.LLST105:
 15369 1b26 5A000000 		.4byte	.LVL485
 15370 1b2a 72000000 		.4byte	.LVL487
 15371 1b2e 0100     		.2byte	0x1
 15372 1b30 53       		.byte	0x53
 15373 1b31 72000000 		.4byte	.LVL487
 15374 1b35 7A000000 		.4byte	.LVL489
 15375 1b39 0200     		.2byte	0x2
 15376 1b3b 74       		.byte	0x74
 15377 1b3c 14       		.sleb128 20
 15378 1b3d 7E000000 		.4byte	.LVL491
 15379 1b41 80000000 		.4byte	.LVL492
 15380 1b45 0100     		.2byte	0x1
 15381 1b47 53       		.byte	0x53
 15382 1b48 00000000 		.4byte	0
 15383 1b4c 00000000 		.4byte	0
 15384              	.LLST106:
 15385 1b50 46000000 		.4byte	.LVL481
 15386 1b54 52000000 		.4byte	.LVL482
 15387 1b58 0100     		.2byte	0x1
 15388 1b5a 53       		.byte	0x53
 15389 1b5b 52000000 		.4byte	.LVL482
 15390 1b5f 54000000 		.4byte	.LVL483
 15391 1b63 0500     		.2byte	0x5
 15392 1b65 74       		.byte	0x74
 15393 1b66 18       		.sleb128 24
 15394 1b67 06       		.byte	0x6
 15395 1b68 23       		.byte	0x23
 15396 1b69 0B       		.uleb128 0xb
 15397 1b6a 54000000 		.4byte	.LVL483
 15398 1b6e 58000000 		.4byte	.LVL484
 15399 1b72 0100     		.2byte	0x1
 15400 1b74 53       		.byte	0x53
 15401 1b75 58000000 		.4byte	.LVL484
 15402 1b79 78000000 		.4byte	.LVL488
 15403 1b7d 0500     		.2byte	0x5
 15404 1b7f 74       		.byte	0x74
 15405 1b80 18       		.sleb128 24
 15406 1b81 06       		.byte	0x6
 15407 1b82 23       		.byte	0x23
 15408 1b83 0B       		.uleb128 0xb
 15409 1b84 7A000000 		.4byte	.LVL489
 15410 1b88 80000000 		.4byte	.LVL492
 15411 1b8c 0500     		.2byte	0x5
 15412 1b8e 74       		.byte	0x74
 15413 1b8f 18       		.sleb128 24
 15414 1b90 06       		.byte	0x6
 15415 1b91 23       		.byte	0x23
 15416 1b92 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 341


 15417 1b93 00000000 		.4byte	0
 15418 1b97 00000000 		.4byte	0
 15419              	.LLST107:
 15420 1b9b 00000000 		.4byte	.LVL494
 15421 1b9f 09000000 		.4byte	.LVL495-1
 15422 1ba3 0100     		.2byte	0x1
 15423 1ba5 50       		.byte	0x50
 15424 1ba6 09000000 		.4byte	.LVL495-1
 15425 1baa 60000000 		.4byte	.LVL513
 15426 1bae 0100     		.2byte	0x1
 15427 1bb0 55       		.byte	0x55
 15428 1bb1 60000000 		.4byte	.LVL513
 15429 1bb5 62000000 		.4byte	.LFE20
 15430 1bb9 0400     		.2byte	0x4
 15431 1bbb F3       		.byte	0xf3
 15432 1bbc 01       		.uleb128 0x1
 15433 1bbd 50       		.byte	0x50
 15434 1bbe 9F       		.byte	0x9f
 15435 1bbf 00000000 		.4byte	0
 15436 1bc3 00000000 		.4byte	0
 15437              	.LLST108:
 15438 1bc7 0C000000 		.4byte	.LVL496
 15439 1bcb 0E000000 		.4byte	.LVL497
 15440 1bcf 0100     		.2byte	0x1
 15441 1bd1 50       		.byte	0x50
 15442 1bd2 18000000 		.4byte	.LVL499
 15443 1bd6 28000000 		.4byte	.LVL501
 15444 1bda 0100     		.2byte	0x1
 15445 1bdc 50       		.byte	0x50
 15446 1bdd 28000000 		.4byte	.LVL501
 15447 1be1 30000000 		.4byte	.LVL503
 15448 1be5 0100     		.2byte	0x1
 15449 1be7 54       		.byte	0x54
 15450 1be8 30000000 		.4byte	.LVL503
 15451 1bec 32000000 		.4byte	.LVL504
 15452 1bf0 0100     		.2byte	0x1
 15453 1bf2 50       		.byte	0x50
 15454 1bf3 32000000 		.4byte	.LVL504
 15455 1bf7 40000000 		.4byte	.LVL506
 15456 1bfb 0100     		.2byte	0x1
 15457 1bfd 54       		.byte	0x54
 15458 1bfe 40000000 		.4byte	.LVL506
 15459 1c02 46000000 		.4byte	.LVL508
 15460 1c06 0100     		.2byte	0x1
 15461 1c08 50       		.byte	0x50
 15462 1c09 46000000 		.4byte	.LVL508
 15463 1c0d 60000000 		.4byte	.LVL512
 15464 1c11 0100     		.2byte	0x1
 15465 1c13 54       		.byte	0x54
 15466 1c14 00000000 		.4byte	0
 15467 1c18 00000000 		.4byte	0
 15468              	.LLST109:
 15469 1c1c 1E000000 		.4byte	.LVL500
 15470 1c20 2D000000 		.4byte	.LVL502-1
 15471 1c24 0100     		.2byte	0x1
 15472 1c26 53       		.byte	0x53
 15473 1c27 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 342


 15474 1c2b 00000000 		.4byte	0
 15475              	.LLST110:
 15476 1c2f 44000000 		.4byte	.LVL507
 15477 1c33 5E000000 		.4byte	.LVL511
 15478 1c37 0100     		.2byte	0x1
 15479 1c39 56       		.byte	0x56
 15480 1c3a 00000000 		.4byte	0
 15481 1c3e 00000000 		.4byte	0
 15482              	.LLST111:
 15483 1c42 00000000 		.4byte	.LVL514
 15484 1c46 06000000 		.4byte	.LVL516
 15485 1c4a 0100     		.2byte	0x1
 15486 1c4c 50       		.byte	0x50
 15487 1c4d 06000000 		.4byte	.LVL516
 15488 1c51 46000000 		.4byte	.LVL528
 15489 1c55 0100     		.2byte	0x1
 15490 1c57 54       		.byte	0x54
 15491 1c58 46000000 		.4byte	.LVL528
 15492 1c5c 48000000 		.4byte	.LFE19
 15493 1c60 0400     		.2byte	0x4
 15494 1c62 F3       		.byte	0xf3
 15495 1c63 01       		.uleb128 0x1
 15496 1c64 50       		.byte	0x50
 15497 1c65 9F       		.byte	0x9f
 15498 1c66 00000000 		.4byte	0
 15499 1c6a 00000000 		.4byte	0
 15500              	.LLST112:
 15501 1c6e 04000000 		.4byte	.LVL515
 15502 1c72 08000000 		.4byte	.LVL517
 15503 1c76 0200     		.2byte	0x2
 15504 1c78 34       		.byte	0x34
 15505 1c79 9F       		.byte	0x9f
 15506 1c7a 08000000 		.4byte	.LVL517
 15507 1c7e 0A000000 		.4byte	.LVL518
 15508 1c82 0100     		.2byte	0x1
 15509 1c84 50       		.byte	0x50
 15510 1c85 0E000000 		.4byte	.LVL519
 15511 1c89 2A000000 		.4byte	.LVL523
 15512 1c8d 0100     		.2byte	0x1
 15513 1c8f 50       		.byte	0x50
 15514 1c90 30000000 		.4byte	.LVL524
 15515 1c94 48000000 		.4byte	.LFE19
 15516 1c98 0100     		.2byte	0x1
 15517 1c9a 50       		.byte	0x50
 15518 1c9b 00000000 		.4byte	0
 15519 1c9f 00000000 		.4byte	0
 15520              	.LLST113:
 15521 1ca3 16000000 		.4byte	.LVL521
 15522 1ca7 24000000 		.4byte	.LVL522
 15523 1cab 0100     		.2byte	0x1
 15524 1cad 53       		.byte	0x53
 15525 1cae 24000000 		.4byte	.LVL522
 15526 1cb2 2F000000 		.4byte	.LVL524-1
 15527 1cb6 0200     		.2byte	0x2
 15528 1cb8 72       		.byte	0x72
 15529 1cb9 00       		.sleb128 0
 15530 1cba 3C000000 		.4byte	.LVL526
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 343


 15531 1cbe 3E000000 		.4byte	.LVL527
 15532 1cc2 0100     		.2byte	0x1
 15533 1cc4 53       		.byte	0x53
 15534 1cc5 00000000 		.4byte	0
 15535 1cc9 00000000 		.4byte	0
 15536              	.LLST114:
 15537 1ccd 14000000 		.4byte	.LVL520
 15538 1cd1 2F000000 		.4byte	.LVL524-1
 15539 1cd5 0100     		.2byte	0x1
 15540 1cd7 52       		.byte	0x52
 15541 1cd8 3C000000 		.4byte	.LVL526
 15542 1cdc 3E000000 		.4byte	.LVL527
 15543 1ce0 0100     		.2byte	0x1
 15544 1ce2 52       		.byte	0x52
 15545 1ce3 00000000 		.4byte	0
 15546 1ce7 00000000 		.4byte	0
 15547              	.LLST115:
 15548 1ceb 00000000 		.4byte	.LVL529
 15549 1cef 14000000 		.4byte	.LVL530
 15550 1cf3 0100     		.2byte	0x1
 15551 1cf5 50       		.byte	0x50
 15552 1cf6 14000000 		.4byte	.LVL530
 15553 1cfa 4E000000 		.4byte	.LVL538
 15554 1cfe 0100     		.2byte	0x1
 15555 1d00 54       		.byte	0x54
 15556 1d01 4E000000 		.4byte	.LVL538
 15557 1d05 56000000 		.4byte	.LVL539
 15558 1d09 0100     		.2byte	0x1
 15559 1d0b 50       		.byte	0x50
 15560 1d0c 56000000 		.4byte	.LVL539
 15561 1d10 5E000000 		.4byte	.LVL543
 15562 1d14 0100     		.2byte	0x1
 15563 1d16 54       		.byte	0x54
 15564 1d17 5E000000 		.4byte	.LVL543
 15565 1d1b 60000000 		.4byte	.LFE14
 15566 1d1f 0400     		.2byte	0x4
 15567 1d21 F3       		.byte	0xf3
 15568 1d22 01       		.uleb128 0x1
 15569 1d23 50       		.byte	0x50
 15570 1d24 9F       		.byte	0x9f
 15571 1d25 00000000 		.4byte	0
 15572 1d29 00000000 		.4byte	0
 15573              	.LLST116:
 15574 1d2d 00000000 		.4byte	.LVL529
 15575 1d31 14000000 		.4byte	.LVL530
 15576 1d35 0100     		.2byte	0x1
 15577 1d37 51       		.byte	0x51
 15578 1d38 14000000 		.4byte	.LVL530
 15579 1d3c 44000000 		.4byte	.LVL536
 15580 1d40 0100     		.2byte	0x1
 15581 1d42 55       		.byte	0x55
 15582 1d43 44000000 		.4byte	.LVL536
 15583 1d47 46000000 		.4byte	.LVL537
 15584 1d4b 0100     		.2byte	0x1
 15585 1d4d 56       		.byte	0x56
 15586 1d4e 46000000 		.4byte	.LVL537
 15587 1d52 4E000000 		.4byte	.LVL538
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 344


 15588 1d56 0100     		.2byte	0x1
 15589 1d58 55       		.byte	0x55
 15590 1d59 4E000000 		.4byte	.LVL538
 15591 1d5d 56000000 		.4byte	.LVL539
 15592 1d61 0100     		.2byte	0x1
 15593 1d63 51       		.byte	0x51
 15594 1d64 56000000 		.4byte	.LVL539
 15595 1d68 5E000000 		.4byte	.LVL544
 15596 1d6c 0100     		.2byte	0x1
 15597 1d6e 55       		.byte	0x55
 15598 1d6f 00000000 		.4byte	0
 15599 1d73 00000000 		.4byte	0
 15600              	.LLST117:
 15601 1d77 14000000 		.4byte	.LVL530
 15602 1d7b 34000000 		.4byte	.LVL535
 15603 1d7f 0100     		.2byte	0x1
 15604 1d81 57       		.byte	0x57
 15605 1d82 34000000 		.4byte	.LVL535
 15606 1d86 46000000 		.4byte	.LVL537
 15607 1d8a 0100     		.2byte	0x1
 15608 1d8c 50       		.byte	0x50
 15609 1d8d 46000000 		.4byte	.LVL537
 15610 1d91 4E000000 		.4byte	.LVL538
 15611 1d95 0100     		.2byte	0x1
 15612 1d97 57       		.byte	0x57
 15613 1d98 56000000 		.4byte	.LVL539
 15614 1d9c 58000000 		.4byte	.LVL540
 15615 1da0 0100     		.2byte	0x1
 15616 1da2 57       		.byte	0x57
 15617 1da3 5A000000 		.4byte	.LVL541
 15618 1da7 5E000000 		.4byte	.LVL545
 15619 1dab 0100     		.2byte	0x1
 15620 1dad 57       		.byte	0x57
 15621 1dae 00000000 		.4byte	0
 15622 1db2 00000000 		.4byte	0
 15623              	.LLST118:
 15624 1db6 1E000000 		.4byte	.LVL532
 15625 1dba 2A000000 		.4byte	.LVL533
 15626 1dbe 0100     		.2byte	0x1
 15627 1dc0 50       		.byte	0x50
 15628 1dc1 2A000000 		.4byte	.LVL533
 15629 1dc5 46000000 		.4byte	.LVL537
 15630 1dc9 0100     		.2byte	0x1
 15631 1dcb 56       		.byte	0x56
 15632 1dcc 56000000 		.4byte	.LVL539
 15633 1dd0 5C000000 		.4byte	.LVL542
 15634 1dd4 0100     		.2byte	0x1
 15635 1dd6 50       		.byte	0x50
 15636 1dd7 00000000 		.4byte	0
 15637 1ddb 00000000 		.4byte	0
 15638              	.LLST119:
 15639 1ddf 00000000 		.4byte	.LVL546
 15640 1de3 18000000 		.4byte	.LVL548
 15641 1de7 0100     		.2byte	0x1
 15642 1de9 50       		.byte	0x50
 15643 1dea 18000000 		.4byte	.LVL548
 15644 1dee 34000000 		.4byte	.LVL550
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 345


 15645 1df2 0400     		.2byte	0x4
 15646 1df4 F3       		.byte	0xf3
 15647 1df5 01       		.uleb128 0x1
 15648 1df6 50       		.byte	0x50
 15649 1df7 9F       		.byte	0x9f
 15650 1df8 34000000 		.4byte	.LVL550
 15651 1dfc 36000000 		.4byte	.LVL551
 15652 1e00 0100     		.2byte	0x1
 15653 1e02 50       		.byte	0x50
 15654 1e03 36000000 		.4byte	.LVL551
 15655 1e07 3C000000 		.4byte	.LFE28
 15656 1e0b 0400     		.2byte	0x4
 15657 1e0d F3       		.byte	0xf3
 15658 1e0e 01       		.uleb128 0x1
 15659 1e0f 50       		.byte	0x50
 15660 1e10 9F       		.byte	0x9f
 15661 1e11 00000000 		.4byte	0
 15662 1e15 00000000 		.4byte	0
 15663              	.LLST120:
 15664 1e19 00000000 		.4byte	.LVL546
 15665 1e1d 1B000000 		.4byte	.LVL549-1
 15666 1e21 0100     		.2byte	0x1
 15667 1e23 51       		.byte	0x51
 15668 1e24 1B000000 		.4byte	.LVL549-1
 15669 1e28 34000000 		.4byte	.LVL550
 15670 1e2c 0100     		.2byte	0x1
 15671 1e2e 55       		.byte	0x55
 15672 1e2f 34000000 		.4byte	.LVL550
 15673 1e33 36000000 		.4byte	.LVL551
 15674 1e37 0100     		.2byte	0x1
 15675 1e39 51       		.byte	0x51
 15676 1e3a 36000000 		.4byte	.LVL551
 15677 1e3e 3C000000 		.4byte	.LFE28
 15678 1e42 0400     		.2byte	0x4
 15679 1e44 F3       		.byte	0xf3
 15680 1e45 01       		.uleb128 0x1
 15681 1e46 51       		.byte	0x51
 15682 1e47 9F       		.byte	0x9f
 15683 1e48 00000000 		.4byte	0
 15684 1e4c 00000000 		.4byte	0
 15685              	.LLST121:
 15686 1e50 12000000 		.4byte	.LVL547
 15687 1e54 34000000 		.4byte	.LVL550
 15688 1e58 0100     		.2byte	0x1
 15689 1e5a 56       		.byte	0x56
 15690 1e5b 00000000 		.4byte	0
 15691 1e5f 00000000 		.4byte	0
 15692              	.LLST122:
 15693 1e63 00000000 		.4byte	.LVL552
 15694 1e67 20000000 		.4byte	.LVL554
 15695 1e6b 0100     		.2byte	0x1
 15696 1e6d 50       		.byte	0x50
 15697 1e6e 20000000 		.4byte	.LVL554
 15698 1e72 96010000 		.4byte	.LVL594
 15699 1e76 0100     		.2byte	0x1
 15700 1e78 56       		.byte	0x56
 15701 1e79 96010000 		.4byte	.LVL594
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 346


 15702 1e7d 9E010000 		.4byte	.LFE29
 15703 1e81 0400     		.2byte	0x4
 15704 1e83 F3       		.byte	0xf3
 15705 1e84 01       		.uleb128 0x1
 15706 1e85 50       		.byte	0x50
 15707 1e86 9F       		.byte	0x9f
 15708 1e87 00000000 		.4byte	0
 15709 1e8b 00000000 		.4byte	0
 15710              	.LLST123:
 15711 1e8f 00000000 		.4byte	.LVL552
 15712 1e93 22000000 		.4byte	.LVL555
 15713 1e97 0100     		.2byte	0x1
 15714 1e99 51       		.byte	0x51
 15715 1e9a 22000000 		.4byte	.LVL555
 15716 1e9e 9E010000 		.4byte	.LFE29
 15717 1ea2 0400     		.2byte	0x4
 15718 1ea4 F3       		.byte	0xf3
 15719 1ea5 01       		.uleb128 0x1
 15720 1ea6 51       		.byte	0x51
 15721 1ea7 9F       		.byte	0x9f
 15722 1ea8 00000000 		.4byte	0
 15723 1eac 00000000 		.4byte	0
 15724              	.LLST124:
 15725 1eb0 00000000 		.4byte	.LVL552
 15726 1eb4 1A000000 		.4byte	.LVL553
 15727 1eb8 0100     		.2byte	0x1
 15728 1eba 52       		.byte	0x52
 15729 1ebb 1A000000 		.4byte	.LVL553
 15730 1ebf 96010000 		.4byte	.LVL595
 15731 1ec3 0100     		.2byte	0x1
 15732 1ec5 57       		.byte	0x57
 15733 1ec6 00000000 		.4byte	0
 15734 1eca 00000000 		.4byte	0
 15735              	.LLST125:
 15736 1ece 28000000 		.4byte	.LVL557
 15737 1ed2 32000000 		.4byte	.LVL558
 15738 1ed6 0100     		.2byte	0x1
 15739 1ed8 50       		.byte	0x50
 15740 1ed9 32000000 		.4byte	.LVL558
 15741 1edd 56000000 		.4byte	.LVL563
 15742 1ee1 0100     		.2byte	0x1
 15743 1ee3 54       		.byte	0x54
 15744 1ee4 56000000 		.4byte	.LVL563
 15745 1ee8 58000000 		.4byte	.LVL564
 15746 1eec 0100     		.2byte	0x1
 15747 1eee 50       		.byte	0x50
 15748 1eef 58000000 		.4byte	.LVL564
 15749 1ef3 7A000000 		.4byte	.LVL568
 15750 1ef7 0100     		.2byte	0x1
 15751 1ef9 54       		.byte	0x54
 15752 1efa 7C000000 		.4byte	.LVL569
 15753 1efe 98000000 		.4byte	.LVL573
 15754 1f02 0100     		.2byte	0x1
 15755 1f04 54       		.byte	0x54
 15756 1f05 9A000000 		.4byte	.LVL574
 15757 1f09 F6000000 		.4byte	.LVL581
 15758 1f0d 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 347


 15759 1f0f 54       		.byte	0x54
 15760 1f10 F6000000 		.4byte	.LVL581
 15761 1f14 FA000000 		.4byte	.LVL582
 15762 1f18 0100     		.2byte	0x1
 15763 1f1a 50       		.byte	0x50
 15764 1f1b FA000000 		.4byte	.LVL582
 15765 1f1f 08010000 		.4byte	.LVL584
 15766 1f23 0100     		.2byte	0x1
 15767 1f25 54       		.byte	0x54
 15768 1f26 08010000 		.4byte	.LVL584
 15769 1f2a 0A010000 		.4byte	.LVL585
 15770 1f2e 0100     		.2byte	0x1
 15771 1f30 50       		.byte	0x50
 15772 1f31 0A010000 		.4byte	.LVL585
 15773 1f35 22010000 		.4byte	.LVL586
 15774 1f39 0100     		.2byte	0x1
 15775 1f3b 54       		.byte	0x54
 15776 1f3c 24010000 		.4byte	.LVL587
 15777 1f40 96010000 		.4byte	.LVL592
 15778 1f44 0100     		.2byte	0x1
 15779 1f46 54       		.byte	0x54
 15780 1f47 00000000 		.4byte	0
 15781 1f4b 00000000 		.4byte	0
 15782              	.LLST126:
 15783 1f4f 3C000000 		.4byte	.LVL561
 15784 1f53 96010000 		.4byte	.LVL593
 15785 1f57 0100     		.2byte	0x1
 15786 1f59 55       		.byte	0x55
 15787 1f5a 00000000 		.4byte	0
 15788 1f5e 00000000 		.4byte	0
 15789              	.LLST127:
 15790 1f62 A8000000 		.4byte	.LVL576
 15791 1f66 B4000000 		.4byte	.LVL577
 15792 1f6a 0100     		.2byte	0x1
 15793 1f6c 50       		.byte	0x50
 15794 1f6d EE000000 		.4byte	.LVL579
 15795 1f71 F3000000 		.4byte	.LVL580-1
 15796 1f75 0100     		.2byte	0x1
 15797 1f77 53       		.byte	0x53
 15798 1f78 F3000000 		.4byte	.LVL580-1
 15799 1f7c 0A010000 		.4byte	.LVL585
 15800 1f80 0100     		.2byte	0x1
 15801 1f82 59       		.byte	0x59
 15802 1f83 00000000 		.4byte	0
 15803 1f87 00000000 		.4byte	0
 15804              	.LLST128:
 15805 1f8b D8000000 		.4byte	.LVL578
 15806 1f8f F3000000 		.4byte	.LVL580-1
 15807 1f93 0100     		.2byte	0x1
 15808 1f95 52       		.byte	0x52
 15809 1f96 F3000000 		.4byte	.LVL580-1
 15810 1f9a 0A010000 		.4byte	.LVL585
 15811 1f9e 0100     		.2byte	0x1
 15812 1fa0 58       		.byte	0x58
 15813 1fa1 00000000 		.4byte	0
 15814 1fa5 00000000 		.4byte	0
 15815              	.LLST129:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 348


 15816 1fa9 00000000 		.4byte	.LVL596
 15817 1fad 1C000000 		.4byte	.LVL600
 15818 1fb1 0100     		.2byte	0x1
 15819 1fb3 50       		.byte	0x50
 15820 1fb4 1C000000 		.4byte	.LVL600
 15821 1fb8 74010000 		.4byte	.LVL639
 15822 1fbc 0100     		.2byte	0x1
 15823 1fbe 54       		.byte	0x54
 15824 1fbf 74010000 		.4byte	.LVL639
 15825 1fc3 80010000 		.4byte	.LFE30
 15826 1fc7 0400     		.2byte	0x4
 15827 1fc9 F3       		.byte	0xf3
 15828 1fca 01       		.uleb128 0x1
 15829 1fcb 50       		.byte	0x50
 15830 1fcc 9F       		.byte	0x9f
 15831 1fcd 00000000 		.4byte	0
 15832 1fd1 00000000 		.4byte	0
 15833              	.LLST130:
 15834 1fd5 00000000 		.4byte	.LVL596
 15835 1fd9 1A000000 		.4byte	.LVL599
 15836 1fdd 0100     		.2byte	0x1
 15837 1fdf 51       		.byte	0x51
 15838 1fe0 1A000000 		.4byte	.LVL599
 15839 1fe4 46000000 		.4byte	.LVL604
 15840 1fe8 0100     		.2byte	0x1
 15841 1fea 58       		.byte	0x58
 15842 1feb 46000000 		.4byte	.LVL604
 15843 1fef 6E010000 		.4byte	.LVL635
 15844 1ff3 0400     		.2byte	0x4
 15845 1ff5 F3       		.byte	0xf3
 15846 1ff6 01       		.uleb128 0x1
 15847 1ff7 51       		.byte	0x51
 15848 1ff8 9F       		.byte	0x9f
 15849 1ff9 6E010000 		.4byte	.LVL635
 15850 1ffd 74010000 		.4byte	.LVL638
 15851 2001 0100     		.2byte	0x1
 15852 2003 58       		.byte	0x58
 15853 2004 74010000 		.4byte	.LVL638
 15854 2008 80010000 		.4byte	.LFE30
 15855 200c 0400     		.2byte	0x4
 15856 200e F3       		.byte	0xf3
 15857 200f 01       		.uleb128 0x1
 15858 2010 51       		.byte	0x51
 15859 2011 9F       		.byte	0x9f
 15860 2012 00000000 		.4byte	0
 15861 2016 00000000 		.4byte	0
 15862              	.LLST131:
 15863 201a 00000000 		.4byte	.LVL596
 15864 201e 1F000000 		.4byte	.LVL601-1
 15865 2022 0100     		.2byte	0x1
 15866 2024 52       		.byte	0x52
 15867 2025 1F000000 		.4byte	.LVL601-1
 15868 2029 46000000 		.4byte	.LVL604
 15869 202d 0100     		.2byte	0x1
 15870 202f 55       		.byte	0x55
 15871 2030 46000000 		.4byte	.LVL604
 15872 2034 6E010000 		.4byte	.LVL635
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 349


 15873 2038 0100     		.2byte	0x1
 15874 203a 56       		.byte	0x56
 15875 203b 6E010000 		.4byte	.LVL635
 15876 203f 74010000 		.4byte	.LVL638
 15877 2043 0100     		.2byte	0x1
 15878 2045 55       		.byte	0x55
 15879 2046 00000000 		.4byte	0
 15880 204a 00000000 		.4byte	0
 15881              	.LLST132:
 15882 204e 00000000 		.4byte	.LVL596
 15883 2052 16000000 		.4byte	.LVL598
 15884 2056 0100     		.2byte	0x1
 15885 2058 53       		.byte	0x53
 15886 2059 16000000 		.4byte	.LVL598
 15887 205d 74010000 		.4byte	.LVL640
 15888 2061 0100     		.2byte	0x1
 15889 2063 57       		.byte	0x57
 15890 2064 74010000 		.4byte	.LVL640
 15891 2068 80010000 		.4byte	.LFE30
 15892 206c 0400     		.2byte	0x4
 15893 206e F3       		.byte	0xf3
 15894 206f 01       		.uleb128 0x1
 15895 2070 53       		.byte	0x53
 15896 2071 9F       		.byte	0x9f
 15897 2072 00000000 		.4byte	0
 15898 2076 00000000 		.4byte	0
 15899              	.LLST133:
 15900 207a 20000000 		.4byte	.LVL601
 15901 207e 46000000 		.4byte	.LVL604
 15902 2082 0100     		.2byte	0x1
 15903 2084 50       		.byte	0x50
 15904 2085 6E010000 		.4byte	.LVL635
 15905 2089 70010000 		.4byte	.LVL636
 15906 208d 0100     		.2byte	0x1
 15907 208f 50       		.byte	0x50
 15908 2090 72010000 		.4byte	.LVL637
 15909 2094 74010000 		.4byte	.LVL638
 15910 2098 0100     		.2byte	0x1
 15911 209a 50       		.byte	0x50
 15912 209b 00000000 		.4byte	0
 15913 209f 00000000 		.4byte	0
 15914              	.LLST134:
 15915 20a3 60000000 		.4byte	.LVL606
 15916 20a7 62000000 		.4byte	.LVL607
 15917 20ab 0100     		.2byte	0x1
 15918 20ad 50       		.byte	0x50
 15919 20ae 68000000 		.4byte	.LVL608
 15920 20b2 78000000 		.4byte	.LVL609
 15921 20b6 0100     		.2byte	0x1
 15922 20b8 50       		.byte	0x50
 15923 20b9 7A000000 		.4byte	.LVL610
 15924 20bd 8A000000 		.4byte	.LVL611
 15925 20c1 0100     		.2byte	0x1
 15926 20c3 50       		.byte	0x50
 15927 20c4 8A000000 		.4byte	.LVL611
 15928 20c8 8C000000 		.4byte	.LVL612
 15929 20cc 0300     		.2byte	0x3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 350


 15930 20ce 70       		.byte	0x70
 15931 20cf 7E       		.sleb128 -2
 15932 20d0 9F       		.byte	0x9f
 15933 20d1 8C000000 		.4byte	.LVL612
 15934 20d5 8E000000 		.4byte	.LVL613
 15935 20d9 0100     		.2byte	0x1
 15936 20db 50       		.byte	0x50
 15937 20dc 00000000 		.4byte	0
 15938 20e0 00000000 		.4byte	0
 15939              	.LLST135:
 15940 20e4 9A000000 		.4byte	.LVL614
 15941 20e8 AA000000 		.4byte	.LVL615
 15942 20ec 0100     		.2byte	0x1
 15943 20ee 50       		.byte	0x50
 15944 20ef AA000000 		.4byte	.LVL615
 15945 20f3 AC000000 		.4byte	.LVL616
 15946 20f7 0300     		.2byte	0x3
 15947 20f9 70       		.byte	0x70
 15948 20fa 7E       		.sleb128 -2
 15949 20fb 9F       		.byte	0x9f
 15950 20fc AC000000 		.4byte	.LVL616
 15951 2100 B0000000 		.4byte	.LVL617
 15952 2104 0100     		.2byte	0x1
 15953 2106 50       		.byte	0x50
 15954 2107 B0000000 		.4byte	.LVL617
 15955 210b FA000000 		.4byte	.LVL622
 15956 210f 0100     		.2byte	0x1
 15957 2111 59       		.byte	0x59
 15958 2112 FA000000 		.4byte	.LVL622
 15959 2116 02010000 		.4byte	.LVL623
 15960 211a 0100     		.2byte	0x1
 15961 211c 52       		.byte	0x52
 15962 211d 02010000 		.4byte	.LVL623
 15963 2121 12010000 		.4byte	.LVL628
 15964 2125 0100     		.2byte	0x1
 15965 2127 59       		.byte	0x59
 15966 2128 00000000 		.4byte	0
 15967 212c 00000000 		.4byte	0
 15968              	.LLST136:
 15969 2130 3C000000 		.4byte	.LVL602
 15970 2134 44000000 		.4byte	.LVL603
 15971 2138 0100     		.2byte	0x1
 15972 213a 56       		.byte	0x56
 15973 213b 44000000 		.4byte	.LVL603
 15974 213f 46000000 		.4byte	.LVL604
 15975 2143 0600     		.2byte	0x6
 15976 2145 73       		.byte	0x73
 15977 2146 00       		.sleb128 0
 15978 2147 72       		.byte	0x72
 15979 2148 00       		.sleb128 0
 15980 2149 1C       		.byte	0x1c
 15981 214a 9F       		.byte	0x9f
 15982 214b 00000000 		.4byte	0
 15983 214f 00000000 		.4byte	0
 15984              	.LLST137:
 15985 2153 0C010000 		.4byte	.LVL625
 15986 2157 0E010000 		.4byte	.LVL626
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 351


 15987 215b 0100     		.2byte	0x1
 15988 215d 55       		.byte	0x55
 15989 215e 1E010000 		.4byte	.LVL629
 15990 2162 64010000 		.4byte	.LVL634
 15991 2166 0100     		.2byte	0x1
 15992 2168 55       		.byte	0x55
 15993 2169 00000000 		.4byte	0
 15994 216d 00000000 		.4byte	0
 15995              	.LLST138:
 15996 2171 B4000000 		.4byte	.LVL618
 15997 2175 B8000000 		.4byte	.LVL619
 15998 2179 0100     		.2byte	0x1
 15999 217b 53       		.byte	0x53
 16000 217c B8000000 		.4byte	.LVL619
 16001 2180 0E010000 		.4byte	.LVL626
 16002 2184 0100     		.2byte	0x1
 16003 2186 5B       		.byte	0x5b
 16004 2187 0E010000 		.4byte	.LVL626
 16005 218b 10010000 		.4byte	.LVL627
 16006 218f 0100     		.2byte	0x1
 16007 2191 53       		.byte	0x53
 16008 2192 10010000 		.4byte	.LVL627
 16009 2196 12010000 		.4byte	.LVL628
 16010 219a 0100     		.2byte	0x1
 16011 219c 5B       		.byte	0x5b
 16012 219d 00000000 		.4byte	0
 16013 21a1 00000000 		.4byte	0
 16014              	.LLST139:
 16015 21a5 58000000 		.4byte	.LVL605
 16016 21a9 0C010000 		.4byte	.LVL625
 16017 21ad 0100     		.2byte	0x1
 16018 21af 55       		.byte	0x55
 16019 21b0 0E010000 		.4byte	.LVL626
 16020 21b4 12010000 		.4byte	.LVL628
 16021 21b8 0100     		.2byte	0x1
 16022 21ba 55       		.byte	0x55
 16023 21bb 00000000 		.4byte	0
 16024 21bf 00000000 		.4byte	0
 16025              	.LLST140:
 16026 21c3 14000000 		.4byte	.LVL597
 16027 21c7 1A000000 		.4byte	.LVL599
 16028 21cb 0100     		.2byte	0x1
 16029 21cd 51       		.byte	0x51
 16030 21ce 1A000000 		.4byte	.LVL599
 16031 21d2 74010000 		.4byte	.LVL641
 16032 21d6 0100     		.2byte	0x1
 16033 21d8 58       		.byte	0x58
 16034 21d9 00000000 		.4byte	0
 16035 21dd 00000000 		.4byte	0
 16036              	.LLST141:
 16037 21e1 00000000 		.4byte	.LVL642
 16038 21e5 1C000000 		.4byte	.LVL646
 16039 21e9 0100     		.2byte	0x1
 16040 21eb 50       		.byte	0x50
 16041 21ec 1C000000 		.4byte	.LVL646
 16042 21f0 EC010000 		.4byte	.LVL689
 16043 21f4 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 352


 16044 21f6 54       		.byte	0x54
 16045 21f7 EC010000 		.4byte	.LVL689
 16046 21fb F8010000 		.4byte	.LFE31
 16047 21ff 0400     		.2byte	0x4
 16048 2201 F3       		.byte	0xf3
 16049 2202 01       		.uleb128 0x1
 16050 2203 50       		.byte	0x50
 16051 2204 9F       		.byte	0x9f
 16052 2205 00000000 		.4byte	0
 16053 2209 00000000 		.4byte	0
 16054              	.LLST142:
 16055 220d 00000000 		.4byte	.LVL642
 16056 2211 1A000000 		.4byte	.LVL645
 16057 2215 0100     		.2byte	0x1
 16058 2217 51       		.byte	0x51
 16059 2218 1A000000 		.4byte	.LVL645
 16060 221c 44000000 		.4byte	.LVL649
 16061 2220 0100     		.2byte	0x1
 16062 2222 58       		.byte	0x58
 16063 2223 44000000 		.4byte	.LVL649
 16064 2227 E6010000 		.4byte	.LVL685
 16065 222b 0400     		.2byte	0x4
 16066 222d F3       		.byte	0xf3
 16067 222e 01       		.uleb128 0x1
 16068 222f 51       		.byte	0x51
 16069 2230 9F       		.byte	0x9f
 16070 2231 E6010000 		.4byte	.LVL685
 16071 2235 EC010000 		.4byte	.LVL688
 16072 2239 0100     		.2byte	0x1
 16073 223b 58       		.byte	0x58
 16074 223c EC010000 		.4byte	.LVL688
 16075 2240 F8010000 		.4byte	.LFE31
 16076 2244 0400     		.2byte	0x4
 16077 2246 F3       		.byte	0xf3
 16078 2247 01       		.uleb128 0x1
 16079 2248 51       		.byte	0x51
 16080 2249 9F       		.byte	0x9f
 16081 224a 00000000 		.4byte	0
 16082 224e 00000000 		.4byte	0
 16083              	.LLST143:
 16084 2252 00000000 		.4byte	.LVL642
 16085 2256 1F000000 		.4byte	.LVL647-1
 16086 225a 0100     		.2byte	0x1
 16087 225c 52       		.byte	0x52
 16088 225d 1F000000 		.4byte	.LVL647-1
 16089 2261 42000000 		.4byte	.LVL648
 16090 2265 0100     		.2byte	0x1
 16091 2267 56       		.byte	0x56
 16092 2268 42000000 		.4byte	.LVL648
 16093 226c 44000000 		.4byte	.LVL649
 16094 2270 0400     		.2byte	0x4
 16095 2272 F3       		.byte	0xf3
 16096 2273 01       		.uleb128 0x1
 16097 2274 52       		.byte	0x52
 16098 2275 9F       		.byte	0x9f
 16099 2276 44000000 		.4byte	.LVL649
 16100 227a EC010000 		.4byte	.LVL690
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 353


 16101 227e 0100     		.2byte	0x1
 16102 2280 56       		.byte	0x56
 16103 2281 00000000 		.4byte	0
 16104 2285 00000000 		.4byte	0
 16105              	.LLST144:
 16106 2289 00000000 		.4byte	.LVL642
 16107 228d 16000000 		.4byte	.LVL644
 16108 2291 0100     		.2byte	0x1
 16109 2293 53       		.byte	0x53
 16110 2294 16000000 		.4byte	.LVL644
 16111 2298 EC010000 		.4byte	.LVL691
 16112 229c 0100     		.2byte	0x1
 16113 229e 57       		.byte	0x57
 16114 229f EC010000 		.4byte	.LVL691
 16115 22a3 F8010000 		.4byte	.LFE31
 16116 22a7 0400     		.2byte	0x4
 16117 22a9 F3       		.byte	0xf3
 16118 22aa 01       		.uleb128 0x1
 16119 22ab 53       		.byte	0x53
 16120 22ac 9F       		.byte	0x9f
 16121 22ad 00000000 		.4byte	0
 16122 22b1 00000000 		.4byte	0
 16123              	.LLST145:
 16124 22b5 20000000 		.4byte	.LVL647
 16125 22b9 44000000 		.4byte	.LVL649
 16126 22bd 0100     		.2byte	0x1
 16127 22bf 50       		.byte	0x50
 16128 22c0 E6010000 		.4byte	.LVL685
 16129 22c4 E8010000 		.4byte	.LVL686
 16130 22c8 0100     		.2byte	0x1
 16131 22ca 50       		.byte	0x50
 16132 22cb EA010000 		.4byte	.LVL687
 16133 22cf EC010000 		.4byte	.LVL688
 16134 22d3 0100     		.2byte	0x1
 16135 22d5 50       		.byte	0x50
 16136 22d6 00000000 		.4byte	0
 16137 22da 00000000 		.4byte	0
 16138              	.LLST146:
 16139 22de 60000000 		.4byte	.LVL651
 16140 22e2 69000000 		.4byte	.LVL652-1
 16141 22e6 0100     		.2byte	0x1
 16142 22e8 53       		.byte	0x53
 16143 22e9 6C000000 		.4byte	.LVL653
 16144 22ed 70000000 		.4byte	.LVL654
 16145 22f1 0100     		.2byte	0x1
 16146 22f3 50       		.byte	0x50
 16147 22f4 78000000 		.4byte	.LVL656
 16148 22f8 84000000 		.4byte	.LVL657
 16149 22fc 0100     		.2byte	0x1
 16150 22fe 53       		.byte	0x53
 16151 22ff 90000000 		.4byte	.LVL658
 16152 2303 96000000 		.4byte	.LVL659
 16153 2307 0100     		.2byte	0x1
 16154 2309 53       		.byte	0x53
 16155 230a A2000000 		.4byte	.LVL660
 16156 230e A4000000 		.4byte	.LVL661
 16157 2312 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 354


 16158 2314 53       		.byte	0x53
 16159 2315 00000000 		.4byte	0
 16160 2319 00000000 		.4byte	0
 16161              	.LLST147:
 16162 231d D2000000 		.4byte	.LVL663
 16163 2321 E2000000 		.4byte	.LVL664
 16164 2325 0100     		.2byte	0x1
 16165 2327 50       		.byte	0x50
 16166 2328 E2000000 		.4byte	.LVL664
 16167 232c E4000000 		.4byte	.LVL665
 16168 2330 0300     		.2byte	0x3
 16169 2332 70       		.byte	0x70
 16170 2333 7E       		.sleb128 -2
 16171 2334 9F       		.byte	0x9f
 16172 2335 E4000000 		.4byte	.LVL665
 16173 2339 E8000000 		.4byte	.LVL666
 16174 233d 0100     		.2byte	0x1
 16175 233f 50       		.byte	0x50
 16176 2340 E8000000 		.4byte	.LVL666
 16177 2344 2C010000 		.4byte	.LVL671
 16178 2348 0100     		.2byte	0x1
 16179 234a 59       		.byte	0x59
 16180 234b 2C010000 		.4byte	.LVL671
 16181 234f 34010000 		.4byte	.LVL672
 16182 2353 0100     		.2byte	0x1
 16183 2355 52       		.byte	0x52
 16184 2356 34010000 		.4byte	.LVL672
 16185 235a 72010000 		.4byte	.LVL678
 16186 235e 0100     		.2byte	0x1
 16187 2360 59       		.byte	0x59
 16188 2361 00000000 		.4byte	0
 16189 2365 00000000 		.4byte	0
 16190              	.LLST148:
 16191 2369 44010000 		.4byte	.LVL674
 16192 236d 46010000 		.4byte	.LVL675
 16193 2371 0100     		.2byte	0x1
 16194 2373 55       		.byte	0x55
 16195 2374 7E010000 		.4byte	.LVL679
 16196 2378 CA010000 		.4byte	.LVL684
 16197 237c 0100     		.2byte	0x1
 16198 237e 55       		.byte	0x55
 16199 237f 00000000 		.4byte	0
 16200 2383 00000000 		.4byte	0
 16201              	.LLST149:
 16202 2387 EC000000 		.4byte	.LVL667
 16203 238b F0000000 		.4byte	.LVL668
 16204 238f 0100     		.2byte	0x1
 16205 2391 53       		.byte	0x53
 16206 2392 F0000000 		.4byte	.LVL668
 16207 2396 46010000 		.4byte	.LVL675
 16208 239a 0100     		.2byte	0x1
 16209 239c 5B       		.byte	0x5b
 16210 239d 46010000 		.4byte	.LVL675
 16211 23a1 48010000 		.4byte	.LVL676
 16212 23a5 0100     		.2byte	0x1
 16213 23a7 53       		.byte	0x53
 16214 23a8 48010000 		.4byte	.LVL676
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 355


 16215 23ac 72010000 		.4byte	.LVL678
 16216 23b0 0100     		.2byte	0x1
 16217 23b2 5B       		.byte	0x5b
 16218 23b3 00000000 		.4byte	0
 16219 23b7 00000000 		.4byte	0
 16220              	.LLST150:
 16221 23bb 14000000 		.4byte	.LVL643
 16222 23bf 1A000000 		.4byte	.LVL645
 16223 23c3 0100     		.2byte	0x1
 16224 23c5 51       		.byte	0x51
 16225 23c6 1A000000 		.4byte	.LVL645
 16226 23ca EC010000 		.4byte	.LVL692
 16227 23ce 0100     		.2byte	0x1
 16228 23d0 58       		.byte	0x58
 16229 23d1 00000000 		.4byte	0
 16230 23d5 00000000 		.4byte	0
 16231              	.LLST151:
 16232 23d9 58000000 		.4byte	.LVL650
 16233 23dd 44010000 		.4byte	.LVL674
 16234 23e1 0100     		.2byte	0x1
 16235 23e3 55       		.byte	0x55
 16236 23e4 46010000 		.4byte	.LVL675
 16237 23e8 72010000 		.4byte	.LVL678
 16238 23ec 0100     		.2byte	0x1
 16239 23ee 55       		.byte	0x55
 16240 23ef 00000000 		.4byte	0
 16241 23f3 00000000 		.4byte	0
 16242              	.LLST152:
 16243 23f7 00000000 		.4byte	.LVL693
 16244 23fb 08000000 		.4byte	.LVL694
 16245 23ff 0100     		.2byte	0x1
 16246 2401 50       		.byte	0x50
 16247 2402 08000000 		.4byte	.LVL694
 16248 2406 78000000 		.4byte	.LVL702
 16249 240a 0100     		.2byte	0x1
 16250 240c 54       		.byte	0x54
 16251 240d 78000000 		.4byte	.LVL702
 16252 2411 7A000000 		.4byte	.LFE32
 16253 2415 0400     		.2byte	0x4
 16254 2417 F3       		.byte	0xf3
 16255 2418 01       		.uleb128 0x1
 16256 2419 50       		.byte	0x50
 16257 241a 9F       		.byte	0x9f
 16258 241b 00000000 		.4byte	0
 16259 241f 00000000 		.4byte	0
 16260              	.LLST153:
 16261 2423 0C000000 		.4byte	.LVL695
 16262 2427 18000000 		.4byte	.LVL696
 16263 242b 0100     		.2byte	0x1
 16264 242d 50       		.byte	0x50
 16265 242e 1E000000 		.4byte	.LVL697
 16266 2432 55000000 		.4byte	.LVL699-1
 16267 2436 0100     		.2byte	0x1
 16268 2438 50       		.byte	0x50
 16269 2439 78000000 		.4byte	.LVL701
 16270 243d 7A000000 		.4byte	.LFE32
 16271 2441 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 356


 16272 2443 50       		.byte	0x50
 16273 2444 00000000 		.4byte	0
 16274 2448 00000000 		.4byte	0
 16275              	.LLST154:
 16276 244c 56000000 		.4byte	.LVL699
 16277 2450 62000000 		.4byte	.LVL700
 16278 2454 0100     		.2byte	0x1
 16279 2456 50       		.byte	0x50
 16280 2457 00000000 		.4byte	0
 16281 245b 00000000 		.4byte	0
 16282              	.LLST155:
 16283 245f 24000000 		.4byte	.LVL698
 16284 2463 78000000 		.4byte	.LVL701
 16285 2467 0100     		.2byte	0x1
 16286 2469 55       		.byte	0x55
 16287 246a 00000000 		.4byte	0
 16288 246e 00000000 		.4byte	0
 16289              	.LLST156:
 16290 2472 00000000 		.4byte	.LVL703
 16291 2476 07000000 		.4byte	.LVL704-1
 16292 247a 0100     		.2byte	0x1
 16293 247c 50       		.byte	0x50
 16294 247d 07000000 		.4byte	.LVL704-1
 16295 2481 1A000000 		.4byte	.LVL707
 16296 2485 0100     		.2byte	0x1
 16297 2487 54       		.byte	0x54
 16298 2488 1A000000 		.4byte	.LVL707
 16299 248c 1C000000 		.4byte	.LFE33
 16300 2490 0400     		.2byte	0x4
 16301 2492 F3       		.byte	0xf3
 16302 2493 01       		.uleb128 0x1
 16303 2494 50       		.byte	0x50
 16304 2495 9F       		.byte	0x9f
 16305 2496 00000000 		.4byte	0
 16306 249a 00000000 		.4byte	0
 16307              	.LLST157:
 16308 249e 08000000 		.4byte	.LVL704
 16309 24a2 0E000000 		.4byte	.LVL705
 16310 24a6 0100     		.2byte	0x1
 16311 24a8 50       		.byte	0x50
 16312 24a9 12000000 		.4byte	.LVL706
 16313 24ad 1C000000 		.4byte	.LFE33
 16314 24b1 0100     		.2byte	0x1
 16315 24b3 50       		.byte	0x50
 16316 24b4 00000000 		.4byte	0
 16317 24b8 00000000 		.4byte	0
 16318              	.LLST158:
 16319 24bc 00000000 		.4byte	.LVL708
 16320 24c0 12000000 		.4byte	.LVL710
 16321 24c4 0100     		.2byte	0x1
 16322 24c6 50       		.byte	0x50
 16323 24c7 12000000 		.4byte	.LVL710
 16324 24cb 62010000 		.4byte	.LVL757
 16325 24cf 0100     		.2byte	0x1
 16326 24d1 54       		.byte	0x54
 16327 24d2 62010000 		.4byte	.LVL757
 16328 24d6 6C010000 		.4byte	.LFE34
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 357


 16329 24da 0400     		.2byte	0x4
 16330 24dc F3       		.byte	0xf3
 16331 24dd 01       		.uleb128 0x1
 16332 24de 50       		.byte	0x50
 16333 24df 9F       		.byte	0x9f
 16334 24e0 00000000 		.4byte	0
 16335 24e4 00000000 		.4byte	0
 16336              	.LLST159:
 16337 24e8 00000000 		.4byte	.LVL708
 16338 24ec 10000000 		.4byte	.LVL709
 16339 24f0 0100     		.2byte	0x1
 16340 24f2 51       		.byte	0x51
 16341 24f3 10000000 		.4byte	.LVL709
 16342 24f7 B4000000 		.4byte	.LVL732
 16343 24fb 0100     		.2byte	0x1
 16344 24fd 56       		.byte	0x56
 16345 24fe B6000000 		.4byte	.LVL733
 16346 2502 32010000 		.4byte	.LVL749
 16347 2506 0100     		.2byte	0x1
 16348 2508 56       		.byte	0x56
 16349 2509 36010000 		.4byte	.LVL751
 16350 250d 38010000 		.4byte	.LVL752
 16351 2511 0100     		.2byte	0x1
 16352 2513 56       		.byte	0x56
 16353 2514 3A010000 		.4byte	.LVL753
 16354 2518 3C010000 		.4byte	.LVL754
 16355 251c 0100     		.2byte	0x1
 16356 251e 56       		.byte	0x56
 16357 251f 5E010000 		.4byte	.LVL755
 16358 2523 62010000 		.4byte	.LVL756
 16359 2527 0100     		.2byte	0x1
 16360 2529 56       		.byte	0x56
 16361 252a 00000000 		.4byte	0
 16362 252e 00000000 		.4byte	0
 16363              	.LLST160:
 16364 2532 18000000 		.4byte	.LVL712
 16365 2536 4E000000 		.4byte	.LVL717
 16366 253a 0100     		.2byte	0x1
 16367 253c 50       		.byte	0x50
 16368 253d 36010000 		.4byte	.LVL751
 16369 2541 3A010000 		.4byte	.LVL753
 16370 2545 0100     		.2byte	0x1
 16371 2547 50       		.byte	0x50
 16372 2548 5E010000 		.4byte	.LVL755
 16373 254c 62010000 		.4byte	.LVL756
 16374 2550 0100     		.2byte	0x1
 16375 2552 50       		.byte	0x50
 16376 2553 00000000 		.4byte	0
 16377 2557 00000000 		.4byte	0
 16378              	.LLST161:
 16379 255b 76000000 		.4byte	.LVL722
 16380 255f 78000000 		.4byte	.LVL723
 16381 2563 0100     		.2byte	0x1
 16382 2565 51       		.byte	0x51
 16383 2566 7A000000 		.4byte	.LVL724
 16384 256a 83000000 		.4byte	.LVL725-1
 16385 256e 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 358


 16386 2570 51       		.byte	0x51
 16387 2571 86000000 		.4byte	.LVL726
 16388 2575 96000000 		.4byte	.LVL727
 16389 2579 0100     		.2byte	0x1
 16390 257b 50       		.byte	0x50
 16391 257c 96000000 		.4byte	.LVL727
 16392 2580 98000000 		.4byte	.LVL728
 16393 2584 0100     		.2byte	0x1
 16394 2586 51       		.byte	0x51
 16395 2587 98000000 		.4byte	.LVL728
 16396 258b A8000000 		.4byte	.LVL729
 16397 258f 0100     		.2byte	0x1
 16398 2591 50       		.byte	0x50
 16399 2592 A8000000 		.4byte	.LVL729
 16400 2596 AA000000 		.4byte	.LVL730
 16401 259a 0100     		.2byte	0x1
 16402 259c 51       		.byte	0x51
 16403 259d AA000000 		.4byte	.LVL730
 16404 25a1 AC000000 		.4byte	.LVL731
 16405 25a5 0100     		.2byte	0x1
 16406 25a7 50       		.byte	0x50
 16407 25a8 AC000000 		.4byte	.LVL731
 16408 25ac C1000000 		.4byte	.LVL734-1
 16409 25b0 0100     		.2byte	0x1
 16410 25b2 51       		.byte	0x51
 16411 25b3 C4000000 		.4byte	.LVL735
 16412 25b7 C8000000 		.4byte	.LVL736
 16413 25bb 0100     		.2byte	0x1
 16414 25bd 50       		.byte	0x50
 16415 25be C8000000 		.4byte	.LVL736
 16416 25c2 CD000000 		.4byte	.LVL737-1
 16417 25c6 0100     		.2byte	0x1
 16418 25c8 51       		.byte	0x51
 16419 25c9 D0000000 		.4byte	.LVL738
 16420 25cd E0000000 		.4byte	.LVL739
 16421 25d1 0100     		.2byte	0x1
 16422 25d3 50       		.byte	0x50
 16423 25d4 E0000000 		.4byte	.LVL739
 16424 25d8 E2000000 		.4byte	.LVL740
 16425 25dc 0100     		.2byte	0x1
 16426 25de 51       		.byte	0x51
 16427 25df E2000000 		.4byte	.LVL740
 16428 25e3 FA000000 		.4byte	.LVL741
 16429 25e7 0100     		.2byte	0x1
 16430 25e9 50       		.byte	0x50
 16431 25ea FA000000 		.4byte	.LVL741
 16432 25ee FC000000 		.4byte	.LVL742
 16433 25f2 0100     		.2byte	0x1
 16434 25f4 51       		.byte	0x51
 16435 25f5 FC000000 		.4byte	.LVL742
 16436 25f9 06010000 		.4byte	.LVL743
 16437 25fd 0100     		.2byte	0x1
 16438 25ff 50       		.byte	0x50
 16439 2600 06010000 		.4byte	.LVL743
 16440 2604 0C010000 		.4byte	.LVL744
 16441 2608 0100     		.2byte	0x1
 16442 260a 51       		.byte	0x51
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 359


 16443 260b 0C010000 		.4byte	.LVL744
 16444 260f 0E010000 		.4byte	.LVL745
 16445 2613 0100     		.2byte	0x1
 16446 2615 50       		.byte	0x50
 16447 2616 0E010000 		.4byte	.LVL745
 16448 261a 1D010000 		.4byte	.LVL746-1
 16449 261e 0100     		.2byte	0x1
 16450 2620 51       		.byte	0x51
 16451 2621 3A010000 		.4byte	.LVL753
 16452 2625 3C010000 		.4byte	.LVL754
 16453 2629 0100     		.2byte	0x1
 16454 262b 51       		.byte	0x51
 16455 262c 00000000 		.4byte	0
 16456 2630 00000000 		.4byte	0
 16457              	.LLST162:
 16458 2634 46000000 		.4byte	.LVL716
 16459 2638 36010000 		.4byte	.LVL751
 16460 263c 0100     		.2byte	0x1
 16461 263e 57       		.byte	0x57
 16462 263f 3A010000 		.4byte	.LVL753
 16463 2643 3C010000 		.4byte	.LVL754
 16464 2647 0100     		.2byte	0x1
 16465 2649 57       		.byte	0x57
 16466 264a 00000000 		.4byte	0
 16467 264e 00000000 		.4byte	0
 16468              	.LLST163:
 16469 2652 36000000 		.4byte	.LVL714
 16470 2656 1E010000 		.4byte	.LVL746
 16471 265a 0200     		.2byte	0x2
 16472 265c 30       		.byte	0x30
 16473 265d 9F       		.byte	0x9f
 16474 265e 1E010000 		.4byte	.LVL746
 16475 2662 2E010000 		.4byte	.LVL747
 16476 2666 0100     		.2byte	0x1
 16477 2668 50       		.byte	0x50
 16478 2669 2E010000 		.4byte	.LVL747
 16479 266d 30010000 		.4byte	.LVL748
 16480 2671 0300     		.2byte	0x3
 16481 2673 70       		.byte	0x70
 16482 2674 7E       		.sleb128 -2
 16483 2675 9F       		.byte	0x9f
 16484 2676 30010000 		.4byte	.LVL748
 16485 267a 34010000 		.4byte	.LVL750
 16486 267e 0100     		.2byte	0x1
 16487 2680 50       		.byte	0x50
 16488 2681 34010000 		.4byte	.LVL750
 16489 2685 36010000 		.4byte	.LVL751
 16490 2689 0100     		.2byte	0x1
 16491 268b 56       		.byte	0x56
 16492 268c 36010000 		.4byte	.LVL751
 16493 2690 3C010000 		.4byte	.LVL754
 16494 2694 0200     		.2byte	0x2
 16495 2696 30       		.byte	0x30
 16496 2697 9F       		.byte	0x9f
 16497 2698 3C010000 		.4byte	.LVL754
 16498 269c 5E010000 		.4byte	.LVL755
 16499 26a0 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 360


 16500 26a2 56       		.byte	0x56
 16501 26a3 00000000 		.4byte	0
 16502 26a7 00000000 		.4byte	0
 16503              	.LLST164:
 16504 26ab 36000000 		.4byte	.LVL714
 16505 26af 38000000 		.4byte	.LVL715
 16506 26b3 0100     		.2byte	0x1
 16507 26b5 53       		.byte	0x53
 16508 26b6 38000000 		.4byte	.LVL715
 16509 26ba 5E000000 		.4byte	.LVL719
 16510 26be 0100     		.2byte	0x1
 16511 26c0 58       		.byte	0x58
 16512 26c1 5E000000 		.4byte	.LVL719
 16513 26c5 78000000 		.4byte	.LVL723
 16514 26c9 0300     		.2byte	0x3
 16515 26cb 78       		.byte	0x78
 16516 26cc 01       		.sleb128 1
 16517 26cd 9F       		.byte	0x9f
 16518 26ce 36010000 		.4byte	.LVL751
 16519 26d2 3A010000 		.4byte	.LVL753
 16520 26d6 0100     		.2byte	0x1
 16521 26d8 58       		.byte	0x58
 16522 26d9 00000000 		.4byte	0
 16523 26dd 00000000 		.4byte	0
 16524              	.LLST165:
 16525 26e1 00000000 		.4byte	.LVL758
 16526 26e5 0A000000 		.4byte	.LVL759
 16527 26e9 0100     		.2byte	0x1
 16528 26eb 50       		.byte	0x50
 16529 26ec 0A000000 		.4byte	.LVL759
 16530 26f0 68000000 		.4byte	.LVL768
 16531 26f4 0100     		.2byte	0x1
 16532 26f6 54       		.byte	0x54
 16533 26f7 68000000 		.4byte	.LVL768
 16534 26fb 6A000000 		.4byte	.LFE35
 16535 26ff 0400     		.2byte	0x4
 16536 2701 F3       		.byte	0xf3
 16537 2702 01       		.uleb128 0x1
 16538 2703 50       		.byte	0x50
 16539 2704 9F       		.byte	0x9f
 16540 2705 00000000 		.4byte	0
 16541 2709 00000000 		.4byte	0
 16542              	.LLST166:
 16543 270d 00000000 		.4byte	.LVL758
 16544 2711 0C000000 		.4byte	.LVL760
 16545 2715 0100     		.2byte	0x1
 16546 2717 51       		.byte	0x51
 16547 2718 0C000000 		.4byte	.LVL760
 16548 271c 11000000 		.4byte	.LVL761-1
 16549 2720 0200     		.2byte	0x2
 16550 2722 70       		.byte	0x70
 16551 2723 00       		.sleb128 0
 16552 2724 11000000 		.4byte	.LVL761-1
 16553 2728 6A000000 		.4byte	.LFE35
 16554 272c 0200     		.2byte	0x2
 16555 272e 91       		.byte	0x91
 16556 272f 5C       		.sleb128 -36
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 361


 16557 2730 00000000 		.4byte	0
 16558 2734 00000000 		.4byte	0
 16559              	.LLST167:
 16560 2738 12000000 		.4byte	.LVL761
 16561 273c 1C000000 		.4byte	.LVL762
 16562 2740 0100     		.2byte	0x1
 16563 2742 50       		.byte	0x50
 16564 2743 22000000 		.4byte	.LVL763
 16565 2747 5A000000 		.4byte	.LVL765
 16566 274b 0100     		.2byte	0x1
 16567 274d 50       		.byte	0x50
 16568 274e 60000000 		.4byte	.LVL766
 16569 2752 6A000000 		.4byte	.LFE35
 16570 2756 0100     		.2byte	0x1
 16571 2758 50       		.byte	0x50
 16572 2759 00000000 		.4byte	0
 16573 275d 00000000 		.4byte	0
 16574              	.LLST168:
 16575 2761 00000000 		.4byte	.LVL769
 16576 2765 0C000000 		.4byte	.LVL771
 16577 2769 0100     		.2byte	0x1
 16578 276b 50       		.byte	0x50
 16579 276c 0C000000 		.4byte	.LVL771
 16580 2770 5C000000 		.4byte	.LVL785
 16581 2774 0100     		.2byte	0x1
 16582 2776 54       		.byte	0x54
 16583 2777 5C000000 		.4byte	.LVL785
 16584 277b 5E000000 		.4byte	.LFE36
 16585 277f 0400     		.2byte	0x4
 16586 2781 F3       		.byte	0xf3
 16587 2782 01       		.uleb128 0x1
 16588 2783 50       		.byte	0x50
 16589 2784 9F       		.byte	0x9f
 16590 2785 00000000 		.4byte	0
 16591 2789 00000000 		.4byte	0
 16592              	.LLST169:
 16593 278d 00000000 		.4byte	.LVL769
 16594 2791 0A000000 		.4byte	.LVL770
 16595 2795 0100     		.2byte	0x1
 16596 2797 51       		.byte	0x51
 16597 2798 0A000000 		.4byte	.LVL770
 16598 279c 5C000000 		.4byte	.LVL786
 16599 27a0 0100     		.2byte	0x1
 16600 27a2 56       		.byte	0x56
 16601 27a3 5C000000 		.4byte	.LVL786
 16602 27a7 5E000000 		.4byte	.LFE36
 16603 27ab 0400     		.2byte	0x4
 16604 27ad F3       		.byte	0xf3
 16605 27ae 01       		.uleb128 0x1
 16606 27af 51       		.byte	0x51
 16607 27b0 9F       		.byte	0x9f
 16608 27b1 00000000 		.4byte	0
 16609 27b5 00000000 		.4byte	0
 16610              	.LLST170:
 16611 27b9 12000000 		.4byte	.LVL773
 16612 27bd 20000000 		.4byte	.LVL774
 16613 27c1 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 362


 16614 27c3 55       		.byte	0x55
 16615 27c4 20000000 		.4byte	.LVL774
 16616 27c8 22000000 		.4byte	.LVL775
 16617 27cc 0100     		.2byte	0x1
 16618 27ce 50       		.byte	0x50
 16619 27cf 22000000 		.4byte	.LVL775
 16620 27d3 2E000000 		.4byte	.LVL777
 16621 27d7 0100     		.2byte	0x1
 16622 27d9 55       		.byte	0x55
 16623 27da 2E000000 		.4byte	.LVL777
 16624 27de 36000000 		.4byte	.LVL778
 16625 27e2 0100     		.2byte	0x1
 16626 27e4 50       		.byte	0x50
 16627 27e5 36000000 		.4byte	.LVL778
 16628 27e9 38000000 		.4byte	.LVL779
 16629 27ed 0200     		.2byte	0x2
 16630 27ef 30       		.byte	0x30
 16631 27f0 9F       		.byte	0x9f
 16632 27f1 38000000 		.4byte	.LVL779
 16633 27f5 4C000000 		.4byte	.LVL781
 16634 27f9 0100     		.2byte	0x1
 16635 27fb 57       		.byte	0x57
 16636 27fc 4C000000 		.4byte	.LVL781
 16637 2800 54000000 		.4byte	.LVL782
 16638 2804 0100     		.2byte	0x1
 16639 2806 50       		.byte	0x50
 16640 2807 54000000 		.4byte	.LVL782
 16641 280b 58000000 		.4byte	.LVL783
 16642 280f 0200     		.2byte	0x2
 16643 2811 30       		.byte	0x30
 16644 2812 9F       		.byte	0x9f
 16645 2813 58000000 		.4byte	.LVL783
 16646 2817 5A000000 		.4byte	.LVL784
 16647 281b 0100     		.2byte	0x1
 16648 281d 57       		.byte	0x57
 16649 281e 5A000000 		.4byte	.LVL784
 16650 2822 5E000000 		.4byte	.LFE36
 16651 2826 0100     		.2byte	0x1
 16652 2828 50       		.byte	0x50
 16653 2829 00000000 		.4byte	0
 16654 282d 00000000 		.4byte	0
 16655              	.LLST171:
 16656 2831 00000000 		.4byte	.LVL787
 16657 2835 0A000000 		.4byte	.LVL788
 16658 2839 0100     		.2byte	0x1
 16659 283b 50       		.byte	0x50
 16660 283c 0A000000 		.4byte	.LVL788
 16661 2840 11000000 		.4byte	.LVL790-1
 16662 2844 0200     		.2byte	0x2
 16663 2846 70       		.byte	0x70
 16664 2847 00       		.sleb128 0
 16665 2848 11000000 		.4byte	.LVL790-1
 16666 284c 3E000000 		.4byte	.LFE37
 16667 2850 0200     		.2byte	0x2
 16668 2852 91       		.byte	0x91
 16669 2853 44       		.sleb128 -60
 16670 2854 00000000 		.4byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 363


 16671 2858 00000000 		.4byte	0
 16672              	.LLST172:
 16673 285c 00000000 		.4byte	.LVL787
 16674 2860 0C000000 		.4byte	.LVL789
 16675 2864 0100     		.2byte	0x1
 16676 2866 51       		.byte	0x51
 16677 2867 0C000000 		.4byte	.LVL789
 16678 286b 3C000000 		.4byte	.LVL800
 16679 286f 0100     		.2byte	0x1
 16680 2871 55       		.byte	0x55
 16681 2872 3C000000 		.4byte	.LVL800
 16682 2876 3E000000 		.4byte	.LFE37
 16683 287a 0400     		.2byte	0x4
 16684 287c F3       		.byte	0xf3
 16685 287d 01       		.uleb128 0x1
 16686 287e 51       		.byte	0x51
 16687 287f 9F       		.byte	0x9f
 16688 2880 00000000 		.4byte	0
 16689 2884 00000000 		.4byte	0
 16690              	.LLST173:
 16691 2888 14000000 		.4byte	.LVL791
 16692 288c 1C000000 		.4byte	.LVL792
 16693 2890 0100     		.2byte	0x1
 16694 2892 50       		.byte	0x50
 16695 2893 1C000000 		.4byte	.LVL792
 16696 2897 24000000 		.4byte	.LVL794
 16697 289b 0100     		.2byte	0x1
 16698 289d 54       		.byte	0x54
 16699 289e 24000000 		.4byte	.LVL794
 16700 28a2 2E000000 		.4byte	.LVL795
 16701 28a6 0100     		.2byte	0x1
 16702 28a8 50       		.byte	0x50
 16703 28a9 2E000000 		.4byte	.LVL795
 16704 28ad 36000000 		.4byte	.LVL797
 16705 28b1 0100     		.2byte	0x1
 16706 28b3 54       		.byte	0x54
 16707 28b4 36000000 		.4byte	.LVL797
 16708 28b8 38000000 		.4byte	.LVL798
 16709 28bc 0100     		.2byte	0x1
 16710 28be 50       		.byte	0x50
 16711 28bf 38000000 		.4byte	.LVL798
 16712 28c3 3C000000 		.4byte	.LVL799
 16713 28c7 0100     		.2byte	0x1
 16714 28c9 54       		.byte	0x54
 16715 28ca 00000000 		.4byte	0
 16716 28ce 00000000 		.4byte	0
 16717              	.LLST174:
 16718 28d2 00000000 		.4byte	.LVL801
 16719 28d6 12000000 		.4byte	.LVL802
 16720 28da 0100     		.2byte	0x1
 16721 28dc 50       		.byte	0x50
 16722 28dd 12000000 		.4byte	.LVL802
 16723 28e1 19000000 		.4byte	.LVL805-1
 16724 28e5 0200     		.2byte	0x2
 16725 28e7 70       		.byte	0x70
 16726 28e8 00       		.sleb128 0
 16727 28e9 19000000 		.4byte	.LVL805-1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 364


 16728 28ed F4000000 		.4byte	.LFE38
 16729 28f1 0200     		.2byte	0x2
 16730 28f3 91       		.byte	0x91
 16731 28f4 5C       		.sleb128 -36
 16732 28f5 00000000 		.4byte	0
 16733 28f9 00000000 		.4byte	0
 16734              	.LLST175:
 16735 28fd 00000000 		.4byte	.LVL801
 16736 2901 14000000 		.4byte	.LVL803
 16737 2905 0100     		.2byte	0x1
 16738 2907 51       		.byte	0x51
 16739 2908 14000000 		.4byte	.LVL803
 16740 290c EC000000 		.4byte	.LVL836
 16741 2910 0100     		.2byte	0x1
 16742 2912 59       		.byte	0x59
 16743 2913 EC000000 		.4byte	.LVL836
 16744 2917 F4000000 		.4byte	.LFE38
 16745 291b 0400     		.2byte	0x4
 16746 291d F3       		.byte	0xf3
 16747 291e 01       		.uleb128 0x1
 16748 291f 51       		.byte	0x51
 16749 2920 9F       		.byte	0x9f
 16750 2921 00000000 		.4byte	0
 16751 2925 00000000 		.4byte	0
 16752              	.LLST176:
 16753 2929 00000000 		.4byte	.LVL801
 16754 292d 16000000 		.4byte	.LVL804
 16755 2931 0100     		.2byte	0x1
 16756 2933 52       		.byte	0x52
 16757 2934 16000000 		.4byte	.LVL804
 16758 2938 19000000 		.4byte	.LVL805-1
 16759 293c 0100     		.2byte	0x1
 16760 293e 51       		.byte	0x51
 16761 293f 19000000 		.4byte	.LVL805-1
 16762 2943 EC000000 		.4byte	.LVL835
 16763 2947 0100     		.2byte	0x1
 16764 2949 56       		.byte	0x56
 16765 294a EC000000 		.4byte	.LVL835
 16766 294e F4000000 		.4byte	.LFE38
 16767 2952 0400     		.2byte	0x4
 16768 2954 F3       		.byte	0xf3
 16769 2955 01       		.uleb128 0x1
 16770 2956 52       		.byte	0x52
 16771 2957 9F       		.byte	0x9f
 16772 2958 00000000 		.4byte	0
 16773 295c 00000000 		.4byte	0
 16774              	.LLST177:
 16775 2960 1C000000 		.4byte	.LVL806
 16776 2964 3C000000 		.4byte	.LVL808
 16777 2968 0100     		.2byte	0x1
 16778 296a 50       		.byte	0x50
 16779 296b 3C000000 		.4byte	.LVL808
 16780 296f 5E000000 		.4byte	.LVL812
 16781 2973 0200     		.2byte	0x2
 16782 2975 91       		.byte	0x91
 16783 2976 54       		.sleb128 -44
 16784 2977 5E000000 		.4byte	.LVL812
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 365


 16785 297b 68000000 		.4byte	.LVL815
 16786 297f 0100     		.2byte	0x1
 16787 2981 50       		.byte	0x50
 16788 2982 68000000 		.4byte	.LVL815
 16789 2986 7C000000 		.4byte	.LVL820
 16790 298a 0200     		.2byte	0x2
 16791 298c 91       		.byte	0x91
 16792 298d 54       		.sleb128 -44
 16793 298e 7C000000 		.4byte	.LVL820
 16794 2992 8C000000 		.4byte	.LVL822
 16795 2996 0100     		.2byte	0x1
 16796 2998 50       		.byte	0x50
 16797 2999 8C000000 		.4byte	.LVL822
 16798 299d D0000000 		.4byte	.LVL831
 16799 29a1 0200     		.2byte	0x2
 16800 29a3 91       		.byte	0x91
 16801 29a4 54       		.sleb128 -44
 16802 29a5 D2000000 		.4byte	.LVL832
 16803 29a9 F4000000 		.4byte	.LFE38
 16804 29ad 0200     		.2byte	0x2
 16805 29af 91       		.byte	0x91
 16806 29b0 54       		.sleb128 -44
 16807 29b1 00000000 		.4byte	0
 16808 29b5 00000000 		.4byte	0
 16809              	.LLST178:
 16810 29b9 34000000 		.4byte	.LVL807
 16811 29bd 3C000000 		.4byte	.LVL808
 16812 29c1 0200     		.2byte	0x2
 16813 29c3 30       		.byte	0x30
 16814 29c4 9F       		.byte	0x9f
 16815 29c5 3C000000 		.4byte	.LVL808
 16816 29c9 5E000000 		.4byte	.LVL812
 16817 29cd 0100     		.2byte	0x1
 16818 29cf 57       		.byte	0x57
 16819 29d0 5E000000 		.4byte	.LVL812
 16820 29d4 68000000 		.4byte	.LVL815
 16821 29d8 0200     		.2byte	0x2
 16822 29da 30       		.byte	0x30
 16823 29db 9F       		.byte	0x9f
 16824 29dc 68000000 		.4byte	.LVL815
 16825 29e0 E8000000 		.4byte	.LVL834
 16826 29e4 0100     		.2byte	0x1
 16827 29e6 57       		.byte	0x57
 16828 29e7 00000000 		.4byte	0
 16829 29eb 00000000 		.4byte	0
 16830              	.LLST179:
 16831 29ef 3C000000 		.4byte	.LVL808
 16832 29f3 E8000000 		.4byte	.LVL834
 16833 29f7 0100     		.2byte	0x1
 16834 29f9 54       		.byte	0x54
 16835 29fa 00000000 		.4byte	0
 16836 29fe 00000000 		.4byte	0
 16837              	.LLST180:
 16838 2a02 62000000 		.4byte	.LVL813
 16839 2a06 64000000 		.4byte	.LVL814
 16840 2a0a 0100     		.2byte	0x1
 16841 2a0c 53       		.byte	0x53
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 366


 16842 2a0d 64000000 		.4byte	.LVL814
 16843 2a11 68000000 		.4byte	.LVL815
 16844 2a15 0500     		.2byte	0x5
 16845 2a17 76       		.byte	0x76
 16846 2a18 00       		.sleb128 0
 16847 2a19 06       		.byte	0x6
 16848 2a1a 23       		.byte	0x23
 16849 2a1b 20       		.uleb128 0x20
 16850 2a1c 68000000 		.4byte	.LVL815
 16851 2a20 72000000 		.4byte	.LVL817
 16852 2a24 0200     		.2byte	0x2
 16853 2a26 91       		.byte	0x91
 16854 2a27 58       		.sleb128 -40
 16855 2a28 72000000 		.4byte	.LVL817
 16856 2a2c 79000000 		.4byte	.LVL819-1
 16857 2a30 0100     		.2byte	0x1
 16858 2a32 52       		.byte	0x52
 16859 2a33 79000000 		.4byte	.LVL819-1
 16860 2a37 8C000000 		.4byte	.LVL822
 16861 2a3b 0100     		.2byte	0x1
 16862 2a3d 5A       		.byte	0x5a
 16863 2a3e 8C000000 		.4byte	.LVL822
 16864 2a42 CC000000 		.4byte	.LVL830
 16865 2a46 0200     		.2byte	0x2
 16866 2a48 91       		.byte	0x91
 16867 2a49 58       		.sleb128 -40
 16868 2a4a 00000000 		.4byte	0
 16869 2a4e 00000000 		.4byte	0
 16870              	.LLST181:
 16871 2a52 44000000 		.4byte	.LVL809
 16872 2a56 5E000000 		.4byte	.LVL812
 16873 2a5a 0100     		.2byte	0x1
 16874 2a5c 50       		.byte	0x50
 16875 2a5d CC000000 		.4byte	.LVL830
 16876 2a61 D6000000 		.4byte	.LVL833
 16877 2a65 0100     		.2byte	0x1
 16878 2a67 50       		.byte	0x50
 16879 2a68 00000000 		.4byte	0
 16880 2a6c 00000000 		.4byte	0
 16881              	.LLST182:
 16882 2a70 62000000 		.4byte	.LVL813
 16883 2a74 68000000 		.4byte	.LVL815
 16884 2a78 0200     		.2byte	0x2
 16885 2a7a 30       		.byte	0x30
 16886 2a7b 9F       		.byte	0x9f
 16887 2a7c 68000000 		.4byte	.LVL815
 16888 2a80 76000000 		.4byte	.LVL818
 16889 2a84 0100     		.2byte	0x1
 16890 2a86 51       		.byte	0x51
 16891 2a87 84000000 		.4byte	.LVL821
 16892 2a8b 8C000000 		.4byte	.LVL822
 16893 2a8f 0400     		.2byte	0x4
 16894 2a91 0A       		.byte	0xa
 16895 2a92 0002     		.2byte	0x200
 16896 2a94 9F       		.byte	0x9f
 16897 2a95 8C000000 		.4byte	.LVL822
 16898 2a99 CC000000 		.4byte	.LVL830
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 367


 16899 2a9d 0100     		.2byte	0x1
 16900 2a9f 51       		.byte	0x51
 16901 2aa0 00000000 		.4byte	0
 16902 2aa4 00000000 		.4byte	0
 16903              	.LLST183:
 16904 2aa8 34000000 		.4byte	.LVL807
 16905 2aac E8000000 		.4byte	.LVL834
 16906 2ab0 0100     		.2byte	0x1
 16907 2ab2 55       		.byte	0x55
 16908 2ab3 00000000 		.4byte	0
 16909 2ab7 00000000 		.4byte	0
 16910              	.LLST184:
 16911 2abb 62000000 		.4byte	.LVL813
 16912 2abf 68000000 		.4byte	.LVL815
 16913 2ac3 0200     		.2byte	0x2
 16914 2ac5 30       		.byte	0x30
 16915 2ac6 9F       		.byte	0x9f
 16916 2ac7 68000000 		.4byte	.LVL815
 16917 2acb 6E000000 		.4byte	.LVL816
 16918 2acf 0100     		.2byte	0x1
 16919 2ad1 53       		.byte	0x53
 16920 2ad2 84000000 		.4byte	.LVL821
 16921 2ad6 CC000000 		.4byte	.LVL830
 16922 2ada 0100     		.2byte	0x1
 16923 2adc 53       		.byte	0x53
 16924 2add 00000000 		.4byte	0
 16925 2ae1 00000000 		.4byte	0
 16926              	.LLST185:
 16927 2ae5 00000000 		.4byte	.LVL837
 16928 2ae9 08000000 		.4byte	.LVL838
 16929 2aed 0100     		.2byte	0x1
 16930 2aef 50       		.byte	0x50
 16931 2af0 08000000 		.4byte	.LVL838
 16932 2af4 96000000 		.4byte	.LVL856
 16933 2af8 0100     		.2byte	0x1
 16934 2afa 55       		.byte	0x55
 16935 2afb 96000000 		.4byte	.LVL856
 16936 2aff 9C000000 		.4byte	.LFE39
 16937 2b03 0400     		.2byte	0x4
 16938 2b05 F3       		.byte	0xf3
 16939 2b06 01       		.uleb128 0x1
 16940 2b07 50       		.byte	0x50
 16941 2b08 9F       		.byte	0x9f
 16942 2b09 00000000 		.4byte	0
 16943 2b0d 00000000 		.4byte	0
 16944              	.LLST186:
 16945 2b11 0E000000 		.4byte	.LVL840
 16946 2b15 24000000 		.4byte	.LVL841
 16947 2b19 0100     		.2byte	0x1
 16948 2b1b 50       		.byte	0x50
 16949 2b1c 24000000 		.4byte	.LVL841
 16950 2b20 48000000 		.4byte	.LVL843
 16951 2b24 0100     		.2byte	0x1
 16952 2b26 54       		.byte	0x54
 16953 2b27 48000000 		.4byte	.LVL843
 16954 2b2b 4E000000 		.4byte	.LVL844
 16955 2b2f 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 368


 16956 2b31 50       		.byte	0x50
 16957 2b32 4E000000 		.4byte	.LVL844
 16958 2b36 58000000 		.4byte	.LVL846
 16959 2b3a 0100     		.2byte	0x1
 16960 2b3c 54       		.byte	0x54
 16961 2b3d 58000000 		.4byte	.LVL846
 16962 2b41 5E000000 		.4byte	.LVL847
 16963 2b45 0200     		.2byte	0x2
 16964 2b47 30       		.byte	0x30
 16965 2b48 9F       		.byte	0x9f
 16966 2b49 5E000000 		.4byte	.LVL847
 16967 2b4d 7A000000 		.4byte	.LVL851
 16968 2b51 0100     		.2byte	0x1
 16969 2b53 54       		.byte	0x54
 16970 2b54 7A000000 		.4byte	.LVL851
 16971 2b58 7E000000 		.4byte	.LVL852
 16972 2b5c 0100     		.2byte	0x1
 16973 2b5e 50       		.byte	0x50
 16974 2b5f 7E000000 		.4byte	.LVL852
 16975 2b63 96000000 		.4byte	.LVL855
 16976 2b67 0100     		.2byte	0x1
 16977 2b69 54       		.byte	0x54
 16978 2b6a 00000000 		.4byte	0
 16979 2b6e 00000000 		.4byte	0
 16980              	.LLST187:
 16981 2b72 58000000 		.4byte	.LVL846
 16982 2b76 6A000000 		.4byte	.LVL849
 16983 2b7a 0100     		.2byte	0x1
 16984 2b7c 50       		.byte	0x50
 16985 2b7d 6A000000 		.4byte	.LVL849
 16986 2b81 86000000 		.4byte	.LVL854
 16987 2b85 0100     		.2byte	0x1
 16988 2b87 56       		.byte	0x56
 16989 2b88 00000000 		.4byte	0
 16990 2b8c 00000000 		.4byte	0
 16991              	.LLST188:
 16992 2b90 00000000 		.4byte	.LVL857
 16993 2b94 08000000 		.4byte	.LVL858
 16994 2b98 0100     		.2byte	0x1
 16995 2b9a 50       		.byte	0x50
 16996 2b9b 08000000 		.4byte	.LVL858
 16997 2b9f 0F000000 		.4byte	.LVL859-1
 16998 2ba3 0200     		.2byte	0x2
 16999 2ba5 70       		.byte	0x70
 17000 2ba6 00       		.sleb128 0
 17001 2ba7 0F000000 		.4byte	.LVL859-1
 17002 2bab C6000000 		.4byte	.LFE40
 17003 2baf 0300     		.2byte	0x3
 17004 2bb1 91       		.byte	0x91
 17005 2bb2 A47F     		.sleb128 -92
 17006 2bb4 00000000 		.4byte	0
 17007 2bb8 00000000 		.4byte	0
 17008              	.LLST189:
 17009 2bbc 12000000 		.4byte	.LVL860
 17010 2bc0 1A000000 		.4byte	.LVL861
 17011 2bc4 0100     		.2byte	0x1
 17012 2bc6 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 369


 17013 2bc7 1A000000 		.4byte	.LVL861
 17014 2bcb 22000000 		.4byte	.LVL863
 17015 2bcf 0100     		.2byte	0x1
 17016 2bd1 54       		.byte	0x54
 17017 2bd2 22000000 		.4byte	.LVL863
 17018 2bd6 26000000 		.4byte	.LVL864
 17019 2bda 0100     		.2byte	0x1
 17020 2bdc 50       		.byte	0x50
 17021 2bdd 26000000 		.4byte	.LVL864
 17022 2be1 42000000 		.4byte	.LVL868
 17023 2be5 0100     		.2byte	0x1
 17024 2be7 54       		.byte	0x54
 17025 2be8 44000000 		.4byte	.LVL869
 17026 2bec 80000000 		.4byte	.LVL876
 17027 2bf0 0100     		.2byte	0x1
 17028 2bf2 54       		.byte	0x54
 17029 2bf3 80000000 		.4byte	.LVL876
 17030 2bf7 84000000 		.4byte	.LVL877
 17031 2bfb 0100     		.2byte	0x1
 17032 2bfd 50       		.byte	0x50
 17033 2bfe 84000000 		.4byte	.LVL877
 17034 2c02 88000000 		.4byte	.LVL878
 17035 2c06 0100     		.2byte	0x1
 17036 2c08 54       		.byte	0x54
 17037 2c09 88000000 		.4byte	.LVL878
 17038 2c0d 96000000 		.4byte	.LVL880
 17039 2c11 0100     		.2byte	0x1
 17040 2c13 50       		.byte	0x50
 17041 2c14 96000000 		.4byte	.LVL880
 17042 2c18 A4000000 		.4byte	.LVL883
 17043 2c1c 0100     		.2byte	0x1
 17044 2c1e 54       		.byte	0x54
 17045 2c1f A4000000 		.4byte	.LVL883
 17046 2c23 AC000000 		.4byte	.LVL884
 17047 2c27 0100     		.2byte	0x1
 17048 2c29 50       		.byte	0x50
 17049 2c2a AC000000 		.4byte	.LVL884
 17050 2c2e C4000000 		.4byte	.LVL889
 17051 2c32 0100     		.2byte	0x1
 17052 2c34 54       		.byte	0x54
 17053 2c35 00000000 		.4byte	0
 17054 2c39 00000000 		.4byte	0
 17055              	.LLST190:
 17056 2c3d 34000000 		.4byte	.LVL867
 17057 2c41 62000000 		.4byte	.LVL872
 17058 2c45 0100     		.2byte	0x1
 17059 2c47 53       		.byte	0x53
 17060 2c48 62000000 		.4byte	.LVL872
 17061 2c4c 73000000 		.4byte	.LVL874-1
 17062 2c50 0200     		.2byte	0x2
 17063 2c52 91       		.byte	0x91
 17064 2c53 68       		.sleb128 -24
 17065 2c54 96000000 		.4byte	.LVL880
 17066 2c58 98000000 		.4byte	.LVL881
 17067 2c5c 0200     		.2byte	0x2
 17068 2c5e 91       		.byte	0x91
 17069 2c5f 68       		.sleb128 -24
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 370


 17070 2c60 00000000 		.4byte	0
 17071 2c64 00000000 		.4byte	0
 17072              	.LLST191:
 17073 2c68 5C000000 		.4byte	.LVL871
 17074 2c6c 70000000 		.4byte	.LVL873
 17075 2c70 0100     		.2byte	0x1
 17076 2c72 52       		.byte	0x52
 17077 2c73 70000000 		.4byte	.LVL873
 17078 2c77 96000000 		.4byte	.LVL880
 17079 2c7b 0100     		.2byte	0x1
 17080 2c7d 55       		.byte	0x55
 17081 2c7e 96000000 		.4byte	.LVL880
 17082 2c82 98000000 		.4byte	.LVL881
 17083 2c86 0100     		.2byte	0x1
 17084 2c88 52       		.byte	0x52
 17085 2c89 98000000 		.4byte	.LVL881
 17086 2c8d C0000000 		.4byte	.LVL888
 17087 2c91 0100     		.2byte	0x1
 17088 2c93 55       		.byte	0x55
 17089 2c94 00000000 		.4byte	0
 17090 2c98 00000000 		.4byte	0
 17091              	.LLST192:
 17092 2c9c 00000000 		.4byte	.LVL890
 17093 2ca0 0F000000 		.4byte	.LVL891-1
 17094 2ca4 0100     		.2byte	0x1
 17095 2ca6 50       		.byte	0x50
 17096 2ca7 0F000000 		.4byte	.LVL891-1
 17097 2cab 14000000 		.4byte	.LVL893
 17098 2caf 0300     		.2byte	0x3
 17099 2cb1 91       		.byte	0x91
 17100 2cb2 B47F     		.sleb128 -76
 17101 2cb4 14000000 		.4byte	.LVL893
 17102 2cb8 1B000000 		.4byte	.LVL894-1
 17103 2cbc 0200     		.2byte	0x2
 17104 2cbe 70       		.byte	0x70
 17105 2cbf 00       		.sleb128 0
 17106 2cc0 1B000000 		.4byte	.LVL894-1
 17107 2cc4 94010000 		.4byte	.LFE41
 17108 2cc8 0300     		.2byte	0x3
 17109 2cca 91       		.byte	0x91
 17110 2ccb B47F     		.sleb128 -76
 17111 2ccd 00000000 		.4byte	0
 17112 2cd1 00000000 		.4byte	0
 17113              	.LLST193:
 17114 2cd5 1E000000 		.4byte	.LVL895
 17115 2cd9 28000000 		.4byte	.LVL896
 17116 2cdd 0100     		.2byte	0x1
 17117 2cdf 50       		.byte	0x50
 17118 2ce0 28000000 		.4byte	.LVL896
 17119 2ce4 2E000000 		.4byte	.LVL897
 17120 2ce8 0100     		.2byte	0x1
 17121 2cea 54       		.byte	0x54
 17122 2ceb 2E000000 		.4byte	.LVL897
 17123 2cef 3C000000 		.4byte	.LVL899
 17124 2cf3 0100     		.2byte	0x1
 17125 2cf5 50       		.byte	0x50
 17126 2cf6 44000000 		.4byte	.LVL901
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 371


 17127 2cfa 48000000 		.4byte	.LVL902
 17128 2cfe 0200     		.2byte	0x2
 17129 2d00 30       		.byte	0x30
 17130 2d01 9F       		.byte	0x9f
 17131 2d02 48000000 		.4byte	.LVL902
 17132 2d06 22010000 		.4byte	.LVL922
 17133 2d0a 0100     		.2byte	0x1
 17134 2d0c 54       		.byte	0x54
 17135 2d0d 22010000 		.4byte	.LVL922
 17136 2d11 26010000 		.4byte	.LVL923
 17137 2d15 0100     		.2byte	0x1
 17138 2d17 50       		.byte	0x50
 17139 2d18 26010000 		.4byte	.LVL923
 17140 2d1c 84010000 		.4byte	.LVL936
 17141 2d20 0100     		.2byte	0x1
 17142 2d22 54       		.byte	0x54
 17143 2d23 84010000 		.4byte	.LVL936
 17144 2d27 88010000 		.4byte	.LVL938
 17145 2d2b 0100     		.2byte	0x1
 17146 2d2d 50       		.byte	0x50
 17147 2d2e 88010000 		.4byte	.LVL938
 17148 2d32 8C010000 		.4byte	.LVL939
 17149 2d36 0100     		.2byte	0x1
 17150 2d38 54       		.byte	0x54
 17151 2d39 00000000 		.4byte	0
 17152 2d3d 00000000 		.4byte	0
 17153              	.LLST194:
 17154 2d41 7C000000 		.4byte	.LVL910
 17155 2d45 87000000 		.4byte	.LVL912-1
 17156 2d49 0100     		.2byte	0x1
 17157 2d4b 53       		.byte	0x53
 17158 2d4c 87000000 		.4byte	.LVL912-1
 17159 2d50 3A010000 		.4byte	.LVL928
 17160 2d54 0200     		.2byte	0x2
 17161 2d56 7D       		.byte	0x7d
 17162 2d57 00       		.sleb128 0
 17163 2d58 56010000 		.4byte	.LVL932
 17164 2d5c 7A010000 		.4byte	.LVL934
 17165 2d60 0100     		.2byte	0x1
 17166 2d62 52       		.byte	0x52
 17167 2d63 00000000 		.4byte	0
 17168 2d67 00000000 		.4byte	0
 17169              	.LLST195:
 17170 2d6b 08010000 		.4byte	.LVL918
 17171 2d6f 32010000 		.4byte	.LVL925
 17172 2d73 0100     		.2byte	0x1
 17173 2d75 56       		.byte	0x56
 17174 2d76 34010000 		.4byte	.LVL926
 17175 2d7a 3A010000 		.4byte	.LVL928
 17176 2d7e 0100     		.2byte	0x1
 17177 2d80 56       		.byte	0x56
 17178 2d81 00000000 		.4byte	0
 17179 2d85 00000000 		.4byte	0
 17180              	.LLST196:
 17181 2d89 72000000 		.4byte	.LVL909
 17182 2d8d 7E000000 		.4byte	.LVL911
 17183 2d91 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 372


 17184 2d93 50       		.byte	0x50
 17185 2d94 7E000000 		.4byte	.LVL911
 17186 2d98 12010000 		.4byte	.LVL919
 17187 2d9c 0100     		.2byte	0x1
 17188 2d9e 59       		.byte	0x59
 17189 2d9f 12010000 		.4byte	.LVL919
 17190 2da3 14010000 		.4byte	.LVL920
 17191 2da7 0100     		.2byte	0x1
 17192 2da9 53       		.byte	0x53
 17193 2daa 14010000 		.4byte	.LVL920
 17194 2dae 36010000 		.4byte	.LVL927
 17195 2db2 0100     		.2byte	0x1
 17196 2db4 5A       		.byte	0x5a
 17197 2db5 36010000 		.4byte	.LVL927
 17198 2db9 3A010000 		.4byte	.LVL928
 17199 2dbd 0100     		.2byte	0x1
 17200 2dbf 59       		.byte	0x59
 17201 2dc0 00000000 		.4byte	0
 17202 2dc4 00000000 		.4byte	0
 17203              	.LLST197:
 17204 2dc8 44000000 		.4byte	.LVL901
 17205 2dcc 5A000000 		.4byte	.LVL905
 17206 2dd0 0100     		.2byte	0x1
 17207 2dd2 50       		.byte	0x50
 17208 2dd3 5A000000 		.4byte	.LVL905
 17209 2dd7 86010000 		.4byte	.LVL937
 17210 2ddb 0100     		.2byte	0x1
 17211 2ddd 57       		.byte	0x57
 17212 2dde 00000000 		.4byte	0
 17213 2de2 00000000 		.4byte	0
 17214              	.LLST198:
 17215 2de6 E0000000 		.4byte	.LVL915
 17216 2dea FC000000 		.4byte	.LVL917
 17217 2dee 0100     		.2byte	0x1
 17218 2df0 53       		.byte	0x53
 17219 2df1 00000000 		.4byte	0
 17220 2df5 00000000 		.4byte	0
 17221              	.LLST199:
 17222 2df9 12000000 		.4byte	.LVL892
 17223 2dfd 14000000 		.4byte	.LVL893
 17224 2e01 0100     		.2byte	0x1
 17225 2e03 50       		.byte	0x50
 17226 2e04 14000000 		.4byte	.LVL893
 17227 2e08 66010000 		.4byte	.LVL933
 17228 2e0c 0100     		.2byte	0x1
 17229 2e0e 55       		.byte	0x55
 17230 2e0f 86010000 		.4byte	.LVL937
 17231 2e13 88010000 		.4byte	.LVL938
 17232 2e17 0100     		.2byte	0x1
 17233 2e19 55       		.byte	0x55
 17234 2e1a 00000000 		.4byte	0
 17235 2e1e 00000000 		.4byte	0
 17236              	.LLST200:
 17237 2e22 00000000 		.4byte	.LVL940
 17238 2e26 0C000000 		.4byte	.LVL941
 17239 2e2a 0100     		.2byte	0x1
 17240 2e2c 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 373


 17241 2e2d 0C000000 		.4byte	.LVL941
 17242 2e31 13000000 		.4byte	.LVL944-1
 17243 2e35 0200     		.2byte	0x2
 17244 2e37 70       		.byte	0x70
 17245 2e38 00       		.sleb128 0
 17246 2e39 13000000 		.4byte	.LVL944-1
 17247 2e3d 50000000 		.4byte	.LFE42
 17248 2e41 0200     		.2byte	0x2
 17249 2e43 91       		.byte	0x91
 17250 2e44 44       		.sleb128 -60
 17251 2e45 00000000 		.4byte	0
 17252 2e49 00000000 		.4byte	0
 17253              	.LLST201:
 17254 2e4d 00000000 		.4byte	.LVL940
 17255 2e51 0E000000 		.4byte	.LVL942
 17256 2e55 0100     		.2byte	0x1
 17257 2e57 51       		.byte	0x51
 17258 2e58 0E000000 		.4byte	.LVL942
 17259 2e5c 50000000 		.4byte	.LFE42
 17260 2e60 0400     		.2byte	0x4
 17261 2e62 F3       		.byte	0xf3
 17262 2e63 01       		.uleb128 0x1
 17263 2e64 51       		.byte	0x51
 17264 2e65 9F       		.byte	0x9f
 17265 2e66 00000000 		.4byte	0
 17266 2e6a 00000000 		.4byte	0
 17267              	.LLST202:
 17268 2e6e 00000000 		.4byte	.LVL940
 17269 2e72 10000000 		.4byte	.LVL943
 17270 2e76 0100     		.2byte	0x1
 17271 2e78 52       		.byte	0x52
 17272 2e79 10000000 		.4byte	.LVL943
 17273 2e7d 32000000 		.4byte	.LVL948
 17274 2e81 0400     		.2byte	0x4
 17275 2e83 F3       		.byte	0xf3
 17276 2e84 01       		.uleb128 0x1
 17277 2e85 52       		.byte	0x52
 17278 2e86 9F       		.byte	0x9f
 17279 2e87 32000000 		.4byte	.LVL948
 17280 2e8b 4A000000 		.4byte	.LVL952
 17281 2e8f 0100     		.2byte	0x1
 17282 2e91 54       		.byte	0x54
 17283 2e92 4A000000 		.4byte	.LVL952
 17284 2e96 4C000000 		.4byte	.LVL953
 17285 2e9a 0400     		.2byte	0x4
 17286 2e9c F3       		.byte	0xf3
 17287 2e9d 01       		.uleb128 0x1
 17288 2e9e 52       		.byte	0x52
 17289 2e9f 9F       		.byte	0x9f
 17290 2ea0 00000000 		.4byte	0
 17291 2ea4 00000000 		.4byte	0
 17292              	.LLST203:
 17293 2ea8 14000000 		.4byte	.LVL944
 17294 2eac 1E000000 		.4byte	.LVL945
 17295 2eb0 0100     		.2byte	0x1
 17296 2eb2 50       		.byte	0x50
 17297 2eb3 24000000 		.4byte	.LVL946
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 374


 17298 2eb7 44000000 		.4byte	.LVL950
 17299 2ebb 0100     		.2byte	0x1
 17300 2ebd 50       		.byte	0x50
 17301 2ebe 48000000 		.4byte	.LVL951
 17302 2ec2 50000000 		.4byte	.LFE42
 17303 2ec6 0100     		.2byte	0x1
 17304 2ec8 50       		.byte	0x50
 17305 2ec9 00000000 		.4byte	0
 17306 2ecd 00000000 		.4byte	0
 17307              	.LLST204:
 17308 2ed1 2A000000 		.4byte	.LVL947
 17309 2ed5 40000000 		.4byte	.LVL949
 17310 2ed9 0100     		.2byte	0x1
 17311 2edb 52       		.byte	0x52
 17312 2edc 4A000000 		.4byte	.LVL952
 17313 2ee0 4C000000 		.4byte	.LVL953
 17314 2ee4 0100     		.2byte	0x1
 17315 2ee6 52       		.byte	0x52
 17316 2ee7 00000000 		.4byte	0
 17317 2eeb 00000000 		.4byte	0
 17318              	.LLST205:
 17319 2eef 00000000 		.4byte	.LVL954
 17320 2ef3 0A000000 		.4byte	.LVL955
 17321 2ef7 0100     		.2byte	0x1
 17322 2ef9 50       		.byte	0x50
 17323 2efa 0A000000 		.4byte	.LVL955
 17324 2efe 11000000 		.4byte	.LVL957-1
 17325 2f02 0200     		.2byte	0x2
 17326 2f04 70       		.byte	0x70
 17327 2f05 00       		.sleb128 0
 17328 2f06 11000000 		.4byte	.LVL957-1
 17329 2f0a 54000000 		.4byte	.LFE43
 17330 2f0e 0200     		.2byte	0x2
 17331 2f10 91       		.byte	0x91
 17332 2f11 4C       		.sleb128 -52
 17333 2f12 00000000 		.4byte	0
 17334 2f16 00000000 		.4byte	0
 17335              	.LLST206:
 17336 2f1a 00000000 		.4byte	.LVL954
 17337 2f1e 0C000000 		.4byte	.LVL956
 17338 2f22 0100     		.2byte	0x1
 17339 2f24 51       		.byte	0x51
 17340 2f25 0C000000 		.4byte	.LVL956
 17341 2f29 52000000 		.4byte	.LVL966
 17342 2f2d 0100     		.2byte	0x1
 17343 2f2f 54       		.byte	0x54
 17344 2f30 52000000 		.4byte	.LVL966
 17345 2f34 54000000 		.4byte	.LFE43
 17346 2f38 0400     		.2byte	0x4
 17347 2f3a F3       		.byte	0xf3
 17348 2f3b 01       		.uleb128 0x1
 17349 2f3c 51       		.byte	0x51
 17350 2f3d 9F       		.byte	0x9f
 17351 2f3e 00000000 		.4byte	0
 17352 2f42 00000000 		.4byte	0
 17353              	.LLST207:
 17354 2f46 12000000 		.4byte	.LVL957
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 375


 17355 2f4a 1C000000 		.4byte	.LVL958
 17356 2f4e 0100     		.2byte	0x1
 17357 2f50 50       		.byte	0x50
 17358 2f51 22000000 		.4byte	.LVL959
 17359 2f55 48000000 		.4byte	.LVL962
 17360 2f59 0100     		.2byte	0x1
 17361 2f5b 50       		.byte	0x50
 17362 2f5c 4C000000 		.4byte	.LVL963
 17363 2f60 54000000 		.4byte	.LFE43
 17364 2f64 0100     		.2byte	0x1
 17365 2f66 50       		.byte	0x50
 17366 2f67 00000000 		.4byte	0
 17367 2f6b 00000000 		.4byte	0
 17368              	.LLST208:
 17369 2f6f 28000000 		.4byte	.LVL960
 17370 2f73 42000000 		.4byte	.LVL961
 17371 2f77 0100     		.2byte	0x1
 17372 2f79 53       		.byte	0x53
 17373 2f7a 4E000000 		.4byte	.LVL964
 17374 2f7e 50000000 		.4byte	.LVL965
 17375 2f82 0100     		.2byte	0x1
 17376 2f84 53       		.byte	0x53
 17377 2f85 00000000 		.4byte	0
 17378 2f89 00000000 		.4byte	0
 17379              	.LLST209:
 17380 2f8d 00000000 		.4byte	.LVL967
 17381 2f91 0A000000 		.4byte	.LVL968
 17382 2f95 0100     		.2byte	0x1
 17383 2f97 50       		.byte	0x50
 17384 2f98 0A000000 		.4byte	.LVL968
 17385 2f9c 11000000 		.4byte	.LVL970-1
 17386 2fa0 0200     		.2byte	0x2
 17387 2fa2 70       		.byte	0x70
 17388 2fa3 00       		.sleb128 0
 17389 2fa4 11000000 		.4byte	.LVL970-1
 17390 2fa8 26010000 		.4byte	.LFE44
 17391 2fac 0300     		.2byte	0x3
 17392 2fae 91       		.byte	0x91
 17393 2faf 8C7F     		.sleb128 -116
 17394 2fb1 00000000 		.4byte	0
 17395 2fb5 00000000 		.4byte	0
 17396              	.LLST210:
 17397 2fb9 00000000 		.4byte	.LVL967
 17398 2fbd 0C000000 		.4byte	.LVL969
 17399 2fc1 0100     		.2byte	0x1
 17400 2fc3 51       		.byte	0x51
 17401 2fc4 0C000000 		.4byte	.LVL969
 17402 2fc8 72000000 		.4byte	.LVL985
 17403 2fcc 0100     		.2byte	0x1
 17404 2fce 55       		.byte	0x55
 17405 2fcf 72000000 		.4byte	.LVL985
 17406 2fd3 1E010000 		.4byte	.LVL1005
 17407 2fd7 0400     		.2byte	0x4
 17408 2fd9 F3       		.byte	0xf3
 17409 2fda 01       		.uleb128 0x1
 17410 2fdb 51       		.byte	0x51
 17411 2fdc 9F       		.byte	0x9f
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 376


 17412 2fdd 1E010000 		.4byte	.LVL1005
 17413 2fe1 20010000 		.4byte	.LVL1006
 17414 2fe5 0100     		.2byte	0x1
 17415 2fe7 55       		.byte	0x55
 17416 2fe8 20010000 		.4byte	.LVL1006
 17417 2fec 26010000 		.4byte	.LFE44
 17418 2ff0 0400     		.2byte	0x4
 17419 2ff2 F3       		.byte	0xf3
 17420 2ff3 01       		.uleb128 0x1
 17421 2ff4 51       		.byte	0x51
 17422 2ff5 9F       		.byte	0x9f
 17423 2ff6 00000000 		.4byte	0
 17424 2ffa 00000000 		.4byte	0
 17425              	.LLST211:
 17426 2ffe 14000000 		.4byte	.LVL971
 17427 3002 22000000 		.4byte	.LVL972
 17428 3006 0100     		.2byte	0x1
 17429 3008 50       		.byte	0x50
 17430 3009 22000000 		.4byte	.LVL972
 17431 300d 2A000000 		.4byte	.LVL974
 17432 3011 0100     		.2byte	0x1
 17433 3013 54       		.byte	0x54
 17434 3014 2A000000 		.4byte	.LVL974
 17435 3018 2E000000 		.4byte	.LVL975
 17436 301c 0100     		.2byte	0x1
 17437 301e 50       		.byte	0x50
 17438 301f 2E000000 		.4byte	.LVL975
 17439 3023 5E000000 		.4byte	.LVL981
 17440 3027 0100     		.2byte	0x1
 17441 3029 54       		.byte	0x54
 17442 302a 5E000000 		.4byte	.LVL981
 17443 302e 62000000 		.4byte	.LVL982
 17444 3032 0100     		.2byte	0x1
 17445 3034 50       		.byte	0x50
 17446 3035 62000000 		.4byte	.LVL982
 17447 3039 6E000000 		.4byte	.LVL984
 17448 303d 0100     		.2byte	0x1
 17449 303f 54       		.byte	0x54
 17450 3040 6E000000 		.4byte	.LVL984
 17451 3044 74000000 		.4byte	.LVL986
 17452 3048 0100     		.2byte	0x1
 17453 304a 50       		.byte	0x50
 17454 304b 74000000 		.4byte	.LVL986
 17455 304f A0000000 		.4byte	.LVL988
 17456 3053 0100     		.2byte	0x1
 17457 3055 54       		.byte	0x54
 17458 3056 C8000000 		.4byte	.LVL993
 17459 305a EE000000 		.4byte	.LVL996
 17460 305e 0100     		.2byte	0x1
 17461 3060 50       		.byte	0x50
 17462 3061 EE000000 		.4byte	.LVL996
 17463 3065 04010000 		.4byte	.LVL998
 17464 3069 0100     		.2byte	0x1
 17465 306b 54       		.byte	0x54
 17466 306c 06010000 		.4byte	.LVL999
 17467 3070 12010000 		.4byte	.LVL1001
 17468 3074 0100     		.2byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 377


 17469 3076 54       		.byte	0x54
 17470 3077 12010000 		.4byte	.LVL1001
 17471 307b 16010000 		.4byte	.LVL1002
 17472 307f 0100     		.2byte	0x1
 17473 3081 50       		.byte	0x50
 17474 3082 16010000 		.4byte	.LVL1002
 17475 3086 1C010000 		.4byte	.LVL1004
 17476 308a 0100     		.2byte	0x1
 17477 308c 54       		.byte	0x54
 17478 308d 1C010000 		.4byte	.LVL1004
 17479 3091 1E010000 		.4byte	.LVL1005
 17480 3095 0100     		.2byte	0x1
 17481 3097 50       		.byte	0x50
 17482 3098 1E010000 		.4byte	.LVL1005
 17483 309c 24010000 		.4byte	.LVL1007
 17484 30a0 0100     		.2byte	0x1
 17485 30a2 54       		.byte	0x54
 17486 30a3 00000000 		.4byte	0
 17487 30a7 00000000 		.4byte	0
 17488              	.LLST212:
 17489 30ab 72000000 		.4byte	.LVL985
 17490 30af CA000000 		.4byte	.LVL994
 17491 30b3 0100     		.2byte	0x1
 17492 30b5 55       		.byte	0x55
 17493 30b6 CA000000 		.4byte	.LVL994
 17494 30ba 04010000 		.4byte	.LVL998
 17495 30be 0400     		.2byte	0x4
 17496 30c0 72       		.byte	0x72
 17497 30c1 D000     		.sleb128 80
 17498 30c3 9F       		.byte	0x9f
 17499 30c4 04010000 		.4byte	.LVL998
 17500 30c8 06010000 		.4byte	.LVL999
 17501 30cc 0100     		.2byte	0x1
 17502 30ce 55       		.byte	0x55
 17503 30cf 00000000 		.4byte	0
 17504 30d3 00000000 		.4byte	0
 17505              	.LLST213:
 17506 30d7 BE000000 		.4byte	.LVL990
 17507 30db C2000000 		.4byte	.LVL991
 17508 30df 0100     		.2byte	0x1
 17509 30e1 50       		.byte	0x50
 17510 30e2 C2000000 		.4byte	.LVL991
 17511 30e6 C5000000 		.4byte	.LVL992-1
 17512 30ea 0100     		.2byte	0x1
 17513 30ec 51       		.byte	0x51
 17514 30ed E8000000 		.4byte	.LVL995
 17515 30f1 F4000000 		.4byte	.LVL997
 17516 30f5 0100     		.2byte	0x1
 17517 30f7 53       		.byte	0x53
 17518 30f8 04010000 		.4byte	.LVL998
 17519 30fc 06010000 		.4byte	.LVL999
 17520 3100 0100     		.2byte	0x1
 17521 3102 50       		.byte	0x50
 17522 3103 00000000 		.4byte	0
 17523 3107 00000000 		.4byte	0
 17524              		.section	.debug_aranges,"",%progbits
 17525 0000 7C010000 		.4byte	0x17c
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 378


 17526 0004 0200     		.2byte	0x2
 17527 0006 00000000 		.4byte	.Ldebug_info0
 17528 000a 04       		.byte	0x4
 17529 000b 00       		.byte	0
 17530 000c 0000     		.2byte	0
 17531 000e 0000     		.2byte	0
 17532 0010 00000000 		.4byte	.LFB0
 17533 0014 14000000 		.4byte	.LFE0-.LFB0
 17534 0018 00000000 		.4byte	.LFB1
 17535 001c 10000000 		.4byte	.LFE1-.LFB1
 17536 0020 00000000 		.4byte	.LFB2
 17537 0024 24000000 		.4byte	.LFE2-.LFB2
 17538 0028 00000000 		.4byte	.LFB3
 17539 002c 12000000 		.4byte	.LFE3-.LFB3
 17540 0030 00000000 		.4byte	.LFB4
 17541 0034 8C000000 		.4byte	.LFE4-.LFB4
 17542 0038 00000000 		.4byte	.LFB5
 17543 003c 28000000 		.4byte	.LFE5-.LFB5
 17544 0040 00000000 		.4byte	.LFB6
 17545 0044 C8000000 		.4byte	.LFE6-.LFB6
 17546 0048 00000000 		.4byte	.LFB7
 17547 004c 4C000000 		.4byte	.LFE7-.LFB7
 17548 0050 00000000 		.4byte	.LFB8
 17549 0054 2C000000 		.4byte	.LFE8-.LFB8
 17550 0058 00000000 		.4byte	.LFB22
 17551 005c 2C010000 		.4byte	.LFE22-.LFB22
 17552 0060 00000000 		.4byte	.LFB23
 17553 0064 7C000000 		.4byte	.LFE23-.LFB23
 17554 0068 00000000 		.4byte	.LFB9
 17555 006c 88000000 		.4byte	.LFE9-.LFB9
 17556 0070 00000000 		.4byte	.LFB25
 17557 0074 98000000 		.4byte	.LFE25-.LFB25
 17558 0078 00000000 		.4byte	.LFB27
 17559 007c 30000000 		.4byte	.LFE27-.LFB27
 17560 0080 00000000 		.4byte	.LFB26
 17561 0084 C2030000 		.4byte	.LFE26-.LFB26
 17562 0088 00000000 		.4byte	.LFB10
 17563 008c E4000000 		.4byte	.LFE10-.LFB10
 17564 0090 00000000 		.4byte	.LFB11
 17565 0094 18000000 		.4byte	.LFE11-.LFB11
 17566 0098 00000000 		.4byte	.LFB12
 17567 009c FA000000 		.4byte	.LFE12-.LFB12
 17568 00a0 00000000 		.4byte	.LFB16
 17569 00a4 98000000 		.4byte	.LFE16-.LFB16
 17570 00a8 00000000 		.4byte	.LFB21
 17571 00ac 28000000 		.4byte	.LFE21-.LFB21
 17572 00b0 00000000 		.4byte	.LFB13
 17573 00b4 0E010000 		.4byte	.LFE13-.LFB13
 17574 00b8 00000000 		.4byte	.LFB15
 17575 00bc AC000000 		.4byte	.LFE15-.LFB15
 17576 00c0 00000000 		.4byte	.LFB17
 17577 00c4 14010000 		.4byte	.LFE17-.LFB17
 17578 00c8 00000000 		.4byte	.LFB18
 17579 00cc 48000000 		.4byte	.LFE18-.LFB18
 17580 00d0 00000000 		.4byte	.LFB24
 17581 00d4 84000000 		.4byte	.LFE24-.LFB24
 17582 00d8 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 379


 17583 00dc 62000000 		.4byte	.LFE20-.LFB20
 17584 00e0 00000000 		.4byte	.LFB19
 17585 00e4 48000000 		.4byte	.LFE19-.LFB19
 17586 00e8 00000000 		.4byte	.LFB14
 17587 00ec 60000000 		.4byte	.LFE14-.LFB14
 17588 00f0 00000000 		.4byte	.LFB28
 17589 00f4 3C000000 		.4byte	.LFE28-.LFB28
 17590 00f8 00000000 		.4byte	.LFB29
 17591 00fc 9E010000 		.4byte	.LFE29-.LFB29
 17592 0100 00000000 		.4byte	.LFB30
 17593 0104 80010000 		.4byte	.LFE30-.LFB30
 17594 0108 00000000 		.4byte	.LFB31
 17595 010c F8010000 		.4byte	.LFE31-.LFB31
 17596 0110 00000000 		.4byte	.LFB32
 17597 0114 7A000000 		.4byte	.LFE32-.LFB32
 17598 0118 00000000 		.4byte	.LFB33
 17599 011c 1C000000 		.4byte	.LFE33-.LFB33
 17600 0120 00000000 		.4byte	.LFB34
 17601 0124 6C010000 		.4byte	.LFE34-.LFB34
 17602 0128 00000000 		.4byte	.LFB35
 17603 012c 6A000000 		.4byte	.LFE35-.LFB35
 17604 0130 00000000 		.4byte	.LFB36
 17605 0134 5E000000 		.4byte	.LFE36-.LFB36
 17606 0138 00000000 		.4byte	.LFB37
 17607 013c 3E000000 		.4byte	.LFE37-.LFB37
 17608 0140 00000000 		.4byte	.LFB38
 17609 0144 F4000000 		.4byte	.LFE38-.LFB38
 17610 0148 00000000 		.4byte	.LFB39
 17611 014c 9C000000 		.4byte	.LFE39-.LFB39
 17612 0150 00000000 		.4byte	.LFB40
 17613 0154 C6000000 		.4byte	.LFE40-.LFB40
 17614 0158 00000000 		.4byte	.LFB41
 17615 015c 94010000 		.4byte	.LFE41-.LFB41
 17616 0160 00000000 		.4byte	.LFB42
 17617 0164 50000000 		.4byte	.LFE42-.LFB42
 17618 0168 00000000 		.4byte	.LFB43
 17619 016c 54000000 		.4byte	.LFE43-.LFB43
 17620 0170 00000000 		.4byte	.LFB44
 17621 0174 26010000 		.4byte	.LFE44-.LFB44
 17622 0178 00000000 		.4byte	0
 17623 017c 00000000 		.4byte	0
 17624              		.section	.debug_ranges,"",%progbits
 17625              	.Ldebug_ranges0:
 17626 0000 58000000 		.4byte	.LBB3
 17627 0004 C4000000 		.4byte	.LBE3
 17628 0008 F8000000 		.4byte	.LBB4
 17629 000c 0E010000 		.4byte	.LBE4
 17630 0010 00000000 		.4byte	0
 17631 0014 00000000 		.4byte	0
 17632 0018 00000000 		.4byte	.LFB0
 17633 001c 14000000 		.4byte	.LFE0
 17634 0020 00000000 		.4byte	.LFB1
 17635 0024 10000000 		.4byte	.LFE1
 17636 0028 00000000 		.4byte	.LFB2
 17637 002c 24000000 		.4byte	.LFE2
 17638 0030 00000000 		.4byte	.LFB3
 17639 0034 12000000 		.4byte	.LFE3
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 380


 17640 0038 00000000 		.4byte	.LFB4
 17641 003c 8C000000 		.4byte	.LFE4
 17642 0040 00000000 		.4byte	.LFB5
 17643 0044 28000000 		.4byte	.LFE5
 17644 0048 00000000 		.4byte	.LFB6
 17645 004c C8000000 		.4byte	.LFE6
 17646 0050 00000000 		.4byte	.LFB7
 17647 0054 4C000000 		.4byte	.LFE7
 17648 0058 00000000 		.4byte	.LFB8
 17649 005c 2C000000 		.4byte	.LFE8
 17650 0060 00000000 		.4byte	.LFB22
 17651 0064 2C010000 		.4byte	.LFE22
 17652 0068 00000000 		.4byte	.LFB23
 17653 006c 7C000000 		.4byte	.LFE23
 17654 0070 00000000 		.4byte	.LFB9
 17655 0074 88000000 		.4byte	.LFE9
 17656 0078 00000000 		.4byte	.LFB25
 17657 007c 98000000 		.4byte	.LFE25
 17658 0080 00000000 		.4byte	.LFB27
 17659 0084 30000000 		.4byte	.LFE27
 17660 0088 00000000 		.4byte	.LFB26
 17661 008c C2030000 		.4byte	.LFE26
 17662 0090 00000000 		.4byte	.LFB10
 17663 0094 E4000000 		.4byte	.LFE10
 17664 0098 00000000 		.4byte	.LFB11
 17665 009c 18000000 		.4byte	.LFE11
 17666 00a0 00000000 		.4byte	.LFB12
 17667 00a4 FA000000 		.4byte	.LFE12
 17668 00a8 00000000 		.4byte	.LFB16
 17669 00ac 98000000 		.4byte	.LFE16
 17670 00b0 00000000 		.4byte	.LFB21
 17671 00b4 28000000 		.4byte	.LFE21
 17672 00b8 00000000 		.4byte	.LFB13
 17673 00bc 0E010000 		.4byte	.LFE13
 17674 00c0 00000000 		.4byte	.LFB15
 17675 00c4 AC000000 		.4byte	.LFE15
 17676 00c8 00000000 		.4byte	.LFB17
 17677 00cc 14010000 		.4byte	.LFE17
 17678 00d0 00000000 		.4byte	.LFB18
 17679 00d4 48000000 		.4byte	.LFE18
 17680 00d8 00000000 		.4byte	.LFB24
 17681 00dc 84000000 		.4byte	.LFE24
 17682 00e0 00000000 		.4byte	.LFB20
 17683 00e4 62000000 		.4byte	.LFE20
 17684 00e8 00000000 		.4byte	.LFB19
 17685 00ec 48000000 		.4byte	.LFE19
 17686 00f0 00000000 		.4byte	.LFB14
 17687 00f4 60000000 		.4byte	.LFE14
 17688 00f8 00000000 		.4byte	.LFB28
 17689 00fc 3C000000 		.4byte	.LFE28
 17690 0100 00000000 		.4byte	.LFB29
 17691 0104 9E010000 		.4byte	.LFE29
 17692 0108 00000000 		.4byte	.LFB30
 17693 010c 80010000 		.4byte	.LFE30
 17694 0110 00000000 		.4byte	.LFB31
 17695 0114 F8010000 		.4byte	.LFE31
 17696 0118 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 381


 17697 011c 7A000000 		.4byte	.LFE32
 17698 0120 00000000 		.4byte	.LFB33
 17699 0124 1C000000 		.4byte	.LFE33
 17700 0128 00000000 		.4byte	.LFB34
 17701 012c 6C010000 		.4byte	.LFE34
 17702 0130 00000000 		.4byte	.LFB35
 17703 0134 6A000000 		.4byte	.LFE35
 17704 0138 00000000 		.4byte	.LFB36
 17705 013c 5E000000 		.4byte	.LFE36
 17706 0140 00000000 		.4byte	.LFB37
 17707 0144 3E000000 		.4byte	.LFE37
 17708 0148 00000000 		.4byte	.LFB38
 17709 014c F4000000 		.4byte	.LFE38
 17710 0150 00000000 		.4byte	.LFB39
 17711 0154 9C000000 		.4byte	.LFE39
 17712 0158 00000000 		.4byte	.LFB40
 17713 015c C6000000 		.4byte	.LFE40
 17714 0160 00000000 		.4byte	.LFB41
 17715 0164 94010000 		.4byte	.LFE41
 17716 0168 00000000 		.4byte	.LFB42
 17717 016c 50000000 		.4byte	.LFE42
 17718 0170 00000000 		.4byte	.LFB43
 17719 0174 54000000 		.4byte	.LFE43
 17720 0178 00000000 		.4byte	.LFB44
 17721 017c 26010000 		.4byte	.LFE44
 17722 0180 00000000 		.4byte	0
 17723 0184 00000000 		.4byte	0
 17724              		.section	.debug_line,"",%progbits
 17725              	.Ldebug_line0:
 17726 0000 FD0B0000 		.section	.debug_str,"MS",%progbits,1
 17726      02002D01 
 17726      00000201 
 17726      FB0E0D00 
 17726      01010101 
 17727              	.LASF57:
 17728 0000 46525F4E 		.ascii	"FR_NOT_READY\000"
 17728      4F545F52 
 17728      45414459 
 17728      00
 17729              	.LASF78:
 17730 000d 5245535F 		.ascii	"RES_WRPRT\000"
 17730      57525052 
 17730      5400
 17731              	.LASF150:
 17732 0017 64636C73 		.ascii	"dclst\000"
 17732      7400
 17733              	.LASF153:
 17734 001d 76616C75 		.ascii	"value\000"
 17734      6500
 17735              	.LASF72:
 17736 0023 46525F54 		.ascii	"FR_TOO_MANY_OPEN_FILES\000"
 17736      4F4F5F4D 
 17736      414E595F 
 17736      4F50454E 
 17736      5F46494C 
 17737              	.LASF117:
 17738 003a 7075745F 		.ascii	"put_fat\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 382


 17738      66617400 
 17739              	.LASF21:
 17740 0042 66735F74 		.ascii	"fs_type\000"
 17740      79706500 
 17741              	.LASF133:
 17742 004a 63736563 		.ascii	"csect\000"
 17742      7400
 17743              	.LASF86:
 17744 0050 63686B5F 		.ascii	"chk_chr\000"
 17744      63687200 
 17745              	.LASF3:
 17746 0058 5F5F7569 		.ascii	"__uint8_t\000"
 17746      6E74385F 
 17746      7400
 17747              	.LASF129:
 17748 0062 665F7265 		.ascii	"f_read\000"
 17748      616400
 17749              	.LASF79:
 17750 0069 5245535F 		.ascii	"RES_NOTRDY\000"
 17750      4E4F5452 
 17750      445900
 17751              	.LASF26:
 17752 0074 6E5F726F 		.ascii	"n_rootdir\000"
 17752      6F746469 
 17752      7200
 17753              	.LASF46:
 17754 007e 6C6F636B 		.ascii	"lockid\000"
 17754      696400
 17755              	.LASF93:
 17756 0085 70617468 		.ascii	"path\000"
 17756      00
 17757              	.LASF134:
 17758 008a 72627566 		.ascii	"rbuff\000"
 17758      6600
 17759              	.LASF10:
 17760 0090 6C6F6E67 		.ascii	"long long unsigned int\000"
 17760      206C6F6E 
 17760      6720756E 
 17760      7369676E 
 17760      65642069 
 17761              	.LASF89:
 17762 00a7 696E635F 		.ascii	"inc_lock\000"
 17762      6C6F636B 
 17762      00
 17763              	.LASF87:
 17764 00b0 63686B5F 		.ascii	"chk_lock\000"
 17764      6C6F636B 
 17764      00
 17765              	.LASF155:
 17766 00b9 665F7574 		.ascii	"f_utime\000"
 17766      696D6500 
 17767              	.LASF48:
 17768 00c1 73656374 		.ascii	"sect\000"
 17768      00
 17769              	.LASF94:
 17770 00c6 65786376 		.ascii	"excvt\000"
 17770      7400
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 383


 17771              	.LASF63:
 17772 00cc 46525F49 		.ascii	"FR_INVALID_OBJECT\000"
 17772      4E56414C 
 17772      49445F4F 
 17772      424A4543 
 17772      5400
 17773              	.LASF105:
 17774 00de 66617369 		.ascii	"fasize\000"
 17774      7A6500
 17775              	.LASF27:
 17776 00e5 6C617374 		.ascii	"last_clust\000"
 17776      5F636C75 
 17776      737400
 17777              	.LASF44:
 17778 00f0 6469725F 		.ascii	"dir_sect\000"
 17778      73656374 
 17778      00
 17779              	.LASF157:
 17780 00f9 70617468 		.ascii	"path_old\000"
 17780      5F6F6C64 
 17780      00
 17781              	.LASF33:
 17782 0102 64697262 		.ascii	"dirbase\000"
 17782      61736500 
 17783              	.LASF9:
 17784 010a 6C6F6E67 		.ascii	"long long int\000"
 17784      206C6F6E 
 17784      6720696E 
 17784      7400
 17785              	.LASF0:
 17786 0118 7369676E 		.ascii	"signed char\000"
 17786      65642063 
 17786      68617200 
 17787              	.LASF91:
 17788 0124 636C6561 		.ascii	"clear_lock\000"
 17788      725F6C6F 
 17788      636B00
 17789              	.LASF130:
 17790 012f 62756666 		.ascii	"buff\000"
 17790      00
 17791              	.LASF73:
 17792 0134 46525F49 		.ascii	"FR_INVALID_PARAMETER\000"
 17792      4E56414C 
 17792      49445F50 
 17792      4152414D 
 17792      45544552 
 17793              	.LASF31:
 17794 0149 6673697A 		.ascii	"fsize\000"
 17794      6500
 17795              	.LASF30:
 17796 014f 6E5F6661 		.ascii	"n_fatent\000"
 17796      74656E74 
 17796      00
 17797              	.LASF6:
 17798 0158 6C6F6E67 		.ascii	"long int\000"
 17798      20696E74 
 17798      00
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 384


 17799              	.LASF116:
 17800 0161 6469725F 		.ascii	"dir_remove\000"
 17800      72656D6F 
 17800      766500
 17801              	.LASF80:
 17802 016c 5245535F 		.ascii	"RES_PARERR\000"
 17802      50415245 
 17802      525200
 17803              	.LASF23:
 17804 0177 6E5F6661 		.ascii	"n_fats\000"
 17804      747300
 17805              	.LASF88:
 17806 017e 656E715F 		.ascii	"enq_lock\000"
 17806      6C6F636B 
 17806      00
 17807              	.LASF159:
 17808 0187 46617446 		.ascii	"FatFs\000"
 17808      7300
 17809              	.LASF67:
 17810 018d 46525F4E 		.ascii	"FR_NO_FILESYSTEM\000"
 17810      4F5F4649 
 17810      4C455359 
 17810      5354454D 
 17810      00
 17811              	.LASF13:
 17812 019e 75696E74 		.ascii	"uint16_t\000"
 17812      31365F74 
 17812      00
 17813              	.LASF118:
 17814 01a7 63726561 		.ascii	"create_chain\000"
 17814      74655F63 
 17814      6861696E 
 17814      00
 17815              	.LASF71:
 17816 01b4 46525F4E 		.ascii	"FR_NOT_ENOUGH_CORE\000"
 17816      4F545F45 
 17816      4E4F5547 
 17816      485F434F 
 17816      524500
 17817              	.LASF62:
 17818 01c7 46525F45 		.ascii	"FR_EXIST\000"
 17818      58495354 
 17818      00
 17819              	.LASF32:
 17820 01d0 66617462 		.ascii	"fatbase\000"
 17820      61736500 
 17821              	.LASF18:
 17822 01d8 44574F52 		.ascii	"DWORD\000"
 17822      4400
 17823              	.LASF135:
 17824 01de 665F7772 		.ascii	"f_write\000"
 17824      69746500 
 17825              	.LASF121:
 17826 01e6 6469725F 		.ascii	"dir_find\000"
 17826      66696E64 
 17826      00
 17827              	.LASF145:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 385


 17828 01ef 665F7374 		.ascii	"f_stat\000"
 17828      617400
 17829              	.LASF7:
 17830 01f6 5F5F7569 		.ascii	"__uint32_t\000"
 17830      6E743332 
 17830      5F7400
 17831              	.LASF22:
 17832 0201 6373697A 		.ascii	"csize\000"
 17832      6500
 17833              	.LASF165:
 17834 0207 6469736B 		.ascii	"disk_initialize\000"
 17834      5F696E69 
 17834      7469616C 
 17834      697A6500 
 17835              	.LASF82:
 17836 0217 46494C45 		.ascii	"FILESEM\000"
 17836      53454D00 
 17837              	.LASF16:
 17838 021f 42595445 		.ascii	"BYTE\000"
 17838      00
 17839              	.LASF45:
 17840 0224 6469725F 		.ascii	"dir_ptr\000"
 17840      70747200 
 17841              	.LASF120:
 17842 022c 73747265 		.ascii	"stretch\000"
 17842      74636800 
 17843              	.LASF11:
 17844 0234 756E7369 		.ascii	"unsigned int\000"
 17844      676E6564 
 17844      20696E74 
 17844      00
 17845              	.LASF15:
 17846 0241 55494E54 		.ascii	"UINT\000"
 17846      00
 17847              	.LASF50:
 17848 0246 6674696D 		.ascii	"ftime\000"
 17848      6500
 17849              	.LASF8:
 17850 024c 6C6F6E67 		.ascii	"long unsigned int\000"
 17850      20756E73 
 17850      69676E65 
 17850      6420696E 
 17850      7400
 17851              	.LASF164:
 17852 025e 6469736B 		.ascii	"disk_status\000"
 17852      5F737461 
 17852      74757300 
 17853              	.LASF139:
 17854 026a 665F636C 		.ascii	"f_close\000"
 17854      6F736500 
 17855              	.LASF104:
 17856 0272 62736563 		.ascii	"bsect\000"
 17856      7400
 17857              	.LASF107:
 17858 0278 73797365 		.ascii	"sysect\000"
 17858      637400
 17859              	.LASF5:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 386


 17860 027f 73686F72 		.ascii	"short unsigned int\000"
 17860      7420756E 
 17860      7369676E 
 17860      65642069 
 17860      6E7400
 17861              	.LASF34:
 17862 0292 64617461 		.ascii	"database\000"
 17862      62617365 
 17862      00
 17863              	.LASF156:
 17864 029b 665F7265 		.ascii	"f_rename\000"
 17864      6E616D65 
 17864      00
 17865              	.LASF112:
 17866 02a4 636C7374 		.ascii	"clst\000"
 17866      00
 17867              	.LASF56:
 17868 02a9 46525F49 		.ascii	"FR_INT_ERR\000"
 17868      4E545F45 
 17868      525200
 17869              	.LASF140:
 17870 02b4 665F6C73 		.ascii	"f_lseek\000"
 17870      65656B00 
 17871              	.LASF55:
 17872 02bc 46525F44 		.ascii	"FR_DISK_ERR\000"
 17872      49534B5F 
 17872      45525200 
 17873              	.LASF35:
 17874 02c8 77696E73 		.ascii	"winsect\000"
 17874      65637400 
 17875              	.LASF85:
 17876 02d0 6D656D5F 		.ascii	"mem_cmp\000"
 17876      636D7000 
 17877              	.LASF97:
 17878 02d8 73656374 		.ascii	"sector\000"
 17878      6F7200
 17879              	.LASF109:
 17880 02df 737A6266 		.ascii	"szbfat\000"
 17880      617400
 17881              	.LASF119:
 17882 02e6 6469725F 		.ascii	"dir_next\000"
 17882      6E657874 
 17882      00
 17883              	.LASF52:
 17884 02ef 666E616D 		.ascii	"fname\000"
 17884      6500
 17885              	.LASF142:
 17886 02f5 69667074 		.ascii	"ifptr\000"
 17886      7200
 17887              	.LASF64:
 17888 02fb 46525F57 		.ascii	"FR_WRITE_PROTECTED\000"
 17888      52495445 
 17888      5F50524F 
 17888      54454354 
 17888      454400
 17889              	.LASF166:
 17890 030e 6469736B 		.ascii	"disk_ioctl\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 387


 17890      5F696F63 
 17890      746C00
 17891              	.LASF37:
 17892 0319 46415446 		.ascii	"FATFS\000"
 17892      5300
 17893              	.LASF151:
 17894 031f 665F6D6B 		.ascii	"f_mkdir\000"
 17894      64697200 
 17895              	.LASF49:
 17896 0327 66646174 		.ascii	"fdate\000"
 17896      6500
 17897              	.LASF138:
 17898 032d 665F7379 		.ascii	"f_sync\000"
 17898      6E6300
 17899              	.LASF136:
 17900 0334 77636E74 		.ascii	"wcnt\000"
 17900      00
 17901              	.LASF40:
 17902 0339 66707472 		.ascii	"fptr\000"
 17902      00
 17903              	.LASF113:
 17904 033e 636C7573 		.ascii	"clust2sect\000"
 17904      74327365 
 17904      637400
 17905              	.LASF158:
 17906 0349 70617468 		.ascii	"path_new\000"
 17906      5F6E6577 
 17906      00
 17907              	.LASF84:
 17908 0352 6D656D5F 		.ascii	"mem_set\000"
 17908      73657400 
 17909              	.LASF36:
 17910 035a 73697A65 		.ascii	"sizetype\000"
 17910      74797065 
 17910      00
 17911              	.LASF95:
 17912 0363 6765745F 		.ascii	"get_fileinfo\000"
 17912      66696C65 
 17912      696E666F 
 17912      00
 17913              	.LASF101:
 17914 0370 63686B5F 		.ascii	"chk_mounted\000"
 17914      6D6F756E 
 17914      74656400 
 17915              	.LASF108:
 17916 037c 6E636C73 		.ascii	"nclst\000"
 17916      7400
 17917              	.LASF69:
 17918 0382 46525F54 		.ascii	"FR_TIMEOUT\000"
 17918      494D454F 
 17918      555400
 17919              	.LASF17:
 17920 038d 574F5244 		.ascii	"WORD\000"
 17920      00
 17921              	.LASF41:
 17922 0392 73636C75 		.ascii	"sclust\000"
 17922      737400
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 388


 17923              	.LASF76:
 17924 0399 5245535F 		.ascii	"RES_OK\000"
 17924      4F4B00
 17925              	.LASF28:
 17926 03a0 66726565 		.ascii	"free_clust\000"
 17926      5F636C75 
 17926      737400
 17927              	.LASF58:
 17928 03ab 46525F4E 		.ascii	"FR_NO_FILE\000"
 17928      4F5F4649 
 17928      4C4500
 17929              	.LASF147:
 17930 03b6 66617466 		.ascii	"fatfs\000"
 17930      7300
 17931              	.LASF19:
 17932 03bc 54434841 		.ascii	"TCHAR\000"
 17932      5200
 17933              	.LASF167:
 17934 03c2 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 17934      4320342E 
 17934      392E3320 
 17934      32303135 
 17934      30333033 
 17935 03f5 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 17935      20726576 
 17935      6973696F 
 17935      6E203232 
 17935      31323230 
 17936 0428 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 17936      66756E63 
 17936      74696F6E 
 17936      2D736563 
 17936      74696F6E 
 17937              	.LASF66:
 17938 0450 46525F4E 		.ascii	"FR_NOT_ENABLED\000"
 17938      4F545F45 
 17938      4E41424C 
 17938      454400
 17939              	.LASF170:
 17940 045f 6765745F 		.ascii	"get_fattime\000"
 17940      66617474 
 17940      696D6500 
 17941              	.LASF81:
 17942 046b 44524553 		.ascii	"DRESULT\000"
 17942      554C5400 
 17943              	.LASF146:
 17944 0473 665F6765 		.ascii	"f_getfree\000"
 17944      74667265 
 17944      6500
 17945              	.LASF126:
 17946 047d 665F6D6F 		.ascii	"f_mount\000"
 17946      756E7400 
 17947              	.LASF114:
 17948 0485 6765745F 		.ascii	"get_fat\000"
 17948      66617400 
 17949              	.LASF99:
 17950 048d 63686563 		.ascii	"check_fs\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 389


 17950      6B5F6673 
 17950      00
 17951              	.LASF43:
 17952 0496 64736563 		.ascii	"dsect\000"
 17952      7400
 17953              	.LASF1:
 17954 049c 756E7369 		.ascii	"unsigned char\000"
 17954      676E6564 
 17954      20636861 
 17954      7200
 17955              	.LASF149:
 17956 04aa 665F756E 		.ascii	"f_unlink\000"
 17956      6C696E6B 
 17956      00
 17957              	.LASF152:
 17958 04b3 665F6368 		.ascii	"f_chmod\000"
 17958      6D6F6400 
 17959              	.LASF137:
 17960 04bb 77627566 		.ascii	"wbuff\000"
 17960      6600
 17961              	.LASF2:
 17962 04c1 73686F72 		.ascii	"short int\000"
 17962      7420696E 
 17962      7400
 17963              	.LASF38:
 17964 04cb 666C6167 		.ascii	"flag\000"
 17964      00
 17965              	.LASF122:
 17966 04d0 666F6C6C 		.ascii	"follow_path\000"
 17966      6F775F70 
 17966      61746800 
 17967              	.LASF65:
 17968 04dc 46525F49 		.ascii	"FR_INVALID_DRIVE\000"
 17968      4E56414C 
 17968      49445F44 
 17968      52495645 
 17968      00
 17969              	.LASF61:
 17970 04ed 46525F44 		.ascii	"FR_DENIED\000"
 17970      454E4945 
 17970      4400
 17971              	.LASF100:
 17972 04f7 76616C69 		.ascii	"validate\000"
 17972      64617465 
 17972      00
 17973              	.LASF123:
 17974 0500 6469725F 		.ascii	"dir_register\000"
 17974      72656769 
 17974      73746572 
 17974      00
 17975              	.LASF68:
 17976 050d 46525F4D 		.ascii	"FR_MKFS_ABORTED\000"
 17976      4B46535F 
 17976      41424F52 
 17976      54454400 
 17977              	.LASF144:
 17978 051d 665F7265 		.ascii	"f_readdir\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 390


 17978      61646469 
 17978      7200
 17979              	.LASF70:
 17980 0527 46525F4C 		.ascii	"FR_LOCKED\000"
 17980      4F434B45 
 17980      4400
 17981              	.LASF24:
 17982 0531 77666C61 		.ascii	"wflag\000"
 17982      6700
 17983              	.LASF14:
 17984 0537 75696E74 		.ascii	"uint32_t\000"
 17984      33325F74 
 17984      00
 17985              	.LASF169:
 17986 0540 453A5C68 		.ascii	"E:\\home\\jarik\\src\\psoc\\mpi_rom_emu\\mpi_rom_em"
 17986      6F6D655C 
 17986      6A617269 
 17986      6B5C7372 
 17986      635C7073 
 17987 056d 752E6379 		.ascii	"u.cydsn\000"
 17987      64736E00 
 17988              	.LASF141:
 17989 0575 6E736563 		.ascii	"nsect\000"
 17989      7400
 17990              	.LASF20:
 17991 057b 63686172 		.ascii	"char\000"
 17991      00
 17992              	.LASF128:
 17993 0580 6D6F6465 		.ascii	"mode\000"
 17993      00
 17994              	.LASF92:
 17995 0585 63726561 		.ascii	"create_name\000"
 17995      74655F6E 
 17995      616D6500 
 17996              	.LASF4:
 17997 0591 5F5F7569 		.ascii	"__uint16_t\000"
 17997      6E743136 
 17997      5F7400
 17998              	.LASF54:
 17999 059c 46525F4F 		.ascii	"FR_OK\000"
 17999      4B00
 18000              	.LASF47:
 18001 05a2 696E6465 		.ascii	"index\000"
 18001      7800
 18002              	.LASF125:
 18003 05a8 72656D6F 		.ascii	"remove_chain\000"
 18003      76655F63 
 18003      6861696E 
 18003      00
 18004              	.LASF75:
 18005 05b5 44535441 		.ascii	"DSTATUS\000"
 18005      54555300 
 18006              	.LASF102:
 18007 05bd 63686B5F 		.ascii	"chk_wp\000"
 18007      777000
 18008              	.LASF168:
 18009 05c4 2E5C7364 		.ascii	".\\sd\\ff.c\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 391


 18009      5C66662E 
 18009      6300
 18010              	.LASF143:
 18011 05ce 665F6F70 		.ascii	"f_opendir\000"
 18011      656E6469 
 18011      7200
 18012              	.LASF110:
 18013 05d8 6E727376 		.ascii	"nrsv\000"
 18013      00
 18014              	.LASF60:
 18015 05dd 46525F49 		.ascii	"FR_INVALID_NAME\000"
 18015      4E56414C 
 18015      49445F4E 
 18015      414D4500 
 18016              	.LASF162:
 18017 05ed 6469736B 		.ascii	"disk_write\000"
 18017      5F777269 
 18017      746500
 18018              	.LASF96:
 18019 05f8 6D6F7665 		.ascii	"move_window\000"
 18019      5F77696E 
 18019      646F7700 
 18020              	.LASF25:
 18021 0604 6673695F 		.ascii	"fsi_flag\000"
 18021      666C6167 
 18021      00
 18022              	.LASF83:
 18023 060d 6D656D5F 		.ascii	"mem_cpy\000"
 18023      63707900 
 18024              	.LASF131:
 18025 0615 72656D61 		.ascii	"remain\000"
 18025      696E00
 18026              	.LASF39:
 18027 061c 70616431 		.ascii	"pad1\000"
 18027      00
 18028              	.LASF51:
 18029 0621 66617474 		.ascii	"fattrib\000"
 18029      72696200 
 18030              	.LASF161:
 18031 0629 46696C65 		.ascii	"Files\000"
 18031      7300
 18032              	.LASF154:
 18033 062f 6D61736B 		.ascii	"mask\000"
 18033      00
 18034              	.LASF98:
 18035 0634 77736563 		.ascii	"wsect\000"
 18035      7400
 18036              	.LASF148:
 18037 063a 665F7472 		.ascii	"f_truncate\000"
 18037      756E6361 
 18037      746500
 18038              	.LASF53:
 18039 0645 46494C49 		.ascii	"FILINFO\000"
 18039      4E464F00 
 18040              	.LASF12:
 18041 064d 75696E74 		.ascii	"uint8_t\000"
 18041      385F7400 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cc8Dfjww.s 			page 392


 18042              	.LASF132:
 18043 0655 72636E74 		.ascii	"rcnt\000"
 18043      00
 18044              	.LASF111:
 18045 065a 73796E63 		.ascii	"sync\000"
 18045      00
 18046              	.LASF29:
 18047 065f 6673695F 		.ascii	"fsi_sector\000"
 18047      73656374 
 18047      6F7200
 18048              	.LASF103:
 18049 066a 73746174 		.ascii	"stat\000"
 18049      00
 18050              	.LASF74:
 18051 066f 46524553 		.ascii	"FRESULT\000"
 18051      554C5400 
 18052              	.LASF77:
 18053 0677 5245535F 		.ascii	"RES_ERROR\000"
 18053      4552524F 
 18053      5200
 18054              	.LASF90:
 18055 0681 6465635F 		.ascii	"dec_lock\000"
 18055      6C6F636B 
 18055      00
 18056              	.LASF124:
 18057 068a 6469725F 		.ascii	"dir_read\000"
 18057      72656164 
 18057      00
 18058              	.LASF127:
 18059 0693 665F6F70 		.ascii	"f_open\000"
 18059      656E00
 18060              	.LASF59:
 18061 069a 46525F4E 		.ascii	"FR_NO_PATH\000"
 18061      4F5F5041 
 18061      544800
 18062              	.LASF163:
 18063 06a5 6469736B 		.ascii	"disk_read\000"
 18063      5F726561 
 18063      6400
 18064              	.LASF115:
 18065 06af 6469725F 		.ascii	"dir_sdi\000"
 18065      73646900 
 18066              	.LASF160:
 18067 06b7 46736964 		.ascii	"Fsid\000"
 18067      00
 18068              	.LASF42:
 18069 06bc 636C7573 		.ascii	"clust\000"
 18069      7400
 18070              	.LASF106:
 18071 06c2 74736563 		.ascii	"tsect\000"
 18071      7400
 18072              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

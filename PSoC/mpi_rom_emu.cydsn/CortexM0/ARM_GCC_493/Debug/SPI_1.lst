ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPI_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SPI_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	SPI_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	SPI_1_Init, %function
  23              	SPI_1_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\SPI_1.c"
   1:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/SPI_1.c **** * File Name: SPI_1.c
   3:.\Generated_Source\PSoC4/SPI_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/SPI_1.c **** *
   5:.\Generated_Source\PSoC4/SPI_1.c **** * Description:
   6:.\Generated_Source\PSoC4/SPI_1.c **** *  This file provides the source code to the API for the SCB Component.
   7:.\Generated_Source\PSoC4/SPI_1.c **** *
   8:.\Generated_Source\PSoC4/SPI_1.c **** * Note:
   9:.\Generated_Source\PSoC4/SPI_1.c **** *
  10:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************
  11:.\Generated_Source\PSoC4/SPI_1.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/SPI_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/SPI_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/SPI_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/SPI_1.c **** 
  17:.\Generated_Source\PSoC4/SPI_1.c **** #include "SPI_1_PVT.h"
  18:.\Generated_Source\PSoC4/SPI_1.c **** 
  19:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_I2C_INC)
  20:.\Generated_Source\PSoC4/SPI_1.c ****     #include "SPI_1_I2C_PVT.h"
  21:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_I2C_INC) */
  22:.\Generated_Source\PSoC4/SPI_1.c **** 
  23:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_EZI2C_INC)
  24:.\Generated_Source\PSoC4/SPI_1.c ****     #include "SPI_1_EZI2C_PVT.h"
  25:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_EZI2C_INC) */
  26:.\Generated_Source\PSoC4/SPI_1.c **** 
  27:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_SPI_INC || SPI_1_SCB_MODE_UART_INC)
  28:.\Generated_Source\PSoC4/SPI_1.c ****     #include "SPI_1_SPI_UART_PVT.h"
  29:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_SPI_INC || SPI_1_SCB_MODE_UART_INC) */
  30:.\Generated_Source\PSoC4/SPI_1.c **** 
  31:.\Generated_Source\PSoC4/SPI_1.c **** 
  32:.\Generated_Source\PSoC4/SPI_1.c **** /***************************************
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 2


  33:.\Generated_Source\PSoC4/SPI_1.c **** *    Run Time Configuration Vars
  34:.\Generated_Source\PSoC4/SPI_1.c **** ***************************************/
  35:.\Generated_Source\PSoC4/SPI_1.c **** 
  36:.\Generated_Source\PSoC4/SPI_1.c **** /* Stores internal component configuration for Unconfigured mode */
  37:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/SPI_1.c ****     /* Common configuration variables */
  39:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_scbMode = SPI_1_SCB_MODE_UNCONFIG;
  40:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_scbEnableWake;
  41:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_scbEnableIntr;
  42:.\Generated_Source\PSoC4/SPI_1.c **** 
  43:.\Generated_Source\PSoC4/SPI_1.c ****     /* I2C configuration variables */
  44:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_mode;
  45:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_acceptAddr;
  46:.\Generated_Source\PSoC4/SPI_1.c **** 
  47:.\Generated_Source\PSoC4/SPI_1.c ****     /* SPI/UART configuration variables */
  48:.\Generated_Source\PSoC4/SPI_1.c ****     volatile uint8 * SPI_1_rxBuffer;
  49:.\Generated_Source\PSoC4/SPI_1.c ****     uint8  SPI_1_rxDataBits;
  50:.\Generated_Source\PSoC4/SPI_1.c ****     uint32 SPI_1_rxBufferSize;
  51:.\Generated_Source\PSoC4/SPI_1.c **** 
  52:.\Generated_Source\PSoC4/SPI_1.c ****     volatile uint8 * SPI_1_txBuffer;
  53:.\Generated_Source\PSoC4/SPI_1.c ****     uint8  SPI_1_txDataBits;
  54:.\Generated_Source\PSoC4/SPI_1.c ****     uint32 SPI_1_txBufferSize;
  55:.\Generated_Source\PSoC4/SPI_1.c **** 
  56:.\Generated_Source\PSoC4/SPI_1.c ****     /* EZI2C configuration variables */
  57:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_numberOfAddr;
  58:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_subAddrSize;
  59:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
  60:.\Generated_Source\PSoC4/SPI_1.c **** 
  61:.\Generated_Source\PSoC4/SPI_1.c **** 
  62:.\Generated_Source\PSoC4/SPI_1.c **** /***************************************
  63:.\Generated_Source\PSoC4/SPI_1.c **** *     Common SCB Vars
  64:.\Generated_Source\PSoC4/SPI_1.c **** ***************************************/
  65:.\Generated_Source\PSoC4/SPI_1.c **** 
  66:.\Generated_Source\PSoC4/SPI_1.c **** uint8 SPI_1_initVar = 0u;
  67:.\Generated_Source\PSoC4/SPI_1.c **** 
  68:.\Generated_Source\PSoC4/SPI_1.c **** #if !defined (CY_REMOVE_SPI_1_CUSTOM_INTR_HANDLER)
  69:.\Generated_Source\PSoC4/SPI_1.c ****     cyisraddress SPI_1_customIntrHandler = NULL;
  70:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* !defined (CY_REMOVE_SPI_1_CUSTOM_INTR_HANDLER) */
  71:.\Generated_Source\PSoC4/SPI_1.c **** 
  72:.\Generated_Source\PSoC4/SPI_1.c **** 
  73:.\Generated_Source\PSoC4/SPI_1.c **** /***************************************
  74:.\Generated_Source\PSoC4/SPI_1.c **** *    Private Function Prototypes
  75:.\Generated_Source\PSoC4/SPI_1.c **** ***************************************/
  76:.\Generated_Source\PSoC4/SPI_1.c **** 
  77:.\Generated_Source\PSoC4/SPI_1.c **** static void SPI_1_ScbEnableIntr(void);
  78:.\Generated_Source\PSoC4/SPI_1.c **** static void SPI_1_ScbModeStop(void);
  79:.\Generated_Source\PSoC4/SPI_1.c **** 
  80:.\Generated_Source\PSoC4/SPI_1.c **** 
  81:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
  82:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_Init
  83:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
  84:.\Generated_Source\PSoC4/SPI_1.c **** *
  85:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
  86:.\Generated_Source\PSoC4/SPI_1.c **** *  Initializes the SCB component to operate in one of the selected
  87:.\Generated_Source\PSoC4/SPI_1.c **** *  configurations: I2C, SPI, UART or EZI2C.
  88:.\Generated_Source\PSoC4/SPI_1.c **** *  When the configuration is set to "Unconfigured SCB", this function does
  89:.\Generated_Source\PSoC4/SPI_1.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 3


  90:.\Generated_Source\PSoC4/SPI_1.c **** *  SCB_I2CInit, SCB_SpiInit, SCB_UartInit or SCB_EzI2CInit.
  91:.\Generated_Source\PSoC4/SPI_1.c **** *
  92:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
  93:.\Generated_Source\PSoC4/SPI_1.c **** *  None
  94:.\Generated_Source\PSoC4/SPI_1.c **** *
  95:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
  96:.\Generated_Source\PSoC4/SPI_1.c **** *  None
  97:.\Generated_Source\PSoC4/SPI_1.c **** *
  98:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
  99:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_Init(void)
 100:.\Generated_Source\PSoC4/SPI_1.c **** {
  26              		.loc 1 100 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 101:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 102:.\Generated_Source\PSoC4/SPI_1.c ****     if(SPI_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 103:.\Generated_Source\PSoC4/SPI_1.c ****     {
 104:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_initVar = 0u;
 105:.\Generated_Source\PSoC4/SPI_1.c ****     }
 106:.\Generated_Source\PSoC4/SPI_1.c ****     else
 107:.\Generated_Source\PSoC4/SPI_1.c ****     {
 108:.\Generated_Source\PSoC4/SPI_1.c ****         /* Initialization was done before this function call */
 109:.\Generated_Source\PSoC4/SPI_1.c ****     }
 110:.\Generated_Source\PSoC4/SPI_1.c **** 
 111:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_I2C_CONST_CFG)
 112:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_I2CInit();
 113:.\Generated_Source\PSoC4/SPI_1.c **** 
 114:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_SPI_CONST_CFG)
 115:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_SpiInit();
  32              		.loc 1 115 0
  33 0002 FFF7FEFF 		bl	SPI_1_SpiInit
  34              	.LVL0:
 116:.\Generated_Source\PSoC4/SPI_1.c **** 
 117:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_UART_CONST_CFG)
 118:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_UartInit();
 119:.\Generated_Source\PSoC4/SPI_1.c **** 
 120:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_EZI2C_CONST_CFG)
 121:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_EzI2CInit();
 122:.\Generated_Source\PSoC4/SPI_1.c **** 
 123:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 124:.\Generated_Source\PSoC4/SPI_1.c **** }
  35              		.loc 1 124 0
  36              		@ sp needed
  37 0006 08BD     		pop	{r3, pc}
  38              		.cfi_endproc
  39              	.LFE0:
  40              		.size	SPI_1_Init, .-SPI_1_Init
  41              		.section	.text.SPI_1_Enable,"ax",%progbits
  42              		.align	2
  43              		.global	SPI_1_Enable
  44              		.code	16
  45              		.thumb_func
  46              		.type	SPI_1_Enable, %function
  47              	SPI_1_Enable:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 4


  48              	.LFB1:
 125:.\Generated_Source\PSoC4/SPI_1.c **** 
 126:.\Generated_Source\PSoC4/SPI_1.c **** 
 127:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 128:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_Enable
 129:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 130:.\Generated_Source\PSoC4/SPI_1.c **** *
 131:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 132:.\Generated_Source\PSoC4/SPI_1.c **** *  Enables the SCB component operation.
 133:.\Generated_Source\PSoC4/SPI_1.c **** *  The SCB configuration should be not changed when the component is enabled.
 134:.\Generated_Source\PSoC4/SPI_1.c **** *  Any configuration changes should be made after disabling the component.
 135:.\Generated_Source\PSoC4/SPI_1.c **** *
 136:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 137:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 138:.\Generated_Source\PSoC4/SPI_1.c **** *
 139:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 140:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 141:.\Generated_Source\PSoC4/SPI_1.c **** *
 142:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_Enable(void)
 144:.\Generated_Source\PSoC4/SPI_1.c **** {
  49              		.loc 1 144 0
  50              		.cfi_startproc
 145:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 146:.\Generated_Source\PSoC4/SPI_1.c ****     /* Enable SCB block, only if it is already configured */
 147:.\Generated_Source\PSoC4/SPI_1.c ****     if(!SPI_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 148:.\Generated_Source\PSoC4/SPI_1.c ****     {
 149:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_CTRL_REG |= SPI_1_CTRL_ENABLED;
 150:.\Generated_Source\PSoC4/SPI_1.c **** 
 151:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_ScbEnableIntr();
 152:.\Generated_Source\PSoC4/SPI_1.c ****     }
 153:.\Generated_Source\PSoC4/SPI_1.c **** #else
 154:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_CTRL_REG |= SPI_1_CTRL_ENABLED;
  51              		.loc 1 154 0
  52 0000 034A     		ldr	r2, .L3
  53 0002 1368     		ldr	r3, [r2]
  54 0004 8021     		mov	r1, #128
  55 0006 0906     		lsl	r1, r1, #24
  56 0008 0B43     		orr	r3, r1
  57 000a 1360     		str	r3, [r2]
 155:.\Generated_Source\PSoC4/SPI_1.c **** 
 156:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_ScbEnableIntr();
 157:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 158:.\Generated_Source\PSoC4/SPI_1.c **** }
  58              		.loc 1 158 0
  59              		@ sp needed
  60 000c 7047     		bx	lr
  61              	.L4:
  62 000e C046     		.align	2
  63              	.L3:
  64 0010 00000640 		.word	1074135040
  65              		.cfi_endproc
  66              	.LFE1:
  67              		.size	SPI_1_Enable, .-SPI_1_Enable
  68              		.section	.text.SPI_1_Start,"ax",%progbits
  69              		.align	2
  70              		.global	SPI_1_Start
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 5


  71              		.code	16
  72              		.thumb_func
  73              		.type	SPI_1_Start, %function
  74              	SPI_1_Start:
  75              	.LFB2:
 159:.\Generated_Source\PSoC4/SPI_1.c **** 
 160:.\Generated_Source\PSoC4/SPI_1.c **** 
 161:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_Start
 163:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 164:.\Generated_Source\PSoC4/SPI_1.c **** *
 165:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 166:.\Generated_Source\PSoC4/SPI_1.c **** *  Invokes SCB_Init() and SCB_Enable().
 167:.\Generated_Source\PSoC4/SPI_1.c **** *  After this function call, the component is enabled and ready for operation.
 168:.\Generated_Source\PSoC4/SPI_1.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 169:.\Generated_Source\PSoC4/SPI_1.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 170:.\Generated_Source\PSoC4/SPI_1.c **** *  or EZ I2C. Otherwise this function does not enable the component.
 171:.\Generated_Source\PSoC4/SPI_1.c **** *
 172:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 173:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 174:.\Generated_Source\PSoC4/SPI_1.c **** *
 175:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 176:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 177:.\Generated_Source\PSoC4/SPI_1.c **** *
 178:.\Generated_Source\PSoC4/SPI_1.c **** * Global variables:
 179:.\Generated_Source\PSoC4/SPI_1.c **** *  SPI_1_initVar - used to check initial configuration, modified
 180:.\Generated_Source\PSoC4/SPI_1.c **** *  on first function call.
 181:.\Generated_Source\PSoC4/SPI_1.c **** *
 182:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_Start(void)
 184:.\Generated_Source\PSoC4/SPI_1.c **** {
  76              		.loc 1 184 0
  77              		.cfi_startproc
  78 0000 08B5     		push	{r3, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC4/SPI_1.c ****     if(0u == SPI_1_initVar)
  82              		.loc 1 185 0
  83 0002 064B     		ldr	r3, .L7
  84 0004 1B78     		ldrb	r3, [r3]
  85 0006 002B     		cmp	r3, #0
  86 0008 04D1     		bne	.L6
 186:.\Generated_Source\PSoC4/SPI_1.c ****     {
 187:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_Init();
  87              		.loc 1 187 0
  88 000a FFF7FEFF 		bl	SPI_1_Init
  89              	.LVL1:
 188:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_initVar = 1u; /* Component was initialized */
  90              		.loc 1 188 0
  91 000e 0122     		mov	r2, #1
  92 0010 024B     		ldr	r3, .L7
  93 0012 1A70     		strb	r2, [r3]
  94              	.L6:
 189:.\Generated_Source\PSoC4/SPI_1.c ****     }
 190:.\Generated_Source\PSoC4/SPI_1.c **** 
 191:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_Enable();
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 6


  95              		.loc 1 191 0
  96 0014 FFF7FEFF 		bl	SPI_1_Enable
  97              	.LVL2:
 192:.\Generated_Source\PSoC4/SPI_1.c **** }
  98              		.loc 1 192 0
  99              		@ sp needed
 100 0018 08BD     		pop	{r3, pc}
 101              	.L8:
 102 001a C046     		.align	2
 103              	.L7:
 104 001c 00000000 		.word	.LANCHOR0
 105              		.cfi_endproc
 106              	.LFE2:
 107              		.size	SPI_1_Start, .-SPI_1_Start
 108              		.section	.text.SPI_1_Stop,"ax",%progbits
 109              		.align	2
 110              		.global	SPI_1_Stop
 111              		.code	16
 112              		.thumb_func
 113              		.type	SPI_1_Stop, %function
 114              	SPI_1_Stop:
 115              	.LFB3:
 193:.\Generated_Source\PSoC4/SPI_1.c **** 
 194:.\Generated_Source\PSoC4/SPI_1.c **** 
 195:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_Stop
 197:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 198:.\Generated_Source\PSoC4/SPI_1.c **** *
 199:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 200:.\Generated_Source\PSoC4/SPI_1.c **** *  Disables the SCB component and its interrupt.
 201:.\Generated_Source\PSoC4/SPI_1.c **** *
 202:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 203:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 204:.\Generated_Source\PSoC4/SPI_1.c **** *
 205:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 206:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 207:.\Generated_Source\PSoC4/SPI_1.c **** *
 208:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 209:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_Stop(void)
 210:.\Generated_Source\PSoC4/SPI_1.c **** {
 116              		.loc 1 210 0
 117              		.cfi_startproc
 211:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_IRQ_INTERNAL)
 212:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_DisableInt();
 213:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_IRQ_INTERNAL) */
 214:.\Generated_Source\PSoC4/SPI_1.c **** 
 215:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_CTRL_REG &= (uint32) ~SPI_1_CTRL_ENABLED;  /* Disable scb IP */
 118              		.loc 1 215 0
 119 0000 024A     		ldr	r2, .L10
 120 0002 1368     		ldr	r3, [r2]
 121 0004 5B00     		lsl	r3, r3, #1
 122 0006 5B08     		lsr	r3, r3, #1
 123 0008 1360     		str	r3, [r2]
 216:.\Generated_Source\PSoC4/SPI_1.c **** 
 217:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_IRQ_INTERNAL)
 218:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_ClearPendingInt();
 219:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_IRQ_INTERNAL) */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 7


 220:.\Generated_Source\PSoC4/SPI_1.c **** 
 221:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_ScbModeStop(); /* Calls scbMode specific Stop function */
 222:.\Generated_Source\PSoC4/SPI_1.c **** }
 124              		.loc 1 222 0
 125              		@ sp needed
 126 000a 7047     		bx	lr
 127              	.L11:
 128              		.align	2
 129              	.L10:
 130 000c 00000640 		.word	1074135040
 131              		.cfi_endproc
 132              	.LFE3:
 133              		.size	SPI_1_Stop, .-SPI_1_Stop
 134              		.section	.text.SPI_1_SetRxFifoLevel,"ax",%progbits
 135              		.align	2
 136              		.global	SPI_1_SetRxFifoLevel
 137              		.code	16
 138              		.thumb_func
 139              		.type	SPI_1_SetRxFifoLevel, %function
 140              	SPI_1_SetRxFifoLevel:
 141              	.LFB4:
 223:.\Generated_Source\PSoC4/SPI_1.c **** 
 224:.\Generated_Source\PSoC4/SPI_1.c **** 
 225:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 226:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_SetRxFifoLevel
 227:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 228:.\Generated_Source\PSoC4/SPI_1.c **** *
 229:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 230:.\Generated_Source\PSoC4/SPI_1.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 231:.\Generated_Source\PSoC4/SPI_1.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 232:.\Generated_Source\PSoC4/SPI_1.c **** *  interrupt request is generated.
 233:.\Generated_Source\PSoC4/SPI_1.c **** *
 234:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 235:.\Generated_Source\PSoC4/SPI_1.c **** *  level: Level in the RX FIFO to generate RX level interrupt.
 236:.\Generated_Source\PSoC4/SPI_1.c **** *         The range of valid level values is between 0 and RX FIFO depth - 1.
 237:.\Generated_Source\PSoC4/SPI_1.c **** *
 238:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 239:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 240:.\Generated_Source\PSoC4/SPI_1.c **** *
 241:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 242:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_SetRxFifoLevel(uint32 level)
 243:.\Generated_Source\PSoC4/SPI_1.c **** {
 142              		.loc 1 243 0
 143              		.cfi_startproc
 144              	.LVL3:
 244:.\Generated_Source\PSoC4/SPI_1.c ****     uint32 rxFifoCtrl;
 245:.\Generated_Source\PSoC4/SPI_1.c **** 
 246:.\Generated_Source\PSoC4/SPI_1.c ****     rxFifoCtrl = SPI_1_RX_FIFO_CTRL_REG;
 145              		.loc 1 246 0
 146 0000 034A     		ldr	r2, .L13
 147 0002 1368     		ldr	r3, [r2]
 148              	.LVL4:
 247:.\Generated_Source\PSoC4/SPI_1.c **** 
 248:.\Generated_Source\PSoC4/SPI_1.c ****     rxFifoCtrl &= ((uint32) ~SPI_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 149              		.loc 1 248 0
 150 0004 0721     		mov	r1, #7
 151 0006 8B43     		bic	r3, r1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 8


 152              	.LVL5:
 249:.\Generated_Source\PSoC4/SPI_1.c ****     rxFifoCtrl |= ((uint32) (SPI_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 153              		.loc 1 249 0
 154 0008 0840     		and	r0, r1
 155              	.LVL6:
 156 000a 1843     		orr	r0, r3
 157              	.LVL7:
 250:.\Generated_Source\PSoC4/SPI_1.c **** 
 251:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_RX_FIFO_CTRL_REG = rxFifoCtrl;
 158              		.loc 1 251 0
 159 000c 1060     		str	r0, [r2]
 252:.\Generated_Source\PSoC4/SPI_1.c **** }
 160              		.loc 1 252 0
 161              		@ sp needed
 162 000e 7047     		bx	lr
 163              	.L14:
 164              		.align	2
 165              	.L13:
 166 0010 04030640 		.word	1074135812
 167              		.cfi_endproc
 168              	.LFE4:
 169              		.size	SPI_1_SetRxFifoLevel, .-SPI_1_SetRxFifoLevel
 170              		.section	.text.SPI_1_SetTxFifoLevel,"ax",%progbits
 171              		.align	2
 172              		.global	SPI_1_SetTxFifoLevel
 173              		.code	16
 174              		.thumb_func
 175              		.type	SPI_1_SetTxFifoLevel, %function
 176              	SPI_1_SetTxFifoLevel:
 177              	.LFB5:
 253:.\Generated_Source\PSoC4/SPI_1.c **** 
 254:.\Generated_Source\PSoC4/SPI_1.c **** 
 255:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 256:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_SetTxFifoLevel
 257:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 258:.\Generated_Source\PSoC4/SPI_1.c **** *
 259:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 260:.\Generated_Source\PSoC4/SPI_1.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 261:.\Generated_Source\PSoC4/SPI_1.c **** *  When the TX FIFO has more entries than the TX FIFO level an TX level
 262:.\Generated_Source\PSoC4/SPI_1.c **** *  interrupt request is generated.
 263:.\Generated_Source\PSoC4/SPI_1.c **** *
 264:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 265:.\Generated_Source\PSoC4/SPI_1.c **** *  level: Level in the TX FIFO to generate TX level interrupt.
 266:.\Generated_Source\PSoC4/SPI_1.c **** *         The range of valid level values is between 0 and TX FIFO depth - 1.
 267:.\Generated_Source\PSoC4/SPI_1.c **** *
 268:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 269:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 270:.\Generated_Source\PSoC4/SPI_1.c **** *
 271:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 272:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_SetTxFifoLevel(uint32 level)
 273:.\Generated_Source\PSoC4/SPI_1.c **** {
 178              		.loc 1 273 0
 179              		.cfi_startproc
 180              	.LVL8:
 274:.\Generated_Source\PSoC4/SPI_1.c ****     uint32 txFifoCtrl;
 275:.\Generated_Source\PSoC4/SPI_1.c **** 
 276:.\Generated_Source\PSoC4/SPI_1.c ****     txFifoCtrl = SPI_1_TX_FIFO_CTRL_REG;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 9


 181              		.loc 1 276 0
 182 0000 034A     		ldr	r2, .L16
 183 0002 1368     		ldr	r3, [r2]
 184              	.LVL9:
 277:.\Generated_Source\PSoC4/SPI_1.c **** 
 278:.\Generated_Source\PSoC4/SPI_1.c ****     txFifoCtrl &= ((uint32) ~SPI_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 185              		.loc 1 278 0
 186 0004 0721     		mov	r1, #7
 187 0006 8B43     		bic	r3, r1
 188              	.LVL10:
 279:.\Generated_Source\PSoC4/SPI_1.c ****     txFifoCtrl |= ((uint32) (SPI_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 189              		.loc 1 279 0
 190 0008 0840     		and	r0, r1
 191              	.LVL11:
 192 000a 1843     		orr	r0, r3
 193              	.LVL12:
 280:.\Generated_Source\PSoC4/SPI_1.c **** 
 281:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_TX_FIFO_CTRL_REG = txFifoCtrl;
 194              		.loc 1 281 0
 195 000c 1060     		str	r0, [r2]
 282:.\Generated_Source\PSoC4/SPI_1.c **** }
 196              		.loc 1 282 0
 197              		@ sp needed
 198 000e 7047     		bx	lr
 199              	.L17:
 200              		.align	2
 201              	.L16:
 202 0010 04020640 		.word	1074135556
 203              		.cfi_endproc
 204              	.LFE5:
 205              		.size	SPI_1_SetTxFifoLevel, .-SPI_1_SetTxFifoLevel
 206              		.section	.text.SPI_1_SetCustomInterruptHandler,"ax",%progbits
 207              		.align	2
 208              		.global	SPI_1_SetCustomInterruptHandler
 209              		.code	16
 210              		.thumb_func
 211              		.type	SPI_1_SetCustomInterruptHandler, %function
 212              	SPI_1_SetCustomInterruptHandler:
 213              	.LFB6:
 283:.\Generated_Source\PSoC4/SPI_1.c **** 
 284:.\Generated_Source\PSoC4/SPI_1.c **** 
 285:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_SetCustomInterruptHandler
 287:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/SPI_1.c **** *
 289:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 290:.\Generated_Source\PSoC4/SPI_1.c **** *  Registers a function to be called by the internal interrupt handler.
 291:.\Generated_Source\PSoC4/SPI_1.c **** *  First the function that is registered is called, then the internal interrupt
 292:.\Generated_Source\PSoC4/SPI_1.c **** *  handler performs any operation such as software buffer management functions
 293:.\Generated_Source\PSoC4/SPI_1.c **** *  before the interrupt returns.  It is the user's responsibility not to break
 294:.\Generated_Source\PSoC4/SPI_1.c **** *  the software buffer operations. Only one custom handler is supported, which
 295:.\Generated_Source\PSoC4/SPI_1.c **** *  is the function provided by the most recent call.
 296:.\Generated_Source\PSoC4/SPI_1.c **** *  At the initialization time no custom handler is registered.
 297:.\Generated_Source\PSoC4/SPI_1.c **** *
 298:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 299:.\Generated_Source\PSoC4/SPI_1.c **** *  func: Pointer to the function to register.
 300:.\Generated_Source\PSoC4/SPI_1.c **** *        The value NULL indicates to remove the current custom interrupt
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 10


 301:.\Generated_Source\PSoC4/SPI_1.c **** *        handler.
 302:.\Generated_Source\PSoC4/SPI_1.c **** *
 303:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 304:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 305:.\Generated_Source\PSoC4/SPI_1.c **** *
 306:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 307:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_SetCustomInterruptHandler(cyisraddress func)
 308:.\Generated_Source\PSoC4/SPI_1.c **** {
 214              		.loc 1 308 0
 215              		.cfi_startproc
 216              	.LVL13:
 309:.\Generated_Source\PSoC4/SPI_1.c **** #if !defined (CY_REMOVE_SPI_1_CUSTOM_INTR_HANDLER)
 310:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_customIntrHandler = func; /* Register interrupt handler */
 217              		.loc 1 310 0
 218 0000 014B     		ldr	r3, .L19
 219 0002 5860     		str	r0, [r3, #4]
 311:.\Generated_Source\PSoC4/SPI_1.c **** #else
 312:.\Generated_Source\PSoC4/SPI_1.c ****     if(NULL != func)
 313:.\Generated_Source\PSoC4/SPI_1.c ****     {
 314:.\Generated_Source\PSoC4/SPI_1.c ****         /* Suppress compiler warning */
 315:.\Generated_Source\PSoC4/SPI_1.c ****     }
 316:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* !defined (CY_REMOVE_SPI_1_CUSTOM_INTR_HANDLER) */
 317:.\Generated_Source\PSoC4/SPI_1.c **** }
 220              		.loc 1 317 0
 221              		@ sp needed
 222 0004 7047     		bx	lr
 223              	.L20:
 224 0006 C046     		.align	2
 225              	.L19:
 226 0008 00000000 		.word	.LANCHOR0
 227              		.cfi_endproc
 228              	.LFE6:
 229              		.size	SPI_1_SetCustomInterruptHandler, .-SPI_1_SetCustomInterruptHandler
 230              		.section	.text.SPI_1_I2CSlaveNackGeneration,"ax",%progbits
 231              		.align	2
 232              		.global	SPI_1_I2CSlaveNackGeneration
 233              		.code	16
 234              		.thumb_func
 235              		.type	SPI_1_I2CSlaveNackGeneration, %function
 236              	SPI_1_I2CSlaveNackGeneration:
 237              	.LFB9:
 318:.\Generated_Source\PSoC4/SPI_1.c **** 
 319:.\Generated_Source\PSoC4/SPI_1.c **** 
 320:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 321:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_ScbModeEnableIntr
 322:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 323:.\Generated_Source\PSoC4/SPI_1.c **** *
 324:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 325:.\Generated_Source\PSoC4/SPI_1.c **** *  Enables an interrupt for a specific mode.
 326:.\Generated_Source\PSoC4/SPI_1.c **** *
 327:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 328:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 329:.\Generated_Source\PSoC4/SPI_1.c **** *
 330:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 331:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 332:.\Generated_Source\PSoC4/SPI_1.c **** *
 333:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 11


 334:.\Generated_Source\PSoC4/SPI_1.c **** static void SPI_1_ScbEnableIntr(void)
 335:.\Generated_Source\PSoC4/SPI_1.c **** {
 336:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_IRQ_INTERNAL)
 337:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 338:.\Generated_Source\PSoC4/SPI_1.c ****         /* Enable interrupt in NVIC */
 339:.\Generated_Source\PSoC4/SPI_1.c ****         if(0u != SPI_1_scbEnableIntr)
 340:.\Generated_Source\PSoC4/SPI_1.c ****         {
 341:.\Generated_Source\PSoC4/SPI_1.c ****             SPI_1_EnableInt();
 342:.\Generated_Source\PSoC4/SPI_1.c ****         }
 343:.\Generated_Source\PSoC4/SPI_1.c ****     #else
 344:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_EnableInt();
 345:.\Generated_Source\PSoC4/SPI_1.c **** 
 346:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 347:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_IRQ_INTERNAL) */
 348:.\Generated_Source\PSoC4/SPI_1.c **** }
 349:.\Generated_Source\PSoC4/SPI_1.c **** 
 350:.\Generated_Source\PSoC4/SPI_1.c **** 
 351:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 352:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_ScbModeStop
 353:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 354:.\Generated_Source\PSoC4/SPI_1.c **** *
 355:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 356:.\Generated_Source\PSoC4/SPI_1.c **** *  Calls the Stop function for a specific operation mode.
 357:.\Generated_Source\PSoC4/SPI_1.c **** *
 358:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 359:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 360:.\Generated_Source\PSoC4/SPI_1.c **** *
 361:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 362:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 363:.\Generated_Source\PSoC4/SPI_1.c **** *
 364:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/SPI_1.c **** static void SPI_1_ScbModeStop(void)
 366:.\Generated_Source\PSoC4/SPI_1.c **** {
 367:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 368:.\Generated_Source\PSoC4/SPI_1.c ****     if(SPI_1_SCB_MODE_I2C_RUNTM_CFG)
 369:.\Generated_Source\PSoC4/SPI_1.c ****     {
 370:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_I2CStop();
 371:.\Generated_Source\PSoC4/SPI_1.c ****     }
 372:.\Generated_Source\PSoC4/SPI_1.c ****     else if (SPI_1_SCB_MODE_EZI2C_RUNTM_CFG)
 373:.\Generated_Source\PSoC4/SPI_1.c ****     {
 374:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_EzI2CStop();
 375:.\Generated_Source\PSoC4/SPI_1.c ****     }
 376:.\Generated_Source\PSoC4/SPI_1.c **** #if (!SPI_1_CY_SCBIP_V1)
 377:.\Generated_Source\PSoC4/SPI_1.c ****     else if (SPI_1_SCB_MODE_UART_RUNTM_CFG)
 378:.\Generated_Source\PSoC4/SPI_1.c ****     {
 379:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_UartStop();
 380:.\Generated_Source\PSoC4/SPI_1.c ****     }
 381:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (!SPI_1_CY_SCBIP_V1) */
 382:.\Generated_Source\PSoC4/SPI_1.c ****     else
 383:.\Generated_Source\PSoC4/SPI_1.c ****     {
 384:.\Generated_Source\PSoC4/SPI_1.c ****         /* Do nothing for other modes */
 385:.\Generated_Source\PSoC4/SPI_1.c ****     }
 386:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_I2C_CONST_CFG)
 387:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_I2CStop();
 388:.\Generated_Source\PSoC4/SPI_1.c **** 
 389:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_EZI2C_CONST_CFG)
 390:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_EzI2CStop();
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 12


 391:.\Generated_Source\PSoC4/SPI_1.c **** 
 392:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_UART_CONST_CFG)
 393:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_UartStop();
 394:.\Generated_Source\PSoC4/SPI_1.c **** 
 395:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 396:.\Generated_Source\PSoC4/SPI_1.c **** }
 397:.\Generated_Source\PSoC4/SPI_1.c **** 
 398:.\Generated_Source\PSoC4/SPI_1.c **** 
 399:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 400:.\Generated_Source\PSoC4/SPI_1.c ****     /*******************************************************************************
 401:.\Generated_Source\PSoC4/SPI_1.c ****     * Function Name: SPI_1_SetPins
 402:.\Generated_Source\PSoC4/SPI_1.c ****     ********************************************************************************
 403:.\Generated_Source\PSoC4/SPI_1.c ****     *
 404:.\Generated_Source\PSoC4/SPI_1.c ****     * Summary:
 405:.\Generated_Source\PSoC4/SPI_1.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 406:.\Generated_Source\PSoC4/SPI_1.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 407:.\Generated_Source\PSoC4/SPI_1.c ****     *  initialization function calls it.
 408:.\Generated_Source\PSoC4/SPI_1.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 409:.\Generated_Source\PSoC4/SPI_1.c ****     *  is selected in design time.
 410:.\Generated_Source\PSoC4/SPI_1.c ****     *
 411:.\Generated_Source\PSoC4/SPI_1.c ****     * Parameters:
 412:.\Generated_Source\PSoC4/SPI_1.c ****     *  mode:      Mode of SCB operation.
 413:.\Generated_Source\PSoC4/SPI_1.c ****     *  subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 414:.\Generated_Source\PSoC4/SPI_1.c ****     *             modes.
 415:.\Generated_Source\PSoC4/SPI_1.c ****     *  uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 416:.\Generated_Source\PSoC4/SPI_1.c ****     *
 417:.\Generated_Source\PSoC4/SPI_1.c ****     * Return:
 418:.\Generated_Source\PSoC4/SPI_1.c ****     *  None
 419:.\Generated_Source\PSoC4/SPI_1.c ****     *
 420:.\Generated_Source\PSoC4/SPI_1.c ****     *******************************************************************************/
 421:.\Generated_Source\PSoC4/SPI_1.c ****     void SPI_1_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 422:.\Generated_Source\PSoC4/SPI_1.c ****     {
 423:.\Generated_Source\PSoC4/SPI_1.c ****         uint32 hsiomSel [SPI_1_SCB_PINS_NUMBER];
 424:.\Generated_Source\PSoC4/SPI_1.c ****         uint32 pinsDm   [SPI_1_SCB_PINS_NUMBER];
 425:.\Generated_Source\PSoC4/SPI_1.c **** 
 426:.\Generated_Source\PSoC4/SPI_1.c ****     #if (!SPI_1_CY_SCBIP_V1)
 427:.\Generated_Source\PSoC4/SPI_1.c ****         uint32 pinsInBuf = 0u;
 428:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (!SPI_1_CY_SCBIP_V1) */
 429:.\Generated_Source\PSoC4/SPI_1.c **** 
 430:.\Generated_Source\PSoC4/SPI_1.c ****         uint32 i;
 431:.\Generated_Source\PSoC4/SPI_1.c **** 
 432:.\Generated_Source\PSoC4/SPI_1.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 433:.\Generated_Source\PSoC4/SPI_1.c ****         for(i = 0u; i < SPI_1_SCB_PINS_NUMBER; i++)
 434:.\Generated_Source\PSoC4/SPI_1.c ****         {
 435:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[i]  = SPI_1_HSIOM_DEF_SEL;
 436:.\Generated_Source\PSoC4/SPI_1.c ****             pinsDm[i]    = SPI_1_PIN_DM_ALG_HIZ;
 437:.\Generated_Source\PSoC4/SPI_1.c ****         }
 438:.\Generated_Source\PSoC4/SPI_1.c **** 
 439:.\Generated_Source\PSoC4/SPI_1.c ****         if((SPI_1_SCB_MODE_I2C   == mode) ||
 440:.\Generated_Source\PSoC4/SPI_1.c ****            (SPI_1_SCB_MODE_EZI2C == mode))
 441:.\Generated_Source\PSoC4/SPI_1.c ****         {
 442:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_HSIOM_I2C_SEL;
 443:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_HSIOM_I2C_SEL;
 444:.\Generated_Source\PSoC4/SPI_1.c **** 
 445:.\Generated_Source\PSoC4/SPI_1.c ****             pinsDm[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_PIN_DM_OD_LO;
 446:.\Generated_Source\PSoC4/SPI_1.c ****             pinsDm[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_OD_LO;
 447:.\Generated_Source\PSoC4/SPI_1.c ****         }
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 13


 448:.\Generated_Source\PSoC4/SPI_1.c ****     #if (!SPI_1_CY_SCBIP_V1)
 449:.\Generated_Source\PSoC4/SPI_1.c ****         else if(SPI_1_SCB_MODE_SPI == mode)
 450:.\Generated_Source\PSoC4/SPI_1.c ****         {
 451:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 452:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 453:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_SCLK_PIN_INDEX]        = SPI_1_HSIOM_SPI_SEL;
 454:.\Generated_Source\PSoC4/SPI_1.c **** 
 455:.\Generated_Source\PSoC4/SPI_1.c ****             if(SPI_1_SPI_SLAVE == subMode)
 456:.\Generated_Source\PSoC4/SPI_1.c ****             {
 457:.\Generated_Source\PSoC4/SPI_1.c ****                 /* Slave */
 458:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 459:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 460:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_SCLK_PIN_INDEX]        = SPI_1_PIN_DM_DIG_HIZ;
 461:.\Generated_Source\PSoC4/SPI_1.c **** 
 462:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS0_PIN)
 463:.\Generated_Source\PSoC4/SPI_1.c ****                 /* Only SS0 is valid choice for Slave */
 464:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel[SPI_1_SS0_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 465:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm  [SPI_1_SS0_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 466:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS1_PIN) */
 467:.\Generated_Source\PSoC4/SPI_1.c **** 
 468:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_MISO_SDA_TX_PIN)
 469:.\Generated_Source\PSoC4/SPI_1.c ****                 /* Disable input buffer */
 470:.\Generated_Source\PSoC4/SPI_1.c ****                  pinsInBuf |= SPI_1_MISO_SDA_TX_PIN_MASK;
 471:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_MISO_SDA_TX_PIN_PIN) */
 472:.\Generated_Source\PSoC4/SPI_1.c ****             }
 473:.\Generated_Source\PSoC4/SPI_1.c ****             else /* (Master) */
 474:.\Generated_Source\PSoC4/SPI_1.c ****             {
 475:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 476:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 477:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_SCLK_PIN_INDEX]        = SPI_1_PIN_DM_STRONG;
 478:.\Generated_Source\PSoC4/SPI_1.c **** 
 479:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS0_PIN)
 480:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel [SPI_1_SS0_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 481:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm   [SPI_1_SS0_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 482:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf                                |= SPI_1_SS0_PIN_MASK;
 483:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS0_PIN) */
 484:.\Generated_Source\PSoC4/SPI_1.c **** 
 485:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS1_PIN)
 486:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel [SPI_1_SS1_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 487:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm   [SPI_1_SS1_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 488:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf                                |= SPI_1_SS1_PIN_MASK;
 489:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS1_PIN) */
 490:.\Generated_Source\PSoC4/SPI_1.c **** 
 491:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS2_PIN)
 492:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel [SPI_1_SS2_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 493:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm   [SPI_1_SS2_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 494:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf                                |= SPI_1_SS2_PIN_MASK;
 495:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS2_PIN) */
 496:.\Generated_Source\PSoC4/SPI_1.c **** 
 497:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS3_PIN)
 498:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel [SPI_1_SS3_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 499:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm   [SPI_1_SS3_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 500:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf                                |= SPI_1_SS3_PIN_MASK;
 501:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS2_PIN) */
 502:.\Generated_Source\PSoC4/SPI_1.c **** 
 503:.\Generated_Source\PSoC4/SPI_1.c ****                 /* Disable input buffers */
 504:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_MOSI_SCL_RX_PIN)
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 14


 505:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf |= SPI_1_MOSI_SCL_RX_PIN_MASK;
 506:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_MOSI_SCL_RX_PIN) */
 507:.\Generated_Source\PSoC4/SPI_1.c **** 
 508:.\Generated_Source\PSoC4/SPI_1.c ****              #if(SPI_1_MOSI_SCL_RX_WAKE_PIN)
 509:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf |= SPI_1_MOSI_SCL_RX_WAKE_PIN_MASK;
 510:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_MOSI_SCL_RX_WAKE_PIN) */
 511:.\Generated_Source\PSoC4/SPI_1.c **** 
 512:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SCLK_PIN)
 513:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf |= SPI_1_SCLK_PIN_MASK;
 514:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SCLK_PIN) */
 515:.\Generated_Source\PSoC4/SPI_1.c ****             }
 516:.\Generated_Source\PSoC4/SPI_1.c ****         }
 517:.\Generated_Source\PSoC4/SPI_1.c ****         else /* UART */
 518:.\Generated_Source\PSoC4/SPI_1.c ****         {
 519:.\Generated_Source\PSoC4/SPI_1.c ****             if(SPI_1_UART_MODE_SMARTCARD == subMode)
 520:.\Generated_Source\PSoC4/SPI_1.c ****             {
 521:.\Generated_Source\PSoC4/SPI_1.c ****                 /* SmartCard */
 522:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 523:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm  [SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_OD_LO;
 524:.\Generated_Source\PSoC4/SPI_1.c ****             }
 525:.\Generated_Source\PSoC4/SPI_1.c ****             else /* Standard or IrDA */
 526:.\Generated_Source\PSoC4/SPI_1.c ****             {
 527:.\Generated_Source\PSoC4/SPI_1.c ****                 if(0u != (SPI_1_UART_RX_PIN_ENABLE & uartEnableMask))
 528:.\Generated_Source\PSoC4/SPI_1.c ****                 {
 529:.\Generated_Source\PSoC4/SPI_1.c ****                     hsiomSel[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 530:.\Generated_Source\PSoC4/SPI_1.c ****                     pinsDm  [SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 531:.\Generated_Source\PSoC4/SPI_1.c ****                 }
 532:.\Generated_Source\PSoC4/SPI_1.c **** 
 533:.\Generated_Source\PSoC4/SPI_1.c ****                 if(0u != (SPI_1_UART_TX_PIN_ENABLE & uartEnableMask))
 534:.\Generated_Source\PSoC4/SPI_1.c ****                 {
 535:.\Generated_Source\PSoC4/SPI_1.c ****                     hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 536:.\Generated_Source\PSoC4/SPI_1.c ****                     pinsDm  [SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 537:.\Generated_Source\PSoC4/SPI_1.c **** 
 538:.\Generated_Source\PSoC4/SPI_1.c ****                 #if(SPI_1_MISO_SDA_TX_PIN)
 539:.\Generated_Source\PSoC4/SPI_1.c ****                      pinsInBuf |= SPI_1_MISO_SDA_TX_PIN_MASK;
 540:.\Generated_Source\PSoC4/SPI_1.c ****                 #endif /* (SPI_1_MISO_SDA_TX_PIN_PIN) */
 541:.\Generated_Source\PSoC4/SPI_1.c ****                 }
 542:.\Generated_Source\PSoC4/SPI_1.c **** 
 543:.\Generated_Source\PSoC4/SPI_1.c ****             #if !(SPI_1_CY_SCBIP_V0 || SPI_1_CY_SCBIP_V1)
 544:.\Generated_Source\PSoC4/SPI_1.c ****                 if(SPI_1_UART_MODE_STD == subMode)
 545:.\Generated_Source\PSoC4/SPI_1.c ****                 {
 546:.\Generated_Source\PSoC4/SPI_1.c ****                     if(0u != (SPI_1_UART_CTS_PIN_ENABLE & uartEnableMask))
 547:.\Generated_Source\PSoC4/SPI_1.c ****                     {
 548:.\Generated_Source\PSoC4/SPI_1.c ****                         /* CTS input is multiplexed with SCLK */
 549:.\Generated_Source\PSoC4/SPI_1.c ****                         hsiomSel[SPI_1_SCLK_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 550:.\Generated_Source\PSoC4/SPI_1.c ****                         pinsDm  [SPI_1_SCLK_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 551:.\Generated_Source\PSoC4/SPI_1.c ****                     }
 552:.\Generated_Source\PSoC4/SPI_1.c **** 
 553:.\Generated_Source\PSoC4/SPI_1.c ****                     if(0u != (SPI_1_UART_RTS_PIN_ENABLE & uartEnableMask))
 554:.\Generated_Source\PSoC4/SPI_1.c ****                     {
 555:.\Generated_Source\PSoC4/SPI_1.c ****                         /* RTS output is multiplexed with SS0 */
 556:.\Generated_Source\PSoC4/SPI_1.c ****                         hsiomSel[SPI_1_SS0_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 557:.\Generated_Source\PSoC4/SPI_1.c ****                         pinsDm  [SPI_1_SS0_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 558:.\Generated_Source\PSoC4/SPI_1.c **** 
 559:.\Generated_Source\PSoC4/SPI_1.c ****                     #if(SPI_1_SS0_PIN)
 560:.\Generated_Source\PSoC4/SPI_1.c ****                         /* Disable input buffer */
 561:.\Generated_Source\PSoC4/SPI_1.c ****                         pinsInBuf |= SPI_1_SS0_PIN_MASK;
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 15


 562:.\Generated_Source\PSoC4/SPI_1.c ****                     #endif /* (SPI_1_SS0_PIN) */
 563:.\Generated_Source\PSoC4/SPI_1.c ****                     }
 564:.\Generated_Source\PSoC4/SPI_1.c ****                 }
 565:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* !(SPI_1_CY_SCBIP_V0 || SPI_1_CY_SCBIP_V1) */
 566:.\Generated_Source\PSoC4/SPI_1.c ****             }
 567:.\Generated_Source\PSoC4/SPI_1.c ****         }
 568:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (!SPI_1_CY_SCBIP_V1) */
 569:.\Generated_Source\PSoC4/SPI_1.c **** 
 570:.\Generated_Source\PSoC4/SPI_1.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 571:.\Generated_Source\PSoC4/SPI_1.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 572:.\Generated_Source\PSoC4/SPI_1.c **** 
 573:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_MOSI_SCL_RX_PIN)
 574:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_MOSI_SCL_RX_HSIOM_REG,
 575:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MOSI_SCL_RX_HSIOM_MASK,
 576:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MOSI_SCL_RX_HSIOM_POS,
 577:.\Generated_Source\PSoC4/SPI_1.c ****                                        hsiomSel[SPI_1_MOSI_SCL_RX_PIN_INDEX]);
 578:.\Generated_Source\PSoC4/SPI_1.c **** 
 579:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_mosi_i2c_scl_uart_rx_SetDriveMode((uint8) pinsDm[SPI_1_MOSI_SCL_RX_PIN_INDEX]);
 580:.\Generated_Source\PSoC4/SPI_1.c **** 
 581:.\Generated_Source\PSoC4/SPI_1.c ****     #if (!SPI_1_CY_SCBIP_V1)
 582:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_mosi_i2c_scl_uart_rx_INP_DIS,
 583:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_mosi_i2c_scl_uart_rx_MASK,
 584:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_MOSI_SCL_RX_PIN_MASK)));
 585:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (!SPI_1_CY_SCBIP_V1) */
 586:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_MOSI_SCL_RX_PIN) */
 587:.\Generated_Source\PSoC4/SPI_1.c **** 
 588:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_MOSI_SCL_RX_WAKE_PIN)
 589:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_MOSI_SCL_RX_WAKE_HSIOM_REG,
 590:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MOSI_SCL_RX_WAKE_HSIOM_MASK,
 591:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MOSI_SCL_RX_WAKE_HSIOM_POS,
 592:.\Generated_Source\PSoC4/SPI_1.c ****                                        hsiomSel[SPI_1_MOSI_SCL_RX_WAKE_PIN_INDEX]);
 593:.\Generated_Source\PSoC4/SPI_1.c **** 
 594:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_mosi_i2c_scl_uart_rx_wake_SetDriveMode((uint8)
 595:.\Generated_Source\PSoC4/SPI_1.c ****                                                                pinsDm[SPI_1_MOSI_SCL_RX_WAKE_PIN_IN
 596:.\Generated_Source\PSoC4/SPI_1.c **** 
 597:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_mosi_i2c_scl_uart_rx_wake_INP_DIS,
 598:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_mosi_i2c_scl_uart_rx_wake_MASK,
 599:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_MOSI_SCL_RX_WAKE_PIN_MASK)));
 600:.\Generated_Source\PSoC4/SPI_1.c **** 
 601:.\Generated_Source\PSoC4/SPI_1.c ****          /* Set interrupt on falling edge */
 602:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INCFG_TYPE(SPI_1_MOSI_SCL_RX_WAKE_INTCFG_REG,
 603:.\Generated_Source\PSoC4/SPI_1.c ****                                         SPI_1_MOSI_SCL_RX_WAKE_INTCFG_TYPE_MASK,
 604:.\Generated_Source\PSoC4/SPI_1.c ****                                         SPI_1_MOSI_SCL_RX_WAKE_INTCFG_TYPE_POS,
 605:.\Generated_Source\PSoC4/SPI_1.c ****                                         SPI_1_INTCFG_TYPE_FALLING_EDGE);
 606:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_MOSI_SCL_RX_WAKE_PIN) */
 607:.\Generated_Source\PSoC4/SPI_1.c **** 
 608:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_MISO_SDA_TX_PIN)
 609:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_MISO_SDA_TX_HSIOM_REG,
 610:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MISO_SDA_TX_HSIOM_MASK,
 611:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MISO_SDA_TX_HSIOM_POS,
 612:.\Generated_Source\PSoC4/SPI_1.c ****                                        hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX]);
 613:.\Generated_Source\PSoC4/SPI_1.c **** 
 614:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_miso_i2c_sda_uart_tx_SetDriveMode((uint8) pinsDm[SPI_1_MISO_SDA_TX_PIN_INDEX]);
 615:.\Generated_Source\PSoC4/SPI_1.c **** 
 616:.\Generated_Source\PSoC4/SPI_1.c ****     #if (!SPI_1_CY_SCBIP_V1)
 617:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_miso_i2c_sda_uart_tx_INP_DIS,
 618:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_miso_i2c_sda_uart_tx_MASK,
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 16


 619:.\Generated_Source\PSoC4/SPI_1.c ****                                     (0u != (pinsInBuf & SPI_1_MISO_SDA_TX_PIN_MASK)));
 620:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (!SPI_1_CY_SCBIP_V1) */
 621:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_MOSI_SCL_RX_PIN) */
 622:.\Generated_Source\PSoC4/SPI_1.c **** 
 623:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SCLK_PIN)
 624:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SCLK_HSIOM_REG, SPI_1_SCLK_HSIOM_MASK,
 625:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SCLK_HSIOM_POS, hsiomSel[SPI_1_SCLK_PIN_INDEX]);
 626:.\Generated_Source\PSoC4/SPI_1.c **** 
 627:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_sclk_SetDriveMode((uint8) pinsDm[SPI_1_SCLK_PIN_INDEX]);
 628:.\Generated_Source\PSoC4/SPI_1.c **** 
 629:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_sclk_INP_DIS,
 630:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_sclk_MASK,
 631:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SCLK_PIN_MASK)));
 632:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SCLK_PIN) */
 633:.\Generated_Source\PSoC4/SPI_1.c **** 
 634:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SS0_PIN)
 635:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SS0_HSIOM_REG, SPI_1_SS0_HSIOM_MASK,
 636:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SS0_HSIOM_POS, hsiomSel[SPI_1_SS0_PIN_INDEX]);
 637:.\Generated_Source\PSoC4/SPI_1.c **** 
 638:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_ss0_SetDriveMode((uint8) pinsDm[SPI_1_SS0_PIN_INDEX]);
 639:.\Generated_Source\PSoC4/SPI_1.c **** 
 640:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_ss0_INP_DIS,
 641:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_ss0_MASK,
 642:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SS0_PIN_MASK)));
 643:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SS1_PIN) */
 644:.\Generated_Source\PSoC4/SPI_1.c **** 
 645:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SS1_PIN)
 646:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SS1_HSIOM_REG, SPI_1_SS1_HSIOM_MASK,
 647:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SS1_HSIOM_POS, hsiomSel[SPI_1_SS1_PIN_INDEX]);
 648:.\Generated_Source\PSoC4/SPI_1.c **** 
 649:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_ss1_SetDriveMode((uint8) pinsDm[SPI_1_SS1_PIN_INDEX]);
 650:.\Generated_Source\PSoC4/SPI_1.c **** 
 651:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_ss1_INP_DIS,
 652:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_ss1_MASK,
 653:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SS1_PIN_MASK)));
 654:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SS1_PIN) */
 655:.\Generated_Source\PSoC4/SPI_1.c **** 
 656:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SS2_PIN)
 657:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SS2_HSIOM_REG, SPI_1_SS2_HSIOM_MASK,
 658:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SS2_HSIOM_POS, hsiomSel[SPI_1_SS2_PIN_INDEX]);
 659:.\Generated_Source\PSoC4/SPI_1.c **** 
 660:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_ss2_SetDriveMode((uint8) pinsDm[SPI_1_SS2_PIN_INDEX]);
 661:.\Generated_Source\PSoC4/SPI_1.c **** 
 662:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_ss2_INP_DIS,
 663:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_ss2_MASK,
 664:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SS2_PIN_MASK)));
 665:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SS2_PIN) */
 666:.\Generated_Source\PSoC4/SPI_1.c **** 
 667:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SS3_PIN)
 668:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SS3_HSIOM_REG,  SPI_1_SS3_HSIOM_MASK,
 669:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SS3_HSIOM_POS, hsiomSel[SPI_1_SS3_PIN_INDEX]);
 670:.\Generated_Source\PSoC4/SPI_1.c **** 
 671:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_ss3_SetDriveMode((uint8) pinsDm[SPI_1_SS3_PIN_INDEX]);
 672:.\Generated_Source\PSoC4/SPI_1.c **** 
 673:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_ss3_INP_DIS,
 674:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_ss3_MASK,
 675:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SS3_PIN_MASK)));
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 17


 676:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SS3_PIN) */
 677:.\Generated_Source\PSoC4/SPI_1.c ****     }
 678:.\Generated_Source\PSoC4/SPI_1.c **** 
 679:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 680:.\Generated_Source\PSoC4/SPI_1.c **** 
 681:.\Generated_Source\PSoC4/SPI_1.c **** 
 682:.\Generated_Source\PSoC4/SPI_1.c **** #if (SPI_1_CY_SCBIP_V0 || SPI_1_CY_SCBIP_V1)
 683:.\Generated_Source\PSoC4/SPI_1.c ****     /*******************************************************************************
 684:.\Generated_Source\PSoC4/SPI_1.c ****     * Function Name: SPI_1_I2CSlaveNackGeneration
 685:.\Generated_Source\PSoC4/SPI_1.c ****     ********************************************************************************
 686:.\Generated_Source\PSoC4/SPI_1.c ****     *
 687:.\Generated_Source\PSoC4/SPI_1.c ****     * Summary:
 688:.\Generated_Source\PSoC4/SPI_1.c ****     *  Sets command to generate NACK to the address or data.
 689:.\Generated_Source\PSoC4/SPI_1.c ****     *
 690:.\Generated_Source\PSoC4/SPI_1.c ****     * Parameters:
 691:.\Generated_Source\PSoC4/SPI_1.c ****     *  None
 692:.\Generated_Source\PSoC4/SPI_1.c ****     *
 693:.\Generated_Source\PSoC4/SPI_1.c ****     * Return:
 694:.\Generated_Source\PSoC4/SPI_1.c ****     *  None
 695:.\Generated_Source\PSoC4/SPI_1.c ****     *
 696:.\Generated_Source\PSoC4/SPI_1.c ****     *******************************************************************************/
 697:.\Generated_Source\PSoC4/SPI_1.c ****     void SPI_1_I2CSlaveNackGeneration(void)
 698:.\Generated_Source\PSoC4/SPI_1.c ****     {
 238              		.loc 1 698 0
 239              		.cfi_startproc
 699:.\Generated_Source\PSoC4/SPI_1.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 700:.\Generated_Source\PSoC4/SPI_1.c ****         if ((0u != (SPI_1_CTRL_REG & SPI_1_CTRL_EC_AM_MODE)) &&
 240              		.loc 1 700 0
 241 0000 0A4B     		ldr	r3, .L23
 242 0002 1B68     		ldr	r3, [r3]
 243 0004 DB05     		lsl	r3, r3, #23
 244 0006 0DD5     		bpl	.L22
 701:.\Generated_Source\PSoC4/SPI_1.c ****             (0u == (SPI_1_I2C_CTRL_REG & SPI_1_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 245              		.loc 1 701 0 discriminator 1
 246 0008 094B     		ldr	r3, .L23+4
 247 000a 1B68     		ldr	r3, [r3]
 700:.\Generated_Source\PSoC4/SPI_1.c ****             (0u == (SPI_1_I2C_CTRL_REG & SPI_1_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 248              		.loc 1 700 0 discriminator 1
 249 000c 5B04     		lsl	r3, r3, #17
 250 000e 09D4     		bmi	.L22
 702:.\Generated_Source\PSoC4/SPI_1.c ****         {
 703:.\Generated_Source\PSoC4/SPI_1.c ****             /* Toggle EC_AM before NACK generation */
 704:.\Generated_Source\PSoC4/SPI_1.c ****             SPI_1_CTRL_REG &= ~SPI_1_CTRL_EC_AM_MODE;
 251              		.loc 1 704 0
 252 0010 064B     		ldr	r3, .L23
 253 0012 1968     		ldr	r1, [r3]
 254 0014 074A     		ldr	r2, .L23+8
 255 0016 0A40     		and	r2, r1
 256 0018 1A60     		str	r2, [r3]
 705:.\Generated_Source\PSoC4/SPI_1.c ****             SPI_1_CTRL_REG |=  SPI_1_CTRL_EC_AM_MODE;
 257              		.loc 1 705 0
 258 001a 1A68     		ldr	r2, [r3]
 259 001c 8021     		mov	r1, #128
 260 001e 4900     		lsl	r1, r1, #1
 261 0020 0A43     		orr	r2, r1
 262 0022 1A60     		str	r2, [r3]
 263              	.L22:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 18


 706:.\Generated_Source\PSoC4/SPI_1.c ****         }
 707:.\Generated_Source\PSoC4/SPI_1.c **** 
 708:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_I2C_SLAVE_CMD_REG = SPI_1_I2C_SLAVE_CMD_S_NACK;
 264              		.loc 1 708 0
 265 0024 0222     		mov	r2, #2
 266 0026 044B     		ldr	r3, .L23+12
 267 0028 1A60     		str	r2, [r3]
 709:.\Generated_Source\PSoC4/SPI_1.c ****     }
 268              		.loc 1 709 0
 269              		@ sp needed
 270 002a 7047     		bx	lr
 271              	.L24:
 272              		.align	2
 273              	.L23:
 274 002c 00000640 		.word	1074135040
 275 0030 60000640 		.word	1074135136
 276 0034 FFFEFFFF 		.word	-257
 277 0038 6C000640 		.word	1074135148
 278              		.cfi_endproc
 279              	.LFE9:
 280              		.size	SPI_1_I2CSlaveNackGeneration, .-SPI_1_I2CSlaveNackGeneration
 281              		.global	SPI_1_customIntrHandler
 282              		.global	SPI_1_initVar
 283              		.bss
 284              		.align	2
 285              		.set	.LANCHOR0,. + 0
 286              		.type	SPI_1_initVar, %object
 287              		.size	SPI_1_initVar, 1
 288              	SPI_1_initVar:
 289 0000 00       		.space	1
 290 0001 000000   		.space	3
 291              		.type	SPI_1_customIntrHandler, %object
 292              		.size	SPI_1_customIntrHandler, 4
 293              	SPI_1_customIntrHandler:
 294 0004 00000000 		.space	4
 295              		.text
 296              	.Letext0:
 297              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 298              		.file 3 ".\\Generated_Source\\PSoC4\\SPI_1_SPI_UART_PVT.h"
 299              		.section	.debug_info,"",%progbits
 300              	.Ldebug_info0:
 301 0000 F2010000 		.4byte	0x1f2
 302 0004 0400     		.2byte	0x4
 303 0006 00000000 		.4byte	.Ldebug_abbrev0
 304 000a 04       		.byte	0x4
 305 000b 01       		.uleb128 0x1
 306 000c 43010000 		.4byte	.LASF31
 307 0010 01       		.byte	0x1
 308 0011 E9010000 		.4byte	.LASF32
 309 0015 1E020000 		.4byte	.LASF33
 310 0019 00000000 		.4byte	.Ldebug_ranges0+0
 311 001d 00000000 		.4byte	0
 312 0021 00000000 		.4byte	.Ldebug_line0
 313 0025 02       		.uleb128 0x2
 314 0026 01       		.byte	0x1
 315 0027 06       		.byte	0x6
 316 0028 53020000 		.4byte	.LASF0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 19


 317 002c 02       		.uleb128 0x2
 318 002d 01       		.byte	0x1
 319 002e 08       		.byte	0x8
 320 002f 65000000 		.4byte	.LASF1
 321 0033 02       		.uleb128 0x2
 322 0034 02       		.byte	0x2
 323 0035 05       		.byte	0x5
 324 0036 DF010000 		.4byte	.LASF2
 325 003a 02       		.uleb128 0x2
 326 003b 02       		.byte	0x2
 327 003c 07       		.byte	0x7
 328 003d 24000000 		.4byte	.LASF3
 329 0041 02       		.uleb128 0x2
 330 0042 04       		.byte	0x4
 331 0043 05       		.byte	0x5
 332 0044 15020000 		.4byte	.LASF4
 333 0048 02       		.uleb128 0x2
 334 0049 04       		.byte	0x4
 335 004a 07       		.byte	0x7
 336 004b 73000000 		.4byte	.LASF5
 337 004f 02       		.uleb128 0x2
 338 0050 08       		.byte	0x8
 339 0051 05       		.byte	0x5
 340 0052 30010000 		.4byte	.LASF6
 341 0056 02       		.uleb128 0x2
 342 0057 08       		.byte	0x8
 343 0058 07       		.byte	0x7
 344 0059 D8000000 		.4byte	.LASF7
 345 005d 03       		.uleb128 0x3
 346 005e 04       		.byte	0x4
 347 005f 05       		.byte	0x5
 348 0060 696E7400 		.ascii	"int\000"
 349 0064 02       		.uleb128 0x2
 350 0065 04       		.byte	0x4
 351 0066 07       		.byte	0x7
 352 0067 CB000000 		.4byte	.LASF8
 353 006b 04       		.uleb128 0x4
 354 006c 85000000 		.4byte	.LASF9
 355 0070 02       		.byte	0x2
 356 0071 A1       		.byte	0xa1
 357 0072 2C000000 		.4byte	0x2c
 358 0076 04       		.uleb128 0x4
 359 0077 C4000000 		.4byte	.LASF10
 360 007b 02       		.byte	0x2
 361 007c A3       		.byte	0xa3
 362 007d 48000000 		.4byte	0x48
 363 0081 02       		.uleb128 0x2
 364 0082 04       		.byte	0x4
 365 0083 04       		.byte	0x4
 366 0084 5F000000 		.4byte	.LASF11
 367 0088 02       		.uleb128 0x2
 368 0089 08       		.byte	0x8
 369 008a 04       		.byte	0x4
 370 008b A3000000 		.4byte	.LASF12
 371 008f 02       		.uleb128 0x2
 372 0090 01       		.byte	0x1
 373 0091 08       		.byte	0x8
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 20


 374 0092 3E010000 		.4byte	.LASF13
 375 0096 05       		.uleb128 0x5
 376 0097 00000000 		.4byte	.LASF14
 377 009b 02       		.byte	0x2
 378 009c 4D01     		.2byte	0x14d
 379 009e A2000000 		.4byte	0xa2
 380 00a2 06       		.uleb128 0x6
 381 00a3 76000000 		.4byte	0x76
 382 00a7 05       		.uleb128 0x5
 383 00a8 1A010000 		.4byte	.LASF15
 384 00ac 02       		.byte	0x2
 385 00ad 5D01     		.2byte	0x15d
 386 00af B3000000 		.4byte	0xb3
 387 00b3 07       		.uleb128 0x7
 388 00b4 04       		.byte	0x4
 389 00b5 B9000000 		.4byte	0xb9
 390 00b9 08       		.uleb128 0x8
 391 00ba 02       		.uleb128 0x2
 392 00bb 04       		.byte	0x4
 393 00bc 07       		.byte	0x7
 394 00bd 27010000 		.4byte	.LASF16
 395 00c1 09       		.uleb128 0x9
 396 00c2 37000000 		.4byte	.LASF17
 397 00c6 01       		.byte	0x1
 398 00c7 63       		.byte	0x63
 399 00c8 00000000 		.4byte	.LFB0
 400 00cc 08000000 		.4byte	.LFE0-.LFB0
 401 00d0 01       		.uleb128 0x1
 402 00d1 9C       		.byte	0x9c
 403 00d2 E0000000 		.4byte	0xe0
 404 00d6 0A       		.uleb128 0xa
 405 00d7 06000000 		.4byte	.LVL0
 406 00db EE010000 		.4byte	0x1ee
 407 00df 00       		.byte	0
 408 00e0 0B       		.uleb128 0xb
 409 00e1 17000000 		.4byte	.LASF19
 410 00e5 01       		.byte	0x1
 411 00e6 8F       		.byte	0x8f
 412 00e7 00000000 		.4byte	.LFB1
 413 00eb 14000000 		.4byte	.LFE1-.LFB1
 414 00ef 01       		.uleb128 0x1
 415 00f0 9C       		.byte	0x9c
 416 00f1 09       		.uleb128 0x9
 417 00f2 5F020000 		.4byte	.LASF18
 418 00f6 01       		.byte	0x1
 419 00f7 B7       		.byte	0xb7
 420 00f8 00000000 		.4byte	.LFB2
 421 00fc 20000000 		.4byte	.LFE2-.LFB2
 422 0100 01       		.uleb128 0x1
 423 0101 9C       		.byte	0x9c
 424 0102 19010000 		.4byte	0x119
 425 0106 0A       		.uleb128 0xa
 426 0107 0E000000 		.4byte	.LVL1
 427 010b C1000000 		.4byte	0xc1
 428 010f 0A       		.uleb128 0xa
 429 0110 18000000 		.4byte	.LVL2
 430 0114 E0000000 		.4byte	0xe0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 21


 431 0118 00       		.byte	0
 432 0119 0B       		.uleb128 0xb
 433 011a EF000000 		.4byte	.LASF20
 434 011e 01       		.byte	0x1
 435 011f D1       		.byte	0xd1
 436 0120 00000000 		.4byte	.LFB3
 437 0124 10000000 		.4byte	.LFE3-.LFB3
 438 0128 01       		.uleb128 0x1
 439 0129 9C       		.byte	0x9c
 440 012a 09       		.uleb128 0x9
 441 012b AF000000 		.4byte	.LASF21
 442 012f 01       		.byte	0x1
 443 0130 F2       		.byte	0xf2
 444 0131 00000000 		.4byte	.LFB4
 445 0135 14000000 		.4byte	.LFE4-.LFB4
 446 0139 01       		.uleb128 0x1
 447 013a 9C       		.byte	0x9c
 448 013b 5E010000 		.4byte	0x15e
 449 013f 0C       		.uleb128 0xc
 450 0140 11000000 		.4byte	.LASF23
 451 0144 01       		.byte	0x1
 452 0145 F2       		.byte	0xf2
 453 0146 76000000 		.4byte	0x76
 454 014a 00000000 		.4byte	.LLST0
 455 014e 0D       		.uleb128 0xd
 456 014f 0A020000 		.4byte	.LASF24
 457 0153 01       		.byte	0x1
 458 0154 F4       		.byte	0xf4
 459 0155 76000000 		.4byte	0x76
 460 0159 21000000 		.4byte	.LLST1
 461 015d 00       		.byte	0
 462 015e 0E       		.uleb128 0xe
 463 015f 79020000 		.4byte	.LASF22
 464 0163 01       		.byte	0x1
 465 0164 1001     		.2byte	0x110
 466 0166 00000000 		.4byte	.LFB5
 467 016a 14000000 		.4byte	.LFE5-.LFB5
 468 016e 01       		.uleb128 0x1
 469 016f 9C       		.byte	0x9c
 470 0170 95010000 		.4byte	0x195
 471 0174 0F       		.uleb128 0xf
 472 0175 11000000 		.4byte	.LASF23
 473 0179 01       		.byte	0x1
 474 017a 1001     		.2byte	0x110
 475 017c 76000000 		.4byte	0x76
 476 0180 3F000000 		.4byte	.LLST2
 477 0184 10       		.uleb128 0x10
 478 0185 06000000 		.4byte	.LASF25
 479 0189 01       		.byte	0x1
 480 018a 1201     		.2byte	0x112
 481 018c 76000000 		.4byte	0x76
 482 0190 60000000 		.4byte	.LLST3
 483 0194 00       		.byte	0
 484 0195 0E       		.uleb128 0xe
 485 0196 FA000000 		.4byte	.LASF26
 486 019a 01       		.byte	0x1
 487 019b 3301     		.2byte	0x133
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 22


 488 019d 00000000 		.4byte	.LFB6
 489 01a1 0C000000 		.4byte	.LFE6-.LFB6
 490 01a5 01       		.uleb128 0x1
 491 01a6 9C       		.byte	0x9c
 492 01a7 BA010000 		.4byte	0x1ba
 493 01ab 11       		.uleb128 0x11
 494 01ac AA000000 		.4byte	.LASF27
 495 01b0 01       		.byte	0x1
 496 01b1 3301     		.2byte	0x133
 497 01b3 A7000000 		.4byte	0xa7
 498 01b7 01       		.uleb128 0x1
 499 01b8 50       		.byte	0x50
 500 01b9 00       		.byte	0
 501 01ba 12       		.uleb128 0x12
 502 01bb 42000000 		.4byte	.LASF28
 503 01bf 01       		.byte	0x1
 504 01c0 B902     		.2byte	0x2b9
 505 01c2 00000000 		.4byte	.LFB9
 506 01c6 3C000000 		.4byte	.LFE9-.LFB9
 507 01ca 01       		.uleb128 0x1
 508 01cb 9C       		.byte	0x9c
 509 01cc 13       		.uleb128 0x13
 510 01cd D1010000 		.4byte	.LASF29
 511 01d1 01       		.byte	0x1
 512 01d2 42       		.byte	0x42
 513 01d3 6B000000 		.4byte	0x6b
 514 01d7 05       		.uleb128 0x5
 515 01d8 03       		.byte	0x3
 516 01d9 00000000 		.4byte	SPI_1_initVar
 517 01dd 13       		.uleb128 0x13
 518 01de 8B000000 		.4byte	.LASF30
 519 01e2 01       		.byte	0x1
 520 01e3 45       		.byte	0x45
 521 01e4 A7000000 		.4byte	0xa7
 522 01e8 05       		.uleb128 0x5
 523 01e9 03       		.byte	0x3
 524 01ea 00000000 		.4byte	SPI_1_customIntrHandler
 525 01ee 14       		.uleb128 0x14
 526 01ef 6B020000 		.4byte	.LASF34
 527 01f3 03       		.byte	0x3
 528 01f4 36       		.byte	0x36
 529 01f5 00       		.byte	0
 530              		.section	.debug_abbrev,"",%progbits
 531              	.Ldebug_abbrev0:
 532 0000 01       		.uleb128 0x1
 533 0001 11       		.uleb128 0x11
 534 0002 01       		.byte	0x1
 535 0003 25       		.uleb128 0x25
 536 0004 0E       		.uleb128 0xe
 537 0005 13       		.uleb128 0x13
 538 0006 0B       		.uleb128 0xb
 539 0007 03       		.uleb128 0x3
 540 0008 0E       		.uleb128 0xe
 541 0009 1B       		.uleb128 0x1b
 542 000a 0E       		.uleb128 0xe
 543 000b 55       		.uleb128 0x55
 544 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 23


 545 000d 11       		.uleb128 0x11
 546 000e 01       		.uleb128 0x1
 547 000f 10       		.uleb128 0x10
 548 0010 17       		.uleb128 0x17
 549 0011 00       		.byte	0
 550 0012 00       		.byte	0
 551 0013 02       		.uleb128 0x2
 552 0014 24       		.uleb128 0x24
 553 0015 00       		.byte	0
 554 0016 0B       		.uleb128 0xb
 555 0017 0B       		.uleb128 0xb
 556 0018 3E       		.uleb128 0x3e
 557 0019 0B       		.uleb128 0xb
 558 001a 03       		.uleb128 0x3
 559 001b 0E       		.uleb128 0xe
 560 001c 00       		.byte	0
 561 001d 00       		.byte	0
 562 001e 03       		.uleb128 0x3
 563 001f 24       		.uleb128 0x24
 564 0020 00       		.byte	0
 565 0021 0B       		.uleb128 0xb
 566 0022 0B       		.uleb128 0xb
 567 0023 3E       		.uleb128 0x3e
 568 0024 0B       		.uleb128 0xb
 569 0025 03       		.uleb128 0x3
 570 0026 08       		.uleb128 0x8
 571 0027 00       		.byte	0
 572 0028 00       		.byte	0
 573 0029 04       		.uleb128 0x4
 574 002a 16       		.uleb128 0x16
 575 002b 00       		.byte	0
 576 002c 03       		.uleb128 0x3
 577 002d 0E       		.uleb128 0xe
 578 002e 3A       		.uleb128 0x3a
 579 002f 0B       		.uleb128 0xb
 580 0030 3B       		.uleb128 0x3b
 581 0031 0B       		.uleb128 0xb
 582 0032 49       		.uleb128 0x49
 583 0033 13       		.uleb128 0x13
 584 0034 00       		.byte	0
 585 0035 00       		.byte	0
 586 0036 05       		.uleb128 0x5
 587 0037 16       		.uleb128 0x16
 588 0038 00       		.byte	0
 589 0039 03       		.uleb128 0x3
 590 003a 0E       		.uleb128 0xe
 591 003b 3A       		.uleb128 0x3a
 592 003c 0B       		.uleb128 0xb
 593 003d 3B       		.uleb128 0x3b
 594 003e 05       		.uleb128 0x5
 595 003f 49       		.uleb128 0x49
 596 0040 13       		.uleb128 0x13
 597 0041 00       		.byte	0
 598 0042 00       		.byte	0
 599 0043 06       		.uleb128 0x6
 600 0044 35       		.uleb128 0x35
 601 0045 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 24


 602 0046 49       		.uleb128 0x49
 603 0047 13       		.uleb128 0x13
 604 0048 00       		.byte	0
 605 0049 00       		.byte	0
 606 004a 07       		.uleb128 0x7
 607 004b 0F       		.uleb128 0xf
 608 004c 00       		.byte	0
 609 004d 0B       		.uleb128 0xb
 610 004e 0B       		.uleb128 0xb
 611 004f 49       		.uleb128 0x49
 612 0050 13       		.uleb128 0x13
 613 0051 00       		.byte	0
 614 0052 00       		.byte	0
 615 0053 08       		.uleb128 0x8
 616 0054 15       		.uleb128 0x15
 617 0055 00       		.byte	0
 618 0056 27       		.uleb128 0x27
 619 0057 19       		.uleb128 0x19
 620 0058 00       		.byte	0
 621 0059 00       		.byte	0
 622 005a 09       		.uleb128 0x9
 623 005b 2E       		.uleb128 0x2e
 624 005c 01       		.byte	0x1
 625 005d 3F       		.uleb128 0x3f
 626 005e 19       		.uleb128 0x19
 627 005f 03       		.uleb128 0x3
 628 0060 0E       		.uleb128 0xe
 629 0061 3A       		.uleb128 0x3a
 630 0062 0B       		.uleb128 0xb
 631 0063 3B       		.uleb128 0x3b
 632 0064 0B       		.uleb128 0xb
 633 0065 27       		.uleb128 0x27
 634 0066 19       		.uleb128 0x19
 635 0067 11       		.uleb128 0x11
 636 0068 01       		.uleb128 0x1
 637 0069 12       		.uleb128 0x12
 638 006a 06       		.uleb128 0x6
 639 006b 40       		.uleb128 0x40
 640 006c 18       		.uleb128 0x18
 641 006d 9742     		.uleb128 0x2117
 642 006f 19       		.uleb128 0x19
 643 0070 01       		.uleb128 0x1
 644 0071 13       		.uleb128 0x13
 645 0072 00       		.byte	0
 646 0073 00       		.byte	0
 647 0074 0A       		.uleb128 0xa
 648 0075 898201   		.uleb128 0x4109
 649 0078 00       		.byte	0
 650 0079 11       		.uleb128 0x11
 651 007a 01       		.uleb128 0x1
 652 007b 31       		.uleb128 0x31
 653 007c 13       		.uleb128 0x13
 654 007d 00       		.byte	0
 655 007e 00       		.byte	0
 656 007f 0B       		.uleb128 0xb
 657 0080 2E       		.uleb128 0x2e
 658 0081 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 25


 659 0082 3F       		.uleb128 0x3f
 660 0083 19       		.uleb128 0x19
 661 0084 03       		.uleb128 0x3
 662 0085 0E       		.uleb128 0xe
 663 0086 3A       		.uleb128 0x3a
 664 0087 0B       		.uleb128 0xb
 665 0088 3B       		.uleb128 0x3b
 666 0089 0B       		.uleb128 0xb
 667 008a 27       		.uleb128 0x27
 668 008b 19       		.uleb128 0x19
 669 008c 11       		.uleb128 0x11
 670 008d 01       		.uleb128 0x1
 671 008e 12       		.uleb128 0x12
 672 008f 06       		.uleb128 0x6
 673 0090 40       		.uleb128 0x40
 674 0091 18       		.uleb128 0x18
 675 0092 9742     		.uleb128 0x2117
 676 0094 19       		.uleb128 0x19
 677 0095 00       		.byte	0
 678 0096 00       		.byte	0
 679 0097 0C       		.uleb128 0xc
 680 0098 05       		.uleb128 0x5
 681 0099 00       		.byte	0
 682 009a 03       		.uleb128 0x3
 683 009b 0E       		.uleb128 0xe
 684 009c 3A       		.uleb128 0x3a
 685 009d 0B       		.uleb128 0xb
 686 009e 3B       		.uleb128 0x3b
 687 009f 0B       		.uleb128 0xb
 688 00a0 49       		.uleb128 0x49
 689 00a1 13       		.uleb128 0x13
 690 00a2 02       		.uleb128 0x2
 691 00a3 17       		.uleb128 0x17
 692 00a4 00       		.byte	0
 693 00a5 00       		.byte	0
 694 00a6 0D       		.uleb128 0xd
 695 00a7 34       		.uleb128 0x34
 696 00a8 00       		.byte	0
 697 00a9 03       		.uleb128 0x3
 698 00aa 0E       		.uleb128 0xe
 699 00ab 3A       		.uleb128 0x3a
 700 00ac 0B       		.uleb128 0xb
 701 00ad 3B       		.uleb128 0x3b
 702 00ae 0B       		.uleb128 0xb
 703 00af 49       		.uleb128 0x49
 704 00b0 13       		.uleb128 0x13
 705 00b1 02       		.uleb128 0x2
 706 00b2 17       		.uleb128 0x17
 707 00b3 00       		.byte	0
 708 00b4 00       		.byte	0
 709 00b5 0E       		.uleb128 0xe
 710 00b6 2E       		.uleb128 0x2e
 711 00b7 01       		.byte	0x1
 712 00b8 3F       		.uleb128 0x3f
 713 00b9 19       		.uleb128 0x19
 714 00ba 03       		.uleb128 0x3
 715 00bb 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 26


 716 00bc 3A       		.uleb128 0x3a
 717 00bd 0B       		.uleb128 0xb
 718 00be 3B       		.uleb128 0x3b
 719 00bf 05       		.uleb128 0x5
 720 00c0 27       		.uleb128 0x27
 721 00c1 19       		.uleb128 0x19
 722 00c2 11       		.uleb128 0x11
 723 00c3 01       		.uleb128 0x1
 724 00c4 12       		.uleb128 0x12
 725 00c5 06       		.uleb128 0x6
 726 00c6 40       		.uleb128 0x40
 727 00c7 18       		.uleb128 0x18
 728 00c8 9742     		.uleb128 0x2117
 729 00ca 19       		.uleb128 0x19
 730 00cb 01       		.uleb128 0x1
 731 00cc 13       		.uleb128 0x13
 732 00cd 00       		.byte	0
 733 00ce 00       		.byte	0
 734 00cf 0F       		.uleb128 0xf
 735 00d0 05       		.uleb128 0x5
 736 00d1 00       		.byte	0
 737 00d2 03       		.uleb128 0x3
 738 00d3 0E       		.uleb128 0xe
 739 00d4 3A       		.uleb128 0x3a
 740 00d5 0B       		.uleb128 0xb
 741 00d6 3B       		.uleb128 0x3b
 742 00d7 05       		.uleb128 0x5
 743 00d8 49       		.uleb128 0x49
 744 00d9 13       		.uleb128 0x13
 745 00da 02       		.uleb128 0x2
 746 00db 17       		.uleb128 0x17
 747 00dc 00       		.byte	0
 748 00dd 00       		.byte	0
 749 00de 10       		.uleb128 0x10
 750 00df 34       		.uleb128 0x34
 751 00e0 00       		.byte	0
 752 00e1 03       		.uleb128 0x3
 753 00e2 0E       		.uleb128 0xe
 754 00e3 3A       		.uleb128 0x3a
 755 00e4 0B       		.uleb128 0xb
 756 00e5 3B       		.uleb128 0x3b
 757 00e6 05       		.uleb128 0x5
 758 00e7 49       		.uleb128 0x49
 759 00e8 13       		.uleb128 0x13
 760 00e9 02       		.uleb128 0x2
 761 00ea 17       		.uleb128 0x17
 762 00eb 00       		.byte	0
 763 00ec 00       		.byte	0
 764 00ed 11       		.uleb128 0x11
 765 00ee 05       		.uleb128 0x5
 766 00ef 00       		.byte	0
 767 00f0 03       		.uleb128 0x3
 768 00f1 0E       		.uleb128 0xe
 769 00f2 3A       		.uleb128 0x3a
 770 00f3 0B       		.uleb128 0xb
 771 00f4 3B       		.uleb128 0x3b
 772 00f5 05       		.uleb128 0x5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 27


 773 00f6 49       		.uleb128 0x49
 774 00f7 13       		.uleb128 0x13
 775 00f8 02       		.uleb128 0x2
 776 00f9 18       		.uleb128 0x18
 777 00fa 00       		.byte	0
 778 00fb 00       		.byte	0
 779 00fc 12       		.uleb128 0x12
 780 00fd 2E       		.uleb128 0x2e
 781 00fe 00       		.byte	0
 782 00ff 3F       		.uleb128 0x3f
 783 0100 19       		.uleb128 0x19
 784 0101 03       		.uleb128 0x3
 785 0102 0E       		.uleb128 0xe
 786 0103 3A       		.uleb128 0x3a
 787 0104 0B       		.uleb128 0xb
 788 0105 3B       		.uleb128 0x3b
 789 0106 05       		.uleb128 0x5
 790 0107 27       		.uleb128 0x27
 791 0108 19       		.uleb128 0x19
 792 0109 11       		.uleb128 0x11
 793 010a 01       		.uleb128 0x1
 794 010b 12       		.uleb128 0x12
 795 010c 06       		.uleb128 0x6
 796 010d 40       		.uleb128 0x40
 797 010e 18       		.uleb128 0x18
 798 010f 9742     		.uleb128 0x2117
 799 0111 19       		.uleb128 0x19
 800 0112 00       		.byte	0
 801 0113 00       		.byte	0
 802 0114 13       		.uleb128 0x13
 803 0115 34       		.uleb128 0x34
 804 0116 00       		.byte	0
 805 0117 03       		.uleb128 0x3
 806 0118 0E       		.uleb128 0xe
 807 0119 3A       		.uleb128 0x3a
 808 011a 0B       		.uleb128 0xb
 809 011b 3B       		.uleb128 0x3b
 810 011c 0B       		.uleb128 0xb
 811 011d 49       		.uleb128 0x49
 812 011e 13       		.uleb128 0x13
 813 011f 3F       		.uleb128 0x3f
 814 0120 19       		.uleb128 0x19
 815 0121 02       		.uleb128 0x2
 816 0122 18       		.uleb128 0x18
 817 0123 00       		.byte	0
 818 0124 00       		.byte	0
 819 0125 14       		.uleb128 0x14
 820 0126 2E       		.uleb128 0x2e
 821 0127 00       		.byte	0
 822 0128 3F       		.uleb128 0x3f
 823 0129 19       		.uleb128 0x19
 824 012a 03       		.uleb128 0x3
 825 012b 0E       		.uleb128 0xe
 826 012c 3A       		.uleb128 0x3a
 827 012d 0B       		.uleb128 0xb
 828 012e 3B       		.uleb128 0x3b
 829 012f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 28


 830 0130 27       		.uleb128 0x27
 831 0131 19       		.uleb128 0x19
 832 0132 3C       		.uleb128 0x3c
 833 0133 19       		.uleb128 0x19
 834 0134 00       		.byte	0
 835 0135 00       		.byte	0
 836 0136 00       		.byte	0
 837              		.section	.debug_loc,"",%progbits
 838              	.Ldebug_loc0:
 839              	.LLST0:
 840 0000 00000000 		.4byte	.LVL3
 841 0004 0A000000 		.4byte	.LVL6
 842 0008 0100     		.2byte	0x1
 843 000a 50       		.byte	0x50
 844 000b 0A000000 		.4byte	.LVL6
 845 000f 14000000 		.4byte	.LFE4
 846 0013 0400     		.2byte	0x4
 847 0015 F3       		.byte	0xf3
 848 0016 01       		.uleb128 0x1
 849 0017 50       		.byte	0x50
 850 0018 9F       		.byte	0x9f
 851 0019 00000000 		.4byte	0
 852 001d 00000000 		.4byte	0
 853              	.LLST1:
 854 0021 04000000 		.4byte	.LVL4
 855 0025 0C000000 		.4byte	.LVL7
 856 0029 0100     		.2byte	0x1
 857 002b 53       		.byte	0x53
 858 002c 0C000000 		.4byte	.LVL7
 859 0030 14000000 		.4byte	.LFE4
 860 0034 0100     		.2byte	0x1
 861 0036 50       		.byte	0x50
 862 0037 00000000 		.4byte	0
 863 003b 00000000 		.4byte	0
 864              	.LLST2:
 865 003f 00000000 		.4byte	.LVL8
 866 0043 0A000000 		.4byte	.LVL11
 867 0047 0100     		.2byte	0x1
 868 0049 50       		.byte	0x50
 869 004a 0A000000 		.4byte	.LVL11
 870 004e 14000000 		.4byte	.LFE5
 871 0052 0400     		.2byte	0x4
 872 0054 F3       		.byte	0xf3
 873 0055 01       		.uleb128 0x1
 874 0056 50       		.byte	0x50
 875 0057 9F       		.byte	0x9f
 876 0058 00000000 		.4byte	0
 877 005c 00000000 		.4byte	0
 878              	.LLST3:
 879 0060 04000000 		.4byte	.LVL9
 880 0064 0C000000 		.4byte	.LVL12
 881 0068 0100     		.2byte	0x1
 882 006a 53       		.byte	0x53
 883 006b 0C000000 		.4byte	.LVL12
 884 006f 14000000 		.4byte	.LFE5
 885 0073 0100     		.2byte	0x1
 886 0075 50       		.byte	0x50
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 29


 887 0076 00000000 		.4byte	0
 888 007a 00000000 		.4byte	0
 889              		.section	.debug_aranges,"",%progbits
 890 0000 54000000 		.4byte	0x54
 891 0004 0200     		.2byte	0x2
 892 0006 00000000 		.4byte	.Ldebug_info0
 893 000a 04       		.byte	0x4
 894 000b 00       		.byte	0
 895 000c 0000     		.2byte	0
 896 000e 0000     		.2byte	0
 897 0010 00000000 		.4byte	.LFB0
 898 0014 08000000 		.4byte	.LFE0-.LFB0
 899 0018 00000000 		.4byte	.LFB1
 900 001c 14000000 		.4byte	.LFE1-.LFB1
 901 0020 00000000 		.4byte	.LFB2
 902 0024 20000000 		.4byte	.LFE2-.LFB2
 903 0028 00000000 		.4byte	.LFB3
 904 002c 10000000 		.4byte	.LFE3-.LFB3
 905 0030 00000000 		.4byte	.LFB4
 906 0034 14000000 		.4byte	.LFE4-.LFB4
 907 0038 00000000 		.4byte	.LFB5
 908 003c 14000000 		.4byte	.LFE5-.LFB5
 909 0040 00000000 		.4byte	.LFB6
 910 0044 0C000000 		.4byte	.LFE6-.LFB6
 911 0048 00000000 		.4byte	.LFB9
 912 004c 3C000000 		.4byte	.LFE9-.LFB9
 913 0050 00000000 		.4byte	0
 914 0054 00000000 		.4byte	0
 915              		.section	.debug_ranges,"",%progbits
 916              	.Ldebug_ranges0:
 917 0000 00000000 		.4byte	.LFB0
 918 0004 08000000 		.4byte	.LFE0
 919 0008 00000000 		.4byte	.LFB1
 920 000c 14000000 		.4byte	.LFE1
 921 0010 00000000 		.4byte	.LFB2
 922 0014 20000000 		.4byte	.LFE2
 923 0018 00000000 		.4byte	.LFB3
 924 001c 10000000 		.4byte	.LFE3
 925 0020 00000000 		.4byte	.LFB4
 926 0024 14000000 		.4byte	.LFE4
 927 0028 00000000 		.4byte	.LFB5
 928 002c 14000000 		.4byte	.LFE5
 929 0030 00000000 		.4byte	.LFB6
 930 0034 0C000000 		.4byte	.LFE6
 931 0038 00000000 		.4byte	.LFB9
 932 003c 3C000000 		.4byte	.LFE9
 933 0040 00000000 		.4byte	0
 934 0044 00000000 		.4byte	0
 935              		.section	.debug_line,"",%progbits
 936              	.Ldebug_line0:
 937 0000 25010000 		.section	.debug_str,"MS",%progbits,1
 937      02007300 
 937      00000201 
 937      FB0E0D00 
 937      01010101 
 938              	.LASF14:
 939 0000 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 30


 939      3200
 940              	.LASF25:
 941 0006 74784669 		.ascii	"txFifoCtrl\000"
 941      666F4374 
 941      726C00
 942              	.LASF23:
 943 0011 6C657665 		.ascii	"level\000"
 943      6C00
 944              	.LASF19:
 945 0017 5350495F 		.ascii	"SPI_1_Enable\000"
 945      315F456E 
 945      61626C65 
 945      00
 946              	.LASF3:
 947 0024 73686F72 		.ascii	"short unsigned int\000"
 947      7420756E 
 947      7369676E 
 947      65642069 
 947      6E7400
 948              	.LASF17:
 949 0037 5350495F 		.ascii	"SPI_1_Init\000"
 949      315F496E 
 949      697400
 950              	.LASF28:
 951 0042 5350495F 		.ascii	"SPI_1_I2CSlaveNackGeneration\000"
 951      315F4932 
 951      43536C61 
 951      76654E61 
 951      636B4765 
 952              	.LASF11:
 953 005f 666C6F61 		.ascii	"float\000"
 953      7400
 954              	.LASF1:
 955 0065 756E7369 		.ascii	"unsigned char\000"
 955      676E6564 
 955      20636861 
 955      7200
 956              	.LASF5:
 957 0073 6C6F6E67 		.ascii	"long unsigned int\000"
 957      20756E73 
 957      69676E65 
 957      6420696E 
 957      7400
 958              	.LASF9:
 959 0085 75696E74 		.ascii	"uint8\000"
 959      3800
 960              	.LASF30:
 961 008b 5350495F 		.ascii	"SPI_1_customIntrHandler\000"
 961      315F6375 
 961      73746F6D 
 961      496E7472 
 961      48616E64 
 962              	.LASF12:
 963 00a3 646F7562 		.ascii	"double\000"
 963      6C6500
 964              	.LASF27:
 965 00aa 66756E63 		.ascii	"func\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 31


 965      00
 966              	.LASF21:
 967 00af 5350495F 		.ascii	"SPI_1_SetRxFifoLevel\000"
 967      315F5365 
 967      74527846 
 967      69666F4C 
 967      6576656C 
 968              	.LASF10:
 969 00c4 75696E74 		.ascii	"uint32\000"
 969      333200
 970              	.LASF8:
 971 00cb 756E7369 		.ascii	"unsigned int\000"
 971      676E6564 
 971      20696E74 
 971      00
 972              	.LASF7:
 973 00d8 6C6F6E67 		.ascii	"long long unsigned int\000"
 973      206C6F6E 
 973      6720756E 
 973      7369676E 
 973      65642069 
 974              	.LASF20:
 975 00ef 5350495F 		.ascii	"SPI_1_Stop\000"
 975      315F5374 
 975      6F7000
 976              	.LASF26:
 977 00fa 5350495F 		.ascii	"SPI_1_SetCustomInterruptHandler\000"
 977      315F5365 
 977      74437573 
 977      746F6D49 
 977      6E746572 
 978              	.LASF15:
 979 011a 63796973 		.ascii	"cyisraddress\000"
 979      72616464 
 979      72657373 
 979      00
 980              	.LASF16:
 981 0127 73697A65 		.ascii	"sizetype\000"
 981      74797065 
 981      00
 982              	.LASF6:
 983 0130 6C6F6E67 		.ascii	"long long int\000"
 983      206C6F6E 
 983      6720696E 
 983      7400
 984              	.LASF13:
 985 013e 63686172 		.ascii	"char\000"
 985      00
 986              	.LASF31:
 987 0143 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 987      4320342E 
 987      392E3320 
 987      32303135 
 987      30333033 
 988 0176 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 988      20726576 
 988      6973696F 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 32


 988      6E203232 
 988      31323230 
 989 01a9 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 989      66756E63 
 989      74696F6E 
 989      2D736563 
 989      74696F6E 
 990              	.LASF29:
 991 01d1 5350495F 		.ascii	"SPI_1_initVar\000"
 991      315F696E 
 991      69745661 
 991      7200
 992              	.LASF2:
 993 01df 73686F72 		.ascii	"short int\000"
 993      7420696E 
 993      7400
 994              	.LASF32:
 995 01e9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\SPI_1.c\000"
 995      6E657261 
 995      7465645F 
 995      536F7572 
 995      63655C50 
 996              	.LASF24:
 997 020a 72784669 		.ascii	"rxFifoCtrl\000"
 997      666F4374 
 997      726C00
 998              	.LASF4:
 999 0215 6C6F6E67 		.ascii	"long int\000"
 999      20696E74 
 999      00
 1000              	.LASF33:
 1001 021e 453A5C68 		.ascii	"E:\\home\\jarik\\src\\psoc\\mpi_rom_emu\\mpi_rom_em"
 1001      6F6D655C 
 1001      6A617269 
 1001      6B5C7372 
 1001      635C7073 
 1002 024b 752E6379 		.ascii	"u.cydsn\000"
 1002      64736E00 
 1003              	.LASF0:
 1004 0253 7369676E 		.ascii	"signed char\000"
 1004      65642063 
 1004      68617200 
 1005              	.LASF18:
 1006 025f 5350495F 		.ascii	"SPI_1_Start\000"
 1006      315F5374 
 1006      61727400 
 1007              	.LASF34:
 1008 026b 5350495F 		.ascii	"SPI_1_SpiInit\000"
 1008      315F5370 
 1008      69496E69 
 1008      7400
 1009              	.LASF22:
 1010 0279 5350495F 		.ascii	"SPI_1_SetTxFifoLevel\000"
 1010      315F5365 
 1010      74547846 
 1010      69666F4C 
 1010      6576656C 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\ccbpPTbU.s 			page 33


 1011              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br

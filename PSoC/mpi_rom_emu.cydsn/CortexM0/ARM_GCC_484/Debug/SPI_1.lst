ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPI_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SPI_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	SPI_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	SPI_1_Init, %function
  23              	SPI_1_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\SPI_1.c"
   1:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/SPI_1.c **** * File Name: SPI_1.c
   3:.\Generated_Source\PSoC4/SPI_1.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/SPI_1.c **** *
   5:.\Generated_Source\PSoC4/SPI_1.c **** * Description:
   6:.\Generated_Source\PSoC4/SPI_1.c **** *  This file provides the source code to the API for the SCB Component.
   7:.\Generated_Source\PSoC4/SPI_1.c **** *
   8:.\Generated_Source\PSoC4/SPI_1.c **** * Note:
   9:.\Generated_Source\PSoC4/SPI_1.c **** *
  10:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************
  11:.\Generated_Source\PSoC4/SPI_1.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/SPI_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/SPI_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/SPI_1.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC4/SPI_1.c **** 
  17:.\Generated_Source\PSoC4/SPI_1.c **** #include "SPI_1_PVT.h"
  18:.\Generated_Source\PSoC4/SPI_1.c **** 
  19:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_I2C_INC)
  20:.\Generated_Source\PSoC4/SPI_1.c ****     #include "SPI_1_I2C_PVT.h"
  21:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_I2C_INC) */
  22:.\Generated_Source\PSoC4/SPI_1.c **** 
  23:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_EZI2C_INC)
  24:.\Generated_Source\PSoC4/SPI_1.c ****     #include "SPI_1_EZI2C_PVT.h"
  25:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_EZI2C_INC) */
  26:.\Generated_Source\PSoC4/SPI_1.c **** 
  27:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_SPI_INC || SPI_1_SCB_MODE_UART_INC)
  28:.\Generated_Source\PSoC4/SPI_1.c ****     #include "SPI_1_SPI_UART_PVT.h"
  29:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_SPI_INC || SPI_1_SCB_MODE_UART_INC) */
  30:.\Generated_Source\PSoC4/SPI_1.c **** 
  31:.\Generated_Source\PSoC4/SPI_1.c **** 
  32:.\Generated_Source\PSoC4/SPI_1.c **** /***************************************
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 2


  33:.\Generated_Source\PSoC4/SPI_1.c **** *    Run Time Configuration Vars
  34:.\Generated_Source\PSoC4/SPI_1.c **** ***************************************/
  35:.\Generated_Source\PSoC4/SPI_1.c **** 
  36:.\Generated_Source\PSoC4/SPI_1.c **** /* Stores internal component configuration for Unconfigured mode */
  37:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
  38:.\Generated_Source\PSoC4/SPI_1.c ****     /* Common configuration variables */
  39:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_scbMode = SPI_1_SCB_MODE_UNCONFIG;
  40:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_scbEnableWake;
  41:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_scbEnableIntr;
  42:.\Generated_Source\PSoC4/SPI_1.c **** 
  43:.\Generated_Source\PSoC4/SPI_1.c ****     /* I2C configuration variables */
  44:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_mode;
  45:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_acceptAddr;
  46:.\Generated_Source\PSoC4/SPI_1.c **** 
  47:.\Generated_Source\PSoC4/SPI_1.c ****     /* SPI/UART configuration variables */
  48:.\Generated_Source\PSoC4/SPI_1.c ****     volatile uint8 * SPI_1_rxBuffer;
  49:.\Generated_Source\PSoC4/SPI_1.c ****     uint8  SPI_1_rxDataBits;
  50:.\Generated_Source\PSoC4/SPI_1.c ****     uint32 SPI_1_rxBufferSize;
  51:.\Generated_Source\PSoC4/SPI_1.c **** 
  52:.\Generated_Source\PSoC4/SPI_1.c ****     volatile uint8 * SPI_1_txBuffer;
  53:.\Generated_Source\PSoC4/SPI_1.c ****     uint8  SPI_1_txDataBits;
  54:.\Generated_Source\PSoC4/SPI_1.c ****     uint32 SPI_1_txBufferSize;
  55:.\Generated_Source\PSoC4/SPI_1.c **** 
  56:.\Generated_Source\PSoC4/SPI_1.c ****     /* EZI2C configuration variables */
  57:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_numberOfAddr;
  58:.\Generated_Source\PSoC4/SPI_1.c ****     uint8 SPI_1_subAddrSize;
  59:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
  60:.\Generated_Source\PSoC4/SPI_1.c **** 
  61:.\Generated_Source\PSoC4/SPI_1.c **** 
  62:.\Generated_Source\PSoC4/SPI_1.c **** /***************************************
  63:.\Generated_Source\PSoC4/SPI_1.c **** *     Common SCB Vars
  64:.\Generated_Source\PSoC4/SPI_1.c **** ***************************************/
  65:.\Generated_Source\PSoC4/SPI_1.c **** 
  66:.\Generated_Source\PSoC4/SPI_1.c **** uint8 SPI_1_initVar = 0u;
  67:.\Generated_Source\PSoC4/SPI_1.c **** 
  68:.\Generated_Source\PSoC4/SPI_1.c **** #if !defined (CY_REMOVE_SPI_1_CUSTOM_INTR_HANDLER)
  69:.\Generated_Source\PSoC4/SPI_1.c ****     cyisraddress SPI_1_customIntrHandler = NULL;
  70:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* !defined (CY_REMOVE_SPI_1_CUSTOM_INTR_HANDLER) */
  71:.\Generated_Source\PSoC4/SPI_1.c **** 
  72:.\Generated_Source\PSoC4/SPI_1.c **** 
  73:.\Generated_Source\PSoC4/SPI_1.c **** /***************************************
  74:.\Generated_Source\PSoC4/SPI_1.c **** *    Private Function Prototypes
  75:.\Generated_Source\PSoC4/SPI_1.c **** ***************************************/
  76:.\Generated_Source\PSoC4/SPI_1.c **** 
  77:.\Generated_Source\PSoC4/SPI_1.c **** static void SPI_1_ScbEnableIntr(void);
  78:.\Generated_Source\PSoC4/SPI_1.c **** static void SPI_1_ScbModeStop(void);
  79:.\Generated_Source\PSoC4/SPI_1.c **** 
  80:.\Generated_Source\PSoC4/SPI_1.c **** 
  81:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
  82:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_Init
  83:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
  84:.\Generated_Source\PSoC4/SPI_1.c **** *
  85:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
  86:.\Generated_Source\PSoC4/SPI_1.c **** *  Initializes the SCB component to operate in one of the selected
  87:.\Generated_Source\PSoC4/SPI_1.c **** *  configurations: I2C, SPI, UART or EZI2C.
  88:.\Generated_Source\PSoC4/SPI_1.c **** *  When the configuration is set to "Unconfigured SCB", this function does
  89:.\Generated_Source\PSoC4/SPI_1.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 3


  90:.\Generated_Source\PSoC4/SPI_1.c **** *  SCB_I2CInit, SCB_SpiInit, SCB_UartInit or SCB_EzI2CInit.
  91:.\Generated_Source\PSoC4/SPI_1.c **** *
  92:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
  93:.\Generated_Source\PSoC4/SPI_1.c **** *  None
  94:.\Generated_Source\PSoC4/SPI_1.c **** *
  95:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
  96:.\Generated_Source\PSoC4/SPI_1.c **** *  None
  97:.\Generated_Source\PSoC4/SPI_1.c **** *
  98:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
  99:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_Init(void)
 100:.\Generated_Source\PSoC4/SPI_1.c **** {
  26              		.loc 1 100 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 101:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 102:.\Generated_Source\PSoC4/SPI_1.c ****     if(SPI_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 103:.\Generated_Source\PSoC4/SPI_1.c ****     {
 104:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_initVar = 0u;
 105:.\Generated_Source\PSoC4/SPI_1.c ****     }
 106:.\Generated_Source\PSoC4/SPI_1.c ****     else
 107:.\Generated_Source\PSoC4/SPI_1.c ****     {
 108:.\Generated_Source\PSoC4/SPI_1.c ****         /* Initialization was done before this function call */
 109:.\Generated_Source\PSoC4/SPI_1.c ****     }
 110:.\Generated_Source\PSoC4/SPI_1.c **** 
 111:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_I2C_CONST_CFG)
 112:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_I2CInit();
 113:.\Generated_Source\PSoC4/SPI_1.c **** 
 114:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_SPI_CONST_CFG)
 115:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_SpiInit();
  32              		.loc 1 115 0
  33 0002 FFF7FEFF 		bl	SPI_1_SpiInit
  34              	.LVL0:
 116:.\Generated_Source\PSoC4/SPI_1.c **** 
 117:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_UART_CONST_CFG)
 118:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_UartInit();
 119:.\Generated_Source\PSoC4/SPI_1.c **** 
 120:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_EZI2C_CONST_CFG)
 121:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_EzI2CInit();
 122:.\Generated_Source\PSoC4/SPI_1.c **** 
 123:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 124:.\Generated_Source\PSoC4/SPI_1.c **** }
  35              		.loc 1 124 0
  36              		@ sp needed
  37 0006 08BD     		pop	{r3, pc}
  38              		.cfi_endproc
  39              	.LFE0:
  40              		.size	SPI_1_Init, .-SPI_1_Init
  41              		.section	.text.SPI_1_Enable,"ax",%progbits
  42              		.align	2
  43              		.global	SPI_1_Enable
  44              		.code	16
  45              		.thumb_func
  46              		.type	SPI_1_Enable, %function
  47              	SPI_1_Enable:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 4


  48              	.LFB1:
 125:.\Generated_Source\PSoC4/SPI_1.c **** 
 126:.\Generated_Source\PSoC4/SPI_1.c **** 
 127:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 128:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_Enable
 129:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 130:.\Generated_Source\PSoC4/SPI_1.c **** *
 131:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 132:.\Generated_Source\PSoC4/SPI_1.c **** *  Enables the SCB component operation.
 133:.\Generated_Source\PSoC4/SPI_1.c **** *  The SCB configuration should be not changed when the component is enabled.
 134:.\Generated_Source\PSoC4/SPI_1.c **** *  Any configuration changes should be made after disabling the component.
 135:.\Generated_Source\PSoC4/SPI_1.c **** *
 136:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 137:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 138:.\Generated_Source\PSoC4/SPI_1.c **** *
 139:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 140:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 141:.\Generated_Source\PSoC4/SPI_1.c **** *
 142:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_Enable(void)
 144:.\Generated_Source\PSoC4/SPI_1.c **** {
  49              		.loc 1 144 0
  50              		.cfi_startproc
 145:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 146:.\Generated_Source\PSoC4/SPI_1.c ****     /* Enable SCB block, only if it is already configured */
 147:.\Generated_Source\PSoC4/SPI_1.c ****     if(!SPI_1_SCB_MODE_UNCONFIG_RUNTM_CFG)
 148:.\Generated_Source\PSoC4/SPI_1.c ****     {
 149:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_CTRL_REG |= SPI_1_CTRL_ENABLED;
 150:.\Generated_Source\PSoC4/SPI_1.c **** 
 151:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_ScbEnableIntr();
 152:.\Generated_Source\PSoC4/SPI_1.c ****     }
 153:.\Generated_Source\PSoC4/SPI_1.c **** #else
 154:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_CTRL_REG |= SPI_1_CTRL_ENABLED;
  51              		.loc 1 154 0
  52 0000 034B     		ldr	r3, .L3
  53 0002 1968     		ldr	r1, [r3]
  54 0004 8022     		mov	r2, #128
  55 0006 1206     		lsl	r2, r2, #24
  56 0008 0A43     		orr	r2, r1
  57 000a 1A60     		str	r2, [r3]
 155:.\Generated_Source\PSoC4/SPI_1.c **** 
 156:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_ScbEnableIntr();
 157:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 158:.\Generated_Source\PSoC4/SPI_1.c **** }
  58              		.loc 1 158 0
  59              		@ sp needed
  60 000c 7047     		bx	lr
  61              	.L4:
  62 000e C046     		.align	2
  63              	.L3:
  64 0010 00000640 		.word	1074135040
  65              		.cfi_endproc
  66              	.LFE1:
  67              		.size	SPI_1_Enable, .-SPI_1_Enable
  68              		.section	.text.SPI_1_Start,"ax",%progbits
  69              		.align	2
  70              		.global	SPI_1_Start
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 5


  71              		.code	16
  72              		.thumb_func
  73              		.type	SPI_1_Start, %function
  74              	SPI_1_Start:
  75              	.LFB2:
 159:.\Generated_Source\PSoC4/SPI_1.c **** 
 160:.\Generated_Source\PSoC4/SPI_1.c **** 
 161:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_Start
 163:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 164:.\Generated_Source\PSoC4/SPI_1.c **** *
 165:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 166:.\Generated_Source\PSoC4/SPI_1.c **** *  Invokes SCB_Init() and SCB_Enable().
 167:.\Generated_Source\PSoC4/SPI_1.c **** *  After this function call, the component is enabled and ready for operation.
 168:.\Generated_Source\PSoC4/SPI_1.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 169:.\Generated_Source\PSoC4/SPI_1.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 170:.\Generated_Source\PSoC4/SPI_1.c **** *  or EZ I2C. Otherwise this function does not enable the component.
 171:.\Generated_Source\PSoC4/SPI_1.c **** *
 172:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 173:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 174:.\Generated_Source\PSoC4/SPI_1.c **** *
 175:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 176:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 177:.\Generated_Source\PSoC4/SPI_1.c **** *
 178:.\Generated_Source\PSoC4/SPI_1.c **** * Global variables:
 179:.\Generated_Source\PSoC4/SPI_1.c **** *  SPI_1_initVar - used to check initial configuration, modified
 180:.\Generated_Source\PSoC4/SPI_1.c **** *  on first function call.
 181:.\Generated_Source\PSoC4/SPI_1.c **** *
 182:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_Start(void)
 184:.\Generated_Source\PSoC4/SPI_1.c **** {
  76              		.loc 1 184 0
  77              		.cfi_startproc
  78 0000 08B5     		push	{r3, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC4/SPI_1.c ****     if(0u == SPI_1_initVar)
  82              		.loc 1 185 0
  83 0002 064B     		ldr	r3, .L7
  84 0004 1B78     		ldrb	r3, [r3]
  85 0006 002B     		cmp	r3, #0
  86 0008 04D1     		bne	.L6
 186:.\Generated_Source\PSoC4/SPI_1.c ****     {
 187:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_Init();
  87              		.loc 1 187 0
  88 000a FFF7FEFF 		bl	SPI_1_Init
  89              	.LVL1:
 188:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_initVar = 1u; /* Component was initialized */
  90              		.loc 1 188 0
  91 000e 0122     		mov	r2, #1
  92 0010 024B     		ldr	r3, .L7
  93 0012 1A70     		strb	r2, [r3]
  94              	.L6:
 189:.\Generated_Source\PSoC4/SPI_1.c ****     }
 190:.\Generated_Source\PSoC4/SPI_1.c **** 
 191:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_Enable();
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 6


  95              		.loc 1 191 0
  96 0014 FFF7FEFF 		bl	SPI_1_Enable
  97              	.LVL2:
 192:.\Generated_Source\PSoC4/SPI_1.c **** }
  98              		.loc 1 192 0
  99              		@ sp needed
 100 0018 08BD     		pop	{r3, pc}
 101              	.L8:
 102 001a C046     		.align	2
 103              	.L7:
 104 001c 00000000 		.word	.LANCHOR0
 105              		.cfi_endproc
 106              	.LFE2:
 107              		.size	SPI_1_Start, .-SPI_1_Start
 108              		.section	.text.SPI_1_Stop,"ax",%progbits
 109              		.align	2
 110              		.global	SPI_1_Stop
 111              		.code	16
 112              		.thumb_func
 113              		.type	SPI_1_Stop, %function
 114              	SPI_1_Stop:
 115              	.LFB3:
 193:.\Generated_Source\PSoC4/SPI_1.c **** 
 194:.\Generated_Source\PSoC4/SPI_1.c **** 
 195:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_Stop
 197:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 198:.\Generated_Source\PSoC4/SPI_1.c **** *
 199:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 200:.\Generated_Source\PSoC4/SPI_1.c **** *  Disables the SCB component and its interrupt.
 201:.\Generated_Source\PSoC4/SPI_1.c **** *
 202:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 203:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 204:.\Generated_Source\PSoC4/SPI_1.c **** *
 205:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 206:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 207:.\Generated_Source\PSoC4/SPI_1.c **** *
 208:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 209:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_Stop(void)
 210:.\Generated_Source\PSoC4/SPI_1.c **** {
 116              		.loc 1 210 0
 117              		.cfi_startproc
 211:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_IRQ_INTERNAL)
 212:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_DisableInt();
 213:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_IRQ_INTERNAL) */
 214:.\Generated_Source\PSoC4/SPI_1.c **** 
 215:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_CTRL_REG &= (uint32) ~SPI_1_CTRL_ENABLED;  /* Disable scb IP */
 118              		.loc 1 215 0
 119 0000 024B     		ldr	r3, .L10
 120 0002 1A68     		ldr	r2, [r3]
 121 0004 5200     		lsl	r2, r2, #1
 122 0006 5208     		lsr	r2, r2, #1
 123 0008 1A60     		str	r2, [r3]
 216:.\Generated_Source\PSoC4/SPI_1.c **** 
 217:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_IRQ_INTERNAL)
 218:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_ClearPendingInt();
 219:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_IRQ_INTERNAL) */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 7


 220:.\Generated_Source\PSoC4/SPI_1.c **** 
 221:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_ScbModeStop(); /* Calls scbMode specific Stop function */
 222:.\Generated_Source\PSoC4/SPI_1.c **** }
 124              		.loc 1 222 0
 125              		@ sp needed
 126 000a 7047     		bx	lr
 127              	.L11:
 128              		.align	2
 129              	.L10:
 130 000c 00000640 		.word	1074135040
 131              		.cfi_endproc
 132              	.LFE3:
 133              		.size	SPI_1_Stop, .-SPI_1_Stop
 134              		.section	.text.SPI_1_SetRxFifoLevel,"ax",%progbits
 135              		.align	2
 136              		.global	SPI_1_SetRxFifoLevel
 137              		.code	16
 138              		.thumb_func
 139              		.type	SPI_1_SetRxFifoLevel, %function
 140              	SPI_1_SetRxFifoLevel:
 141              	.LFB4:
 223:.\Generated_Source\PSoC4/SPI_1.c **** 
 224:.\Generated_Source\PSoC4/SPI_1.c **** 
 225:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 226:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_SetRxFifoLevel
 227:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 228:.\Generated_Source\PSoC4/SPI_1.c **** *
 229:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 230:.\Generated_Source\PSoC4/SPI_1.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 231:.\Generated_Source\PSoC4/SPI_1.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 232:.\Generated_Source\PSoC4/SPI_1.c **** *  interrupt request is generated.
 233:.\Generated_Source\PSoC4/SPI_1.c **** *
 234:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 235:.\Generated_Source\PSoC4/SPI_1.c **** *  level: Level in the RX FIFO to generate RX level interrupt.
 236:.\Generated_Source\PSoC4/SPI_1.c **** *         The range of valid level values is between 0 and RX FIFO depth - 1.
 237:.\Generated_Source\PSoC4/SPI_1.c **** *
 238:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 239:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 240:.\Generated_Source\PSoC4/SPI_1.c **** *
 241:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 242:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_SetRxFifoLevel(uint32 level)
 243:.\Generated_Source\PSoC4/SPI_1.c **** {
 142              		.loc 1 243 0
 143              		.cfi_startproc
 144              	.LVL3:
 244:.\Generated_Source\PSoC4/SPI_1.c ****     uint32 rxFifoCtrl;
 245:.\Generated_Source\PSoC4/SPI_1.c **** 
 246:.\Generated_Source\PSoC4/SPI_1.c ****     rxFifoCtrl = SPI_1_RX_FIFO_CTRL_REG;
 145              		.loc 1 246 0
 146 0000 034B     		ldr	r3, .L13
 147 0002 1968     		ldr	r1, [r3]
 148              	.LVL4:
 247:.\Generated_Source\PSoC4/SPI_1.c **** 
 248:.\Generated_Source\PSoC4/SPI_1.c ****     rxFifoCtrl &= ((uint32) ~SPI_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 149              		.loc 1 248 0
 150 0004 0722     		mov	r2, #7
 151 0006 9143     		bic	r1, r2
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 8


 152              	.LVL5:
 249:.\Generated_Source\PSoC4/SPI_1.c ****     rxFifoCtrl |= ((uint32) (SPI_1_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 153              		.loc 1 249 0
 154 0008 0240     		and	r2, r0
 155 000a 0A43     		orr	r2, r1
 156              	.LVL6:
 250:.\Generated_Source\PSoC4/SPI_1.c **** 
 251:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_RX_FIFO_CTRL_REG = rxFifoCtrl;
 157              		.loc 1 251 0
 158 000c 1A60     		str	r2, [r3]
 252:.\Generated_Source\PSoC4/SPI_1.c **** }
 159              		.loc 1 252 0
 160              		@ sp needed
 161 000e 7047     		bx	lr
 162              	.L14:
 163              		.align	2
 164              	.L13:
 165 0010 04030640 		.word	1074135812
 166              		.cfi_endproc
 167              	.LFE4:
 168              		.size	SPI_1_SetRxFifoLevel, .-SPI_1_SetRxFifoLevel
 169              		.section	.text.SPI_1_SetTxFifoLevel,"ax",%progbits
 170              		.align	2
 171              		.global	SPI_1_SetTxFifoLevel
 172              		.code	16
 173              		.thumb_func
 174              		.type	SPI_1_SetTxFifoLevel, %function
 175              	SPI_1_SetTxFifoLevel:
 176              	.LFB5:
 253:.\Generated_Source\PSoC4/SPI_1.c **** 
 254:.\Generated_Source\PSoC4/SPI_1.c **** 
 255:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 256:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_SetTxFifoLevel
 257:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 258:.\Generated_Source\PSoC4/SPI_1.c **** *
 259:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 260:.\Generated_Source\PSoC4/SPI_1.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 261:.\Generated_Source\PSoC4/SPI_1.c **** *  When the TX FIFO has more entries than the TX FIFO level an TX level
 262:.\Generated_Source\PSoC4/SPI_1.c **** *  interrupt request is generated.
 263:.\Generated_Source\PSoC4/SPI_1.c **** *
 264:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 265:.\Generated_Source\PSoC4/SPI_1.c **** *  level: Level in the TX FIFO to generate TX level interrupt.
 266:.\Generated_Source\PSoC4/SPI_1.c **** *         The range of valid level values is between 0 and TX FIFO depth - 1.
 267:.\Generated_Source\PSoC4/SPI_1.c **** *
 268:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 269:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 270:.\Generated_Source\PSoC4/SPI_1.c **** *
 271:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 272:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_SetTxFifoLevel(uint32 level)
 273:.\Generated_Source\PSoC4/SPI_1.c **** {
 177              		.loc 1 273 0
 178              		.cfi_startproc
 179              	.LVL7:
 274:.\Generated_Source\PSoC4/SPI_1.c ****     uint32 txFifoCtrl;
 275:.\Generated_Source\PSoC4/SPI_1.c **** 
 276:.\Generated_Source\PSoC4/SPI_1.c ****     txFifoCtrl = SPI_1_TX_FIFO_CTRL_REG;
 180              		.loc 1 276 0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 9


 181 0000 034B     		ldr	r3, .L16
 182 0002 1968     		ldr	r1, [r3]
 183              	.LVL8:
 277:.\Generated_Source\PSoC4/SPI_1.c **** 
 278:.\Generated_Source\PSoC4/SPI_1.c ****     txFifoCtrl &= ((uint32) ~SPI_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 184              		.loc 1 278 0
 185 0004 0722     		mov	r2, #7
 186 0006 9143     		bic	r1, r2
 187              	.LVL9:
 279:.\Generated_Source\PSoC4/SPI_1.c ****     txFifoCtrl |= ((uint32) (SPI_1_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 188              		.loc 1 279 0
 189 0008 0240     		and	r2, r0
 190 000a 0A43     		orr	r2, r1
 191              	.LVL10:
 280:.\Generated_Source\PSoC4/SPI_1.c **** 
 281:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_TX_FIFO_CTRL_REG = txFifoCtrl;
 192              		.loc 1 281 0
 193 000c 1A60     		str	r2, [r3]
 282:.\Generated_Source\PSoC4/SPI_1.c **** }
 194              		.loc 1 282 0
 195              		@ sp needed
 196 000e 7047     		bx	lr
 197              	.L17:
 198              		.align	2
 199              	.L16:
 200 0010 04020640 		.word	1074135556
 201              		.cfi_endproc
 202              	.LFE5:
 203              		.size	SPI_1_SetTxFifoLevel, .-SPI_1_SetTxFifoLevel
 204              		.section	.text.SPI_1_SetCustomInterruptHandler,"ax",%progbits
 205              		.align	2
 206              		.global	SPI_1_SetCustomInterruptHandler
 207              		.code	16
 208              		.thumb_func
 209              		.type	SPI_1_SetCustomInterruptHandler, %function
 210              	SPI_1_SetCustomInterruptHandler:
 211              	.LFB6:
 283:.\Generated_Source\PSoC4/SPI_1.c **** 
 284:.\Generated_Source\PSoC4/SPI_1.c **** 
 285:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_SetCustomInterruptHandler
 287:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/SPI_1.c **** *
 289:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 290:.\Generated_Source\PSoC4/SPI_1.c **** *  Registers a function to be called by the internal interrupt handler.
 291:.\Generated_Source\PSoC4/SPI_1.c **** *  First the function that is registered is called, then the internal interrupt
 292:.\Generated_Source\PSoC4/SPI_1.c **** *  handler performs any operation such as software buffer management functions
 293:.\Generated_Source\PSoC4/SPI_1.c **** *  before the interrupt returns.  It is the user's responsibility not to break
 294:.\Generated_Source\PSoC4/SPI_1.c **** *  the software buffer operations. Only one custom handler is supported, which
 295:.\Generated_Source\PSoC4/SPI_1.c **** *  is the function provided by the most recent call.
 296:.\Generated_Source\PSoC4/SPI_1.c **** *  At the initialization time no custom handler is registered.
 297:.\Generated_Source\PSoC4/SPI_1.c **** *
 298:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 299:.\Generated_Source\PSoC4/SPI_1.c **** *  func: Pointer to the function to register.
 300:.\Generated_Source\PSoC4/SPI_1.c **** *        The value NULL indicates to remove the current custom interrupt
 301:.\Generated_Source\PSoC4/SPI_1.c **** *        handler.
 302:.\Generated_Source\PSoC4/SPI_1.c **** *
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 10


 303:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 304:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 305:.\Generated_Source\PSoC4/SPI_1.c **** *
 306:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 307:.\Generated_Source\PSoC4/SPI_1.c **** void SPI_1_SetCustomInterruptHandler(cyisraddress func)
 308:.\Generated_Source\PSoC4/SPI_1.c **** {
 212              		.loc 1 308 0
 213              		.cfi_startproc
 214              	.LVL11:
 309:.\Generated_Source\PSoC4/SPI_1.c **** #if !defined (CY_REMOVE_SPI_1_CUSTOM_INTR_HANDLER)
 310:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_customIntrHandler = func; /* Register interrupt handler */
 215              		.loc 1 310 0
 216 0000 014B     		ldr	r3, .L19
 217 0002 5860     		str	r0, [r3, #4]
 311:.\Generated_Source\PSoC4/SPI_1.c **** #else
 312:.\Generated_Source\PSoC4/SPI_1.c ****     if(NULL != func)
 313:.\Generated_Source\PSoC4/SPI_1.c ****     {
 314:.\Generated_Source\PSoC4/SPI_1.c ****         /* Suppress compiler warning */
 315:.\Generated_Source\PSoC4/SPI_1.c ****     }
 316:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* !defined (CY_REMOVE_SPI_1_CUSTOM_INTR_HANDLER) */
 317:.\Generated_Source\PSoC4/SPI_1.c **** }
 218              		.loc 1 317 0
 219              		@ sp needed
 220 0004 7047     		bx	lr
 221              	.L20:
 222 0006 C046     		.align	2
 223              	.L19:
 224 0008 00000000 		.word	.LANCHOR0
 225              		.cfi_endproc
 226              	.LFE6:
 227              		.size	SPI_1_SetCustomInterruptHandler, .-SPI_1_SetCustomInterruptHandler
 228              		.section	.text.SPI_1_I2CSlaveNackGeneration,"ax",%progbits
 229              		.align	2
 230              		.global	SPI_1_I2CSlaveNackGeneration
 231              		.code	16
 232              		.thumb_func
 233              		.type	SPI_1_I2CSlaveNackGeneration, %function
 234              	SPI_1_I2CSlaveNackGeneration:
 235              	.LFB9:
 318:.\Generated_Source\PSoC4/SPI_1.c **** 
 319:.\Generated_Source\PSoC4/SPI_1.c **** 
 320:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 321:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_ScbModeEnableIntr
 322:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 323:.\Generated_Source\PSoC4/SPI_1.c **** *
 324:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 325:.\Generated_Source\PSoC4/SPI_1.c **** *  Enables an interrupt for a specific mode.
 326:.\Generated_Source\PSoC4/SPI_1.c **** *
 327:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 328:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 329:.\Generated_Source\PSoC4/SPI_1.c **** *
 330:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 331:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 332:.\Generated_Source\PSoC4/SPI_1.c **** *
 333:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 334:.\Generated_Source\PSoC4/SPI_1.c **** static void SPI_1_ScbEnableIntr(void)
 335:.\Generated_Source\PSoC4/SPI_1.c **** {
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 11


 336:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_IRQ_INTERNAL)
 337:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 338:.\Generated_Source\PSoC4/SPI_1.c ****         /* Enable interrupt in NVIC */
 339:.\Generated_Source\PSoC4/SPI_1.c ****         if(0u != SPI_1_scbEnableIntr)
 340:.\Generated_Source\PSoC4/SPI_1.c ****         {
 341:.\Generated_Source\PSoC4/SPI_1.c ****             SPI_1_EnableInt();
 342:.\Generated_Source\PSoC4/SPI_1.c ****         }
 343:.\Generated_Source\PSoC4/SPI_1.c ****     #else
 344:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_EnableInt();
 345:.\Generated_Source\PSoC4/SPI_1.c **** 
 346:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 347:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_IRQ_INTERNAL) */
 348:.\Generated_Source\PSoC4/SPI_1.c **** }
 349:.\Generated_Source\PSoC4/SPI_1.c **** 
 350:.\Generated_Source\PSoC4/SPI_1.c **** 
 351:.\Generated_Source\PSoC4/SPI_1.c **** /*******************************************************************************
 352:.\Generated_Source\PSoC4/SPI_1.c **** * Function Name: SPI_1_ScbModeStop
 353:.\Generated_Source\PSoC4/SPI_1.c **** ********************************************************************************
 354:.\Generated_Source\PSoC4/SPI_1.c **** *
 355:.\Generated_Source\PSoC4/SPI_1.c **** * Summary:
 356:.\Generated_Source\PSoC4/SPI_1.c **** *  Calls the Stop function for a specific operation mode.
 357:.\Generated_Source\PSoC4/SPI_1.c **** *
 358:.\Generated_Source\PSoC4/SPI_1.c **** * Parameters:
 359:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 360:.\Generated_Source\PSoC4/SPI_1.c **** *
 361:.\Generated_Source\PSoC4/SPI_1.c **** * Return:
 362:.\Generated_Source\PSoC4/SPI_1.c **** *  None
 363:.\Generated_Source\PSoC4/SPI_1.c **** *
 364:.\Generated_Source\PSoC4/SPI_1.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/SPI_1.c **** static void SPI_1_ScbModeStop(void)
 366:.\Generated_Source\PSoC4/SPI_1.c **** {
 367:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 368:.\Generated_Source\PSoC4/SPI_1.c ****     if(SPI_1_SCB_MODE_I2C_RUNTM_CFG)
 369:.\Generated_Source\PSoC4/SPI_1.c ****     {
 370:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_I2CStop();
 371:.\Generated_Source\PSoC4/SPI_1.c ****     }
 372:.\Generated_Source\PSoC4/SPI_1.c ****     else if (SPI_1_SCB_MODE_EZI2C_RUNTM_CFG)
 373:.\Generated_Source\PSoC4/SPI_1.c ****     {
 374:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_EzI2CStop();
 375:.\Generated_Source\PSoC4/SPI_1.c ****     }
 376:.\Generated_Source\PSoC4/SPI_1.c **** #if (!SPI_1_CY_SCBIP_V1)
 377:.\Generated_Source\PSoC4/SPI_1.c ****     else if (SPI_1_SCB_MODE_UART_RUNTM_CFG)
 378:.\Generated_Source\PSoC4/SPI_1.c ****     {
 379:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_UartStop();
 380:.\Generated_Source\PSoC4/SPI_1.c ****     }
 381:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (!SPI_1_CY_SCBIP_V1) */
 382:.\Generated_Source\PSoC4/SPI_1.c ****     else
 383:.\Generated_Source\PSoC4/SPI_1.c ****     {
 384:.\Generated_Source\PSoC4/SPI_1.c ****         /* Do nothing for other modes */
 385:.\Generated_Source\PSoC4/SPI_1.c ****     }
 386:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_I2C_CONST_CFG)
 387:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_I2CStop();
 388:.\Generated_Source\PSoC4/SPI_1.c **** 
 389:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_EZI2C_CONST_CFG)
 390:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_EzI2CStop();
 391:.\Generated_Source\PSoC4/SPI_1.c **** 
 392:.\Generated_Source\PSoC4/SPI_1.c **** #elif(SPI_1_SCB_MODE_UART_CONST_CFG)
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 12


 393:.\Generated_Source\PSoC4/SPI_1.c ****     SPI_1_UartStop();
 394:.\Generated_Source\PSoC4/SPI_1.c **** 
 395:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 396:.\Generated_Source\PSoC4/SPI_1.c **** }
 397:.\Generated_Source\PSoC4/SPI_1.c **** 
 398:.\Generated_Source\PSoC4/SPI_1.c **** 
 399:.\Generated_Source\PSoC4/SPI_1.c **** #if(SPI_1_SCB_MODE_UNCONFIG_CONST_CFG)
 400:.\Generated_Source\PSoC4/SPI_1.c ****     /*******************************************************************************
 401:.\Generated_Source\PSoC4/SPI_1.c ****     * Function Name: SPI_1_SetPins
 402:.\Generated_Source\PSoC4/SPI_1.c ****     ********************************************************************************
 403:.\Generated_Source\PSoC4/SPI_1.c ****     *
 404:.\Generated_Source\PSoC4/SPI_1.c ****     * Summary:
 405:.\Generated_Source\PSoC4/SPI_1.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 406:.\Generated_Source\PSoC4/SPI_1.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 407:.\Generated_Source\PSoC4/SPI_1.c ****     *  initialization function calls it.
 408:.\Generated_Source\PSoC4/SPI_1.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 409:.\Generated_Source\PSoC4/SPI_1.c ****     *  is selected in design time.
 410:.\Generated_Source\PSoC4/SPI_1.c ****     *
 411:.\Generated_Source\PSoC4/SPI_1.c ****     * Parameters:
 412:.\Generated_Source\PSoC4/SPI_1.c ****     *  mode:      Mode of SCB operation.
 413:.\Generated_Source\PSoC4/SPI_1.c ****     *  subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 414:.\Generated_Source\PSoC4/SPI_1.c ****     *             modes.
 415:.\Generated_Source\PSoC4/SPI_1.c ****     *  uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 416:.\Generated_Source\PSoC4/SPI_1.c ****     *
 417:.\Generated_Source\PSoC4/SPI_1.c ****     * Return:
 418:.\Generated_Source\PSoC4/SPI_1.c ****     *  None
 419:.\Generated_Source\PSoC4/SPI_1.c ****     *
 420:.\Generated_Source\PSoC4/SPI_1.c ****     *******************************************************************************/
 421:.\Generated_Source\PSoC4/SPI_1.c ****     void SPI_1_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 422:.\Generated_Source\PSoC4/SPI_1.c ****     {
 423:.\Generated_Source\PSoC4/SPI_1.c ****         uint32 hsiomSel [SPI_1_SCB_PINS_NUMBER];
 424:.\Generated_Source\PSoC4/SPI_1.c ****         uint32 pinsDm   [SPI_1_SCB_PINS_NUMBER];
 425:.\Generated_Source\PSoC4/SPI_1.c **** 
 426:.\Generated_Source\PSoC4/SPI_1.c ****     #if (!SPI_1_CY_SCBIP_V1)
 427:.\Generated_Source\PSoC4/SPI_1.c ****         uint32 pinsInBuf = 0u;
 428:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (!SPI_1_CY_SCBIP_V1) */
 429:.\Generated_Source\PSoC4/SPI_1.c **** 
 430:.\Generated_Source\PSoC4/SPI_1.c ****         uint32 i;
 431:.\Generated_Source\PSoC4/SPI_1.c **** 
 432:.\Generated_Source\PSoC4/SPI_1.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 433:.\Generated_Source\PSoC4/SPI_1.c ****         for(i = 0u; i < SPI_1_SCB_PINS_NUMBER; i++)
 434:.\Generated_Source\PSoC4/SPI_1.c ****         {
 435:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[i]  = SPI_1_HSIOM_DEF_SEL;
 436:.\Generated_Source\PSoC4/SPI_1.c ****             pinsDm[i]    = SPI_1_PIN_DM_ALG_HIZ;
 437:.\Generated_Source\PSoC4/SPI_1.c ****         }
 438:.\Generated_Source\PSoC4/SPI_1.c **** 
 439:.\Generated_Source\PSoC4/SPI_1.c ****         if((SPI_1_SCB_MODE_I2C   == mode) ||
 440:.\Generated_Source\PSoC4/SPI_1.c ****            (SPI_1_SCB_MODE_EZI2C == mode))
 441:.\Generated_Source\PSoC4/SPI_1.c ****         {
 442:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_HSIOM_I2C_SEL;
 443:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_HSIOM_I2C_SEL;
 444:.\Generated_Source\PSoC4/SPI_1.c **** 
 445:.\Generated_Source\PSoC4/SPI_1.c ****             pinsDm[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_PIN_DM_OD_LO;
 446:.\Generated_Source\PSoC4/SPI_1.c ****             pinsDm[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_OD_LO;
 447:.\Generated_Source\PSoC4/SPI_1.c ****         }
 448:.\Generated_Source\PSoC4/SPI_1.c ****     #if (!SPI_1_CY_SCBIP_V1)
 449:.\Generated_Source\PSoC4/SPI_1.c ****         else if(SPI_1_SCB_MODE_SPI == mode)
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 13


 450:.\Generated_Source\PSoC4/SPI_1.c ****         {
 451:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 452:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 453:.\Generated_Source\PSoC4/SPI_1.c ****             hsiomSel[SPI_1_SCLK_PIN_INDEX]        = SPI_1_HSIOM_SPI_SEL;
 454:.\Generated_Source\PSoC4/SPI_1.c **** 
 455:.\Generated_Source\PSoC4/SPI_1.c ****             if(SPI_1_SPI_SLAVE == subMode)
 456:.\Generated_Source\PSoC4/SPI_1.c ****             {
 457:.\Generated_Source\PSoC4/SPI_1.c ****                 /* Slave */
 458:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 459:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 460:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_SCLK_PIN_INDEX]        = SPI_1_PIN_DM_DIG_HIZ;
 461:.\Generated_Source\PSoC4/SPI_1.c **** 
 462:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS0_PIN)
 463:.\Generated_Source\PSoC4/SPI_1.c ****                 /* Only SS0 is valid choice for Slave */
 464:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel[SPI_1_SS0_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 465:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm  [SPI_1_SS0_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 466:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS1_PIN) */
 467:.\Generated_Source\PSoC4/SPI_1.c **** 
 468:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_MISO_SDA_TX_PIN)
 469:.\Generated_Source\PSoC4/SPI_1.c ****                 /* Disable input buffer */
 470:.\Generated_Source\PSoC4/SPI_1.c ****                  pinsInBuf |= SPI_1_MISO_SDA_TX_PIN_MASK;
 471:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_MISO_SDA_TX_PIN_PIN) */
 472:.\Generated_Source\PSoC4/SPI_1.c ****             }
 473:.\Generated_Source\PSoC4/SPI_1.c ****             else /* (Master) */
 474:.\Generated_Source\PSoC4/SPI_1.c ****             {
 475:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 476:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 477:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm[SPI_1_SCLK_PIN_INDEX]        = SPI_1_PIN_DM_STRONG;
 478:.\Generated_Source\PSoC4/SPI_1.c **** 
 479:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS0_PIN)
 480:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel [SPI_1_SS0_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 481:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm   [SPI_1_SS0_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 482:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf                                |= SPI_1_SS0_PIN_MASK;
 483:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS0_PIN) */
 484:.\Generated_Source\PSoC4/SPI_1.c **** 
 485:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS1_PIN)
 486:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel [SPI_1_SS1_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 487:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm   [SPI_1_SS1_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 488:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf                                |= SPI_1_SS1_PIN_MASK;
 489:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS1_PIN) */
 490:.\Generated_Source\PSoC4/SPI_1.c **** 
 491:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS2_PIN)
 492:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel [SPI_1_SS2_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 493:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm   [SPI_1_SS2_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 494:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf                                |= SPI_1_SS2_PIN_MASK;
 495:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS2_PIN) */
 496:.\Generated_Source\PSoC4/SPI_1.c **** 
 497:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SS3_PIN)
 498:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel [SPI_1_SS3_PIN_INDEX] = SPI_1_HSIOM_SPI_SEL;
 499:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm   [SPI_1_SS3_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 500:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf                                |= SPI_1_SS3_PIN_MASK;
 501:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SS2_PIN) */
 502:.\Generated_Source\PSoC4/SPI_1.c **** 
 503:.\Generated_Source\PSoC4/SPI_1.c ****                 /* Disable input buffers */
 504:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_MOSI_SCL_RX_PIN)
 505:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf |= SPI_1_MOSI_SCL_RX_PIN_MASK;
 506:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_MOSI_SCL_RX_PIN) */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 14


 507:.\Generated_Source\PSoC4/SPI_1.c **** 
 508:.\Generated_Source\PSoC4/SPI_1.c ****              #if(SPI_1_MOSI_SCL_RX_WAKE_PIN)
 509:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf |= SPI_1_MOSI_SCL_RX_WAKE_PIN_MASK;
 510:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_MOSI_SCL_RX_WAKE_PIN) */
 511:.\Generated_Source\PSoC4/SPI_1.c **** 
 512:.\Generated_Source\PSoC4/SPI_1.c ****             #if(SPI_1_SCLK_PIN)
 513:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsInBuf |= SPI_1_SCLK_PIN_MASK;
 514:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* (SPI_1_SCLK_PIN) */
 515:.\Generated_Source\PSoC4/SPI_1.c ****             }
 516:.\Generated_Source\PSoC4/SPI_1.c ****         }
 517:.\Generated_Source\PSoC4/SPI_1.c ****         else /* UART */
 518:.\Generated_Source\PSoC4/SPI_1.c ****         {
 519:.\Generated_Source\PSoC4/SPI_1.c ****             if(SPI_1_UART_MODE_SMARTCARD == subMode)
 520:.\Generated_Source\PSoC4/SPI_1.c ****             {
 521:.\Generated_Source\PSoC4/SPI_1.c ****                 /* SmartCard */
 522:.\Generated_Source\PSoC4/SPI_1.c ****                 hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 523:.\Generated_Source\PSoC4/SPI_1.c ****                 pinsDm  [SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_OD_LO;
 524:.\Generated_Source\PSoC4/SPI_1.c ****             }
 525:.\Generated_Source\PSoC4/SPI_1.c ****             else /* Standard or IrDA */
 526:.\Generated_Source\PSoC4/SPI_1.c ****             {
 527:.\Generated_Source\PSoC4/SPI_1.c ****                 if(0u != (SPI_1_UART_RX_PIN_ENABLE & uartEnableMask))
 528:.\Generated_Source\PSoC4/SPI_1.c ****                 {
 529:.\Generated_Source\PSoC4/SPI_1.c ****                     hsiomSel[SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 530:.\Generated_Source\PSoC4/SPI_1.c ****                     pinsDm  [SPI_1_MOSI_SCL_RX_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 531:.\Generated_Source\PSoC4/SPI_1.c ****                 }
 532:.\Generated_Source\PSoC4/SPI_1.c **** 
 533:.\Generated_Source\PSoC4/SPI_1.c ****                 if(0u != (SPI_1_UART_TX_PIN_ENABLE & uartEnableMask))
 534:.\Generated_Source\PSoC4/SPI_1.c ****                 {
 535:.\Generated_Source\PSoC4/SPI_1.c ****                     hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 536:.\Generated_Source\PSoC4/SPI_1.c ****                     pinsDm  [SPI_1_MISO_SDA_TX_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 537:.\Generated_Source\PSoC4/SPI_1.c **** 
 538:.\Generated_Source\PSoC4/SPI_1.c ****                 #if(SPI_1_MISO_SDA_TX_PIN)
 539:.\Generated_Source\PSoC4/SPI_1.c ****                      pinsInBuf |= SPI_1_MISO_SDA_TX_PIN_MASK;
 540:.\Generated_Source\PSoC4/SPI_1.c ****                 #endif /* (SPI_1_MISO_SDA_TX_PIN_PIN) */
 541:.\Generated_Source\PSoC4/SPI_1.c ****                 }
 542:.\Generated_Source\PSoC4/SPI_1.c **** 
 543:.\Generated_Source\PSoC4/SPI_1.c ****             #if !(SPI_1_CY_SCBIP_V0 || SPI_1_CY_SCBIP_V1)
 544:.\Generated_Source\PSoC4/SPI_1.c ****                 if(SPI_1_UART_MODE_STD == subMode)
 545:.\Generated_Source\PSoC4/SPI_1.c ****                 {
 546:.\Generated_Source\PSoC4/SPI_1.c ****                     if(0u != (SPI_1_UART_CTS_PIN_ENABLE & uartEnableMask))
 547:.\Generated_Source\PSoC4/SPI_1.c ****                     {
 548:.\Generated_Source\PSoC4/SPI_1.c ****                         /* CTS input is multiplexed with SCLK */
 549:.\Generated_Source\PSoC4/SPI_1.c ****                         hsiomSel[SPI_1_SCLK_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 550:.\Generated_Source\PSoC4/SPI_1.c ****                         pinsDm  [SPI_1_SCLK_PIN_INDEX] = SPI_1_PIN_DM_DIG_HIZ;
 551:.\Generated_Source\PSoC4/SPI_1.c ****                     }
 552:.\Generated_Source\PSoC4/SPI_1.c **** 
 553:.\Generated_Source\PSoC4/SPI_1.c ****                     if(0u != (SPI_1_UART_RTS_PIN_ENABLE & uartEnableMask))
 554:.\Generated_Source\PSoC4/SPI_1.c ****                     {
 555:.\Generated_Source\PSoC4/SPI_1.c ****                         /* RTS output is multiplexed with SS0 */
 556:.\Generated_Source\PSoC4/SPI_1.c ****                         hsiomSel[SPI_1_SS0_PIN_INDEX] = SPI_1_HSIOM_UART_SEL;
 557:.\Generated_Source\PSoC4/SPI_1.c ****                         pinsDm  [SPI_1_SS0_PIN_INDEX] = SPI_1_PIN_DM_STRONG;
 558:.\Generated_Source\PSoC4/SPI_1.c **** 
 559:.\Generated_Source\PSoC4/SPI_1.c ****                     #if(SPI_1_SS0_PIN)
 560:.\Generated_Source\PSoC4/SPI_1.c ****                         /* Disable input buffer */
 561:.\Generated_Source\PSoC4/SPI_1.c ****                         pinsInBuf |= SPI_1_SS0_PIN_MASK;
 562:.\Generated_Source\PSoC4/SPI_1.c ****                     #endif /* (SPI_1_SS0_PIN) */
 563:.\Generated_Source\PSoC4/SPI_1.c ****                     }
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 15


 564:.\Generated_Source\PSoC4/SPI_1.c ****                 }
 565:.\Generated_Source\PSoC4/SPI_1.c ****             #endif /* !(SPI_1_CY_SCBIP_V0 || SPI_1_CY_SCBIP_V1) */
 566:.\Generated_Source\PSoC4/SPI_1.c ****             }
 567:.\Generated_Source\PSoC4/SPI_1.c ****         }
 568:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (!SPI_1_CY_SCBIP_V1) */
 569:.\Generated_Source\PSoC4/SPI_1.c **** 
 570:.\Generated_Source\PSoC4/SPI_1.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 571:.\Generated_Source\PSoC4/SPI_1.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 572:.\Generated_Source\PSoC4/SPI_1.c **** 
 573:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_MOSI_SCL_RX_PIN)
 574:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_MOSI_SCL_RX_HSIOM_REG,
 575:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MOSI_SCL_RX_HSIOM_MASK,
 576:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MOSI_SCL_RX_HSIOM_POS,
 577:.\Generated_Source\PSoC4/SPI_1.c ****                                        hsiomSel[SPI_1_MOSI_SCL_RX_PIN_INDEX]);
 578:.\Generated_Source\PSoC4/SPI_1.c **** 
 579:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_mosi_i2c_scl_uart_rx_SetDriveMode((uint8) pinsDm[SPI_1_MOSI_SCL_RX_PIN_INDEX]);
 580:.\Generated_Source\PSoC4/SPI_1.c **** 
 581:.\Generated_Source\PSoC4/SPI_1.c ****     #if (!SPI_1_CY_SCBIP_V1)
 582:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_mosi_i2c_scl_uart_rx_INP_DIS,
 583:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_mosi_i2c_scl_uart_rx_MASK,
 584:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_MOSI_SCL_RX_PIN_MASK)));
 585:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (!SPI_1_CY_SCBIP_V1) */
 586:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_MOSI_SCL_RX_PIN) */
 587:.\Generated_Source\PSoC4/SPI_1.c **** 
 588:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_MOSI_SCL_RX_WAKE_PIN)
 589:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_MOSI_SCL_RX_WAKE_HSIOM_REG,
 590:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MOSI_SCL_RX_WAKE_HSIOM_MASK,
 591:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MOSI_SCL_RX_WAKE_HSIOM_POS,
 592:.\Generated_Source\PSoC4/SPI_1.c ****                                        hsiomSel[SPI_1_MOSI_SCL_RX_WAKE_PIN_INDEX]);
 593:.\Generated_Source\PSoC4/SPI_1.c **** 
 594:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_mosi_i2c_scl_uart_rx_wake_SetDriveMode((uint8)
 595:.\Generated_Source\PSoC4/SPI_1.c ****                                                                pinsDm[SPI_1_MOSI_SCL_RX_WAKE_PIN_IN
 596:.\Generated_Source\PSoC4/SPI_1.c **** 
 597:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_mosi_i2c_scl_uart_rx_wake_INP_DIS,
 598:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_mosi_i2c_scl_uart_rx_wake_MASK,
 599:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_MOSI_SCL_RX_WAKE_PIN_MASK)));
 600:.\Generated_Source\PSoC4/SPI_1.c **** 
 601:.\Generated_Source\PSoC4/SPI_1.c ****          /* Set interrupt on falling edge */
 602:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INCFG_TYPE(SPI_1_MOSI_SCL_RX_WAKE_INTCFG_REG,
 603:.\Generated_Source\PSoC4/SPI_1.c ****                                         SPI_1_MOSI_SCL_RX_WAKE_INTCFG_TYPE_MASK,
 604:.\Generated_Source\PSoC4/SPI_1.c ****                                         SPI_1_MOSI_SCL_RX_WAKE_INTCFG_TYPE_POS,
 605:.\Generated_Source\PSoC4/SPI_1.c ****                                         SPI_1_INTCFG_TYPE_FALLING_EDGE);
 606:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_MOSI_SCL_RX_WAKE_PIN) */
 607:.\Generated_Source\PSoC4/SPI_1.c **** 
 608:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_MISO_SDA_TX_PIN)
 609:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_MISO_SDA_TX_HSIOM_REG,
 610:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MISO_SDA_TX_HSIOM_MASK,
 611:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_MISO_SDA_TX_HSIOM_POS,
 612:.\Generated_Source\PSoC4/SPI_1.c ****                                        hsiomSel[SPI_1_MISO_SDA_TX_PIN_INDEX]);
 613:.\Generated_Source\PSoC4/SPI_1.c **** 
 614:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_miso_i2c_sda_uart_tx_SetDriveMode((uint8) pinsDm[SPI_1_MISO_SDA_TX_PIN_INDEX]);
 615:.\Generated_Source\PSoC4/SPI_1.c **** 
 616:.\Generated_Source\PSoC4/SPI_1.c ****     #if (!SPI_1_CY_SCBIP_V1)
 617:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_miso_i2c_sda_uart_tx_INP_DIS,
 618:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_miso_i2c_sda_uart_tx_MASK,
 619:.\Generated_Source\PSoC4/SPI_1.c ****                                     (0u != (pinsInBuf & SPI_1_MISO_SDA_TX_PIN_MASK)));
 620:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (!SPI_1_CY_SCBIP_V1) */
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 16


 621:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_MOSI_SCL_RX_PIN) */
 622:.\Generated_Source\PSoC4/SPI_1.c **** 
 623:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SCLK_PIN)
 624:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SCLK_HSIOM_REG, SPI_1_SCLK_HSIOM_MASK,
 625:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SCLK_HSIOM_POS, hsiomSel[SPI_1_SCLK_PIN_INDEX]);
 626:.\Generated_Source\PSoC4/SPI_1.c **** 
 627:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_sclk_SetDriveMode((uint8) pinsDm[SPI_1_SCLK_PIN_INDEX]);
 628:.\Generated_Source\PSoC4/SPI_1.c **** 
 629:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_sclk_INP_DIS,
 630:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_sclk_MASK,
 631:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SCLK_PIN_MASK)));
 632:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SCLK_PIN) */
 633:.\Generated_Source\PSoC4/SPI_1.c **** 
 634:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SS0_PIN)
 635:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SS0_HSIOM_REG, SPI_1_SS0_HSIOM_MASK,
 636:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SS0_HSIOM_POS, hsiomSel[SPI_1_SS0_PIN_INDEX]);
 637:.\Generated_Source\PSoC4/SPI_1.c **** 
 638:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_ss0_SetDriveMode((uint8) pinsDm[SPI_1_SS0_PIN_INDEX]);
 639:.\Generated_Source\PSoC4/SPI_1.c **** 
 640:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_ss0_INP_DIS,
 641:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_ss0_MASK,
 642:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SS0_PIN_MASK)));
 643:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SS1_PIN) */
 644:.\Generated_Source\PSoC4/SPI_1.c **** 
 645:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SS1_PIN)
 646:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SS1_HSIOM_REG, SPI_1_SS1_HSIOM_MASK,
 647:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SS1_HSIOM_POS, hsiomSel[SPI_1_SS1_PIN_INDEX]);
 648:.\Generated_Source\PSoC4/SPI_1.c **** 
 649:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_ss1_SetDriveMode((uint8) pinsDm[SPI_1_SS1_PIN_INDEX]);
 650:.\Generated_Source\PSoC4/SPI_1.c **** 
 651:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_ss1_INP_DIS,
 652:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_ss1_MASK,
 653:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SS1_PIN_MASK)));
 654:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SS1_PIN) */
 655:.\Generated_Source\PSoC4/SPI_1.c **** 
 656:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SS2_PIN)
 657:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SS2_HSIOM_REG, SPI_1_SS2_HSIOM_MASK,
 658:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SS2_HSIOM_POS, hsiomSel[SPI_1_SS2_PIN_INDEX]);
 659:.\Generated_Source\PSoC4/SPI_1.c **** 
 660:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_ss2_SetDriveMode((uint8) pinsDm[SPI_1_SS2_PIN_INDEX]);
 661:.\Generated_Source\PSoC4/SPI_1.c **** 
 662:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_ss2_INP_DIS,
 663:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_ss2_MASK,
 664:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SS2_PIN_MASK)));
 665:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SS2_PIN) */
 666:.\Generated_Source\PSoC4/SPI_1.c **** 
 667:.\Generated_Source\PSoC4/SPI_1.c ****     #if(SPI_1_SS3_PIN)
 668:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_HSIOM_SEL(SPI_1_SS3_HSIOM_REG,  SPI_1_SS3_HSIOM_MASK,
 669:.\Generated_Source\PSoC4/SPI_1.c ****                                        SPI_1_SS3_HSIOM_POS, hsiomSel[SPI_1_SS3_PIN_INDEX]);
 670:.\Generated_Source\PSoC4/SPI_1.c **** 
 671:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_spi_ss3_SetDriveMode((uint8) pinsDm[SPI_1_SS3_PIN_INDEX]);
 672:.\Generated_Source\PSoC4/SPI_1.c **** 
 673:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_SET_INP_DIS(SPI_1_spi_ss3_INP_DIS,
 674:.\Generated_Source\PSoC4/SPI_1.c ****                                      SPI_1_spi_ss3_MASK,
 675:.\Generated_Source\PSoC4/SPI_1.c ****                                      (0u != (pinsInBuf & SPI_1_SS3_PIN_MASK)));
 676:.\Generated_Source\PSoC4/SPI_1.c ****     #endif /* (SPI_1_SS3_PIN) */
 677:.\Generated_Source\PSoC4/SPI_1.c ****     }
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 17


 678:.\Generated_Source\PSoC4/SPI_1.c **** 
 679:.\Generated_Source\PSoC4/SPI_1.c **** #endif /* (SPI_1_SCB_MODE_UNCONFIG_CONST_CFG) */
 680:.\Generated_Source\PSoC4/SPI_1.c **** 
 681:.\Generated_Source\PSoC4/SPI_1.c **** 
 682:.\Generated_Source\PSoC4/SPI_1.c **** #if (SPI_1_CY_SCBIP_V0 || SPI_1_CY_SCBIP_V1)
 683:.\Generated_Source\PSoC4/SPI_1.c ****     /*******************************************************************************
 684:.\Generated_Source\PSoC4/SPI_1.c ****     * Function Name: SPI_1_I2CSlaveNackGeneration
 685:.\Generated_Source\PSoC4/SPI_1.c ****     ********************************************************************************
 686:.\Generated_Source\PSoC4/SPI_1.c ****     *
 687:.\Generated_Source\PSoC4/SPI_1.c ****     * Summary:
 688:.\Generated_Source\PSoC4/SPI_1.c ****     *  Sets command to generate NACK to the address or data.
 689:.\Generated_Source\PSoC4/SPI_1.c ****     *
 690:.\Generated_Source\PSoC4/SPI_1.c ****     * Parameters:
 691:.\Generated_Source\PSoC4/SPI_1.c ****     *  None
 692:.\Generated_Source\PSoC4/SPI_1.c ****     *
 693:.\Generated_Source\PSoC4/SPI_1.c ****     * Return:
 694:.\Generated_Source\PSoC4/SPI_1.c ****     *  None
 695:.\Generated_Source\PSoC4/SPI_1.c ****     *
 696:.\Generated_Source\PSoC4/SPI_1.c ****     *******************************************************************************/
 697:.\Generated_Source\PSoC4/SPI_1.c ****     void SPI_1_I2CSlaveNackGeneration(void)
 698:.\Generated_Source\PSoC4/SPI_1.c ****     {
 236              		.loc 1 698 0
 237              		.cfi_startproc
 699:.\Generated_Source\PSoC4/SPI_1.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 700:.\Generated_Source\PSoC4/SPI_1.c ****         if ((0u != (SPI_1_CTRL_REG & SPI_1_CTRL_EC_AM_MODE)) &&
 238              		.loc 1 700 0
 239 0000 0A4B     		ldr	r3, .L23
 240 0002 1B68     		ldr	r3, [r3]
 241 0004 DA05     		lsl	r2, r3, #23
 242 0006 0DD5     		bpl	.L22
 701:.\Generated_Source\PSoC4/SPI_1.c ****             (0u == (SPI_1_I2C_CTRL_REG & SPI_1_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 243              		.loc 1 701 0 discriminator 1
 244 0008 094B     		ldr	r3, .L23+4
 245 000a 1B68     		ldr	r3, [r3]
 700:.\Generated_Source\PSoC4/SPI_1.c ****         if ((0u != (SPI_1_CTRL_REG & SPI_1_CTRL_EC_AM_MODE)) &&
 246              		.loc 1 700 0 discriminator 1
 247 000c 5A04     		lsl	r2, r3, #17
 248 000e 09D4     		bmi	.L22
 702:.\Generated_Source\PSoC4/SPI_1.c ****         {
 703:.\Generated_Source\PSoC4/SPI_1.c ****             /* Toggle EC_AM before NACK generation */
 704:.\Generated_Source\PSoC4/SPI_1.c ****             SPI_1_CTRL_REG &= ~SPI_1_CTRL_EC_AM_MODE;
 249              		.loc 1 704 0
 250 0010 064B     		ldr	r3, .L23
 251 0012 1968     		ldr	r1, [r3]
 252 0014 074A     		ldr	r2, .L23+8
 253 0016 0A40     		and	r2, r1
 254 0018 1A60     		str	r2, [r3]
 705:.\Generated_Source\PSoC4/SPI_1.c ****             SPI_1_CTRL_REG |=  SPI_1_CTRL_EC_AM_MODE;
 255              		.loc 1 705 0
 256 001a 1968     		ldr	r1, [r3]
 257 001c 8022     		mov	r2, #128
 258 001e 5200     		lsl	r2, r2, #1
 259 0020 0A43     		orr	r2, r1
 260 0022 1A60     		str	r2, [r3]
 261              	.L22:
 706:.\Generated_Source\PSoC4/SPI_1.c ****         }
 707:.\Generated_Source\PSoC4/SPI_1.c **** 
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 18


 708:.\Generated_Source\PSoC4/SPI_1.c ****         SPI_1_I2C_SLAVE_CMD_REG = SPI_1_I2C_SLAVE_CMD_S_NACK;
 262              		.loc 1 708 0
 263 0024 0222     		mov	r2, #2
 264 0026 044B     		ldr	r3, .L23+12
 265 0028 1A60     		str	r2, [r3]
 709:.\Generated_Source\PSoC4/SPI_1.c ****     }
 266              		.loc 1 709 0
 267              		@ sp needed
 268 002a 7047     		bx	lr
 269              	.L24:
 270              		.align	2
 271              	.L23:
 272 002c 00000640 		.word	1074135040
 273 0030 60000640 		.word	1074135136
 274 0034 FFFEFFFF 		.word	-257
 275 0038 6C000640 		.word	1074135148
 276              		.cfi_endproc
 277              	.LFE9:
 278              		.size	SPI_1_I2CSlaveNackGeneration, .-SPI_1_I2CSlaveNackGeneration
 279              		.global	SPI_1_customIntrHandler
 280              		.global	SPI_1_initVar
 281              		.bss
 282              		.align	2
 283              		.set	.LANCHOR0,. + 0
 284              		.type	SPI_1_initVar, %object
 285              		.size	SPI_1_initVar, 1
 286              	SPI_1_initVar:
 287 0000 00       		.space	1
 288 0001 000000   		.space	3
 289              		.type	SPI_1_customIntrHandler, %object
 290              		.size	SPI_1_customIntrHandler, 4
 291              	SPI_1_customIntrHandler:
 292 0004 00000000 		.space	4
 293              		.text
 294              	.Letext0:
 295              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 296              		.file 3 ".\\Generated_Source\\PSoC4\\SPI_1_SPI_UART_PVT.h"
 297              		.section	.debug_info,"",%progbits
 298              	.Ldebug_info0:
 299 0000 EE010000 		.4byte	0x1ee
 300 0004 0400     		.2byte	0x4
 301 0006 00000000 		.4byte	.Ldebug_abbrev0
 302 000a 04       		.byte	0x4
 303 000b 01       		.uleb128 0x1
 304 000c 1A010000 		.4byte	.LASF31
 305 0010 01       		.byte	0x1
 306 0011 D7010000 		.4byte	.LASF32
 307 0015 0C020000 		.4byte	.LASF33
 308 0019 00000000 		.4byte	.Ldebug_ranges0+0
 309 001d 00000000 		.4byte	0
 310 0021 00000000 		.4byte	.Ldebug_line0
 311 0025 02       		.uleb128 0x2
 312 0026 01       		.byte	0x1
 313 0027 06       		.byte	0x6
 314 0028 41020000 		.4byte	.LASF0
 315 002c 02       		.uleb128 0x2
 316 002d 01       		.byte	0x1
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 19


 317 002e 08       		.byte	0x8
 318 002f 65000000 		.4byte	.LASF1
 319 0033 02       		.uleb128 0x2
 320 0034 02       		.byte	0x2
 321 0035 05       		.byte	0x5
 322 0036 CD010000 		.4byte	.LASF2
 323 003a 02       		.uleb128 0x2
 324 003b 02       		.byte	0x2
 325 003c 07       		.byte	0x7
 326 003d 24000000 		.4byte	.LASF3
 327 0041 02       		.uleb128 0x2
 328 0042 04       		.byte	0x4
 329 0043 05       		.byte	0x5
 330 0044 03020000 		.4byte	.LASF4
 331 0048 02       		.uleb128 0x2
 332 0049 04       		.byte	0x4
 333 004a 07       		.byte	0x7
 334 004b 73000000 		.4byte	.LASF5
 335 004f 02       		.uleb128 0x2
 336 0050 08       		.byte	0x8
 337 0051 05       		.byte	0x5
 338 0052 AC010000 		.4byte	.LASF6
 339 0056 02       		.uleb128 0x2
 340 0057 08       		.byte	0x8
 341 0058 07       		.byte	0x7
 342 0059 D8000000 		.4byte	.LASF7
 343 005d 03       		.uleb128 0x3
 344 005e 04       		.byte	0x4
 345 005f 05       		.byte	0x5
 346 0060 696E7400 		.ascii	"int\000"
 347 0064 02       		.uleb128 0x2
 348 0065 04       		.byte	0x4
 349 0066 07       		.byte	0x7
 350 0067 CB000000 		.4byte	.LASF8
 351 006b 04       		.uleb128 0x4
 352 006c 85000000 		.4byte	.LASF9
 353 0070 02       		.byte	0x2
 354 0071 A1       		.byte	0xa1
 355 0072 2C000000 		.4byte	0x2c
 356 0076 04       		.uleb128 0x4
 357 0077 C4000000 		.4byte	.LASF10
 358 007b 02       		.byte	0x2
 359 007c A3       		.byte	0xa3
 360 007d 48000000 		.4byte	0x48
 361 0081 02       		.uleb128 0x2
 362 0082 04       		.byte	0x4
 363 0083 04       		.byte	0x4
 364 0084 5F000000 		.4byte	.LASF11
 365 0088 02       		.uleb128 0x2
 366 0089 08       		.byte	0x8
 367 008a 04       		.byte	0x4
 368 008b A3000000 		.4byte	.LASF12
 369 008f 02       		.uleb128 0x2
 370 0090 01       		.byte	0x1
 371 0091 08       		.byte	0x8
 372 0092 BA010000 		.4byte	.LASF13
 373 0096 05       		.uleb128 0x5
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 20


 374 0097 00000000 		.4byte	.LASF14
 375 009b 02       		.byte	0x2
 376 009c 4D01     		.2byte	0x14d
 377 009e A2000000 		.4byte	0xa2
 378 00a2 06       		.uleb128 0x6
 379 00a3 76000000 		.4byte	0x76
 380 00a7 05       		.uleb128 0x5
 381 00a8 96010000 		.4byte	.LASF15
 382 00ac 02       		.byte	0x2
 383 00ad 5D01     		.2byte	0x15d
 384 00af B3000000 		.4byte	0xb3
 385 00b3 07       		.uleb128 0x7
 386 00b4 04       		.byte	0x4
 387 00b5 B9000000 		.4byte	0xb9
 388 00b9 08       		.uleb128 0x8
 389 00ba 02       		.uleb128 0x2
 390 00bb 04       		.byte	0x4
 391 00bc 07       		.byte	0x7
 392 00bd A3010000 		.4byte	.LASF16
 393 00c1 09       		.uleb128 0x9
 394 00c2 37000000 		.4byte	.LASF17
 395 00c6 01       		.byte	0x1
 396 00c7 63       		.byte	0x63
 397 00c8 00000000 		.4byte	.LFB0
 398 00cc 08000000 		.4byte	.LFE0-.LFB0
 399 00d0 01       		.uleb128 0x1
 400 00d1 9C       		.byte	0x9c
 401 00d2 E0000000 		.4byte	0xe0
 402 00d6 0A       		.uleb128 0xa
 403 00d7 06000000 		.4byte	.LVL0
 404 00db EA010000 		.4byte	0x1ea
 405 00df 00       		.byte	0
 406 00e0 0B       		.uleb128 0xb
 407 00e1 17000000 		.4byte	.LASF19
 408 00e5 01       		.byte	0x1
 409 00e6 8F       		.byte	0x8f
 410 00e7 00000000 		.4byte	.LFB1
 411 00eb 14000000 		.4byte	.LFE1-.LFB1
 412 00ef 01       		.uleb128 0x1
 413 00f0 9C       		.byte	0x9c
 414 00f1 09       		.uleb128 0x9
 415 00f2 4D020000 		.4byte	.LASF18
 416 00f6 01       		.byte	0x1
 417 00f7 B7       		.byte	0xb7
 418 00f8 00000000 		.4byte	.LFB2
 419 00fc 20000000 		.4byte	.LFE2-.LFB2
 420 0100 01       		.uleb128 0x1
 421 0101 9C       		.byte	0x9c
 422 0102 19010000 		.4byte	0x119
 423 0106 0A       		.uleb128 0xa
 424 0107 0E000000 		.4byte	.LVL1
 425 010b C1000000 		.4byte	0xc1
 426 010f 0A       		.uleb128 0xa
 427 0110 18000000 		.4byte	.LVL2
 428 0114 E0000000 		.4byte	0xe0
 429 0118 00       		.byte	0
 430 0119 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 21


 431 011a EF000000 		.4byte	.LASF20
 432 011e 01       		.byte	0x1
 433 011f D1       		.byte	0xd1
 434 0120 00000000 		.4byte	.LFB3
 435 0124 10000000 		.4byte	.LFE3-.LFB3
 436 0128 01       		.uleb128 0x1
 437 0129 9C       		.byte	0x9c
 438 012a 09       		.uleb128 0x9
 439 012b AF000000 		.4byte	.LASF21
 440 012f 01       		.byte	0x1
 441 0130 F2       		.byte	0xf2
 442 0131 00000000 		.4byte	.LFB4
 443 0135 14000000 		.4byte	.LFE4-.LFB4
 444 0139 01       		.uleb128 0x1
 445 013a 9C       		.byte	0x9c
 446 013b 5C010000 		.4byte	0x15c
 447 013f 0C       		.uleb128 0xc
 448 0140 11000000 		.4byte	.LASF23
 449 0144 01       		.byte	0x1
 450 0145 F2       		.byte	0xf2
 451 0146 76000000 		.4byte	0x76
 452 014a 01       		.uleb128 0x1
 453 014b 50       		.byte	0x50
 454 014c 0D       		.uleb128 0xd
 455 014d F8010000 		.4byte	.LASF24
 456 0151 01       		.byte	0x1
 457 0152 F4       		.byte	0xf4
 458 0153 76000000 		.4byte	0x76
 459 0157 00000000 		.4byte	.LLST0
 460 015b 00       		.byte	0
 461 015c 0E       		.uleb128 0xe
 462 015d 67020000 		.4byte	.LASF22
 463 0161 01       		.byte	0x1
 464 0162 1001     		.2byte	0x110
 465 0164 00000000 		.4byte	.LFB5
 466 0168 14000000 		.4byte	.LFE5-.LFB5
 467 016c 01       		.uleb128 0x1
 468 016d 9C       		.byte	0x9c
 469 016e 91010000 		.4byte	0x191
 470 0172 0F       		.uleb128 0xf
 471 0173 11000000 		.4byte	.LASF23
 472 0177 01       		.byte	0x1
 473 0178 1001     		.2byte	0x110
 474 017a 76000000 		.4byte	0x76
 475 017e 01       		.uleb128 0x1
 476 017f 50       		.byte	0x50
 477 0180 10       		.uleb128 0x10
 478 0181 06000000 		.4byte	.LASF25
 479 0185 01       		.byte	0x1
 480 0186 1201     		.2byte	0x112
 481 0188 76000000 		.4byte	0x76
 482 018c 1E000000 		.4byte	.LLST1
 483 0190 00       		.byte	0
 484 0191 0E       		.uleb128 0xe
 485 0192 FA000000 		.4byte	.LASF26
 486 0196 01       		.byte	0x1
 487 0197 3301     		.2byte	0x133
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 22


 488 0199 00000000 		.4byte	.LFB6
 489 019d 0C000000 		.4byte	.LFE6-.LFB6
 490 01a1 01       		.uleb128 0x1
 491 01a2 9C       		.byte	0x9c
 492 01a3 B6010000 		.4byte	0x1b6
 493 01a7 0F       		.uleb128 0xf
 494 01a8 AA000000 		.4byte	.LASF27
 495 01ac 01       		.byte	0x1
 496 01ad 3301     		.2byte	0x133
 497 01af A7000000 		.4byte	0xa7
 498 01b3 01       		.uleb128 0x1
 499 01b4 50       		.byte	0x50
 500 01b5 00       		.byte	0
 501 01b6 11       		.uleb128 0x11
 502 01b7 42000000 		.4byte	.LASF28
 503 01bb 01       		.byte	0x1
 504 01bc B902     		.2byte	0x2b9
 505 01be 00000000 		.4byte	.LFB9
 506 01c2 3C000000 		.4byte	.LFE9-.LFB9
 507 01c6 01       		.uleb128 0x1
 508 01c7 9C       		.byte	0x9c
 509 01c8 12       		.uleb128 0x12
 510 01c9 BF010000 		.4byte	.LASF29
 511 01cd 01       		.byte	0x1
 512 01ce 42       		.byte	0x42
 513 01cf 6B000000 		.4byte	0x6b
 514 01d3 05       		.uleb128 0x5
 515 01d4 03       		.byte	0x3
 516 01d5 00000000 		.4byte	SPI_1_initVar
 517 01d9 12       		.uleb128 0x12
 518 01da 8B000000 		.4byte	.LASF30
 519 01de 01       		.byte	0x1
 520 01df 45       		.byte	0x45
 521 01e0 A7000000 		.4byte	0xa7
 522 01e4 05       		.uleb128 0x5
 523 01e5 03       		.byte	0x3
 524 01e6 00000000 		.4byte	SPI_1_customIntrHandler
 525 01ea 13       		.uleb128 0x13
 526 01eb 59020000 		.4byte	.LASF34
 527 01ef 03       		.byte	0x3
 528 01f0 36       		.byte	0x36
 529 01f1 00       		.byte	0
 530              		.section	.debug_abbrev,"",%progbits
 531              	.Ldebug_abbrev0:
 532 0000 01       		.uleb128 0x1
 533 0001 11       		.uleb128 0x11
 534 0002 01       		.byte	0x1
 535 0003 25       		.uleb128 0x25
 536 0004 0E       		.uleb128 0xe
 537 0005 13       		.uleb128 0x13
 538 0006 0B       		.uleb128 0xb
 539 0007 03       		.uleb128 0x3
 540 0008 0E       		.uleb128 0xe
 541 0009 1B       		.uleb128 0x1b
 542 000a 0E       		.uleb128 0xe
 543 000b 55       		.uleb128 0x55
 544 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 23


 545 000d 11       		.uleb128 0x11
 546 000e 01       		.uleb128 0x1
 547 000f 10       		.uleb128 0x10
 548 0010 17       		.uleb128 0x17
 549 0011 00       		.byte	0
 550 0012 00       		.byte	0
 551 0013 02       		.uleb128 0x2
 552 0014 24       		.uleb128 0x24
 553 0015 00       		.byte	0
 554 0016 0B       		.uleb128 0xb
 555 0017 0B       		.uleb128 0xb
 556 0018 3E       		.uleb128 0x3e
 557 0019 0B       		.uleb128 0xb
 558 001a 03       		.uleb128 0x3
 559 001b 0E       		.uleb128 0xe
 560 001c 00       		.byte	0
 561 001d 00       		.byte	0
 562 001e 03       		.uleb128 0x3
 563 001f 24       		.uleb128 0x24
 564 0020 00       		.byte	0
 565 0021 0B       		.uleb128 0xb
 566 0022 0B       		.uleb128 0xb
 567 0023 3E       		.uleb128 0x3e
 568 0024 0B       		.uleb128 0xb
 569 0025 03       		.uleb128 0x3
 570 0026 08       		.uleb128 0x8
 571 0027 00       		.byte	0
 572 0028 00       		.byte	0
 573 0029 04       		.uleb128 0x4
 574 002a 16       		.uleb128 0x16
 575 002b 00       		.byte	0
 576 002c 03       		.uleb128 0x3
 577 002d 0E       		.uleb128 0xe
 578 002e 3A       		.uleb128 0x3a
 579 002f 0B       		.uleb128 0xb
 580 0030 3B       		.uleb128 0x3b
 581 0031 0B       		.uleb128 0xb
 582 0032 49       		.uleb128 0x49
 583 0033 13       		.uleb128 0x13
 584 0034 00       		.byte	0
 585 0035 00       		.byte	0
 586 0036 05       		.uleb128 0x5
 587 0037 16       		.uleb128 0x16
 588 0038 00       		.byte	0
 589 0039 03       		.uleb128 0x3
 590 003a 0E       		.uleb128 0xe
 591 003b 3A       		.uleb128 0x3a
 592 003c 0B       		.uleb128 0xb
 593 003d 3B       		.uleb128 0x3b
 594 003e 05       		.uleb128 0x5
 595 003f 49       		.uleb128 0x49
 596 0040 13       		.uleb128 0x13
 597 0041 00       		.byte	0
 598 0042 00       		.byte	0
 599 0043 06       		.uleb128 0x6
 600 0044 35       		.uleb128 0x35
 601 0045 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 24


 602 0046 49       		.uleb128 0x49
 603 0047 13       		.uleb128 0x13
 604 0048 00       		.byte	0
 605 0049 00       		.byte	0
 606 004a 07       		.uleb128 0x7
 607 004b 0F       		.uleb128 0xf
 608 004c 00       		.byte	0
 609 004d 0B       		.uleb128 0xb
 610 004e 0B       		.uleb128 0xb
 611 004f 49       		.uleb128 0x49
 612 0050 13       		.uleb128 0x13
 613 0051 00       		.byte	0
 614 0052 00       		.byte	0
 615 0053 08       		.uleb128 0x8
 616 0054 15       		.uleb128 0x15
 617 0055 00       		.byte	0
 618 0056 27       		.uleb128 0x27
 619 0057 19       		.uleb128 0x19
 620 0058 00       		.byte	0
 621 0059 00       		.byte	0
 622 005a 09       		.uleb128 0x9
 623 005b 2E       		.uleb128 0x2e
 624 005c 01       		.byte	0x1
 625 005d 3F       		.uleb128 0x3f
 626 005e 19       		.uleb128 0x19
 627 005f 03       		.uleb128 0x3
 628 0060 0E       		.uleb128 0xe
 629 0061 3A       		.uleb128 0x3a
 630 0062 0B       		.uleb128 0xb
 631 0063 3B       		.uleb128 0x3b
 632 0064 0B       		.uleb128 0xb
 633 0065 27       		.uleb128 0x27
 634 0066 19       		.uleb128 0x19
 635 0067 11       		.uleb128 0x11
 636 0068 01       		.uleb128 0x1
 637 0069 12       		.uleb128 0x12
 638 006a 06       		.uleb128 0x6
 639 006b 40       		.uleb128 0x40
 640 006c 18       		.uleb128 0x18
 641 006d 9742     		.uleb128 0x2117
 642 006f 19       		.uleb128 0x19
 643 0070 01       		.uleb128 0x1
 644 0071 13       		.uleb128 0x13
 645 0072 00       		.byte	0
 646 0073 00       		.byte	0
 647 0074 0A       		.uleb128 0xa
 648 0075 898201   		.uleb128 0x4109
 649 0078 00       		.byte	0
 650 0079 11       		.uleb128 0x11
 651 007a 01       		.uleb128 0x1
 652 007b 31       		.uleb128 0x31
 653 007c 13       		.uleb128 0x13
 654 007d 00       		.byte	0
 655 007e 00       		.byte	0
 656 007f 0B       		.uleb128 0xb
 657 0080 2E       		.uleb128 0x2e
 658 0081 00       		.byte	0
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 25


 659 0082 3F       		.uleb128 0x3f
 660 0083 19       		.uleb128 0x19
 661 0084 03       		.uleb128 0x3
 662 0085 0E       		.uleb128 0xe
 663 0086 3A       		.uleb128 0x3a
 664 0087 0B       		.uleb128 0xb
 665 0088 3B       		.uleb128 0x3b
 666 0089 0B       		.uleb128 0xb
 667 008a 27       		.uleb128 0x27
 668 008b 19       		.uleb128 0x19
 669 008c 11       		.uleb128 0x11
 670 008d 01       		.uleb128 0x1
 671 008e 12       		.uleb128 0x12
 672 008f 06       		.uleb128 0x6
 673 0090 40       		.uleb128 0x40
 674 0091 18       		.uleb128 0x18
 675 0092 9742     		.uleb128 0x2117
 676 0094 19       		.uleb128 0x19
 677 0095 00       		.byte	0
 678 0096 00       		.byte	0
 679 0097 0C       		.uleb128 0xc
 680 0098 05       		.uleb128 0x5
 681 0099 00       		.byte	0
 682 009a 03       		.uleb128 0x3
 683 009b 0E       		.uleb128 0xe
 684 009c 3A       		.uleb128 0x3a
 685 009d 0B       		.uleb128 0xb
 686 009e 3B       		.uleb128 0x3b
 687 009f 0B       		.uleb128 0xb
 688 00a0 49       		.uleb128 0x49
 689 00a1 13       		.uleb128 0x13
 690 00a2 02       		.uleb128 0x2
 691 00a3 18       		.uleb128 0x18
 692 00a4 00       		.byte	0
 693 00a5 00       		.byte	0
 694 00a6 0D       		.uleb128 0xd
 695 00a7 34       		.uleb128 0x34
 696 00a8 00       		.byte	0
 697 00a9 03       		.uleb128 0x3
 698 00aa 0E       		.uleb128 0xe
 699 00ab 3A       		.uleb128 0x3a
 700 00ac 0B       		.uleb128 0xb
 701 00ad 3B       		.uleb128 0x3b
 702 00ae 0B       		.uleb128 0xb
 703 00af 49       		.uleb128 0x49
 704 00b0 13       		.uleb128 0x13
 705 00b1 02       		.uleb128 0x2
 706 00b2 17       		.uleb128 0x17
 707 00b3 00       		.byte	0
 708 00b4 00       		.byte	0
 709 00b5 0E       		.uleb128 0xe
 710 00b6 2E       		.uleb128 0x2e
 711 00b7 01       		.byte	0x1
 712 00b8 3F       		.uleb128 0x3f
 713 00b9 19       		.uleb128 0x19
 714 00ba 03       		.uleb128 0x3
 715 00bb 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 26


 716 00bc 3A       		.uleb128 0x3a
 717 00bd 0B       		.uleb128 0xb
 718 00be 3B       		.uleb128 0x3b
 719 00bf 05       		.uleb128 0x5
 720 00c0 27       		.uleb128 0x27
 721 00c1 19       		.uleb128 0x19
 722 00c2 11       		.uleb128 0x11
 723 00c3 01       		.uleb128 0x1
 724 00c4 12       		.uleb128 0x12
 725 00c5 06       		.uleb128 0x6
 726 00c6 40       		.uleb128 0x40
 727 00c7 18       		.uleb128 0x18
 728 00c8 9742     		.uleb128 0x2117
 729 00ca 19       		.uleb128 0x19
 730 00cb 01       		.uleb128 0x1
 731 00cc 13       		.uleb128 0x13
 732 00cd 00       		.byte	0
 733 00ce 00       		.byte	0
 734 00cf 0F       		.uleb128 0xf
 735 00d0 05       		.uleb128 0x5
 736 00d1 00       		.byte	0
 737 00d2 03       		.uleb128 0x3
 738 00d3 0E       		.uleb128 0xe
 739 00d4 3A       		.uleb128 0x3a
 740 00d5 0B       		.uleb128 0xb
 741 00d6 3B       		.uleb128 0x3b
 742 00d7 05       		.uleb128 0x5
 743 00d8 49       		.uleb128 0x49
 744 00d9 13       		.uleb128 0x13
 745 00da 02       		.uleb128 0x2
 746 00db 18       		.uleb128 0x18
 747 00dc 00       		.byte	0
 748 00dd 00       		.byte	0
 749 00de 10       		.uleb128 0x10
 750 00df 34       		.uleb128 0x34
 751 00e0 00       		.byte	0
 752 00e1 03       		.uleb128 0x3
 753 00e2 0E       		.uleb128 0xe
 754 00e3 3A       		.uleb128 0x3a
 755 00e4 0B       		.uleb128 0xb
 756 00e5 3B       		.uleb128 0x3b
 757 00e6 05       		.uleb128 0x5
 758 00e7 49       		.uleb128 0x49
 759 00e8 13       		.uleb128 0x13
 760 00e9 02       		.uleb128 0x2
 761 00ea 17       		.uleb128 0x17
 762 00eb 00       		.byte	0
 763 00ec 00       		.byte	0
 764 00ed 11       		.uleb128 0x11
 765 00ee 2E       		.uleb128 0x2e
 766 00ef 00       		.byte	0
 767 00f0 3F       		.uleb128 0x3f
 768 00f1 19       		.uleb128 0x19
 769 00f2 03       		.uleb128 0x3
 770 00f3 0E       		.uleb128 0xe
 771 00f4 3A       		.uleb128 0x3a
 772 00f5 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 27


 773 00f6 3B       		.uleb128 0x3b
 774 00f7 05       		.uleb128 0x5
 775 00f8 27       		.uleb128 0x27
 776 00f9 19       		.uleb128 0x19
 777 00fa 11       		.uleb128 0x11
 778 00fb 01       		.uleb128 0x1
 779 00fc 12       		.uleb128 0x12
 780 00fd 06       		.uleb128 0x6
 781 00fe 40       		.uleb128 0x40
 782 00ff 18       		.uleb128 0x18
 783 0100 9742     		.uleb128 0x2117
 784 0102 19       		.uleb128 0x19
 785 0103 00       		.byte	0
 786 0104 00       		.byte	0
 787 0105 12       		.uleb128 0x12
 788 0106 34       		.uleb128 0x34
 789 0107 00       		.byte	0
 790 0108 03       		.uleb128 0x3
 791 0109 0E       		.uleb128 0xe
 792 010a 3A       		.uleb128 0x3a
 793 010b 0B       		.uleb128 0xb
 794 010c 3B       		.uleb128 0x3b
 795 010d 0B       		.uleb128 0xb
 796 010e 49       		.uleb128 0x49
 797 010f 13       		.uleb128 0x13
 798 0110 3F       		.uleb128 0x3f
 799 0111 19       		.uleb128 0x19
 800 0112 02       		.uleb128 0x2
 801 0113 18       		.uleb128 0x18
 802 0114 00       		.byte	0
 803 0115 00       		.byte	0
 804 0116 13       		.uleb128 0x13
 805 0117 2E       		.uleb128 0x2e
 806 0118 00       		.byte	0
 807 0119 3F       		.uleb128 0x3f
 808 011a 19       		.uleb128 0x19
 809 011b 03       		.uleb128 0x3
 810 011c 0E       		.uleb128 0xe
 811 011d 3A       		.uleb128 0x3a
 812 011e 0B       		.uleb128 0xb
 813 011f 3B       		.uleb128 0x3b
 814 0120 0B       		.uleb128 0xb
 815 0121 27       		.uleb128 0x27
 816 0122 19       		.uleb128 0x19
 817 0123 3C       		.uleb128 0x3c
 818 0124 19       		.uleb128 0x19
 819 0125 00       		.byte	0
 820 0126 00       		.byte	0
 821 0127 00       		.byte	0
 822              		.section	.debug_loc,"",%progbits
 823              	.Ldebug_loc0:
 824              	.LLST0:
 825 0000 04000000 		.4byte	.LVL4
 826 0004 0C000000 		.4byte	.LVL6
 827 0008 0100     		.2byte	0x1
 828 000a 51       		.byte	0x51
 829 000b 0C000000 		.4byte	.LVL6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 28


 830 000f 14000000 		.4byte	.LFE4
 831 0013 0100     		.2byte	0x1
 832 0015 52       		.byte	0x52
 833 0016 00000000 		.4byte	0
 834 001a 00000000 		.4byte	0
 835              	.LLST1:
 836 001e 04000000 		.4byte	.LVL8
 837 0022 0C000000 		.4byte	.LVL10
 838 0026 0100     		.2byte	0x1
 839 0028 51       		.byte	0x51
 840 0029 0C000000 		.4byte	.LVL10
 841 002d 14000000 		.4byte	.LFE5
 842 0031 0100     		.2byte	0x1
 843 0033 52       		.byte	0x52
 844 0034 00000000 		.4byte	0
 845 0038 00000000 		.4byte	0
 846              		.section	.debug_aranges,"",%progbits
 847 0000 54000000 		.4byte	0x54
 848 0004 0200     		.2byte	0x2
 849 0006 00000000 		.4byte	.Ldebug_info0
 850 000a 04       		.byte	0x4
 851 000b 00       		.byte	0
 852 000c 0000     		.2byte	0
 853 000e 0000     		.2byte	0
 854 0010 00000000 		.4byte	.LFB0
 855 0014 08000000 		.4byte	.LFE0-.LFB0
 856 0018 00000000 		.4byte	.LFB1
 857 001c 14000000 		.4byte	.LFE1-.LFB1
 858 0020 00000000 		.4byte	.LFB2
 859 0024 20000000 		.4byte	.LFE2-.LFB2
 860 0028 00000000 		.4byte	.LFB3
 861 002c 10000000 		.4byte	.LFE3-.LFB3
 862 0030 00000000 		.4byte	.LFB4
 863 0034 14000000 		.4byte	.LFE4-.LFB4
 864 0038 00000000 		.4byte	.LFB5
 865 003c 14000000 		.4byte	.LFE5-.LFB5
 866 0040 00000000 		.4byte	.LFB6
 867 0044 0C000000 		.4byte	.LFE6-.LFB6
 868 0048 00000000 		.4byte	.LFB9
 869 004c 3C000000 		.4byte	.LFE9-.LFB9
 870 0050 00000000 		.4byte	0
 871 0054 00000000 		.4byte	0
 872              		.section	.debug_ranges,"",%progbits
 873              	.Ldebug_ranges0:
 874 0000 00000000 		.4byte	.LFB0
 875 0004 08000000 		.4byte	.LFE0
 876 0008 00000000 		.4byte	.LFB1
 877 000c 14000000 		.4byte	.LFE1
 878 0010 00000000 		.4byte	.LFB2
 879 0014 20000000 		.4byte	.LFE2
 880 0018 00000000 		.4byte	.LFB3
 881 001c 10000000 		.4byte	.LFE3
 882 0020 00000000 		.4byte	.LFB4
 883 0024 14000000 		.4byte	.LFE4
 884 0028 00000000 		.4byte	.LFB5
 885 002c 14000000 		.4byte	.LFE5
 886 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 29


 887 0034 0C000000 		.4byte	.LFE6
 888 0038 00000000 		.4byte	.LFB9
 889 003c 3C000000 		.4byte	.LFE9
 890 0040 00000000 		.4byte	0
 891 0044 00000000 		.4byte	0
 892              		.section	.debug_line,"",%progbits
 893              	.Ldebug_line0:
 894 0000 25010000 		.section	.debug_str,"MS",%progbits,1
 894      02007300 
 894      00000201 
 894      FB0E0D00 
 894      01010101 
 895              	.LASF14:
 896 0000 72656733 		.ascii	"reg32\000"
 896      3200
 897              	.LASF25:
 898 0006 74784669 		.ascii	"txFifoCtrl\000"
 898      666F4374 
 898      726C00
 899              	.LASF23:
 900 0011 6C657665 		.ascii	"level\000"
 900      6C00
 901              	.LASF19:
 902 0017 5350495F 		.ascii	"SPI_1_Enable\000"
 902      315F456E 
 902      61626C65 
 902      00
 903              	.LASF3:
 904 0024 73686F72 		.ascii	"short unsigned int\000"
 904      7420756E 
 904      7369676E 
 904      65642069 
 904      6E7400
 905              	.LASF17:
 906 0037 5350495F 		.ascii	"SPI_1_Init\000"
 906      315F496E 
 906      697400
 907              	.LASF28:
 908 0042 5350495F 		.ascii	"SPI_1_I2CSlaveNackGeneration\000"
 908      315F4932 
 908      43536C61 
 908      76654E61 
 908      636B4765 
 909              	.LASF11:
 910 005f 666C6F61 		.ascii	"float\000"
 910      7400
 911              	.LASF1:
 912 0065 756E7369 		.ascii	"unsigned char\000"
 912      676E6564 
 912      20636861 
 912      7200
 913              	.LASF5:
 914 0073 6C6F6E67 		.ascii	"long unsigned int\000"
 914      20756E73 
 914      69676E65 
 914      6420696E 
 914      7400
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 30


 915              	.LASF9:
 916 0085 75696E74 		.ascii	"uint8\000"
 916      3800
 917              	.LASF30:
 918 008b 5350495F 		.ascii	"SPI_1_customIntrHandler\000"
 918      315F6375 
 918      73746F6D 
 918      496E7472 
 918      48616E64 
 919              	.LASF12:
 920 00a3 646F7562 		.ascii	"double\000"
 920      6C6500
 921              	.LASF27:
 922 00aa 66756E63 		.ascii	"func\000"
 922      00
 923              	.LASF21:
 924 00af 5350495F 		.ascii	"SPI_1_SetRxFifoLevel\000"
 924      315F5365 
 924      74527846 
 924      69666F4C 
 924      6576656C 
 925              	.LASF10:
 926 00c4 75696E74 		.ascii	"uint32\000"
 926      333200
 927              	.LASF8:
 928 00cb 756E7369 		.ascii	"unsigned int\000"
 928      676E6564 
 928      20696E74 
 928      00
 929              	.LASF7:
 930 00d8 6C6F6E67 		.ascii	"long long unsigned int\000"
 930      206C6F6E 
 930      6720756E 
 930      7369676E 
 930      65642069 
 931              	.LASF20:
 932 00ef 5350495F 		.ascii	"SPI_1_Stop\000"
 932      315F5374 
 932      6F7000
 933              	.LASF26:
 934 00fa 5350495F 		.ascii	"SPI_1_SetCustomInterruptHandler\000"
 934      315F5365 
 934      74437573 
 934      746F6D49 
 934      6E746572 
 935              	.LASF31:
 936 011a 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 936      4320342E 
 936      382E3420 
 936      32303134 
 936      30353236 
 937 014d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 937      20726576 
 937      6973696F 
 937      6E203231 
 937      31333538 
 938 0180 67202D66 		.ascii	"g -ffunction-sections\000"
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 31


 938      66756E63 
 938      74696F6E 
 938      2D736563 
 938      74696F6E 
 939              	.LASF15:
 940 0196 63796973 		.ascii	"cyisraddress\000"
 940      72616464 
 940      72657373 
 940      00
 941              	.LASF16:
 942 01a3 73697A65 		.ascii	"sizetype\000"
 942      74797065 
 942      00
 943              	.LASF6:
 944 01ac 6C6F6E67 		.ascii	"long long int\000"
 944      206C6F6E 
 944      6720696E 
 944      7400
 945              	.LASF13:
 946 01ba 63686172 		.ascii	"char\000"
 946      00
 947              	.LASF29:
 948 01bf 5350495F 		.ascii	"SPI_1_initVar\000"
 948      315F696E 
 948      69745661 
 948      7200
 949              	.LASF2:
 950 01cd 73686F72 		.ascii	"short int\000"
 950      7420696E 
 950      7400
 951              	.LASF32:
 952 01d7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\SPI_1.c\000"
 952      6E657261 
 952      7465645F 
 952      536F7572 
 952      63655C50 
 953              	.LASF24:
 954 01f8 72784669 		.ascii	"rxFifoCtrl\000"
 954      666F4374 
 954      726C00
 955              	.LASF4:
 956 0203 6C6F6E67 		.ascii	"long int\000"
 956      20696E74 
 956      00
 957              	.LASF33:
 958 020c 453A5C68 		.ascii	"E:\\home\\jarik\\src\\psoc\\mpi_rom_emu\\mpi_rom_em"
 958      6F6D655C 
 958      6A617269 
 958      6B5C7372 
 958      635C7073 
 959 0239 752E6379 		.ascii	"u.cydsn\000"
 959      64736E00 
 960              	.LASF0:
 961 0241 7369676E 		.ascii	"signed char\000"
 961      65642063 
 961      68617200 
 962              	.LASF18:
ARM GAS  C:\Users\Jarik\AppData\Local\Temp\cct9x8wR.s 			page 32


 963 024d 5350495F 		.ascii	"SPI_1_Start\000"
 963      315F5374 
 963      61727400 
 964              	.LASF34:
 965 0259 5350495F 		.ascii	"SPI_1_SpiInit\000"
 965      315F5370 
 965      69496E69 
 965      7400
 966              	.LASF22:
 967 0267 5350495F 		.ascii	"SPI_1_SetTxFifoLevel\000"
 967      315F5365 
 967      74547846 
 967      69666F4C 
 967      6576656C 
 968              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br

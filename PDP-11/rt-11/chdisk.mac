;
;  chdisk
;
.List  SEQ, LOC, BIN

.MCall	.GtLin, .Print, .TTYOut, .Exit, .SetTop 

.Macro scmp, string
	mov 	string,r2
	jsr 	pc,strcmp
	tst	r0
.Endm

.Macro exec,p1,p2,p3,p4,p5,p6
	mov r0,-(sp)
	mov #mp,r0
	mov p1,(r0)+
	mov p2,(r0)+
	mov p3,(r0)+
	mov p4,(r0)+
	mov p5,(r0)+
	mov p6,(r0)+
	mov (sp)+,r0
	jsr pc,mpout
.Endm

;.Asect
;	.=44
;	.Word 400
;	.=400

START:	
	.GtLin	#StrBuf  ;,#prompt
	jsr 	pc,parse
	.Exit

parse:	mov 	#StrBuf,r1
		jsr	pc,skpsp
		tst	r0
		beq	4$		;empty line
		mov #1,sorted
		scmp	#cmd1
		beq	2$
		scmp	#cmd2
		beq	2$
		scmp	#cmd3
		beq	2$
		scmp	#cmd4
		beq	2$
		scmp	#cmd5
		beq	5$
		scmp	#cmd6
		beq	5$
		scmp	#cmd7
		beq	5$
		scmp	#cmd8
		bne	3$
2$:		clr sorted
5$:		jmp	list
3$:		clr	r0
		movb	(r1)+,r0
		cmpb	r0,#'0
		blo	1$
		cmpb	r0,#'3
		bhi	1$
		mov	r0,dskn
		jsr	pc,set
        rts 	pc
1$:		.Print	#errms1
        .Print	#errms2
		.Print	#errms3
		rts	pc
4$:		.Print #noarg
		rts 	pc

	
skpsp:	movb	@r1,r0
		tst	r0
		beq	1$	
		cmpb 	r0,#40
		bne	1$
		inc 	r1
		br	skpsp
1$:		rts	pc

strcmp: 		;r1 str1, r2 str2.  keeping r1. r0 - result
		mov	r1,r3
3$:		cmpb	(r3)+,(r2)+
		bne	1$
		tstb	@r3
		beq	2$
		br	3$
2$:		tstb	@r2
		bne	1$
		clr	r0	; strings are same
		rts	pc
1$:		mov 	#177777,r0
		rts	pc

k2lock: mov 	@#176674,k2reg
		bic	#100,@#176674
		rts 	pc
k2unlock:mov	k2reg,@#176674
		rts	pc

k2out:	bit	#200,@#176674
		beq	k2out
		movb 	r0,@#176676
		rts	pc

mpout:	mov	#mp,r0
		jsr	pc,k2out
		swab	r0
		jsr	pc,k2out
		mov	#377,r0
		jsr	pc,k2out
		jsr	pc,k2out
1$:		bit	#200,@#176674
		beq	1$
		rts	pc

store:	mov #12.,r1
		mul curfil,r1
		add #lstbuf,r1	; r1 - адрес в массиве
		mov #64.,r2
		mov	#buf,r3
		mov curfil,r5
4$:		mov	#12.,r4
		clr r0
3$:		movb (r3)+,r0
		tst	r0
		beq	2$
		movb r0,(r1)+
		dec	r4
		beq	1$
		br  3$
2$:		tstb @r3
		bne	6$
		inc r3
6$:		mov	#40,r0
		movb r0,(r1)+
		dec r4
		bne 6$
1$:		dec r2
		beq	5$
		inc	r5
		cmp r5,maxfil
		blos 4$
5$:		rts pc

swpfn:	mov	r2,-(sp)    ; проверка и перестановка имен файлов R1 - N имени 
		mov r1,-(sp)    ; R0 - результат  0 - нет 1- были перестановлены 2 - последний элемент
		mov #12.,r0  ; r1 - N
		mul	r0,r1
		add #lstbuf,r1
		mov	r1,r2
		add #12.,r2
		cmp r2,lstmax
;		cmp @sp,maxfil
		bhis 1$
		mov	#12.,r0
		mov r1,-(sp)
		mov r2,-(sp)
5$:		cmpb (r1)+,(r2)+
		bhi	3$
		blo	4$
		sob r0,5$
		clr	r0    		; equ
		br  6$
3$:		mov #1,r0 		; str@R1 > str@R2
		br  6$
4$:		mov #2,r0		; str@R1 < str@R2		
6$:		mov (sp)+,r1
		mov (sp)+,r2
		cmp	r0,#1
		bne	7$
		mov r3,-(sp)
		mov	#12.,r0
		clr r3
8$:		movb @r1,r3
		movb @r2,(r1)+
		movb r3,(r2)+
		sob r0,8$
		mov (sp)+,r3
		mov #1,r0
		br 2$
7$:		clr r0			; ничего не сделано
		br  2$
1$:		mov #2,r0		; out of range
		br	2$
2$:		mov (sp)+,r1
		mov (sp)+,r2
		rts pc

sort: 	mov	#0,r1
1$:		jsr	pc,swpfn
		cmp	r0,#1
		blo	2$		; next
		beq	sort
		rts	pc
2$:		inc	r1
		br	1$

lstout:	mov #lstbuf,r1
		mov lstsz,r2
		mov	#6,r4
		mov #12.,r3
		clr	r0
2$:		movb (r1)+,r0
		cmp	r0,#40
		bhis	5$
		mov #177,r0
5$:		cmp	r0,#177
		blos 6$
		mov #177,r0
6$:		.TTYOut
		dec	r3
		beq	1$
4$:		sob r2,2$
		.TTYOut #12
		.TTYOut #15
		rts pc
1$:		.TTYOut #40
		mov #12.,r3
		dec	r4
		bne	4$
		.TTYOut #12
		.TTYOut #15
		mov #6,r4
		br 4$
		

mfind:	mov	r1,-(sp)   ; R0 - N файла    R0 - result
		mov r2,-(sp)
		mov r3,-(sp)
		mov	#60,r1
		add	r0,r1
		mov #buf,r2
		mov #1000,r3
2$:		cmpb (r2)+,r1
		beq	1$
4$:		sob r3,2$
		clr	r0
		br 3$
1$:		cmpb @r2,#':
		bne 4$
		inc	r2
		mov	r2,r0
3$:		mov	(sp)+,r3
		mov	(sp)+,r2
		mov (sp)+,r1
		rts	pc

stfn:	clr r2
		mov	#13.,r3
2$:		movb (r0)+,r2
		cmp	r2,#40
		bhis 1$
		mov	#0,r2
1$:		movb r2,(r1)+
		sob	r3,2$
		rts	pc

readm:	jsr	pc,k2lock
		exec #40400,#2,#buf,#400,#0,#0
		jsr pc,k2unlock
		mov	#1,r0
		jsr	pc,mfind
		mov #fn1,r1
		jsr pc,stfn
		mov	#2,r0
		jsr	pc,mfind
		mov #fn2,r1
		jsr	pc,stfn
		mov	#3,r0
		jsr	pc,mfind
		mov #fn3,r1
		jsr	pc,stfn
		mov	#4,r0
		jsr	pc,mfind
		mov #fn4,r1
		jsr	pc,stfn
		rts pc


list:	.Print 	#listm
		jsr	pc,k2lock
		exec #41400,#2,#0,#buf,#64.,#0
		mov mp+10,r0
		mov r0,maxfil
		jsr	pc,k2unlock
		mov #12.,r3
		mul	maxfil,r3
		mov r3,lstsz
		add	#lstbuf,r3
		.SETTOP r3
		cmp	r0,r3
		beq	1$
		.Print	#memerr
		rts	pc
1$:		mov	#0,curfil
		mov r0,lstmax
3$:		jsr	pc,k2lock
		exec #41400,#2,curfil,#buf,#64.,#0
		jsr pc,k2unlock
		mov mp+12,r1
		clc
		rol	r1
		add	#buf,r1
		clr	(r1)+
		clr	(r1)+
		jsr	pc,store
		mov	curfil,r1
		add	#64.,r1
		cmp r1,maxfil
		bhis 2$
		mov r1,curfil
		br	3$
2$:		tst	sorted
		beq	4$
		jsr	pc,sort
4$:		jsr pc,lstout
		jsr	pc,readm
printm:	.Print #mapms
		.TTYout	#'0
		.TTYout	#':
		.Print	#fn1
		.TTYout	#'1
		.TTYout	#':
		.Print	#fn2
		.TTYout	#'2
		.TTYout	#':
		.Print	#fn3
		.TTYout	#'3
		.TTYout	#':
		.Print	#fn4
		rts 	pc

set:	inc r1
		mov	r1,-(sp)
		jsr		pc,readm
		mov	dskn,r0
		sub	#60,r0
		beq	1$
		dec	r0
		beq 2$
		dec r0
		beq 3$
		dec r0
		beq	4$
5$:		mov (sp)+,r1
		rts 	pc
1$:		mov	#fn1,r2
		br	6$
2$:		mov	#fn2,r2
		br	6$
3$:		mov	#fn3,r2
		br	6$
4$:		mov	#fn4,r2
6$:		mov #15.,r3
		mov	 (sp)+,r1
7$:		movb (r1)+,(r2)+
		beq 13$
		sob r3,7$
13$:	mov #buf,r1

		mov #fn1,r2
		movb #61,(r1)+
		movb #72,(r1)+
8$:		movb (r2)+,(r1)+
		bne 8$
		dec	r1
		movb #12,(r1)+

		mov #fn2,r2
		movb #62,(r1)+
		movb #72,(r1)+
9$:		movb (r2)+,(r1)+
		bne 9$
		dec	r1
		movb #12,(r1)+

		mov #fn3,r2
		movb #63,(r1)+
		movb #72,(r1)+
10$:	movb (r2)+,(r1)+
		bne 10$
		dec	r1
		movb #12,(r1)+

		mov #fn4,r2
		movb #64,(r1)+
		movb #72,(r1)+
11$:	movb (r2)+,(r1)+
		bne 11$
		dec	r1
		movb #12,(r1)+
		movb #12,(r1)+
		movb #12,@r1
		sub	#buf,r1
		bit	#1,r1
		beq	12$
		inc	r1
12$:	clc
		ror	r1
		jsr	pc,k2lock
		exec #41000,#2,#buf,r1,#0,#0
		jsr pc,k2unlock
		jsr pc,printm
		rts	pc


StrBuf:	.BlkB	122.
cmd1:	.asciz 	/--list/
cmd2:	.asciz 	/-l/
cmd3:	.asciz  /-L/
cmd4:	.asciz  /--LIST/
cmd5:	.asciz	/-s/
cmd6:	.asciz	/-S/
cmd7:	.asciz	/--sort/
cmd8:	.asciz	/--SORT/
prompt:	.ascii	<16> /Введите / <17> /-L / <16> /или/ <17> / --LIST / <16> / для вывода списка файлов/<12><15>
		.ascii	<17> / -S --SORT/ <16> / для сортированного списка /<12><15>
		.asciz	/или /<17>/N/<72>/filename /<16>/для подключения образа к диску /<17>/N: /<12><15>
errms1:	.asciz <16>/Ошибка синтаксиса команды./
errms2:	.asciz /Применение:/
errms3:	.asciz <17>/CHDISK -l | --list | -s | --sort |<n>:<filename> /
noarg:	.asciz <16>/Отсутствует аргумент/<17>
listm:	.asciz <16>/Список файлов на карте/<17>/:/
setm:	.asciz <16>/Привязка файла к диску/<17>/:/
memerr:	.asciz <16>/Недостаточно памяти, слишком много файлов./<17>
mapms:	.asciz <16>/Текущие привязки:/<17> 
		.even
dskn:	.word	0
k2reg:	.word 	0
curfil:	.word	0
maxfil:	.word 	0
sorted:	.word	0
mp:		.word	0,0,0,0,0,0
buf:	.BlkW	1000
fn1:	.BlkW	10
fn2:	.BlkW	10
fn3:	.BlkW	10
fn4:	.BlkW	10
lstsz:	.word	0
lstmax:	.word   0
lstbuf:	.word	0		; должен быть последним
.End	START
;
